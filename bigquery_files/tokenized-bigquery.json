{"repo_name": "user_with_email_logs_onto_the_site_0", "method name": "user with email logs onto the site", "comments": ["When(\"^user with email \\\"([^\\\"]*)\\\" logs onto the site$\")"], "url": true, "content": "    public void function(String email) throws Throwable {\n         final User user = new User();\n         user.setEmail(email);\n         user.setPasscode(PASS_CODE);\n \n         if (runtimeScope.getWebDriver() != null){\n             runtimeScope.getWebDriver().quit();\n             runtimeScope.setWebDriver(null);\n         }\n         final WebDriver webDriver = webDriverFactory.newInstance(runtimeScope.getScenario());\n         runtimeScope.setWebDriver(webDriver);\n         webDriver.get(gymBookerUrl);\n \n         logonToGym.logon(user);\n     }\n", "path": "src/test/java/uk/co/hmtt/cukes/core/steps/Booking.java", "repo name": "hmtt/gym"}
{"repo_name": "the_user_logs_onto_the_mobile_site_1", "method name": "the user logs onto the mobile site", "comments": ["When(\"^the user \\\"(.*?)\\\"  logs onto the mobile site$\")"], "url": true, "content": "    public void function(String email) throws Throwable {\n         final User user = new User();\n         user.setEmail(email);\n         user.setPasscode(PASS_CODE);\n \n         if (runtimeScope.getWebDriver() != null){\n             runtimeScope.getWebDriver().quit();\n             runtimeScope.setWebDriver(null);\n         }\n         final WebDriver webDriver = webDriverFactory.newInstance(runtimeScope.getScenario());\n \n         final Dimension dimension = new Dimension(420, 600);\n         webDriver.manage().window().setSize(dimension);\n \n         runtimeScope.setWebDriver(webDriver);\n         webDriver.get(gymBookerUrl);\n \n         logonToGym.logon(user);\n     }\n", "path": "src/test/java/uk/co/hmtt/cukes/core/steps/Mobile.java", "repo name": "hmtt/gym"}
{"repo_name": "the_user_cannot_access_site_2", "method name": "the user cannot access site", "comments": ["Then(\"^the user cannot access site$\")"], "url": true, "content": "    public void function() throws Throwable {\n         runtimeScope.getWebDriver().get(gymBookerUrl);\n         ((CukesWebDriver)runtimeScope.getWebDriver()).takeScreenShot();\n         assertThat(runtimeScope.getWebDriver().getCurrentUrl(), containsString(\"login\"));\n     }\n", "path": "src/test/java/uk/co/hmtt/cukes/core/steps/Logon.java", "repo name": "hmtt/gym"}
{"repo_name": "loadLoginPage_3", "method name": "load Login Page", "comments": [], "url": true, "content": "\tprivate void function() {\n \t\twebDriver.get(baseUrl);\n \t}\n", "path": "src/test/java/integration/web/AbstractWebITCase.java", "repo name": "ttwd80/qir"}
{"repo_name": "iVisitPageUrl_4", "method name": "i Visit Page Url", "comments": [" Glue code for: I visit page: xxx.", " @param url is the xxx", "When(\"^I visit page: '(.+)'$\")"], "url": true, "content": "    public void function(String url) {\n         logComment(\"Open URL: \" + url);\n         webDriverUtil.getWebDriver().get(url);\n         webDriverUtil.logEvent(\"Page loaded\", true);\n     }\n", "path": "gepard-examples/src/main/java/com/epam/gepard/examples/gherkin/cucumber/selenium/SimpleSeleniumFeature.java", "repo name": "epam/Gepard"}
{"repo_name": "saveScreenshotToFile_5", "method name": "save Screenshot To File", "comments": ["Test"], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(baseUrl + \"/\");\n \t\tcompatibilityTester.takeScreenshotAndSaveToRepo(\"springTest\", driver);\n \t}\n", "path": "src/test/java/cz/vse/kit/ssc/SpringTest.java", "repo name": "pajikos/ssc"}
{"repo_name": "navigateToUrl_6", "method name": "navigate To Url", "comments": [" Navigates to a new web page in the current browser window. <br />", " ", " Usage for FitNesse: |navigate to Url|http://www.example.org|<br />", " ", " FitNesse usage..: |navigate to Url|arg1| <br />", " FitNesse example: |navigate to Url|http://www.example.org| <br />", " <br />", " ", " @param url", "            URL of page to navigate to", " @return always true to show inside FitNesse a positive result"], "url": true, "content": "\tpublic boolean function(String url) {\n \t\twebDriver.get(url);\n \t\treturn true;\n \t}\n", "path": "acceptanceTest/webfixture/src/main/java/org/testeditor/fixture/web/WebFixture.java", "repo name": "yatol/yatol"}
{"repo_name": "navigateToUrl_7", "method name": "navigate To Url", "comments": [" Navigates to a new web page in the current browser window.", " ", " @param url", "            URL of page to navigate to", " @return always {@code true} to show inside FitNesse a positive result"], "url": true, "content": "\tpublic boolean function(String url) {\n \t\twebDriver.get(url);\n \t\treturn true;\n \t}\n", "path": "acceptanceTest/webfixture/src/main/java/org/testeditor/fixture/web/AbstractWebFixture.java", "repo name": "yatol/yatol"}
{"repo_name": "goToUrl_8", "method name": "go To Url", "comments": ["Override"], "url": true, "content": "\tpublic void function(String url) {\n \t\tgetDriver().get(url);\n \t}\n", "path": "src/main/java/cz/etnetera/seb/Seb.java", "repo name": "etnetera/seb"}
{"repo_name": "testProductsPage_9", "method name": "test Products Page", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t// the delay is for an increased dramatic effect only :)\n \t\tint demoWaitTime = 2000;\n \n \t\tdriver.get(baseUrl + \"/about\");\n \t\tdriver.findElement(By.linkText(\"Products & Invoices\")).click();\n \n \t\tdriver.findElement(By.id(\"j_username\")).clear();\n \t\tdriver.findElement(By.id(\"j_username\")).sendKeys(\"admin\");\n \t\tdriver.findElement(By.id(\"j_password\")).clear();\n \t\tdriver.findElement(By.id(\"j_password\")).sendKeys(\"admin\");\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.cssSelector(\"input.button\")).click();\n \t\tThread.sleep(demoWaitTime);\n \n \t\tdriver.findElement(By.xpath(\"//tr[@id='4']/td[2]\")).click();\n \t\tdriver.findElement(By.id(\"editBtn\")).click();\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.id(\"name\")).clear();\n \t\tdriver.findElement(By.id(\"price\")).clear();\n \t\tdriver.findElement(By.id(\"price\")).sendKeys(\"45.50 a\");\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.id(\"sData\")).click();\n \t\tThread.sleep(demoWaitTime);\n \n \t\tassertPresent(\"#tr_name .field-error-message\");\n \t\tassertPresent(\"#tr_price .field-error-message\");\n \n \t\tdriver.findElement(By.id(\"cData\")).click();\n \t\tThread.sleep(demoWaitTime);\n \n \t\tdriver.findElement(By.id(\"editBtn\")).click();\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.id(\"price\")).clear();\n \t\tdriver.findElement(By.id(\"price\")).sendKeys(\"45.51\");\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.id(\"sData\")).click();\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.cssSelector(\"span.ui-icon.ui-icon-seek-next\")).click();\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.cssSelector(\"span.ui-icon.ui-icon-seek-prev\")).click();\n \t\tThread.sleep(demoWaitTime);\n \n \t\tassertEquals(\"$ 45.51\", driver.findElement(By.xpath(\"//tr[@id='4']/td[3]\")).getText());\n \n \t\tdriver.findElement(By.xpath(\"//tr[@id='4']/td[2]\")).click();\n \t\tdriver.findElement(By.id(\"editBtn\")).click();\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.id(\"price\")).clear();\n \t\tdriver.findElement(By.id(\"price\")).sendKeys(\"45.50\");\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.id(\"sData\")).click();\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.cssSelector(\"span.ui-icon.ui-icon-seek-next\")).click();\n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.cssSelector(\"span.ui-icon.ui-icon-seek-prev\")).click();\n \n \t\tassertEquals(\"$ 45.50\", driver.findElement(By.xpath(\"//tr[@id='4']/td[3]\")).getText());\n \n \t\tThread.sleep(demoWaitTime);\n \t\tdriver.findElement(By.linkText(\"Logout: admin\")).click();\n \t}\n", "path": "fontus-web/src/test/java/com/github/iexel/fontus/web/test/SeleniumIT.java", "repo name": "iexel/fontus"}
{"repo_name": "testMoexRubusd_10", "method name": "test Moex Rubusd", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/\");\n \t\tdriver.findElement(By.xpath(\"//a[contains(text(),'Валюта')]\")).click();\n \t\tdriver.findElement(By.xpath(\"//tr[3]/td/a/span\")).click();\n \t\tString sTitle = driver.findElement(By.xpath(\"//tr[3]/td/a/span\")).getText();\n \t\tString sValue = driver.findElement(By.xpath(\"//tr[3]/td[4]/span\")).getText();\n \t\tSystem.out.println(sTitle + \": \" + sValue);\n   }\n", "path": "src/main/resources/MoexRubusd.java", "repo name": "khomisha/wtt"}
{"repo_name": "openTestURL_11", "method name": "open Test URL", "comments": [], "url": true, "content": "    private void function(Class<?> uiClass, Set<String> parameters) {\n         String url = getTestURL(uiClass);\n \n         if (isDebug()) {\n             parameters.add(\"debug\");\n         }\n \n         if (LegacyApplication.class.isAssignableFrom(uiClass)) {\n             parameters.add(\"restartApplication\");\n         }\n \n         if (parameters.size() > 0) {\n             url += \"?\" + Joiner.on(\"&\").join(parameters);\n         }\n \n         driver.get(url);\n     }\n", "path": "uitest/src/com/vaadin/tests/tb3/AbstractTB3Test.java", "repo name": "synes/vaadin"}
{"repo_name": "navigate_to_url_12", "method name": "navigate to url", "comments": [" Navigates the {@link WebDriver} to the passed page", " ", " @param url to navigate to. This can be either a file on the file system, a http(s) url or a {@link ResourceUtils#CLASSPATH_URL_PREFIX} prefixed ", " string indicating the page can be found on the current classpath.", " @throws IOException"], "url": true, "content": "    public void function(String url) throws IOException {\n         if (url.startsWith(SenBotContext.RESOURCE_LOCATION_PREFIX)) {\n             String urlLoc = getSenBotContext().getRuntimeResources() + url.replace(SenBotContext.RESOURCE_LOCATION_PREFIX, \"\");\n             if (urlLoc.startsWith(\"/\")) {\n                 urlLoc = urlLoc.replaceFirst(\"/\", \"\");\n             }\n             url = \"file:///\" + urlLoc;\n         }\n         getWebDriver().get(url);\n     }\n", "path": "SenBotRunner/src/main/java/com/gfk/senbot/framework/services/selenium/NavigationService.java", "repo name": "gfk-ba/senbot"}
{"repo_name": "testNavigate_to_url_onUnixPath_13", "method name": "testNavigate to url onUnixPath", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         //Cleanup the senbot so it will be initialiyed with the new property\n         SenBotContext.cleanupSenBot();\n         System.setProperty(\"senbotContext.alternateRuntimeResources\", \"/some/path\");\n         final WebDriver mockDriver = Mockito.mock(WebDriver.class);\n         \n         String pageUnderTest = \"/test_pages/exampleButton.html\";\n         String expectedUrl = \"file:///some/path\" + pageUnderTest;\n \n         NavigationService serviceUnderTest = new NavigationService(seleniumElementService) {\n             \n             @Override\n             public WebDriver getWebDriver() {\n                 return mockDriver;\n             }\n         };\n         \n         serviceUnderTest.navigate_to_url(SenBotContext.RESOURCE_LOCATION_PREFIX + pageUnderTest);\n         Mockito.verify(mockDriver, Mockito.times(1)).get(expectedUrl);\n         \n         SenBotContext.cleanupSenBot();\n     }\n", "path": "SenBotRunner/src/test/java/com/gfk/senbot/framework/services/selenium/NavigationServiceMockedEnvTest.java", "repo name": "gfk-ba/senbot"}
{"repo_name": "I_navigate_to_14", "method name": "I navigate to", "comments": ["When(\"^I navigate to \\\"([^\\\"]*)\\\"$\")"], "url": true, "content": "  public void function(String url) throws Throwable {\n     driver.get(url);\n   }\n", "path": "src/test/java/info/bowkett/joxy/stepdefs/ServerStartupStepDefs.java", "repo name": "jbowkett/joxy"}
{"repo_name": "sOpenWindow_15", "method name": "s Open Window", "comments": [" DefaultSelenium.openWindow()", " ", " @param url", " @param windowID"], "url": true, "content": "\tpublic void function(String url, String windowID) throws HarnessException {\n \t\tif (ZimbraSeleniumProperties.isWebDriver()){\n \t\t\tlogger.info(\"...WebDriver...navigate().to()\");\n \t\t\twebDriver().navigate().to(url);\n \t\t}else{\n \t\t\tClientSessionFactory.session().selenium().openWindow(url, windowID);\n \t\t}\n \t\tlogger.info(\"openWindow(\" + url + \", \" + windowID + \")\");\n \t}\n", "path": "ZimbraSelenium/src/java/com/zimbra/qa/selenium/framework/ui/AbsSeleniumObject.java", "repo name": "nico01f/z-pec"}
{"repo_name": "testWSO2FormatTestCase_16", "method name": "test WSO2 Format Test Case", "comments": ["Test(groups = \"\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         //METHOD:testLoginTestCase:start\n         //WINDOW:apimng.login\n         driver.get(baseUrl + \"/publisher/design\");\n         driver.findElement(By.id(UIElementMapper.getElement(\"apimng.login.username.id\"))).clear(); //  modified by QAA Tweek \n         driver.findElement(By.id(UIElementMapper.getElement(\"apimng.login.username.id\"))).sendKeys(\"admin\"); //  modified by QAA Tweek \n         driver.findElement(By.id(UIElementMapper.getElement(\"apimng.login.pass.id\"))).clear(); //  modified by QAA Tweek \n         driver.findElement(By.id(UIElementMapper.getElement(\"apimng.login.pass.id\"))).sendKeys(\"admin\"); //  modified by QAA Tweek \n         driver.findElement(By.id(UIElementMapper.getElement(\"apimng.login.loginbutton.id\"))).click(); //  modified by QAA Tweek \n         //METHOD:testLoginTestCase:end\n         //METHOD:testMainWindowTestCase:start\n         //WINDOW:apimng.main\n         for (int second = 0; ; second++) {\n             if (second >= 60) {\n                 fail(\"timeout\");\n             }\n             try {\n                 if (isElementPresent(By.linkText(UIElementMapper.getElement(\"apimng.main.allstatistics.linktext\")))) { //  modified by QAA Tweek \n                     break;\n                 }\n             } catch (Exception e) {\n             }\n             Thread.sleep(1000);\n         }\n \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.allstatistics.linktext\"))).click(); //  modified by QAA Tweek \n         for (int second = 0; ; second++) {\n             if (second >= 60) {\n                 fail(\"timeout\");\n             }\n             try {\n                 if (isElementPresent(By.linkText(UIElementMapper.getElement(\"apimng.main.apiresponsetimes.linktext\")))) { //  modified by QAA Tweek \n                     break;\n                 }\n             } catch (Exception e) {\n             }\n             Thread.sleep(1000);\n         }\n \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.apiresponsetimes.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.apiusagebyresourcepath.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.apiusagebyuser.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.browse.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.subscriptions.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.statistics.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.apisubscriptions.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.apiusage.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.apiresponsetimes.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.apilastaccesstimes.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.browse.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.browse.linktext\"))).click(); //  modified by QAA Tweek \n         driver.findElement(By.linkText(UIElementMapper.getElement(\"apimng.main.add.linktext\"))).click(); //  modified by QAA Tweek \n         //METHOD:testMainWindowTestCase:end\n     }\n", "path": "src/main/resources/WSO2FormatTestCaseTweakP1.java", "repo name": "sanethd/tweak"}
{"repo_name": "testWSO2FormatTestCase_17", "method name": "test WSO2 Format Test Case", "comments": ["Test(groups = \"\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         //METHOD:testLoginTestCase:start\n         //WINDOW:apimng.login\n         driver.get(baseUrl + \"/publisher/design\");\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n         driver.findElement(By.id(\"pass\")).clear();\n         driver.findElement(By.id(\"pass\")).sendKeys(\"admin\");\n         driver.findElement(By.id(\"loginButton\")).click();\n         //METHOD:testLoginTestCase:end\n         //WINDOW:apimng.main\n         //METHOD:testMainWindowTestCase:start\n         for (int second = 0; ; second++) {\n             if (second >= 60) {\n                 fail(\"timeout\");\n             }\n             try {\n                 if (isElementPresent(By.linkText(\"All Statistics\"))) {\n                     break;\n                 }\n             } catch (Exception e) {\n             }\n             Thread.sleep(1000);\n         }\n \n         driver.findElement(By.linkText(\"All Statistics\")).click();\n         for (int second = 0; ; second++) {\n             if (second >= 60) {\n                 fail(\"timeout\");\n             }\n             try {\n                 if (isElementPresent(By.linkText(\"API Response Times\"))) {\n                     break;\n                 }\n             } catch (Exception e) {\n             }\n             Thread.sleep(1000);\n         }\n \n         driver.findElement(By.linkText(\"API Response Times\")).click();\n         driver.findElement(By.linkText(\"API Usage by Resource Path\")).click();\n         driver.findElement(By.linkText(\"API Usage by User\")).click();\n         driver.findElement(By.linkText(\"Browse\")).click();\n         driver.findElement(By.linkText(\"Subscriptions\")).click();\n         driver.findElement(By.linkText(\"Statistics\")).click();\n         driver.findElement(By.linkText(\"API Subscriptions\")).click();\n         driver.findElement(By.linkText(\"API Usage\")).click();\n         driver.findElement(By.linkText(\"API Response Times\")).click();\n         driver.findElement(By.linkText(\"API Last Access Times\")).click();\n         driver.findElement(By.linkText(\"Browse\")).click();\n         driver.findElement(By.linkText(\"Browse\")).click();\n         driver.findElement(By.linkText(\"Add\")).click();\n         //METHOD:testMainWindowTestCase:end\n     }\n", "path": "src/main/resources/aaWSO2FormatTestCase.java", "repo name": "sanethd/tweak"}
{"repo_name": "gotoTestCourse_18", "method name": "goto Test Course", "comments": ["Override"], "url": true, "content": "    public ICoursePage function() {\n         driver.get(baseUrl);\n         try {\n             testCourseLink.click();\n             return PageFactory.initElements(driver, CoursePage.class);\n         } catch (NoSuchElementException e) {\n             return createTestCourse();\n         }\n     }\n", "path": "opaque-api/src/test/java/com/googlecode/ounit/test/moodle21/HomePage.java", "repo name": "uhoogma/ounit"}
{"repo_name": "gotoTestCourse_19", "method name": "goto Test Course", "comments": ["Override"], "url": true, "content": "    public ICoursePage function() {\n         driver.get(baseUrl);\n         try {\n             testCourseLink.click();\n             return PageFactory.initElements(driver, CoursePage.class);\n         } catch (NoSuchElementException e) {\n             return createTestCourse();\n         }\n     }\n", "path": "opaque-api/src/test/java/com/googlecode/ounit/test/moodle19/HomePage.java", "repo name": "uhoogma/ounit"}
{"repo_name": "populateFromJournal_20", "method name": "populate From Journal", "comments": [], "url": true, "content": "    private void function(String url, int timeoutSeconds) {\n         WebDriver driver = new HtmlUnitDriver(true);\n         driver.get(url);\n \n         WebDriverWait wait = new WebDriverWait(driver, timeoutSeconds);\n         wait.until(ExpectedConditions\n                    .presenceOfElementLocated(By.xpath(XPATH_AUTHOR_LINK_A)));\n \n         List<WebElement> aList =\n                 driver.findElements(By.xpath(XPATH_AUTHOR_LINK_A));\n \n         for (WebElement e : aList) {\n             System.out.println(\"  \" + e.getText());\n             String raw = e.getAttribute(\"href\");\n             int i1 = raw.indexOf(\"id=\");\n \n             if (i1 < 0) {\n                 continue;\n             }\n \n             int i2 = raw.indexOf(\"&\");\n \n             if (i2 < 0 || i2 < i1) {\n                 continue;\n             }\n \n             String id = raw.substring(i1 + \"id=\".length(), i2).trim();\n             AuthorNode authorNode = new AuthorNode(id);\n             authorNode.setName(e.getText().trim());\n             authorNode.setDb(db);\n \n             if (db != null) {\n                 db.addAuthor(authorNode.getId(), authorNode.getName());\n                 processAuthor(id, timeoutSeconds);\n             }\n \n             this.list.add(authorNode);\n             --max;\n \n             if (max <= 0) {\n                 return;\n             }\n         }\n     }\n", "path": "backend/ACM-DL-Crawler-master/src/main/java/fi/helsinki/acmcrawler/domain/support/DefaultSeedFactory.java", "repo name": "C2Tao/Thesisit"}
{"repo_name": "resetUserPassword_21", "method name": "reset User Password", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String userId = createUser(\"user1\", \"user1@localhost\");\n \n         CredentialRepresentation cred = new CredentialRepresentation();\n         cred.setType(CredentialRepresentation.PASSWORD);\n         cred.setValue(\"password\");\n         cred.setTemporary(false);\n \n         realm.users().get(userId).resetPassword(cred);\n \n         String accountUrl = RealmsResource.accountUrl(UriBuilder.fromUri(Constants.AUTH_SERVER_ROOT)).build(REALM_NAME).toString();\n \n         driver.navigate().to(accountUrl);\n \n         assertEquals(\"Log in to admin-client-test\", driver.getTitle());\n \n         loginPage.login(\"user1\", \"password\");\n \n         assertEquals(\"Keycloak Account Management\", driver.getTitle());\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "repo name": "ahus1/keycloak"}
{"repo_name": "navigate_to_web_page_headless_22", "method name": "navigate to web page headless", "comments": ["Page_up_home up_page;Page_jambox speakers_page;Page_Store store_page;", "Page_Support support_page;Page_headsets_home headsets_page;Pages_Css page_cssurl": true, "content": "    public void function(String url, String Suburl) throws InterruptedException{\n         Thread.sleep(500);\n         String given_url= url + Suburl;\n         Print_out(\"==================  going to insert given URL:  \"+given_url);\n         driver.get(url+Suburl);\n         String getter_url= driver.getCurrentUrl();\n         Print_out(\"==================  Verified...   current URL:  \"+getter_url);\n         Print_out(\"\");\n         print_page_title_h();\n     }\n", "path": "src/test/java/com/jawbone/lib/Env_html.java", "repo name": "dukserduk/jaba"}
{"repo_name": "Open_web_page_23", "method name": "Open web page", "comments": ["*******************************************************************************", "NAME:", "PARAMETERS:", "USED:", "*******************************************************************************", "*******************************************************************************", "NAME:", "PARAMETERS:", "USED:", "*******************************************************************************", "    public boolean isPromoSale_Banner_Off(){    // Created for International locales only", "        String getter_url= driver.getCurrentUrl();", "        try {", "            get_wait(5);", "            driver.findElement(By.id(banner_SALE_ON));", "            Print_out(\"\");", "            fail(\"-ERROR: SALE BANNER IS DISPLAYED ON PAGE  :   \"+getter_url);", "            return false;}", "        catch (NoSuchElementException e) {", "            Print_out(\"-MESSAGE: SUCCESS! PROMO SALE IS OFF - NO SALE BANNER ON PAGE  :   \"+getter_url);", "            Print_out(\"\");", "            return true;", "        }", "    }", "*******************************************************************************", "NAME:", "PARAMETERS:", "USED:", "*******************************************************************************"], "url": true, "content": "    public boolean function(String url){\n         //System.setProperty(\"webdriver.chrome.driver\", \"/src/test/resources/chromedriver\");\n         driver.get(url);\n         driver.manage().window().maximize();\n         get_wait(60);\n         Print_out(\"Success ...\");\n         return true;\n     }\n", "path": "src/test/java/com/jawbone/lib/Env.java", "repo name": "dukserduk/jaba"}
{"repo_name": "Navigate_to_web_page_24", "method name": "Navigate to web page", "comments": ["*******************************************************************************", "NAME:", "PARAMETERS:", "USED:", "*******************************************************************************"], "url": true, "content": "    public void function(String url, String Suburl, String Jenkins_job,String sale) throws InterruptedException{\n         Thread.sleep(500);\n         String given_url= url + Suburl;\n         Print_out(\"==================  going to insert given URL:  \"+given_url);\n         if (sale.equalsIgnoreCase(\"on\")) {\n             Print_out(\"-MESSAGE: PROMO SALE KEYWORD IS SET TO ON\");\n             Print_out(\"-IsPromoSale_On method running / verification of promo banner is starting.../\");\n             Print_out(\"\");\n             isPromoSale_On(Jenkins_job);\n         }\n         else{\n             Print_out(\"-MESSAGE: PROMO SALE KEYWORD IS SET TO OFF\");\n             Print_out(\"\");\n         }\n         driver.get(url+Suburl);\n         String getter_url= driver.getCurrentUrl();\n         Print_out(\"==================  Verified...   current URL:  \"+getter_url);\n         Print_out(\"Success ...\");\n         }\n", "path": "src/test/java/com/jawbone/lib/Env.java", "repo name": "dukserduk/jaba"}
{"repo_name": "Navigate_to_intern_web_page_25", "method name": "Navigate to intern web page", "comments": ["*******************************************************************************", "NAME:", "PARAMETERS:", "USED:", "*******************************************************************************"], "url": true, "content": "    public void function(String url, String Suburl) throws InterruptedException{\n         Thread.sleep(500);\n         String given_url= url + Suburl;\n         Print_out(\"==================  going to insert given URL:  \"+given_url);\n         //isPromoSale_Banner_Off();\n         driver.get(url+Suburl);\n         String getter_url= driver.getCurrentUrl();\n         Print_out(\"==================  Verified...   current URL:  \"+getter_url);\n         Print_out(\"Success ...\");\n     }\n", "path": "src/test/java/com/jawbone/lib/Env.java", "repo name": "dukserduk/jaba"}
{"repo_name": "testSignUpFailedOnInvalidPassword_26", "method name": "test Sign Up Failed On Invalid Password", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/iBase/signup\");\n     driver.findElement(By.id(\"firstName\")).clear();\n     driver.findElement(By.id(\"firstName\")).sendKeys(\"Jake\");\n     driver.findElement(By.id(\"lastName\")).clear();\n     driver.findElement(By.id(\"lastName\")).sendKeys(\"Krammer\");\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"jake123@asu.edu\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"pass1\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     assertEquals(\"password must be atleast 6 characters!\", driver.findElement(By.cssSelector(\"p\")).getText());\n   }\n", "path": "src/test/java/com/iBase/web/SignUpFailedPasswordTest.java", "repo name": "karth707/iBase"}
{"repo_name": "testGoToSignUp_27", "method name": "test Go To Sign Up", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/iBase/login\");\n     driver.findElement(By.cssSelector(\"a > font\")).click();\n     assertEquals(\"iBase - Registration\", driver.findElement(By.cssSelector(\"h2\")).getText());\n   }\n", "path": "src/test/java/com/iBase/web/SignUpTest.java", "repo name": "karth707/iBase"}
{"repo_name": "testSignUpFailedOnInvalidEmail_28", "method name": "test Sign Up Failed On Invalid Email", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/iBase/signup\");\n     driver.findElement(By.id(\"firstName\")).clear();\n     driver.findElement(By.id(\"firstName\")).sendKeys(\"Jake\");\n     driver.findElement(By.id(\"lastName\")).clear();\n     driver.findElement(By.id(\"lastName\")).sendKeys(\"Krammer\");\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"jake123\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"password1\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     assertEquals(\"invalid email address!\", driver.findElement(By.cssSelector(\"p\")).getText());\n   }\n", "path": "src/test/java/com/iBase/web/SignUpFailedEmailTest.java", "repo name": "karth707/iBase"}
{"repo_name": "testUploadPassed_29", "method name": "test Upload Passed", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \t  driver.get(baseUrl + \"/iBase/login\");\n \t  driver.findElement(By.name(\"userId\")).clear();\n \t  driver.findElement(By.name(\"userId\")).sendKeys(\"jake@asu.edu\");\n \t  driver.findElement(By.name(\"password\")).clear();\n \t  driver.findElement(By.name(\"password\")).sendKeys(\"password1\");\n   \t  driver.findElement(By.name(\"submit\")).click();\n   \t  assertEquals(\"iBase - Image Database\", driver.getTitle());\n   \t  driver.get(baseUrl + \"/iBase/upload\");\n   \t  driver.findElement(By.name(\"imageFile\")).sendKeys(\"/Users/KartheekGanesh/Sources/iBaseTestImages/sparky.jpg\");\n   \t  driver.findElement(By.id(\"name\")).sendKeys(\"ASU Logo\");\n   \t  assertEquals(\"Home\", driver.findElement(By.linkText(\"Home\")).getText());\n   \t  assertEquals(\"iBase - Image Database\", driver.getTitle());\n   \t  assertEquals(\"Upload\", driver.findElement(By.linkText(\"Upload\")).getText());\n   \t  assertEquals(\"Settings\", driver.findElement(By.xpath(\"//li[3]\")).getText());\n   \t  assertEquals(\"Logout\", driver.findElement(By.linkText(\"Logout\")).getText());\n   \t  assertEquals(\"Share your photo with the world!\", driver.findElement(By.cssSelector(\"h3\")).getText());\n   \t  assertEquals(\"\", driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).getText());\n   \t  assertEquals(\"Title:\", driver.findElement(By.id(\"imageFile\")).getText());\n   \t  driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n   }\n", "path": "src/test/java/com/iBase/web/UploadPassedTest.java", "repo name": "karth707/iBase"}
{"repo_name": "testUploadFailedOnWrongImageType_30", "method name": "test Upload Failed On Wrong Image Type", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \t  driver.get(baseUrl + \"/iBase/login\");\n \t  driver.findElement(By.name(\"userId\")).clear();\n \t  driver.findElement(By.name(\"userId\")).sendKeys(\"jake@asu.edu\");\n \t  driver.findElement(By.name(\"password\")).clear();\n \t  driver.findElement(By.name(\"password\")).sendKeys(\"password1\");\n   \t  driver.findElement(By.name(\"submit\")).click();\n   \t  assertEquals(\"iBase - Image Database\", driver.getTitle());\n   \t  driver.get(baseUrl + \"/iBase/upload\");\n   \t  driver.findElement(By.name(\"imageFile\")).sendKeys(\"/Users/KartheekGanesh/Sources/iBaseTestImages/sparky2.gif\");\n   \t  driver.findElement(By.id(\"name\")).sendKeys(\"gif image\");\n   \t  driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n   \t  assertEquals(\"Sorry! Invalid File!\", driver.findElement(By.cssSelector(\"p\")).getText());\n   \t  assertEquals(\"iBase - Image Database\", driver.getTitle());\n   \t  assertEquals(\"Upload\", driver.findElement(By.linkText(\"Upload\")).getText());\n   \t  assertEquals(\"Settings\", driver.findElement(By.linkText(\"Settings\")).getText());\n   \t  assertEquals(\"Logout\", driver.findElement(By.linkText(\"Logout\")).getText());\n   \t  assertEquals(\"Share your photo with the world!\", driver.findElement(By.cssSelector(\"h3\")).getText());\n   \t  assertEquals(\"\", driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).getText());\n   \t  assertEquals(\"Title:\", driver.findElement(By.id(\"imageFile\")).getText());\n   \t  assertEquals(\"Home\", driver.findElement(By.linkText(\"Home\")).getText());\n   }\n", "path": "src/test/java/com/iBase/web/UploadFailedTest.java", "repo name": "karth707/iBase"}
{"repo_name": "testSettingsPassed_31", "method name": "test Settings Passed", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \t  driver.get(baseUrl + \"/iBase/login\");\n \t  driver.findElement(By.name(\"userId\")).clear();\n \t  driver.findElement(By.name(\"userId\")).sendKeys(\"jake@asu.edu\");\n \t  driver.findElement(By.name(\"password\")).clear();\n \t  driver.findElement(By.name(\"password\")).sendKeys(\"password1\");\n   \t  driver.findElement(By.name(\"submit\")).click();\n   \t  assertEquals(\"iBase - Image Database\", driver.getTitle());\n   \t  driver.get(baseUrl + \"/iBase/settings\");\n   \t  driver.findElement(By.name(\"profileImageFile\")).sendKeys(\"/Users/KartheekGanesh/Sources/iBaseTestImages/sparky.jpg\");\n   \t  driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n   \t  assertEquals(\"Settings\", driver.findElement(By.linkText(\"Settings\")).getText());\n   \t  assertEquals(\"Upload\", driver.findElement(By.linkText(\"Upload\")).getText());\n   \t  assertEquals(\"Home\", driver.findElement(By.linkText(\"Home\")).getText());\n   \t  assertEquals(\"Logout\", driver.findElement(By.linkText(\"Logout\")).getText());\n   \t  assertEquals(\"Update your profile picture!\", driver.findElement(By.cssSelector(\"h3\")).getText());\n   \t  assertEquals(\"Profile picture successfully updated!\", driver.findElement(By.cssSelector(\"p\")).getText());\n   }\n", "path": "src/test/java/com/iBase/web/SettingsPassedTest.java", "repo name": "karth707/iBase"}
{"repo_name": "testLoginFailedOnInvalidUsernameAndPassword_32", "method name": "test Login Failed On Invalid Username And Password", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/iBase/login\");\n     driver.findElement(By.name(\"userId\")).clear();\n     driver.findElement(By.name(\"userId\")).sendKeys(\"jake1234@asu.edu\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"password1\");\n     driver.findElement(By.name(\"submit\")).click();\n     assertEquals(\"Invalid username and password!\", driver.findElement(By.cssSelector(\"div.error\")).getText());\n   }\n", "path": "src/test/java/com/iBase/web/LoginFailedTest.java", "repo name": "karth707/iBase"}
{"repo_name": "testSettingsFailedOnWrongImageType_33", "method name": "test Settings Failed On Wrong Image Type", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \t  driver.get(baseUrl + \"/iBase/login\");\n \t  driver.findElement(By.name(\"userId\")).clear();\n \t  driver.findElement(By.name(\"userId\")).sendKeys(\"jake@asu.edu\");\n \t  driver.findElement(By.name(\"password\")).clear();\n \t  driver.findElement(By.name(\"password\")).sendKeys(\"password1\");\n \t  driver.findElement(By.name(\"submit\")).click();\n \t  assertEquals(\"iBase - Image Database\", driver.getTitle());\n \t  driver.get(baseUrl + \"/iBase/settings\");\n \t  driver.findElement(By.name(\"profileImageFile\")).sendKeys(\"/Users/KartheekGanesh/Sources/iBaseTestImages/sparky2.gif\");\n \t  driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n \t  assertEquals(\"Home\", driver.findElement(By.linkText(\"Home\")).getText());\n \t  assertEquals(\"Upload\", driver.findElement(By.linkText(\"Upload\")).getText());\n \t  assertEquals(\"Settings\", driver.findElement(By.linkText(\"Settings\")).getText());\n \t  assertEquals(\"iBase - Image Database\", driver.getTitle());\n \t  assertEquals(\"Logout\", driver.findElement(By.linkText(\"Logout\")).getText());\n \t  assertEquals(\"Update your profile picture!\", driver.findElement(By.cssSelector(\"h3\")).getText());\n \t  assertEquals(\"\", driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).getText());\n \t  assertEquals(\"Sorry! Invalid File!\", driver.findElement(By.cssSelector(\"p\")).getText());\n   }\n", "path": "src/test/java/com/iBase/web/SettingsFailedTest.java", "repo name": "karth707/iBase"}
{"repo_name": "testLoginPassed_34", "method name": "test Login Passed", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/iBase/login\");\n     driver.findElement(By.name(\"userId\")).clear();\n     driver.findElement(By.name(\"userId\")).sendKeys(\"jake@asu.edu\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"password1\");\n     driver.findElement(By.name(\"submit\")).click();\n     assertEquals(\"iBase - Image Database\", driver.getTitle());\n   }\n", "path": "src/test/java/com/iBase/web/LoginPassedTest.java", "repo name": "karth707/iBase"}
{"repo_name": "testSignUpFailedOnUsernameTaken_35", "method name": "test Sign Up Failed On Username Taken", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/iBase/signup\");\n     driver.findElement(By.id(\"firstName\")).clear();\n     driver.findElement(By.id(\"firstName\")).sendKeys(\"Jake\");\n     driver.findElement(By.id(\"lastName\")).clear();\n     driver.findElement(By.id(\"lastName\")).sendKeys(\"Krammer\");\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"jake@asu.edu\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"password1\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     assertEquals(\"Username Taken!\", driver.findElement(By.cssSelector(\"p\")).getText());\n   }\n", "path": "src/test/java/com/iBase/web/SignUpFailedUsernameTest.java", "repo name": "karth707/iBase"}
{"repo_name": "test20ExistingFriends_36", "method name": "test20 Existing Friends", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl);\n \t\t\t\t\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"#table-friends\")));\n \t\t\n \t\tfriends = driver.findElements(By.cssSelector(\"#table-friends>tr\")).size();\n \t\t\n \t\tWebElement firstFriend = driver.findElement(By.cssSelector(\"#table-friends>tr:nth-of-type(1)>td\"));\n \t\tassertEquals(\"Steve Fulling\", firstFriend.getText());\n \t\t\n \t\tfirstFriend.click();\n \t\t\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"friend-name\")));\n \t\t\n \t\tassertEquals(\"Steve Fulling\", driver.findElement(By.cssSelector(\"#view-friend #friend-name\")).getText());\n \t\tassertEquals(\"swf@kynetx.com\", driver.findElement(By.cssSelector(\"#view-friend #friend-email\")).getText());\n \t\tassertEquals(\"8016023200\", driver.findElement(By.cssSelector(\"#view-friend #friend-phone\")).getText());\n \t}\n", "path": "tests/src/com/kynetx/forever/tests/TestForever.java", "repo name": "kynetx/Forever"}
{"repo_name": "test40NewAccount_37", "method name": "test40 New Account", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(squareTagUrl);\n \t\t\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"navAvatar\")));\n \t\t\n \t\tdriver.findElement(By.id(\"navAvatar\")).click();\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"#navRight ul.dropdown-menu\")));\n \t\t\n \t\tdriver.findElement(By.linkText(\"Logout\")).click();\n \t\t\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"formLogin\")));\n \t\t\n \t\tdriver.get(baseUrl);\n \t\t\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"view-friends\")));\n \t\t\n \t\t// Open up the menu and logout\n \t\tdriver.findElement(By.cssSelector(\"div.navbar-inner .container-fluid button.btn\")).click();\n \t\tdriver.findElement(By.linkText(\"Logout\")).click();\n \t\t\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(\"Click here to Link Squaretag\")));\n \n \t\t// Let's get linking!!\n \t\tdriver.findElement(By.linkText(\"Click here to Link Squaretag\")).click();\n \t\t\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(\"I'm a new SquareTag User\")));\n \t\t\n \t\t// Start the create a new account process\n \t\tdriver.findElement(By.linkText(\"I'm a new SquareTag User\")).click();\n \t\n \t\tlong time = System.currentTimeMillis();\n \t\tString email = \"cloudos_test\"+time+\"@kynetx.com\";\n \t\tString password = \"fizzbazz\";\n \t\t\n \t\tdriver.findElement(By.id(\"signupEmail\")).sendKeys(email);\n \t\tdriver.findElement(By.id(\"signupPassword\")).sendKeys(password);\n \t\tdriver.findElement(By.id(\"confirmPassword\")).sendKeys(password);\n \t\t\n \t\tdriver.findElement(By.id(\"signupSubmit\")).click();\n \t\t\n \t\tBy authorizeLink = By.cssSelector(\"#cloudAppPanel-b177052x7-content a.btn-primary\");\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(authorizeLink));\n \t\tdriver.findElement(authorizeLink).click();\n \t\t\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"view-home-auth\")));\n \t\tassertEquals(\"Forever is linked to your personal cloud\", driver.findElement(By.cssSelector(\"#view-home-auth h3\")).getText());\n \t}\n", "path": "tests/src/com/kynetx/forever/tests/TestForever.java", "repo name": "kynetx/Forever"}
{"repo_name": "visitTestCases_38", "method name": "visit Test Cases", "comments": [], "url": true, "content": "    public static void function( AtomicInteger nextTest, int tests ) {\n         //String baseUrl = \"https://localhost:8443/benchmark/BenchmarkTest\";\n         FirefoxDriver driver = new FirefoxDriver();\n         JavascriptExecutor js = (JavascriptExecutor) driver;\n \n         while( nextTest.get() <= tests ) {\n             //String test = \"000000\" + nextTest.getAndIncrement();\n             //test = test.substring(test.length() - 5);\n         \tint test = nextTest.getAndIncrement();\n             try {\n                 //String url = baseUrl + test + \".html\";\n             \tString url = allTestCases.get(test);\n                 driver.get(url);\n                 \n                 // get URL, find all buttons, and click them\n                 for ( WebElement we : driver.findElements(By.tagName(\"form\"))) {\n                     we.submit();\n                 }\n \n                 // reload page, and if there's a JavaScript button, click that\n                 driver.get(url);\n                 Thread.sleep(500);\n                 String jQuerySelector = \"#login-btn\";\n                 js.executeScript(\"$(\\\"\" + jQuerySelector + \"\\\").click();\");\n                 Thread.sleep(500);\n             } catch (Exception e) {\n                 // This is expected since many pages do not have the jquery button\n                 // System.err.println(\"  -> ERROR: \" + e.getMessage());\n             }\n         }\n \n         driver.quit();\n     }\n", "path": "src/main/java/org/owasp/benchmark/tools/BenchmarkRunner.java", "repo name": "OWASP/Benchmark"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_39", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_40", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_41", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_42", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"Opera: failed\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_43", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, ANDROID, IPHONE}, reason = \"not tested\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_44", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, ANDROID, IPHONE}, reason = \"not tested\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "handleFormWithJavascriptAction_45", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, HTMLUNIT, IPHONE, OPERA, PHANTOMJS, SAFARI, OPERA_MOBILE, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_46", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_47", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_48", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testAddCategory_49", "method name": "test Add Category", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/phormer331/\");\n \t\tdriver.findElement(By.linkText(\"Admin Page\")).click();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).clear();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).sendKeys(\"editor\");\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tdriver.findElement(By.linkText(\"Manage Categories\")).click();\n \t\tdriver.findElement(By.id(\"name\")).clear();\n \t\tdriver.findElement(By.id(\"name\")).sendKeys(\"flowers\");\n \t\tdriver.findElement(By.name(\"desc\")).clear();\n \t\tdriver.findElement(By.name(\"desc\")).sendKeys(\"contains photos of all the flowers !\");\n \t\tdriver.findElement(By.id(\"listRadioNo\")).click();\n \t\tdriver.findElement(By.id(\"listRadioYe\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tassertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"^[\\\\s\\\\S]*Category \\\"flowers\\\" added succesfully![\\\\s\\\\S]*$\"));\n \t\tdriver.findElement(By.xpath(\"(//a[contains(text(),'Delete / Clear')])[2]\")).click();\n \t\tassertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"^[\\\\s\\\\S]*Clears Category flowers of all its own \\\\(direct\\\\) photos, nothing will be removed[\\\\s\\\\S]*$\"));\n \t\tdriver.findElement(By.xpath(\"(//input[@name='howto'])[4]\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tassertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to delete [\\\\s\\\\S]*$\"));\n \t\t// driver.findElement(By.cssSelector(\"a[title=\\\"Log Out\\\"] > img.logo\")).click();\n \t}\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/originaltests/getcoverage/CategoryDeleteTest.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testPromoteToInReview_50", "method name": "test Promote To In Review", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/publisher/assets/gadget/\");\n \t\tdriver.findElement(By.xpath(\"//a[contains(text(),\\\"userAddedAsset\\\")]\")).click();\n \t\tdriver.findElement(By.linkText(\"Life Cycle\")).click();\n \t\tdriver.findElement(By.id(\"In-Review\")).click();\n \t\tList<WebElement> rows = driver.findElements(By.xpath(\"//table[@id='lc-history']//tr\"));\n \t\tWebElement val = rows.get(0).findElement(By.xpath(\"./td[2]\"));\n \t\tSystem.out.println(val.getText());\n \t\tassertEquals(val.getText(), \"supertenantuser changed the asset from Created to In-Review\");\n \t}\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/PromoteToInReview.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddStoryAssert_51", "method name": "test Add Story Assert", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/phormer331/\");\n \t\tdriver.findElement(By.linkText(\"Admin Page\")).click();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).clear();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).sendKeys(\"editor\");\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tdriver.findElement(By.linkText(\"Manage Stories\")).click();\n \t\tdriver.findElement(By.id(\"name\")).clear();\n \t\tdriver.findElement(By.id(\"name\")).sendKeys(\"Photos\");\n \t\tdriver.findElement(By.name(\"desc\")).clear();\n \t\tdriver.findElement(By.name(\"desc\")).sendKeys(\"Greenery !!\");\n \t\tassertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"^[\\\\s\\\\S]*Get Comments[\\\\s\\\\S]*$\"));\n \n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tdriver.findElement(By.cssSelector(\"a[title=\\\"Log Out\\\"]\")).click();\n \t}\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/originaltests/getcoverage/add_story.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testUpdateDescription_52", "method name": "test Update Description", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/gadget/\");\n     driver.findElement(By.xpath(\"//a[contains(text(),\\\"userAddedAsset\\\")]\")).click();\n     driver.findElement(By.linkText(\"Edit\")).click();\n     driver.findElement(By.id(\"overview_description\")).clear();\n     driver.findElement(By.id(\"overview_description\")).sendKeys(\"this is my user added asset 1 + added description\");\n     driver.findElement(By.id(\"editAssetButton\")).click();\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/UpdateDescription.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testCreateSuperTenantUser_53", "method name": "test Create Super Tenant User", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/\");\n     driver.findElement(By.id(\"btn-register\")).click();\n     driver.findElement(By.id(\"reg-username\")).clear();\n     driver.findElement(By.id(\"reg-username\")).sendKeys(\"supertenantuser\");\n     driver.findElement(By.id(\"reg-password\")).clear();\n     driver.findElement(By.id(\"reg-password\")).sendKeys(\"supertenantuser\");\n     driver.findElement(By.id(\"reg-password2\")).clear();\n     driver.findElement(By.id(\"reg-password2\")).sendKeys(\"supertenantuser\");\n     driver.findElement(By.id(\"registrationSubmit\")).click();\n     try {\n       assertEquals(\"supertenantuser\", driver.findElement(By.cssSelector(\"ul.nav li a.dropdown-toggle\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/CreateSuperTenantUser.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddCategory_54", "method name": "test Add Category", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/phormer331/\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"Admin Page\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"loginAdminPass\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"loginAdminPass\"))), \"sendKeys\", \"editor\").sendKeys(\"editor\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"input.submit\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"Manage Categories\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"name\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"name\"))), \"sendKeys\", \"flowers\").sendKeys(\"flowers\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.name(\"desc\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.name(\"desc\"))), \"sendKeys\", \"contains photos of all the flowers !\").sendKeys(\"contains photos of all the flowers !\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"listRadioNo\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"listRadioYe\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"input.submit\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOn();\n         assertTrue(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"BODY\"))).getText().matches(\"^[\\\\s\\\\S]*Category \\\"flowers\\\" added succesfully![\\\\s\\\\S]*$\"));\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getAssertion(\"assertTrue(driver.findElement(By.cssSelector(\\\"BODY\\\")).getText().matches(\\\"^[\\\\\\\\s\\\\\\\\S]*Category \\\\\\\"flowers\\\\\\\" added succesfully![\\\\\\\\s\\\\\\\\S]*$\\\"))\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOff();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.xpath(\"(//a[contains(text(),'Delete / Clear')])[2]\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOn();\n         assertTrue(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"BODY\"))).getText().matches(\"^[\\\\s\\\\S]*Clears Category flowers of all its own \\\\(direct\\\\) photos, nothing will be removed[\\\\s\\\\S]*$\"));\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getAssertion(\"assertTrue(driver.findElement(By.cssSelector(\\\"BODY\\\")).getText().matches(\\\"^[\\\\\\\\s\\\\\\\\S]*Clears Category flowers of all its own \\\\\\\\(direct\\\\\\\\) photos, nothing will be removed[\\\\\\\\s\\\\\\\\S]*$\\\"))\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOff();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.xpath(\"(//input[@name='howto'])[4]\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"input.submit\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOn();\n         assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to delete [\\\\s\\\\S]*$\"));\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getAssertion(\"assertTrue(closeAlertAndGetItsText().matches(\\\"^Are you sure you want to delete [\\\\\\\\s\\\\\\\\S]*$\\\"))\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOff();\n     }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/instrumentedtests/CategoryDeleteTest.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testLoginLogOut_55", "method name": "test Login Log Out", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/phormer331/\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"Admin Page\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"loginAdminPass\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"loginAdminPass\"))), \"sendKeys\", \"editor\").sendKeys(\"editor\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"input.submit\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"Manage Categories\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"<< Admin Page\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"Log Out\"))), \"click\", \"\").click();\n     }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/instrumentedtests/login_logout.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testPromoteToPublishedTenant_56", "method name": "test Promote To Published Tenant", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/gadget/\");\n     driver.findElement(By.xpath(\"//a[contains(text(),\\\"userAddedAsset\\\")]\")).click();\n     driver.findElement(By.linkText(\"Life Cycle\")).click();\n     driver.findElement(By.id(\"Published\")).click();\n \tList<WebElement> rows = driver.findElements(By.xpath(\"//table[@id='lc-history']//tr\"));\n \tWebElement val = rows.get(0).findElement(By.xpath(\"./td[2]\"));\n \tassertEquals(val.getText(), \"tenantAdmin changed the asset from In-Review to Published\");\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/PromoteToPublishedTenant.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddReview_57", "method name": "test Add Review", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.xpath(\"((//div[@class='span3 asset'])[last()])//a\")).click();\n     driver.findElement(By.linkText(\"User Reviews\")).click();\n     // ERROR: Caught exception [ERROR: Unsupported command [waitForFrameToLoad | id=socialIfr | ]]\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (isElementPresent(By.id(\"com-body\"))) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.id(\"com-body\")).clear();\n     driver.findElement(By.id(\"com-body\")).sendKeys(\"my test rating with 3 stars\");\n     driver.findElement(By.linkText(\"3\")).click();\n     driver.findElement(By.id(\"btn-post\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (isElementPresent(By.cssSelector(\".com-review\"))) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().refresh();\n \n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/TestAddReview.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testSortByPopDefaults_58", "method name": "test Sort By Pop Defaults", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/store/assets/gadget\");\n \t\tdriver.findElement(By.cssSelector(\"i.icon-star\")).click();\n \t\tassertEquals(12, driver.findElements(By.cssSelector(\".asset-icon\")).size());\n \n \t\tJavascriptExecutor jsx = (JavascriptExecutor) driver;\n \t\tjsx.executeScript(\"window.scrollBy(0,5000)\", \"\");\n \t\tassertEquals(16, driver.findElements(By.cssSelector(\".asset-icon\")).size());\n \t}\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/TestSortByPopDefaults.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testPromoteToPublished_59", "method name": "test Promote To Published", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/gadget/\");\n     driver.findElement(By.xpath(\"//a[contains(text(),\\\"userAddedAsset\\\")]\")).click();\n     driver.findElement(By.linkText(\"Life Cycle\")).click();\n     driver.findElement(By.id(\"Published\")).click();\n \tList<WebElement> rows = driver.findElements(By.xpath(\"//table[@id='lc-history']//tr\"));\n \tWebElement val = rows.get(0).findElement(By.xpath(\"./td[2]\"));\n \tSystem.out.println(val.getText());\n \tassertEquals(val.getText(), \"admin changed the asset from In-Review to Published\");\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/PromoteToPublished.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testGadgetsAvailable_60", "method name": "test Gadgets Available", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     try {\n       assertEquals(12, driver.findElements(By.cssSelector(\".asset-icon\")).size());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     JavascriptExecutor jsx = (JavascriptExecutor) driver;\n     jsx.executeScript(\"window.scrollBy(0,5000)\", \"\");\n     try {\n       assertEquals(16, driver.findElements(By.cssSelector(\".asset-icon\")).size());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/TestGadgetsAvailable.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddStoryAssert_61", "method name": "test Add Story Assert", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/phormer331/\");\n \t\tdriver.findElement(By.linkText(\"Admin Page\")).click();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).clear();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).sendKeys(\"editor\");\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tdriver.findElement(By.linkText(\"Manage Stories\")).click();\n \t\tdriver.findElement(By.id(\"name\")).clear();\n \t\tdriver.findElement(By.id(\"name\")).sendKeys(\"Photos\");\n \t\tdriver.findElement(By.name(\"desc\")).clear();\n \t\tdriver.findElement(By.name(\"desc\")).sendKeys(\"Greenery !!\");\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tassertTrue(driver.findElement(By.cssSelector(\"div.method\")).getText().matches(\"^[\\\\s\\\\S]*Story \\\"Photos\\\" added succesfully![\\\\s\\\\S]*$\"));\n \t\tdriver.findElement(By.cssSelector(\"a[title=\\\"Log Out\\\"]\")).click();\n \t}\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/originaltests/add_story.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testLoginAsSuperTenantUser_62", "method name": "test Login As Super Tenant User", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.linkText(\"Sign in\")).click();\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"supertenantuser\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"supertenantuser\");\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     try {\n       assertEquals(\"supertenantuser\", driver.findElement(By.cssSelector(\"ul.nav li a.dropdown-toggle\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/LoginAsSuperTenantUser.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testPromoteToInReviewTenant_63", "method name": "test Promote To In Review Tenant", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/gadget/\");\n     driver.findElement(By.xpath(\"//a[contains(text(),\\\"userAddedAsset\\\")]\")).click();\n     driver.findElement(By.linkText(\"Life Cycle\")).click();\n     driver.findElement(By.id(\"In-Review\")).click();\n \tList<WebElement> rows = driver.findElements(By.xpath(\"//table[@id='lc-history']//tr\"));\n \tWebElement val = rows.get(0).findElement(By.xpath(\"./td[2]\"));\n \tSystem.out.println(val.getText());\n \tassertEquals(val.getText(), \"tenantUser changed the asset from Created to In-Review\");\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/PromoteToInReviewTenant.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testShowMyItems_64", "method name": "test Show My Items", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     Utils.waitSomeTime();\n \n     driver.findElement(By.linkText(\"My Items\")).click();\n     Utils.waitSomeTime();\n \n     assertEquals(\"by admin\", driver.findElement(By.cssSelector(\"div.store-my-item .bookmark-assert-provider\")).getText());\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/ShowMyItems.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testCandidateSearch_65", "method name": "test Candidate Search", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \t  //wait.pollingEvery(100, TimeUnit.MILLISECONDS);\n \t  \n \t  driver.get(baseUrl + \"kandidaadid\");\n \t\t //.sendKeys(\"admin\");\n \n \t  WebElement candidatesDiv =  driver.findElement(By.id(\"candidates\"));\n \t // wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//p[contains(text(),'Onu Heino')]\")));\n \t  \n \t  driver.findElement(By.id(\"nimi\")).clear();\n \t  driver.findElement(By.id(\"nimi\")).sendKeys(\"li\");\n \t  //wait.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath(\"//p[contains(text(),'Onu Heino')]\")));\n \t  \n \t  assertThat(driver.getCurrentUrl(), containsString(\"/kandidaadid/kogu_riik/erakonnata/li\"));\n \t  assertThat(candidatesDiv.getText(), containsString(\"Linnar Lind\"));\n \t  assertThat(candidatesDiv.getText(), containsString(\"Liine Näri\"));\n \t  \n \t  new Select(driver.findElement(By.id(\"erakond\"))).selectByVisibleText(\"ABC\");\n \t  new Select(driver.findElement(By.id(\"ringkond\"))).selectByVisibleText(\"Haabersti, Kristiine, Põhja-Tallinn\");\n \t  //wait.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath(\"//p[contains(text(),'Liine Näri')]\")));\n \t  \n \t  assertThat(driver.getCurrentUrl(), containsString(\"/kandidaadid/HAAB/ABC/li\"));\n \t  assertThat(candidatesDiv.getText(), containsString(\"Linnar Lind\"));\n \t  \n \t  driver.get(baseUrl + \"kandidaadid/V%C3%95RU/%C3%9CPE/j%C3%B5\");\n \t  // candidatesDiv = wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"candidates\")));\n \t  candidatesDiv = driver.findElement(By.id(\"candidates\"));\n \t  //wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//p[contains(text(),'Jõuluvana')]\")));\n \t  assertThat(candidatesDiv.getText(), not(containsString(\"Linnar Lind\")));\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/qwerty/originaltests/CandidateSearch.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testLoginLogOut_66", "method name": "test Login Log Out", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/phormer331/\");\n     driver.findElement(By.linkText(\"Admin Page\")).click();\n     driver.findElement(By.id(\"loginAdminPass\")).clear();\n     driver.findElement(By.id(\"loginAdminPass\")).sendKeys(\"editor\");\n     driver.findElement(By.cssSelector(\"input.submit\")).click();\n     driver.findElement(By.linkText(\"Manage Categories\")).click();\n     driver.findElement(By.linkText(\"<< Admin Page\")).click();\n     driver.findElement(By.linkText(\"Log Out\")).click();\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/originaltests/getcoverage/login_logout.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testReLogin_67", "method name": "test Re Login", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.linkText(\"Sign in\")).click();\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/ReLogin.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddStoryAssert_68", "method name": "test Add Story Assert", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/phormer331/\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"Admin Page\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"loginAdminPass\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"loginAdminPass\"))), \"sendKeys\", \"editor\").sendKeys(\"editor\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"input.submit\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"Manage Stories\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"name\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"name\"))), \"sendKeys\", \"Photos\").sendKeys(\"Photos\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.name(\"desc\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.name(\"desc\"))), \"sendKeys\", \"Greenery !!\").sendKeys(\"Greenery !!\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"input.submit\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOn();\n         assertTrue(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"div.method\"))).getText().matches(\"^[\\\\s\\\\S]*Story \\\"Photos\\\" added succesfully![\\\\s\\\\S]*$\"));\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getAssertion(\"assertTrue(driver.findElement(By.cssSelector(\\\"div.method\\\")).getText().matches(\\\"^[\\\\\\\\s\\\\\\\\S]*Story \\\\\\\"Photos\\\\\\\" added succesfully![\\\\\\\\s\\\\\\\\S]*$\\\"))\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOff();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"a[title=\\\"Log Out\\\"]\"))), \"click\", \"\").click();\n     }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/instrumentedtests/add_story.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testSortByPopAfterReview_69", "method name": "test Sort By Pop After Review", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.xpath(\"((//div[@class='span3 asset'])[8])//a\")).click();\n     String populerAsset = driver.getCurrentUrl();\n     driver.findElement(By.linkText(\"User Reviews\")).click();\n     // ERROR: Caught exception [ERROR: Unsupported command [waitForFrameToLoad | id=socialIfr | ]]\n     driver.findElement(By.id(\"com-body\")).clear();\n     driver.findElement(By.id(\"com-body\")).sendKeys(\"my test rating with 5 stars\");\n     driver.findElement(By.linkText(\"5\")).click();\n     driver.findElement(By.id(\"btn-post\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (isElementPresent(By.cssSelector(\".com-review\"))) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.cssSelector(\"i.icon-star\")).click();\n     driver.findElement(By.xpath(\"((//div[@class='span3 asset'])[1])//a\")).click();\n     assertEquals(populerAsset, driver.getCurrentUrl());\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/TestSortByPopAfterReview.java", "repo name": "aminmf/crawljax"}
{"repo_name": "goToUrl_70", "method name": "go To Url", "comments": [" @param url", "            The URL.", "Override"], "url": true, "content": "\tpublic void function(URL url) {\n \t\ttry {\n \t\t\tbrowser.navigate().to(url);\n \t\t\tThread.sleep(this.crawlWaitReload);\n \t\t\thandlePopups();\n \t\t} catch (WebDriverException e) {\n \t\t\tthrowIfConnectionException(e);\n \t\t\treturn;\n \t\t} catch (InterruptedException e) {\n \t\t\tLOGGER.debug(\"goToUrl got interrupted while waiting for the page to be loaded\", e);\n \t\t\tThread.currentThread().interrupt();\n \t\t\treturn;\n \t\t}\n \t}\n", "path": "core/src/main/java/com/crawljax/browser/WebDriverBackedEmbeddedBrowser.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddCategory_71", "method name": "test Add Category", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/phormer331/\");\n \t\tdriver.findElement(By.linkText(\"Admin Page\")).click();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).clear();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).sendKeys(\"editor\");\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tdriver.findElement(By.linkText(\"Manage Categories\")).click();\n \t\tdriver.findElement(By.id(\"name\")).clear();\n \t\tdriver.findElement(By.id(\"name\")).sendKeys(\"flowers\");\n \t\tdriver.findElement(By.name(\"desc\")).clear();\n \t\tdriver.findElement(By.name(\"desc\")).sendKeys(\"contains photos of all the flowers !\");\n \t\tdriver.findElement(By.id(\"listRadioNo\")).click();\n \t\tdriver.findElement(By.id(\"listRadioYe\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tassertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"^[\\\\s\\\\S]*Category \\\"flowers\\\" added succesfully![\\\\s\\\\S]*$\"));\n \t\tdriver.findElement(By.xpath(\"(//a[contains(text(),'Delete / Clear')])[2]\")).click();\n \t\tassertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"^[\\\\s\\\\S]*Clears Category flowers of all its own \\\\(direct\\\\) photos, nothing will be removed[\\\\s\\\\S]*$\"));\n \t\tdriver.findElement(By.xpath(\"(//input[@name='howto'])[4]\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tassertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to delete [\\\\s\\\\S]*$\"));\n \t\t// driver.findElement(By.cssSelector(\"a[title=\\\"Log Out\\\"] > img.logo\")).click();\n \t}\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/originaltests/CategoryDeleteTest.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddCategory_72", "method name": "test Add Category", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/phormer331/\");\n \t\tdriver.findElement(By.linkText(\"Admin Page\")).click();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).clear();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).sendKeys(\"editor\");\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tdriver.findElement(By.linkText(\"Manage Categories\")).click();\n \t\tdriver.findElement(By.id(\"name\")).clear();\n \t\tdriver.findElement(By.id(\"name\")).sendKeys(\"flowers\");\n \t\tdriver.findElement(By.name(\"desc\")).clear();\n \t\tdriver.findElement(By.name(\"desc\")).sendKeys(\"contains photos of all the flowers !\");\n \t\tdriver.findElement(By.id(\"listRadioNo\")).click();\n \t\tdriver.findElement(By.id(\"listRadioYe\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tassertTrue(driver.findElement(By.cssSelector(\"div.method\")).getText().matches(\"^[\\\\s\\\\S]*Category \\\"flowers\\\" added succesfully![\\\\s\\\\S]*$\"));\n \t\tdriver.findElement(By.cssSelector(\"a[title=\\\"Log Out\\\"]\")).click();\n \t}\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/originaltests/CategoryAddTest.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testBookmarkAsset_73", "method name": "test Bookmark Asset", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.cssSelector(\"#assets-container a\")).click();\n     driver.findElement(By.id(\"btn-add-gadget\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"Bookmarked\".equals(driver.findElement(By.id(\"btn-add-gadget\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/BookmarkAsset.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testIfAssetAddedToPublisher_74", "method name": "test If Asset Added To Publisher", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/gadget/\");\n     assertTrue(isElementPresent(By.xpath(\"//a[contains(text(),\\\"userAddedAsset\\\")]\")));\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/TestIfAssetAddedToPublisher.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddNewAsset_75", "method name": "test Add New Asset", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/gadget/\");\n     driver.findElement(By.linkText(\"Add gadget\")).click();\n     driver.findElement(By.id(\"overview_name\")).clear();\n     driver.findElement(By.id(\"overview_name\")).sendKeys(\"userAddedAsset\");\n     driver.findElement(By.id(\"overview_version\")).clear();\n     driver.findElement(By.id(\"overview_version\")).sendKeys(\"1.2.3\");\n     driver.findElement(By.xpath(\"//ul[@role='menu']/li[3]/a/span\")).click();\n     driver.findElement(By.id(\"overview_url\")).clear();\n     driver.findElement(By.id(\"overview_url\")).sendKeys(\"http://example.com/gadget.xml\");\n     driver.findElement(By.id(\"overview_description\")).clear();\n     driver.findElement(By.id(\"overview_description\")).sendKeys(\"this is my user added asset 1\");\n     driver.findElement(By.id(\"images_thumbnail\")).clear();\n     driver.findElement(By.id(\"images_thumbnail\")).sendKeys(\"~/Pictures/thumbnail.jpg\");\n     driver.findElement(By.id(\"images_banner\")).clear();\n     driver.findElement(By.id(\"images_banner\")).sendKeys(\"~/Pictures/banner.jpg\");\n     driver.findElement(By.id(\"token-input-tag-container\")).sendKeys(\"wso2,\");\n     driver.findElement(By.id(\"btn-create-asset\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (!driver.findElement(By.cssSelector(\".asset-being-added\")).isDisplayed()) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/AddNewAsset.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testIfAssetAddedToStoreTenant_76", "method name": "test If Asset Added To Store Tenant", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.xpath(\"//a[contains(text(),\\\"userAddedAsset\\\")]\")).click();\n     try {\n       assertEquals(\"by tenantUser\", driver.findElement(By.xpath(\"//div[@id='container-assets']//small[2]\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/TestIfAssetAddedToStoreTenant.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testLoginAsAdmin_77", "method name": "test Login As Admin", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.linkText(\"Sign in\")).click();\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"admin\");\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     try {\n       assertEquals(\"admin\", driver.findElement(By.cssSelector(\"ul.nav li a.dropdown-toggle\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/LoginAsAdmin.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testLoginAsTenantAdmin_78", "method name": "test Login As Tenant Admin", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.linkText(\"Sign in\")).click();\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"tenantAdmin@mytestdomain.com\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"admin1234\");\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     try {\n       assertEquals(\"tenantAdmin\", driver.findElement(By.cssSelector(\"ul.nav li a.dropdown-toggle\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/LoginAsTenantAdmin.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddCategory_79", "method name": "test Add Category", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/phormer331/\");\n \t\tdriver.findElement(By.linkText(\"Admin Page\")).click();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).clear();\n \t\tdriver.findElement(By.id(\"loginAdminPass\")).sendKeys(\"editor\");\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tdriver.findElement(By.linkText(\"Manage Categories\")).click();\n \t\tdriver.findElement(By.id(\"name\")).clear();\n \t\tdriver.findElement(By.id(\"name\")).sendKeys(\"flowers\");\n \t\tdriver.findElement(By.name(\"desc\")).clear();\n \t\tdriver.findElement(By.name(\"desc\")).sendKeys(\"contains photos of all the flowers !\");\n \t\tdriver.findElement(By.id(\"listRadioNo\")).click();\n \t\tdriver.findElement(By.id(\"listRadioYe\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.submit\")).click();\n \t\tassertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"^[\\\\s\\\\S]*Category \\\"flowers\\\" added succesfully![\\\\s\\\\S]*$\"));\n \t}\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/originaltests/getcoverage/CategoryAddTest.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testAddCategory_80", "method name": "test Add Category", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/phormer331/\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"Admin Page\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"loginAdminPass\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"loginAdminPass\"))), \"sendKeys\", \"editor\").sendKeys(\"editor\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"input.submit\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.linkText(\"Manage Categories\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"name\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"name\"))), \"sendKeys\", \"flowers\").sendKeys(\"flowers\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.name(\"desc\"))), \"clear\", \"\").clear();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.name(\"desc\"))), \"sendKeys\", \"contains photos of all the flowers !\").sendKeys(\"contains photos of all the flowers !\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"listRadioNo\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.id(\"listRadioYe\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"input.submit\"))), \"click\", \"\").click();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOn();\n         assertTrue(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"div.method\"))).getText().matches(\"^[\\\\s\\\\S]*Category \\\"flowers\\\" added succesfully![\\\\s\\\\S]*$\"));\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getAssertion(\"assertTrue(driver.findElement(By.cssSelector(\\\"div.method\\\")).getText().matches(\\\"^[\\\\\\\\s\\\\\\\\S]*Category \\\\\\\"flowers\\\\\\\" added succesfully![\\\\\\\\s\\\\\\\\S]*$\\\"))\");\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.assertionModeOff();\n         com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getWebElement(driver.findElement(com.crawljax.plugins.testilizer.seleniuminstrumentor.SeleniumInstrumentor.getBy(By.cssSelector(\"a[title=\\\"Log Out\\\"]\"))), \"click\", \"\").click();\n     }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/instrumentedtests/CategoryAddTest.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testLoginAsTenantUser_81", "method name": "test Login As Tenant User", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget\");\n     driver.findElement(By.linkText(\"Sign in\")).click();\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"tenantUser@mytestdomain.com\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"tenantUser\");\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     try {\n       assertEquals(\"tenantUser\", driver.findElement(By.cssSelector(\"ul.nav li a.dropdown-toggle\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/eshop/originaltests/LoginAsTenantUser.java", "repo name": "aminmf/crawljax"}
{"repo_name": "testLoginLogOut_82", "method name": "test Login Log Out", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/phormer331/\");\n     driver.findElement(By.linkText(\"Admin Page\")).click();\n     driver.findElement(By.id(\"loginAdminPass\")).clear();\n     driver.findElement(By.id(\"loginAdminPass\")).sendKeys(\"editor\");\n     driver.findElement(By.cssSelector(\"input.submit\")).click();\n     driver.findElement(By.linkText(\"Manage Categories\")).click();\n     driver.findElement(By.linkText(\"<< Admin Page\")).click();\n     driver.findElement(By.linkText(\"Log Out\")).click();\n   }\n", "path": "examples/src/main/java/com/crawljax/plugins/testilizer/casestudies/photogallery/originaltests/login_logout.java", "repo name": "aminmf/crawljax"}
{"repo_name": "beforeTestCaseMethod_83", "method name": "before Test Case Method", "comments": [" called every time before testcases i.e., methods which are marked with @Test annotation", "Before"], "url": true, "content": "    public void function() throws InterruptedException{\n         webDriver.get(url);                                   //Load the website\n         Thread.sleep(5000);\n     }\n", "path": "src/test/java/com/homerenting/test/modules/navigation/NavigationTest.java", "repo name": "arthurportas/hr"}
{"repo_name": "afterTestCaseMethod_84", "method name": "after Test Case Method", "comments": [" called every time before testcases i.e., methods which are marked with @Test annotation", "After"], "url": true, "content": "    public void function() throws InterruptedException{\n         webDriver.get(url);                                   //Optional, revert to page like before testcase.\n         Thread.sleep(2000);\n     }\n", "path": "src/test/java/com/homerenting/test/modules/navigation/NavigationTest.java", "repo name": "arthurportas/hr"}
{"repo_name": "getDynamicContentFromUrl_85", "method name": "get Dynamic Content From Url", "comments": [], "url": true, "content": "    public String function(String url){\n         // Selenium\n         logger.info(\"Loading Selenium: \");\n \n         WebDriver driver = new FirefoxDriver(createFirefoxProfile());\n         driver.get(url);\n \n         try {\n             Thread.sleep(2000);                 //1000 milliseconds is one second.\n         } catch(InterruptedException ex) {\n             logger.error(\"Exception in selenium interupt: \", ex);\n             Thread.currentThread().interrupt();\n         }\n \n         String html_content = driver.getPageSource();\n         driver.close();\n \n         return html_content;\n     }\n", "path": "src/main/java/org/bg/winddata/DynamicContentScraper.java", "repo name": "ben335/winddata"}
{"repo_name": "goToUrl_86", "method name": "go To Url", "comments": [" @param url", "            The URL."], "url": true, "content": "\tpublic void function(String url) {\n \t\ttry {\n \t\t\tbrowser.navigate().to(url);\n \t\t\tThread.sleep(this.crawlWaitReload);\n \t\t\thandlePopups();\n \t\t} catch (WebDriverException e) {\n \t\t\tthrowIfConnectionException(e);\n \t\t\treturn;\n \t\t} catch (InterruptedException e) {\n \t\t\tLOGGER.error(\"goToUrl got interrupted while waiting for the page to be loaded\", e);\n \t\t\treturn;\n \t\t}\n \t}\n", "path": "src/main/java/com/crawljax/browser/WebDriverBackedEmbeddedBrowser.java", "repo name": "guifre/crawljax"}
{"repo_name": "deleteAllCookies_87", "method name": "delete All Cookies", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     assumeTrue(domainHelper.checkHasValidAlternateHostname());\n \n     Cookie cookie1 = new Cookie.Builder(\"fish1\", \"cod\")\n         .domain(appServer.getHostName()).build();\n     Cookie cookie2 = new Cookie.Builder(\"fish2\", \"tune\")\n         .domain(appServer.getAlternateHostName()).build();\n \n     String url1 = domainHelper.getUrlForFirstValidHostname(\"/common\");\n     String url2 = domainHelper.getUrlForSecondValidHostname(\"/common\");\n \n     WebDriver.Options options = driver.manage();\n \n     options.addCookie(cookie1);\n     assertCookieIsPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     options.addCookie(cookie2);\n     assertCookieIsNotPresentWithName(cookie1.getName());\n     assertCookieIsPresentWithName(cookie2.getName());\n \n     driver.get(url1);\n     assertCookieIsPresentWithName(cookie1.getName());\n     assertCookieIsNotPresentWithName(cookie2.getName());\n \n     options.deleteAllCookies();\n     assertCookieIsNotPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     assertCookieIsPresentWithName(cookie2.getName());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "canBlockInvalidSslCertificates_88", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "handleFormWithJavascriptAction_89", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {PHANTOMJS, SAFARI, HTMLUNIT, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_90", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_91", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_92", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE}, reason = \"Chrome: failed\")", "SwitchToTopAfterTest"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_93", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_94", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_95", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_96", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_97", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test", "Ignore(value = {IE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_98", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, IE, PHANTOMJS, SAFARI, MARIONETTE})", "NotYetImplemented(HTMLUNIT)", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "lukeis/selenium"}
{"repo_name": "testWebApp_99", "method name": "test Web App", "comments": [" Asserts that the content of the application home page is \"Hello world!\".", "Test"], "url": true, "content": "    public void function() throws IOException {\n //\t\tSystem.setProperty(\"webdriver.firefox.bin\", \"v:\\\\firefox\\\\Firefox.exe\");\n //\t\twebDriver = new FirefoxDriver();\n //\t\twebDriver.manage().timeouts().implicitlyWait(3, TimeUnit.SECONDS);\n \n         webDriver.get(applicationContextUrl);\n \n         assertThat(webDriver.findElement(By.id(\"loginInfo\")).getAttribute(\"action\"),\n         \t\tis(StringContains.containsString(\"authentication\")));\n     }\n", "path": "tasksoluna/tasksoluna-selenium/src/test/java/org/mtfm/tasksoluna/selenium/welcome/HelloIT.java", "repo name": "mtfm/tasksoluna"}
{"repo_name": "testAnaerobicLactic_100", "method name": "test Anaerobic Lactic", "comments": ["@Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/physusp/esc\");\n     driver.findElement(By.id(\"parameters.calculateAerobic\")).click();\n     driver.findElement(By.id(\"parameters.calculateAnaerobicAlactic\")).click();\n     driver.findElement(By.id(\"btnNext\")).click();\n     driver.findElement(By.id(\"anaerobicLacticParameters.peakLactateConcentration\")).clear();\n     driver.findElement(By.id(\"anaerobicLacticParameters.peakLactateConcentration\")).sendKeys(\"4\");\n     driver.findElement(By.id(\"anaerobicLacticParameters.restLactateConcentration\")).clear();\n     driver.findElement(By.id(\"anaerobicLacticParameters.restLactateConcentration\")).sendKeys(\"2\");\n     driver.findElement(By.id(\"anaerobicLacticParameters.weight\")).clear();\n     driver.findElement(By.id(\"anaerobicLacticParameters.weight\")).sendKeys(\"70\");\n     driver.findElement(By.id(\"btnNext\")).click();\n   }\n", "path": "physusp/test/com/gedaeusp/selenium/AnaerobicLacticTest.java", "repo name": "physusp/physusp"}
{"repo_name": "shouldHandleBasicForms_101", "method name": "should Handle Basic Forms", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         InMemoryReporter reporter = new InMemoryReporter();\n         TestFilter.setReporter(reporter);\n \n         JettyServer jettyServer = new JettyServer(0);\n         jettyServer.start();\n \n \n         try {\n             int port = jettyServer.getPort();\n \n             final String baseUrl = \"http://localhost:\" + port;\n             WebDriver browser = new HtmlUnitDriver();\n             browser.get(baseUrl + \"/post/more\");\n             browser.findElement(By.name(\"firstname\")).sendKeys(\"Darth\");\n             browser.findElement(By.name(\"lastname\")).sendKeys(\"Vader\");\n             browser.findElement(By.name(\"doPerson\")).submit();\n             Thread.sleep(100);\n             \n             final List<HttpCall> httpCalls = reporter.getPlayBook();\n             assertThat(httpCalls).hasSize(2); // GET+POST\n             List<PlayStep> playbook = httpCalls.stream().map(PlayStep::new).collect(Collectors.toList());\n \n             \n             final HttpCallPersister callReporter = mock(HttpCallPersister.class);\n             TestFilter.setReporter(callReporter);\n             \n             final HttpPlayer player = new HttpPlayer(baseUrl);\n             player.addManipulator(new HiddenFieldManipulator(\"token\"));\n             player.playSteps(playbook);\n \n             assertThat(playbook.get(1).getRecorded()).contains(\"Your name is Darth Vader\");\n         } finally {\n             jettyServer.stop();\n         }\n \n \n     }\n", "path": "skuldsku-testrunner/src/test/java/no/steria/skuldsku/testrunner/httprunner/TestHttpPlayer.java", "repo name": "steria/skuldsku"}
{"repo_name": "openTestURL_102", "method name": "open Test URL", "comments": [], "url": true, "content": "    private void function(Class<?> uiClass, Set<String> parameters) {\n         String url = getTestURL(uiClass);\n \n         if (isDebug()) {\n             parameters.add(\"debug\");\n         }\n \n         if (LegacyApplication.class.isAssignableFrom(uiClass)) {\n             parameters.add(\"restartApplication\");\n         }\n \n         if (parameters.size() > 0) {\n             url += \"?\" + Joiner.on(\"&\").join(parameters);\n         }\n \n         driver.get(url);\n     }\n", "path": "uitest/src/com/vaadin/tests/tb3/AbstractTB3Test.java", "repo name": "travisfw/vaadin"}
{"repo_name": "testSeleniumH1_103", "method name": "test Selenium H1", "comments": ["Test"], "url": true, "content": "  \tpublic void function() throws Exception {\n     \t\tdriver.get(baseUrl);\n     \t\tdriver.findElement(By.linkText(\"New Game\")).click();\n     \t\tassertEquals(\"Play the amazing Tic Tac Toe game\", driver.findElement(By.cssSelector(\"h1\")).getText());\n   \t}\n", "path": "src/selenium/java/is/kings/TicTacToeWebTest.java", "repo name": "7kings/TicTacToe"}
{"repo_name": "testSelenuimParagraph_104", "method name": "test Selenuim Paragraph", "comments": ["Test"], "url": true, "content": "  \tpublic void function() throws Exception {\n     \t\tdriver.get(baseUrl);\n     \t\tdriver.findElement(By.linkText(\"New Game\")).click();\n     \t\tassertEquals(\"Enter a number between 1-9\", driver.findElement(By.cssSelector(\"p\")).getText());\n   \t}\n", "path": "src/selenium/java/is/kings/TicTacToeWebTest.java", "repo name": "7kings/TicTacToe"}
{"repo_name": "testSelenuimInputChar_105", "method name": "test Selenuim Input Char", "comments": ["Test"], "url": true, "content": "        public void function() throws Exception {\n \t\tdriver.get(baseUrl);\n \t\tdriver.findElement(By.linkText(\"New Game\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"a\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tassertEquals(\"Invalid move , try again\", driver.findElement(By.xpath(\"//div[@id='results']/pre[2]\")).getText());\n \t}\n", "path": "src/selenium/java/is/kings/TicTacToeWebTest.java", "repo name": "7kings/TicTacToe"}
{"repo_name": "testSelenuimTooSmallNumber_106", "method name": "test Selenuim Too Small Number", "comments": ["Test"], "url": true, "content": "        public void function() throws Exception {\n \t\tdriver.get(baseUrl);\n \t\tdriver.findElement(By.linkText(\"New Game\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"0\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tassertEquals(\"Invalid move , try again\", driver.findElement(By.xpath(\"//div[@id='results']/pre[2]\")).getText());\n \t}\n", "path": "src/selenium/java/is/kings/TicTacToeWebTest.java", "repo name": "7kings/TicTacToe"}
{"repo_name": "testSelenuimTooLargeNumber_107", "method name": "test Selenuim Too Large Number", "comments": ["Test"], "url": true, "content": "        public void function() throws Exception {\n                 driver.get(baseUrl);\n                 driver.findElement(By.linkText(\"New Game\")).click();\n                 driver.findElement(By.id(\"number\")).clear();\n                 driver.findElement(By.id(\"number\")).sendKeys(\"10\");\n                 driver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n                 assertEquals(\"Invalid move , try again\", driver.findElement(By.xpath(\"//div[@id='results']/pre[2]\")).getText());\n \t}\n", "path": "src/selenium/java/is/kings/TicTacToeWebTest.java", "repo name": "7kings/TicTacToe"}
{"repo_name": "testSelenuimGameOver_108", "method name": "test Selenuim Game Over", "comments": ["Test"], "url": true, "content": "        public void function() throws Exception {\n \t\tdriver.get(baseUrl);\n \t\tdriver.findElement(By.linkText(\"New Game\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"1\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"2\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"3\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"4\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"5\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"6\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"7\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"8\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"9\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tdriver.findElement(By.id(\"number\")).clear();\n \t\tdriver.findElement(By.id(\"number\")).sendKeys(\"1\");\n \t\tdriver.findElement(By.cssSelector(\"button[type=\\\"submit\\\"]\")).click();\n \t\tassertEquals(\"GAME OVER\", driver.findElement(By.xpath(\"//div[@id='results']/pre[2]\")).getText());\n \t}\n", "path": "src/selenium/java/is/kings/TicTacToeWebTest.java", "repo name": "7kings/TicTacToe"}
{"repo_name": "handleFormWithJavascriptAction_109", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {PHANTOMJS, SAFARI, HTMLUNIT, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "Ardesco/selenium"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_110", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "Ardesco/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_111", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "Ardesco/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_112", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "Ardesco/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_113", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "Ardesco/selenium"}
{"repo_name": "testHomePageHasAHeader_114", "method name": "test Home Page Has A Header", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     Assert.assertFalse(\"\".equals(homepage.header.getText()));\n   }\n", "path": "src/test/java/com/youtube/SampleTestNgTest.java", "repo name": "Vetroduy/youtube"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_115", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "bmannix/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_116", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, IE, PHANTOMJS, SAFARI, MARIONETTE})", "NotYetImplemented(HTMLUNIT)", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "bmannix/selenium"}
{"repo_name": "testEZRxInitialPage_117", "method name": "test EZ Rx Initial Page", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/EZRxLookup\");\n \t\ttry {\n \t\t\tassertTrue(isElementPresent(By.id(\"j_idt5:j_idt18:drugName_input\")));\n \t\t} catch (Error e) {\n \t\t\tverificationErrors.append(e.toString());\n \n \t\t}\n \n \t}\n", "path": "src/test/java/com/bna/ezrxlookup/ui/web/EZRxInitialPage.java", "repo name": "bna-git-hub/ezrx"}
{"repo_name": "testEZRxLookupResultPageNoNegativeNoRecalls_118", "method name": "test EZ Rx Lookup Result Page No Negative No Recalls", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\ttry {\n \t\t\tdriver.get(baseUrl + \"/EZRxLookup/\");\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:drugName_input\")).clear();\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:drugName_input\")).sendKeys(\"\");\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:drugName_input\")).clear();\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:drugName_input\")).sendKeys(\n \t\t\t\t\t\"51439-007-02\");\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:search\")).click();\n \t\t\tfor (int second = 0;; second++) {\n \t\t    \tif (second >= 10) fail(\"timeout\");\n \t\t    \ttry { if (isElementPresent(By.cssSelector(\"label\"))) break; } catch (Exception e) {}\n \t\t    \tThread.sleep(1000);\n \t\t    }\n \t\t\tThread.sleep(3000);\n \t\t\tassertEquals(\"ACNE CLEARNING TREATMENT FACE\", driver.findElement(By.id(\"j_idt5:j_idt19:cmdBName\")).getText());\n \t\t\t\n \t\t\tWebElement element = driver.findElement(By.id(\"j_idt5:j_idt19:j_idt28\"));\n \t\t\tString path = element.getAttribute(\"src\");\n \t\t\tassert(path.contains(\"green\"));\n \t\t\t \n \t\t} catch (Error e) {\n \t\t\tverificationErrors.append(e);\n \n \t\t}\n \t}\n", "path": "src/test/java/com/bna/ezrxlookup/ui/web/EZRxBusinessTests.java", "repo name": "bna-git-hub/ezrx"}
{"repo_name": "testEZRxLookupResultPageRecallsFound_119", "method name": "test EZ Rx Lookup Result Page Recalls Found", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\ttry {\n \t\t\tdriver.get(baseUrl + \"/EZRxLookup/\");\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:drugName_input\")).clear();\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:drugName_input\")).sendKeys(\"\");\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:drugName_input\")).clear();\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:drugName_input\")).sendKeys(\n \t\t\t\t\t\"43598-209-53\");\n \t\t\tdriver.findElement(By.id(\"j_idt5:j_idt18:search\")).click();\n \t\t\tfor (int second = 0;; second++) {\n \t\t    \tif (second >= 10) fail(\"timeout\");\n \t\t    \ttry { if (isElementPresent(By.cssSelector(\"label\"))) break; } catch (Exception e) {}\n \t\t    \tThread.sleep(1000);\n \t\t    }\n \t\t\tThread.sleep(3000);\n \t\t\tassertEquals(\"AMOXICILLIN\", driver.findElement(By.id(\"j_idt5:j_idt19:cmdBName\")).getText());\n \t\t\tWebElement element = driver.findElement(By.id(\"j_idt5:j_idt19:j_idt28\"));\n \t\t\tString path = element.getAttribute(\"src\");\n \t\t\tassert(path.contains(\"red\"));\n \t\t} catch (Error e) {\n \t\t\tverificationErrors.append(e);\n \n \t\t}\n \t}\n", "path": "src/test/java/com/bna/ezrxlookup/ui/web/EZRxBusinessTests.java", "repo name": "bna-git-hub/ezrx"}
{"repo_name": "testKontoBearbeiten_120", "method name": "test Konto Bearbeiten", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl);\n     driver.findElement(By.id(\"j_id_10:eMail\")).clear();\n     driver.findElement(By.id(\"j_id_10:eMail\")).sendKeys(\"Test@test.com\");\n     driver.findElement(By.id(\"j_id_10:kennwort\")).clear();\n     driver.findElement(By.id(\"j_id_10:kennwort\")).sendKeys(\"123\");\n     driver.findElement(By.id(\"j_id_10:kennwortWiederholung\")).clear();\n     driver.findElement(By.id(\"j_id_10:kennwortWiederholung\")).sendKeys(\"123\");\n     driver.findElement(By.id(\"j_id_10:altesKennwort\")).clear();\n     driver.findElement(By.id(\"j_id_10:altesKennwort\")).sendKeys(\"1234\");\n     driver.findElement(By.id(\"j_id_10:j_id_16\")).click();\n     driver.findElement(By.id(\"j_id_10:kennwort\")).clear();\n     driver.findElement(By.id(\"j_id_10:kennwort\")).sendKeys(\"123\");\n     driver.findElement(By.id(\"j_id_10:kennwortWiederholung\")).clear();\n     driver.findElement(By.id(\"j_id_10:kennwortWiederholung\")).sendKeys(\"1234\");\n     driver.findElement(By.id(\"j_id_10:altesKennwort\")).clear();\n     driver.findElement(By.id(\"j_id_10:altesKennwort\")).sendKeys(\"1234\");\n     driver.findElement(By.id(\"j_id_10:j_id_16\")).click();\n     driver.findElement(By.id(\"j_id_10:kennwort\")).clear();\n     driver.findElement(By.id(\"j_id_10:kennwort\")).sendKeys(\"123\");\n     driver.findElement(By.id(\"j_id_10:kennwortWiederholung\")).clear();\n     driver.findElement(By.id(\"j_id_10:kennwortWiederholung\")).sendKeys(\"123\");\n     driver.findElement(By.id(\"j_id_10:altesKennwort\")).clear();\n     driver.findElement(By.id(\"j_id_10:altesKennwort\")).sendKeys(\"123\");\n     driver.findElement(By.id(\"j_id_10:j_id_16\")).click();\n   }\n", "path": "src/test/java/org/shareezy/test/integration/KontoBearbeitenTest.java", "repo name": "britzke/shareezy"}
{"repo_name": "canBlockInvalidSslCertificates_121", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "clavery/selenium"}
{"repo_name": "getLoginPage_122", "method name": "get Login Page", "comments": [], "url": true, "content": "\tpublic static LoginPage function(WebDriver browser, URL deployemntUrl) {\n \t\tLoginPage page = new LoginPage(browser);\n \t\tbrowser.navigate().to(deployemntUrl);\n \t\treturn page;\n \t}\n", "path": "src/test/java/org/olat/selenium/page/LoginPage.java", "repo name": "klemens/openolat"}
{"repo_name": "playNewStream_123", "method name": "play New Stream", "comments": [" Start playing a new episode."], "url": true, "content": "  public void function(){\n     if(episodeList == null || episodeList.size() <= 0) {\n       return;\n     }\n     String episodeUrl = engageServerUrl + \"/engage/ui/watch.html?id=\" + episodeList.get(generator.nextInt(episodeList.size()));\n     driver.get(episodeUrl);\n     if (!driver.getCurrentUrl().equalsIgnoreCase(episodeUrl)) {\n       authenticate();\n     }\n     logger.info(name + \" - Playing episode \" + episodeUrl);\n     logger.debug(\"Episode Page title is: \" + driver.getTitle());\n \n     // Play the episode.\n     WebElement play = (new WebDriverWait(driver, 60)).until(new ExpectedCondition<WebElement>() {\n       @Override\n       public WebElement apply(WebDriver driver) {\n         WebElement webElement = driver.findElement(By.id(\"oc_btn-play-pause\"));\n         if (webElement != null && webElement.isDisplayed()) {\n           return webElement;\n         }\n         return null;\n       }\n     });\n \n     play.click();\n \n     // Advance the play using fast forward.\n     WebElement fastForward = (new WebDriverWait(driver, 10000)).until(new ExpectedCondition<WebElement>() {\n       @Override\n       public WebElement apply(WebDriver driver) {\n         WebElement webElement = driver.findElement(By.id(\"oc_btn-fast-forward\"));\n         if (webElement != null && webElement.isDisplayed()) {\n           return webElement;\n         }\n         return null;\n       }\n     });\n \n \n     for (int i = 0; i < 5; i++) {\n       fastForward.click();\n       try {\n         Thread.sleep(1000);\n       } catch (InterruptedException e) {\n         logger.error(\"There was an exception while fastforwarding:\", e);\n       }\n     }\n   }\n", "path": "modules/matterhorn-load-test-engage/src/main/java/org/opencastproject/loadtest/engage/LoadTestEngage.java", "repo name": "lkiesow/opencast"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_124", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "mojwang/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_125", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "mojwang/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_126", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "mojwang/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_127", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "mojwang/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_128", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "mojwang/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_129", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "mojwang/selenium"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_130", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "mojwang/selenium"}
{"repo_name": "testAddFilm_131", "method name": "test Add Film", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.linkText(\"Add movie\")).click();\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"my first film\");\n     driver.findElement(By.name(\"year\")).clear();\n     driver.findElement(By.name(\"year\")).sendKeys(\"2013\");\n     driver.findElement(By.name(\"duration\")).clear();\n     driver.findElement(By.name(\"duration\")).sendKeys(\"1000\");\n     driver.findElement(By.name(\"rating\")).clear();\n     driver.findElement(By.name(\"rating\")).sendKeys(\"1000\");\n     driver.findElement(By.id(\"seen_no\")).click();\n     driver.findElement(By.id(\"own_no\")).click();\n     driver.findElement(By.id(\"submit\")).click();\n   }\n", "path": "src/test/java/ru/st/selenium/AddFilm.java", "repo name": "Kira1303/selwork2"}
{"repo_name": "nonAdminTryAccessAdminPages_132", "method name": "non Admin Try Access Admin Pages", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n \n         // Non-admin user login informations\n         String username = \"nonAdmin\";\n         String passwd = \"nonAdminPassword\";\n \n         // We open the web app\n         driver.get(baseUrl + \"/ArcGames/\");\n \n         // Login as non-admin\n         login(username, passwd);\n \n         // Try to access non-allowed admin pages\n         for (String page : adminUrlList) {\n             String adminUrl = baseUrl + page;\n             driver.get(adminUrl);\n             assertNotEquals(driver.getCurrentUrl(), adminUrl);\n         }\n \n         // Logout\n         driver.findElement(By.linkText(\"logout\")).click();\n         \n     }\n", "path": "ArcGames/test/ch/hearc/arcgames/tests/AdminSecurityTest.java", "repo name": "MircoGit/ArcGames"}
{"repo_name": "adminAccessAdminPages_133", "method name": "admin Access Admin Pages", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n \n         // Non-admin user login informations\n         String username = \"Admin\";\n         String passwd = \"123456\";\n \n         // We open the web app\n         driver.get(baseUrl + \"/ArcGames/\");\n \n         // Login as admin\n         login(username, passwd);\n \n         // Try to access non-allowed admin pages\n         for (String page : adminUrlList) {\n             String adminUrl = baseUrl + page;\n             driver.get(adminUrl);\n             assertEquals(driver.getCurrentUrl(), adminUrl);\n         }\n \n         // Logout\n         driver.findElement(By.linkText(\"logout\")).click();\n         \n     }\n", "path": "ArcGames/test/ch/hearc/arcgames/tests/AdminSecurityTest.java", "repo name": "MircoGit/ArcGames"}
{"repo_name": "loggedUserTryAccessPages_134", "method name": "logged User Try Access Pages", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n \n         // Non-admin user login informations\n         String username = \"nonAdmin\";\n         String passwd = \"nonAdminPassword\";\n \n         // We open the web app\n         driver.get(baseUrl + \"/ArcGames/\");\n \n         // SignUp with a test user\n         String pattern = \"fake\";\n         signUp(pattern, pattern, pattern, pattern, pattern, pattern);\n \n         // Login as non-admin\n         login(username, passwd);\n \n         // Go to users page\n         driver.findElement(By.linkText(\"Users\")).click();\n \n         // Search user that matches \"fake\" pattern\n         simpleSearch(pattern);\n \n         // Check results\n         String result = driver.findElement(By.xpath(\"//form[@id='j_idt21']/table/tbody[2]/tr/td\")).getText();\n         assertTrue(result.contains(pattern));\n \n         // Search user that matches \"fake\" user\n         advancedSearch(pattern);\n \n         // Check results\n         result = driver.findElement(By.xpath(\"//form[@id='j_idt21']/table/tbody[2]/tr/td\")).getText();\n         assertTrue(result.contains(pattern));\n \n         // Logout\n         driver.findElement(By.linkText(\"logout\")).click();\n \n     }\n", "path": "ArcGames/test/ch/hearc/arcgames/tests/searchTest.java", "repo name": "MircoGit/ArcGames"}
{"repo_name": "loggedUserTryAccessPages_135", "method name": "logged User Try Access Pages", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n \n         // New user informations\n         String username = \"myUsername\";\n         String mail = \"myMail@gmail.com\";\n         String location = \"Neuchâtel\";\n         String firstName = \"myFName\";\n         String lastName = \"myLName\";\n         String passwd = \"myPasswd\";\n \n         // We open the web app\n         driver.get(baseUrl + \"/ArcGames/\");\n \n         // SignUp with a test user\n         signUp(username, mail, passwd, location, firstName, lastName);\n \n         // Login as non-admin\n         login(username, passwd);\n \n         // Edit user\n         String s = \"edited\";\n         driver.findElement(By.linkText(username)).click();\n         driver.findElement(By.id(\"j_idt19:username\")).clear();\n         driver.findElement(By.id(\"j_idt19:username\")).sendKeys(s);\n         driver.findElement(By.id(\"j_idt19:mail\")).clear();\n         driver.findElement(By.id(\"j_idt19:mail\")).sendKeys(s);\n         driver.findElement(By.id(\"j_idt19:passwd\")).clear();\n         driver.findElement(By.id(\"j_idt19:passwd\")).sendKeys(s);\n         driver.findElement(By.id(\"j_idt19:passwdConfirm\")).clear();\n         driver.findElement(By.id(\"j_idt19:passwdConfirm\")).sendKeys(s);\n         driver.findElement(By.id(\"j_idt19:location\")).clear();\n         driver.findElement(By.id(\"j_idt19:location\")).sendKeys(s);\n         driver.findElement(By.id(\"j_idt19:firstName\")).clear();\n         driver.findElement(By.id(\"j_idt19:firstName\")).sendKeys(s);\n         driver.findElement(By.id(\"j_idt19:lastName\")).clear();\n         driver.findElement(By.id(\"j_idt19:lastName\")).sendKeys(s);\n         driver.findElement(By.id(\"j_idt19:submit\")).click();\n \n         // Logout\n         driver.findElement(By.linkText(\"logout\")).click();\n \n     }\n", "path": "ArcGames/test/ch/hearc/arcgames/tests/DBInteractionTest.java", "repo name": "MircoGit/ArcGames"}
{"repo_name": "openConfigurationPage_136", "method name": "open Configuration Page", "comments": [], "url": true, "content": "    private CloudJenkinsConfigurationPage function(final URL url) {\n         webDriver.navigate().to(url);\n         return PageFactory.initElements(webDriver, CloudJenkinsConfigurationPage.class);\n     }\n", "path": "cloud-jenkins-plugin/src/test/java/com/sap/hana/cloud/samples/jenkins/plugin/uitests/CloudJenkinsPluginTest.java", "repo name": "SAP/cloud-jenkins"}
{"repo_name": "testShouldNotBeAbleToSetDomainToSomethingThatIsUnrelatedToTheCurrentDomain_137", "method name": "test Should Not Be Able To Set Domain To Something That Is Unrelated To The Current Domain", "comments": ["Ignore(SELENESE)"], "url": true, "content": "  public void function() {\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\");\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"simpleTest.html\");\n     driver.get(url);\n \n     Cookie cookie = options.getCookieNamed(\"fish\");\n     assertNull(String.valueOf(cookie), cookie);\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "testGetCookieDoesNotRetriveBeyondCurrentDomain_138", "method name": "test Get Cookie Does Not Retrive Beyond Current Domain", "comments": ["Ignore(SELENESE)"], "url": true, "content": "  public void function() {\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\");\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"\");\n     driver.get(url);\n \n     Set<Cookie> cookies = options.getCookies();\n     assertFalse(cookies.contains(cookie1));\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "testCookieIntegrity_139", "method name": "test Cookie Integrity", "comments": ["Ignore({SELENESE, IE, OPERA})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"animals\");\n \n     driver.get(url);\n     driver.manage().deleteAllCookies();\n \n     long time = System.currentTimeMillis() + (60 * 60 * 24);\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\", \"/common/animals\", new Date(time));\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     Set<Cookie> cookies = options.getCookies();\n     Iterator<Cookie> iter = cookies.iterator();\n     Cookie retrievedCookie = null;\n     while (iter.hasNext()) {\n       Cookie temp = iter.next();\n \n       if (cookie1.equals(temp)) {\n         retrievedCookie = temp;\n         break;\n       }\n     }\n \n     assertNotNull(retrievedCookie);\n     //Cookie.equals only compares name, domain and path\n     assertEquals(cookie1, retrievedCookie);\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "testRetainsCookieExpiry_140", "method name": "test Retains Cookie Expiry", "comments": ["Ignore(value = {ANDROID, IE, SELENESE, OPERA}, reason ="], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"animals\");\n \n     driver.get(url);\n     driver.manage().deleteAllCookies();\n \n     long time = System.currentTimeMillis() + (60 * 60 * 24);\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\", \"/common/animals\", new Date(time));\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     Cookie retrieved = options.getCookieNamed(\"fish\");\n     assertNotNull(retrieved);\n     assertEquals(cookie1.getExpiry(), retrieved.getExpiry());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "testSettingACookieThatExpiredInThePast_141", "method name": "test Setting A Cookie That Expired In The Past", "comments": ["Ignore(value = {ANDROID, IE, SELENESE}, reason = \"Untested\")"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"animals\");\n \n     driver.get(url);\n     driver.manage().deleteAllCookies();\n \n     long expires = System.currentTimeMillis() - 1000;\n     Cookie cookie = new Cookie(\"expired\", \"yes\", \"/common/animals\", new Date(expires));\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie);\n \n     cookie = options.getCookieNamed(\"fish\");\n     assertNull(\n         \"Cookie expired before it was set, so nothing should be returned: \" + cookie, cookie);\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "testCanBlockInvalidSslCertificates_142", "method name": "test Can Block Invalid Ssl Certificates", "comments": [], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_143", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": ["Ignore({IE, CHROME, SELENESE, IPHONE, OPERA})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     driver.get(url);\n \n     // This should work\n     assertThat(driver.getTitle(), equalTo(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_144", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["Ignore(value = {IE, SELENESE})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")) .getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "testCanNavigateToAGivenUrl_145", "method name": "test Can Navigate To A Given Url", "comments": [], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tfinal String url = \"http://www.example.com\";\n \t\t\n \t\tchecking(new Expectations() {{ \n \t\t\tone(webdriver).get(url);\n \t\t}});\n \t\t\n \t\tcontext.goTo(url);\n \t}\n", "path": "java/client/test/org/openqa/selenium/lift/TestContextTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "testCanNavigateToAGivenUrl_146", "method name": "test Can Navigate To A Given Url", "comments": [], "url": true, "content": "  public void function() throws Exception {\n \n     final String url = \"http://www.example.com\";\n     \n     checking(new Expectations() {{ \n       one(webdriver).get(url);\n     }});\n     \n     context.goTo(url);\n   }\n", "path": "java/client/test/org/openqa/selenium/lift/WebDriverTestContextTest.java", "repo name": "akiellor/selenium"}
{"repo_name": "loginLoginHint_147", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "amalalex/keycloak"}
{"repo_name": "testUpdateNotification_148", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update event\","], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         AssetUtil.updateAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_DESCRIPTION);\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         //read email using smtp\n         boolean hasMail = (ESUtil.readEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, updateNotificationSubject) != null);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherNotificationTestCase.java", "repo name": "ayyoob/product-es"}
{"repo_name": "logoutFromAdminConsole_149", "method name": "logout From Admin Console", "comments": [" To logout from admin console", " @param driver WebDriver instance", " @param url    base url of the server"], "url": true, "content": "    public static void function(ESWebDriver driver, String url) {\n         driver.get(url + ADMIN_CONSOLE_SUFFIX);\n         driver.findElement(By.linkText(\"Sign-out\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/es/ui/integration/util/ESUtil.java", "repo name": "ayyoob/product-es"}
{"repo_name": "testUpdateNotification_150", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update event\","], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         AssetUtil.updateAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_DESCRIPTION);\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         //read email using smtp\n         boolean hasMail = (ESUtil.readEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, updateNotificationSubject) != null);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherTenantNotificationTestCase.java", "repo name": "ayyoob/product-es"}
{"repo_name": "testPasswordRecoveryEmail_151", "method name": "test Password Recovery Email", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing password recovery through email\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.id(\"btn-signin\")).click();\n         driver.findElement(By.linkText(\"Forgot your password?\")).click();\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(USER);\n         driver.findElement(By.id(\"validationSubmit\")).click();\n         String resourceLocation = getResourceLocation();\n         smtpPropertyLocation = resourceLocation + SMTP_PROPERTY_FILE;\n         // TODO:avoid waiting\n         // waiting for email to receive\n         Thread.sleep(10000);\n         String message = ESUtil.readEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, RESET_MAIL_TITLE);\n         String resetUrl = message.split(\"\\r\")[5].trim().substring(\"https://localhost:9443\".length());\n         driver.get(baseUrl + resetUrl);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(NEW_PASSWORD);\n         driver.findElement(By.id(\"password2\")).clear();\n         driver.findElement(By.id(\"password2\")).sendKeys(NEW_PASSWORD);\n         driver.findElement(By.id(\"resetPassword\")).click();\n         ESUtil.login(driver, baseUrl, STORE_APP, USER, NEW_PASSWORD);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESPasswordRecovery.java", "repo name": "ayyoob/product-es"}
{"repo_name": "iVisitTheWebsite_152", "method name": "i Visit The Website", "comments": ["Given(\"I visit the website \\\"$url\\\"\")"], "url": true, "content": "    public void function(String url) {\n         driverProvider.get().get(url);\n     }\n", "path": "src/main/java/com/lylyn/jbehave/steps/SomethingSteps.java", "repo name": "brlnguy/something"}
{"repo_name": "testDataBrowser_153", "method name": "test Data Browser", "comments": [" @Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\t// dat fiind ca data browserul se deschide intr-o noua fereastra,\n \t\t// deocamdata mergem direct la url-ul lui\n \t\t// la un moment dat o sa vedem cum putem sari de la fereastra principala\n \t\t// a roda, unde se face loginul, in fereastra lui\n \n \t\tdriver.get(dataBrowserUrl);\n \n \t\t// verifica structura generala a panelului\n \n \t\tWebElement dbTitle = driver.findElement(By.id(\"ext-comp-1009_header\"))\n \t\t\t\t.findElement(By.id(\"ext-comp-1009_header-body\")).findElement(By.id(\"ext-comp-1009_header-innerCt\"))\n \t\t\t\t.findElement(By.id(\"ext-comp-1009_header-targetEl\")).findElement(By.id(\"ext-comp-1009_header_hd\"))\n \t\t\t\t.findElement(By.id(\"ext-comp-1009_header_hd-textEl\"));\n \t\tAssert.assertTrue(\"Data Browser panel structure OK\", dbTitle.getText().contains(\"RODA - Data Browser\"));\n \n \t\t// cataloage - verifica ce scrie pe buton si incarcarea containerului\n \t\t// pentru tree la click\n \n \t\tWebElement catalogLabel = driver.findElement(By.id(\"CatalogsTabConfig-btnInnerEl\"));\n \t\tAssert.assertTrue(\"Catalog Button OK\", catalogLabel.getText().contains(\"Cataloage\"));\n \n \t\tWebElement catalogHandler = driver.findElement(By.id(\"CatalogsTabConfig\"));\n \t\tcatalogHandler.click();\n \t\tAssert.assertTrue(\"Catalog tree panel loaded ok\", driver.findElement(By.id(\"CatalogsTreeView\")).isDisplayed());\n \n \t\t// ani - verifica ce scrie pe buton si incarcarea containerului pentru\n \t\t// tree la click\n \n \t\tWebElement aniLabel = driver.findElement(By.id(\"YearsTabConfig-btnEl\"));\n \t\tAssert.assertTrue(\"Years Button OK\", aniLabel.getText().contains(\"Ani\"));\n \n \t\tWebElement aniHandler = driver.findElement(By.id(\"YearsTabConfig\"));\n \t\taniHandler.click();\n \t\tAssert.assertTrue(\"Years tree panel loaded ok\", driver.findElement(By.id(\"YearsTreeView\")).isDisplayed());\n \n \t\t// utilizatori - verifica ce scrie pe buton si incarcarea containerului\n \t\t// pentru tree la click\n \n \t\tWebElement utLabel = driver.findElement(By.id(\"UsersTabConfig-btnEl\"));\n \t\tAssert.assertTrue(\"Users Button OK\", utLabel.getText().contains(\"Utilizatori\"));\n \n \t\tWebElement utHandler = driver.findElement(By.id(\"UsersTabConfig\"));\n \t\tutHandler.click();\n \t\tAssert.assertTrue(\"Users grid panel loaded ok\", driver.findElement(By.id(\"UsersGridView\")).isDisplayed());\n \n \t}\n", "path": "src/test/java/ro/roda/integration/WebDriverIT.java", "repo name": "cosminrentea/roda"}
{"repo_name": "checkAndPutExampleBluelightEnglish_154", "method name": "check And Put Example Bluelight English", "comments": [" Connection to example, Check if already in Bluelight theme and english language, if not call testChangeLanguage to change", " Most of the time, this method is not used because Bluelight theme is no more in \"stable\" revision, so default theme is now tomawak ", " @param baseUrl", " @param driver", " @throws Exception"], "url": true, "content": "    public static void function(String baseUrl, WebDriver driver) throws Exception {\n         WebDriverWait driverWait = new WebDriverWait(driver, 30);\n         WebElement waitFor;\n         boolean themeAndLanguageCorrect, firstTime;\n         firstTime=true;\n         int i = 2;\n         do {\n             themeAndLanguageCorrect = false;\n             driver.get(baseUrl + \"example/control/logout\");\n             waitFor = driverWait.until(ExpectedConditions.presenceOfElementLocated(By.name(\"USERNAME\")));\n             waitFor.clear();\n             waitFor.sendKeys(\"admin\");\n             WebElement element = driver.findElement(By.name(\"PASSWORD\"));\n             element.clear();\n             element.sendKeys(\"ofbiz\");\n             driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n             driverWait.until(ExpectedConditions.titleContains(\"OFBiz: Example: Find Example\"));\n             List<WebElement> currentLanguages = driver.findElements(By.xpath(\"//ul[@id='preferences-menu']/li[3]/a\"));\n             if (currentLanguages.size() == 0 || ! currentLanguages.get(0).getText().contains(\"Language : English\") ) {\n                 Utils.testChangeLanguage(baseUrl, null, null, \"BLUELIGHT\", driver);\n                 themeAndLanguageCorrect = true;\n                 i -= 1;\n                 firstTime = i>0;\n             }\n         } while (themeAndLanguageCorrect && firstTime);\n         assertTrue(firstTime);\n \n     }\n", "path": "framework/testtools/selenium/tests/org/ofbiz/testtools/webdriverTests/utils/Utils.java", "repo name": "gildaslemoal/elpi"}
{"repo_name": "testChangeLanguage_155", "method name": "test Change Language", "comments": [" connection on component and put on the theme and the language", " @param baseUrl", " @param component", " @param language", " @param theme", " @param driver", " @throws Exception"], "url": true, "content": "    public static void function(String baseUrl, String component,String language, String theme, WebDriver driver) throws Exception {\n         WebDriverWait driverWait = new WebDriverWait(driver, 30);\n \n         //Connection\n         if (language == null) {\n                     language = \"English    -    [en]\";\n                 }\n         if (theme == null) {\n                     theme = \"BLUELIGHT\";\n                 }\n         if (component == null) {\n                     component = \"catalog\";\n         }\n         driver.get(baseUrl + component +\"/control/logout\");\n         if(\"webtools\".equals(component)) {\n             driver.get(baseUrl + component + \"/control/checkLogin\");\n         }\n         WebElement waitFor = driverWait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"input[type=\\\"submit\\\"]\")));\n         WebElement element = driver.findElement(By.name(\"USERNAME\"));\n         element.clear();\n         element.sendKeys(\"admin\");\n         \n         element = driver.findElement(By.name(\"PASSWORD\"));\n         element.clear();\n         element.sendKeys(\"ofbiz\");\n         waitFor.click();\n         /* Test to resolve the 501 error, but it seem  better to use driverWait.until for each field you want to clear or to sendKeys\n         ExpectedCondition<Boolean> pageLoadCondition = new\n                 ExpectedCondition<Boolean>() {\n                     public Boolean apply(WebDriver driver) {\n                         return ((JavascriptExecutor)driver).executeScript(\"return document.readyState\").equals(\"complete\");\n                     }\n                 };\n         driverWait.until(pageLoadCondition);\n         */\n         Thread.sleep(500);\n         //if the Preferences menu is available in the current theme\n         if(isElementPresent(By.xpath(\"//div[@id=\\\"controls\\\"]//span[@id=\\\"prefBtn\\\"]//a\"), driver)) {\n             driver.findElement(By.xpath(\"//div[@id=\\\"controls\\\"]//span[@id=\\\"prefBtn\\\"]//a\")).click();\n             driverWait.until(ExpectedConditions.elementToBeClickable(By.id(\"theme\"))).click();\n \n             //wait until the theme menu is displayed then select the right theme (multi menu)\n             waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@href=\\\"javascript:document.SetUserPreferences_\"+theme+\".submit()\\\"]\")));\n             waitFor.click();\n         }\n \n         //if there is no Preferences menu in the current theme\n         else {\n             driver.get(baseUrl + component+\"/control/ListVisualThemes\");\n             //Select the right theme\n             waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@href=\\\"javascript:document.SetUserPreferences_\"+theme+\".submit()\\\"]\")));\n             waitFor.click();\n         }\n \n         //Selection of the chosen component\n         waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@href=\\\"/\"+component+\"/control/main\\\"]\")));\n         waitFor.click();\n \n         //Language selection\n         if(isElementPresent(By.xpath(\"//div[@id=\\\"controls\\\"]//span[@id=\\\"prefBtn\\\"]//a\"), driver)) {\n             driver.findElement(By.xpath(\"//div[@id=\\\"controls\\\"]//span[@id=\\\"prefBtn\\\"]//a\")).click();\n             waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.id(\"language\")));\n             waitFor.click();\n         } else {\n             waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@href=\\\"/\"+component+\"/control/ListLocales\\\"]\")));\n             waitFor.click();\n         }\n         //Wait until the language selection menu is displayed and chose english\n         waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.linkText(language)));\n         waitFor.click();\n \n         //Logout\n         //driverWait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@href=\\\"/\"+component+\"/control/logout\\\"]\"))).click();\n     }\n", "path": "framework/testtools/selenium/tests/org/ofbiz/testtools/webdriverTests/utils/Utils.java", "repo name": "gildaslemoal/elpi"}
{"repo_name": "changeThemeLanguage_156", "method name": "change Theme Language", "comments": [" Change only the theme and language without connecting"], "url": true, "content": "    public static void function(String baseUrl, String component, String language, String theme, WebDriver driver)  throws Exception {\n         WebDriverWait driverWait = new WebDriverWait(driver, 30);\n \n         if (language == null) {\n                     language = \"English    -    [en]\";\n                 }\n         if (theme == null) {\n                     theme = \"TOMAHAWK\";\n                 }\n         WebElement waitFor;\n         WebElement we;\n         if(isElementPresent(By.xpath(\"//div[@id=\\\"controls\\\"]//span[@id=\\\"prefBtn\\\"]//a\"), driver)) {\n             we = driver.findElement(By.xpath(\"//div[@id=\\\"controls\\\"]//span[@id=\\\"prefBtn\\\"]//a\"));\n             we.click();\n             waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.id(\"theme\")));\n             waitFor.click();\n \n             //wait until the theme menu is displayed then select the right theme (multi menu)\n             waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@href=\\\"javascript:document.SetUserPreferences_\"+theme+\".submit()\\\"]\")));\n             waitFor.click();\n         }\n \n         //if there is no Preferences menu in the current theme\n         else\n         {\n             driver.get(baseUrl + component + \"/control/ListVisualThemes\");\n             //Select the right theme\n             waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@href=\\\"javascript:document.SetUserPreferences_\"+theme+\".submit()\\\"]\")));\n             waitFor.click();\n         }\n \n         //Selection of the chosen component\n         waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@href=\\\"/\"+component+\"/control/main\\\"]\")));\n         waitFor.click();\n         Thread.sleep(500);\n \n         //Language selection\n         if(isElementPresent(By.xpath(\"//div[@id=\\\"controls\\\"]//span[@id=\\\"prefBtn\\\"]//a\"), driver)) {\n             we = driver.findElement(By.xpath(\"//div[@id=\\\"controls\\\"]//span[@id=\\\"prefBtn\\\"]//a\"));\n             we.click();\n             waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.id(\"language\")));\n             waitFor.click();\n         } else {\n             waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@href=\\\"/\"+component+\"/control/ListLocales\\\"]\")));\n             waitFor.click();\n         }\n         //Wait until the language selection menu is displayed and chose english\n         waitFor = driverWait.until(ExpectedConditions.elementToBeClickable(By.linkText(language)));\n         waitFor.click();\n     }\n", "path": "framework/testtools/selenium/tests/org/ofbiz/testtools/webdriverTests/utils/Utils.java", "repo name": "gildaslemoal/elpi"}
{"repo_name": "getWebDriver_157", "method name": "get Web Driver", "comments": [], "url": true, "content": "  private WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n                                                          // run with DISPLAY 99\n         }\n         FirefoxProfile profile = new FirefoxProfile();\n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/ZeppelinIT.java", "repo name": "issaclee/silkroad"}
{"repo_name": "resetUserPassword_158", "method name": "reset User Password", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String userId = createUser(\"user1\", \"user1@localhost\");\n \n         CredentialRepresentation cred = new CredentialRepresentation();\n         cred.setType(CredentialRepresentation.PASSWORD);\n         cred.setValue(\"password\");\n         cred.setTemporary(false);\n \n         realm.users().get(userId).resetPassword(cred);\n \n         String accountUrl = RealmsResource.accountUrl(UriBuilder.fromUri(Constants.AUTH_SERVER_ROOT)).build(REALM_NAME).toString();\n \n         driver.navigate().to(accountUrl);\n \n         assertEquals(\"Log in to admin-client-test\", driver.getTitle());\n \n         loginPage.login(\"user1\", \"password\");\n \n         assertEquals(\"Keycloak Account Management\", driver.getTitle());\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "repo name": "joelbars/keycloak"}
{"repo_name": "errorMessageAfterFailedLoginAttempt_159", "method name": "error Message After Failed Login Attempt", "comments": ["Test"], "url": true, "content": "    public void function() {\n         driver.navigate().to(urlBase + \"/yottr\");\n \n         final WebElement usernameField = driver.findElement(By.id(\"username\"));\n         final WebElement passwordField = driver.findElement(By.id(\"password\"));\n         final WebElement signInButton = driver.findElement(By.id(\"sign-in-button\"));\n \n         usernameField.sendKeys(\"mike\");\n         passwordField.sendKeys(\"wrongpassword\");\n \n         signInButton.click();\n \n         final WebElement errorMessage = driver.findElement(By.id(\"error-msg\"));\n \n         assertEquals(\"Invalid username and password.\", errorMessage.getText());\n     }\n", "path": "src/test/java/uk/co/yottr/acceptance/SignInSignOutIT.java", "repo name": "mikehartley/yottr"}
{"repo_name": "signInSignOut_160", "method name": "sign In Sign Out", "comments": ["Test"], "url": true, "content": "    public void function() {\n         driver.navigate().to(urlBase + \"/yottr\");\n \n         final WebElement usernameField = driver.findElement(By.id(\"username\"));\n         final WebElement passwordField = driver.findElement(By.id(\"password\"));\n         final WebElement signInButton = driver.findElement(By.id(\"sign-in-button\"));\n \n         usernameField.sendKeys(\"mike\");\n         passwordField.sendKeys(\"aph3xtwIn\");\n \n         signInButton.click();\n \n         final WebElement logoutLink = driver.findElement(By.id(\"logout-link\"));\n         assertEquals(\"Logout\", logoutLink.getText());\n \n         logoutLink.click();\n \n         final WebElement loggedOutMessage = driver.findElement(By.id(\"logged-out-msg\"));\n         assertEquals(\"You have been logged out.\", loggedOutMessage.getText());\n     }\n", "path": "src/test/java/uk/co/yottr/acceptance/SignInSignOutIT.java", "repo name": "mikehartley/yottr"}
{"repo_name": "testCanBlockInvalidSslCertificates_161", "method name": "test Can Block Invalid Ssl Certificates", "comments": [], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = new FirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "firefox/test/java/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "mogotest/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_162", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["Ignore(value = {IE, SELENESE})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")) .getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "common/test/java/org/openqa/selenium/I18nTest.java", "repo name": "mogotest/selenium"}
{"repo_name": "testReserveWith9Mmebers_163", "method name": "test Reserve With9 Mmebers", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"reserveApp/index.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n         \n         // TODO 以下は削除してください\n         Thread.sleep(8000);\n         // TODO ここまで削除してください\n         \n         // 1ページ目入力画面\n         driver.findElement(By.id(\"reserve_year\")).clear();\n         driver.findElement(By.id(\"reserve_year\")).sendKeys(\"2013\"); // TODO 明日以降直近の土曜日に変更してください\n         driver.findElement(By.id(\"reserve_month\")).clear();\n         driver.findElement(By.id(\"reserve_month\")).sendKeys(\"12\"); // TODO 明日以降直近の土曜日に変更してください\n         driver.findElement(By.id(\"reserve_day\")).clear();\n         driver.findElement(By.id(\"reserve_day\")).sendKeys(\"7\"); // TODO 明日以降直近の土曜日に変更してください\n         driver.findElement(By.id(\"reserve_term\")).clear();\n         driver.findElement(By.id(\"reserve_term\")).sendKeys(\"1\");\n         \n         // TODO 残りの処理を記述してください\n \n         // 2ページ目入力画面\n         assertThat(driver.findElement(By.id(\"price\")).getText(), is(\"105750\"));\n         assertThat(driver.findElement(By.id(\"datefrom\")).getText(), is(\"2013年12月7日\")); // TODO 変更してください\n         assertThat(driver.findElement(By.id(\"dateto\")).getText(), is(\"2013年12月8日\")); // TODO 変更してください\n         assertThat(driver.findElement(By.id(\"dayscount\")).getText(), is(\"1\"));\n \n         // TODO 残りの処理を記述してください\n     }\n", "path": "src/test/java/practicework/PracticeWork1Test.java", "repo name": "ootaken/STARHotel"}
{"repo_name": "checkThatInstalledSuccessfully_164", "method name": "check That Installed Successfully", "comments": [" このプログラムはハンズオンに必要なプログラムが適切にインストールされたかをチェックするプログラムです。", " このファイルをInteillJ IDEA上から、右クリック>'Run EnvironmentCheckTest' によりJUnitとして実行し、", " JUnitのテストが成功すれば、インストールは正常に完了しています。", "Test"], "url": true, "content": "    public void function() {\n         File html = new File(\"introWork/introWork1.html\");\n         String url = html.toURI().toString();\n         driver.get(url);        \n         WebElement userName = driver.findElement(By.id(\"user_name\"));\n         userName.sendKeys(\"TestUser\");\n         WebElement password = driver.findElement(By.id(\"password\"));\n         password.sendKeys(\"pass\");\n         WebElement login = driver.findElement(By.id(\"login\"));\n         login.click();\n         driver.switchTo().alert().accept();\n     }\n", "path": "src/test/java/EnvironmentCheckTest.java", "repo name": "ootaken/STARHotel"}
{"repo_name": "testClickOKButton_165", "method name": "test Click OK Button", "comments": [" 入門課題その9:「テキストが表示されるまで待機してみよう」", "Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"introwork/introWork9.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n \n         WebElement okButton = driver.findElement(By.id(\"ok_button\"));\n         okButton.click();\n \n         // TODO 以下を削除して、代わりに3秒後に「「OK」ボタンがクリックされました!」が表示されることを確認する処理を記述してください\n         Thread.sleep(8000);\n         // TODO ここまで削除してください\n     }\n", "path": "src/test/java/introwork/IntroWork9Test.java", "repo name": "ootaken/STARHotel"}
{"repo_name": "testLoginSuccess_166", "method name": "test Login Success", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n \n         // 入門課題1のURLを取得\n         File html = new File(\"introwork/introWork1.html\");\n         String url = html.toURI().toString();\n         System.out.println(url);\n \n         // 指定したURLのウェブページに移動\n         driver.get(url);\n \n         // 文字列入力・クリックなどの処理\n         Thread.sleep(1000); // デモ用。目で見て分かりやすいように、各操作の間にSleepを入れる\n         WebElement userName = driver.findElement(By.id(\"user_name\"));\n         userName.sendKeys(\"TestUser\");\n         Thread.sleep(1000); // デモ用\n         WebElement password = driver.findElement(By.id(\"password\"));\n         password.sendKeys(\"pass\");\n         Thread.sleep(1000); // デモ用\n         WebElement login = driver.findElement(By.id(\"login\"));\n         login.click();\n         Thread.sleep(1000); // デモ用\n         driver.switchTo().alert().accept();\n         Thread.sleep(1000); // デモ用\n     }\n", "path": "src/test/java/introwork/IntroWork1Test.java", "repo name": "ootaken/STARHotel"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_167", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_168", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_169", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE},"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_170", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_171", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_172", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_173", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_174", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, HTMLUNIT, IE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "resetUserPassword_175", "method name": "reset User Password", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String userId = createUser(\"user1\", \"user1@localhost\");\n \n         CredentialRepresentation cred = new CredentialRepresentation();\n         cred.setType(CredentialRepresentation.PASSWORD);\n         cred.setValue(\"password\");\n         cred.setTemporary(false);\n \n         realm.users().get(userId).resetPassword(cred);\n \n         String accountUrl = RealmsResource.accountUrl(UriBuilder.fromUri(getAuthServerRoot())).build(REALM_NAME).toString();\n \n         driver.navigate().to(accountUrl);\n \n         assertEquals(\"Log in to admin-client-test\", driver.getTitle());\n \n         loginPage.login(\"user1\", \"password\");\n \n         assertEquals(\"Keycloak Account Management\", driver.getTitle());\n     }\n", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "repo name": "ssilvert/keycloak"}
{"repo_name": "preLoginTo_176", "method name": "pre Login To", "comments": [], "url": true, "content": "public void function(String url, String account, String password, WebDriver driver) throws InterruptedException {\n     driver.get(\"https://login.alibaba.com/?Done=http%3A%2F%2Fbiz.alibaba.com%2Fgeneralorders%2Flist_orders.htm\");\n     //TimeUtil.toWait(1000);\n     Thread.sleep(3000);\n WebElement xloginPassportId = driver.findElement(By.id(\"xloginPassportId\")); \n     xloginPassportId.clear();\n     xloginPassportId.sendKeys(account);\n     driver.findElement(By.id(\"xloginPasswordId\")).sendKeys(password);\n     driver.findElement(By.id(\"signInButton\")).click();\n     int tryTime = 40;\n     while (driver.getCurrentUrl().contains(\"login.alibaba.com\") && tryTime > 0) {\n         //TimeUtil.toWait(500);\n         tryTime--;\n     }\n     if (tryTime <= 0) {\n         driver.get(url);\n     }\n }\n", "path": "java/client/test/fff/helloflash.java", "repo name": "xlzdew/seleniumpr"}
{"repo_name": "loginLoginHint_177", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "AOEpeople/keycloak"}
{"repo_name": "navigateToURL_178", "method name": "navigate To URL", "comments": [], "url": true, "content": "\tpublic static void function(WebDriver driver, String url) {\n \t\tLOGGER.log(Level.INFO,\n \t\t\t\tString.format(\"Navigating to the URL: \\\"%s\\\"\", url));\n \t\tdriver.navigate().to(url);\n \t}\n", "path": "src/main/java/com/goeuro/utility/GeneralUtility.java", "repo name": "Hassan-Radi/GoEuro"}
{"repo_name": "Js_error_account_179", "method name": "Js error account", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     \tActions actions = new Actions(driver);\n     \tdriver.manage().window().setSize(new Dimension(1366, 1050));\n         driver.get(baseUrl + \"customer/account/login/\");\n         WebElement email = driver.findElement(By.id(\"email\"));\n         email.clear();\n         email.sendKeys(\"qatestingtestqa@gmail.com\");\n         WebElement pass = driver.findElement(By.id(\"pass\"));\n         pass.clear();\n         pass.sendKeys(\"qwerty\");\n         WebElement submit = driver.findElement(By.cssSelector(\"button[title=\\\"Login\\\"]\"));\n         submit.click();\n         TimeUnit.SECONDS.sleep(5);\n         WebElement h1 = driver.findElement(By.tagName(\"h1\"));\n         assertEquals (\"MY DASHBOARD\", h1.getText());\n         \n         Logs log = driver.manage().logs();\n         List<LogEntry> logsEntries = log.get(\"browser\").getAll();\n         List<String> list = new ArrayList<String>();\n         list.isEmpty();\n         for (LogEntry entry: logsEntries) {        \t\n     \t\tSystem.out.println(entry.getMessage());  \n     \t\t//driver.quit();\n         }\n         WebElement signout = driver.findElement(By.linkText(\"Sign Out\"));\n         WebElement my_account = driver.findElement(By.linkText(\"My Account\"));\n         actions.moveToElement(my_account).build().perform();\n         signout.click();\n         TimeUnit.SECONDS.sleep(5);\n \t\t    assertEquals(list, logsEntries);\n \n \t\t    \n   }\n", "path": "src/test/java/js_errors/Js_error_account.java", "repo name": "LanaVoit/pgs-smoke"}
{"repo_name": "Add_all_cart_180", "method name": "Add all cart", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     \tdriver.manage().window().setSize(new Dimension(1366, 1050));\n     \tActions actions = new Actions(driver);\n         driver.get(baseUrl + \"personalised-swarovski-crystal-heart-vase.html\");\n         TimeUnit.SECONDS.sleep(5);\n         ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n                 ,driver.findElement(By.cssSelector(\"li > a.button > span\")));\n         TimeUnit.SECONDS.sleep(5);\n         driver.findElement(By.cssSelector(\"li > a.button > span\")).click();\n         TimeUnit.SECONDS.sleep(5);\n         driver.findElement(By.id(\"email\")).clear();\n         driver.findElement(By.id(\"email\")).sendKeys(\"qatestingtestqa@gmail.com\");\n         driver.findElement(By.id(\"pass\")).clear();\n         driver.findElement(By.id(\"pass\")).sendKeys(\"qwerty\");\n         TimeUnit.SECONDS.sleep(5);\n         driver.findElement(By.id(\"send2\")).click();\n         TimeUnit.SECONDS.sleep(10);\n         driver.findElement(By.cssSelector(\"span\")).click();\n         TimeUnit.SECONDS.sleep(3);\n         driver.findElement(By.cssSelector(\"span\")).click();\n         TimeUnit.SECONDS.sleep(3);\n         assertEquals(\"Engraved Swarovski Crystal Heart Vase has been added to your wishlist.\", driver.findElement(By.cssSelector(\"span\")).getText());\n         driver.findElement(By.cssSelector(\"button.mfp-close\")).click();\n         TimeUnit.SECONDS.sleep(3);\n     driver.get(baseUrl + \"personalised-swarovski-big-heart-diamante-vase.html\");\n     TimeUnit.SECONDS.sleep(5);\n     ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n             ,driver.findElement(By.cssSelector(\"li > a.button > span\")));\n     driver.findElement(By.cssSelector(\"li > a.button > span\")).click();\n     TimeUnit.SECONDS.sleep(3);\n     driver.findElement(By.cssSelector(\"span\")).click();\n     TimeUnit.SECONDS.sleep(3);\n     driver.findElement(By.cssSelector(\"span\")).click();\n     TimeUnit.SECONDS.sleep(3);\n     driver.findElement(By.cssSelector(\"button.mfp-close\")).click();\n     driver.get(baseUrl + \"wishlist/\");\n \n     TimeUnit.SECONDS.sleep(3);\n     ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n             ,driver.findElement(By.cssSelector(\"button.button.btn-add\")));\n     driver.findElement(By.cssSelector(\"button.button.btn-add\")).click();\n     try {\n       assertEquals(\"2 product(s) have been added to shopping cart: \\\"Engraved Swarovski Crystal Heart Vase\\\", \\\"Personalised Swarovski Diamante Vase - Big Heart Design\\\".\", driver.findElement(By.cssSelector(\"li > span\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     try {\n       assertEquals(\"You have no items in your wishlist.\", driver.findElement(By.cssSelector(\"p.wishlist-empty\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }    \n     driver.get(baseUrl + \"checkout/cart/\");\n     assertEquals(\"YOUR SHOPPING BASKET\", driver.findElement(By.cssSelector(\"h1\")).getText());\n     try {\n         assertEquals(\"Engraved Swarovski Crystal Heart Vase\", driver.findElement(By.xpath(\"(//a[contains(text(),'Engraved Swarovski Crystal Heart Vase')])[3]\")).getText());\n       } catch (Error e) {\n         verificationErrors.append(e.toString());\n       }\n       driver.findElement(By.xpath(\"//div[@class='item']/div[7]/a\")).click();\n       TimeUnit.SECONDS.sleep(7);\n       driver.findElement(By.xpath(\"//div[@class='item']/div[7]/a\")).click();\n       TimeUnit.SECONDS.sleep(10);\n       assertEquals(\"SHOPPING CART IS EMPTY\", driver.findElement(By.cssSelector(\"h1\")).getText());\n       TimeUnit.SECONDS.sleep(5);\n       driver.get(baseUrl + \"customer/account/logout\");\n \n   }\n", "path": "src/test/java/wishlist/Add_all_cart.java", "repo name": "LanaVoit/pgs-smoke"}
{"repo_name": "Js_error_register_181", "method name": "Js error register", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \n     \tdriver.manage().window().setSize(new Dimension(1366, 1050));\n         driver.get(baseUrl + \"customer/account/create/\");\n         \n         Logs log = driver.manage().logs();\n         List<LogEntry> logsEntries = log.get(\"browser\").getAll();\n         List<String> list = new ArrayList<String>();\n         list.isEmpty();\n         for (LogEntry entry: logsEntries) {        \t\n     \t\tSystem.out.println(entry.getMessage());  \n     \t\t//driver.quit();\n         }\n         \n \t\t    assertEquals(list, logsEntries);\n \n \t\t    \n   }\n", "path": "src/test/java/js_errors/Js_error_register.java", "repo name": "LanaVoit/pgs-smoke"}
{"repo_name": "Js_error_login_182", "method name": "Js error login", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \n     \tdriver.manage().window().setSize(new Dimension(1366, 1050));\n         driver.get(baseUrl + \"customer/account/login/\");\n         \n         Logs log = driver.manage().logs();\n         List<LogEntry> logsEntries = log.get(\"browser\").getAll();\n         List<String> list = new ArrayList<String>();\n         list.isEmpty();\n         for (LogEntry entry: logsEntries) {        \t\n     \t\tSystem.out.println(entry.getMessage());  \n     \t\t//driver.quit();\n         }\n         \n \t\t    assertEquals(list, logsEntries);\n \n \t\t    \n   }\n", "path": "src/test/java/js_errors/Js_error_login.java", "repo name": "LanaVoit/pgs-smoke"}
{"repo_name": "Order_login_customer_183", "method name": "Order login customer", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.manage().window().setSize(new Dimension(1366, 1050));\n \tActions actions = new Actions(driver);\n     driver.get(baseUrl + \"customer/account/login/\");\n     TimeUnit.SECONDS.sleep(5);\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"qatestingtestqa@gmail.com\");\n     driver.findElement(By.id(\"pass\")).clear();\n     driver.findElement(By.id(\"pass\")).sendKeys(\"qwerty\");\n     driver.findElement(By.id(\"send2\")).click();\n     TimeUnit.SECONDS.sleep(5);\n     assertEquals(\"MY DASHBOARD\", driver.findElement(By.cssSelector(\"h1\")).getText());\n    \n     driver.get(baseUrl + \"personalised-swarovski-crystal-heart-vase.html\");\n     TimeUnit.SECONDS.sleep(5);\n     ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n             ,driver.findElement(By.cssSelector(\"button[title=\\\"Add to Basket\\\"]\")));\n     TimeUnit.SECONDS.sleep(5);\n     driver.findElement(By.cssSelector(\"button[title=\\\"Add to Basket\\\"]\")).click();\n     TimeUnit.SECONDS.sleep(5);\n     driver.findElement(By.xpath(\"//a[2]/span\")).click();\n     TimeUnit.SECONDS.sleep(5);\n     driver.get(baseUrl + \"checkout/onepage/\");\n     TimeUnit.SECONDS.sleep(7);\n           \n     assertEquals (\"SECURE CHECKOUT\", driver.findElement(By.tagName(\"h1\")).getText());\n     ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n             ,driver.findElement(By.cssSelector(\"#billing-buttons-container > button.button.btn-primary\")));\n     driver.findElement(By.cssSelector(\"#billing-buttons-container > button.button.btn-primary\")).click();\n     TimeUnit.SECONDS.sleep(10);\n     driver.findElement(By.cssSelector(\"label[for='s_method_productmatrix_royal_mail_48']\")).click();\n     ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n             ,driver.findElement(By.cssSelector(\"#shipping-method-buttons-container > button.button.btn-primary\")));\n     driver.findElement(By.cssSelector(\"#shipping-method-buttons-container > button.button.btn-primary\")).click();\n     TimeUnit.SECONDS.sleep(10);\n     ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n             ,driver.findElement(By.xpath(\"//*[@id='checkout-step-payment']/div[1]/h2\")));\n     TimeUnit.SECONDS.sleep(7);\n     driver.findElement(By.cssSelector(\"label[for='p_method_checkmo']\")).click();\n     TimeUnit.SECONDS.sleep(10);\n     driver.findElement(By.xpath(\"//ul[@id='checkout-payment-method-load']/li[5]/div/label\")).click();\n     ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n             ,driver.findElement(By.cssSelector(\"#payment-buttons-container > button.button.btn-primary\")));\n     driver.findElement(By.cssSelector(\"#payment-buttons-container > button.button.btn-primary\")).click();\n     TimeUnit.SECONDS.sleep(10);\n     ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n             ,driver.findElement(By.xpath(\"//button[@type='submit']\")));\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     TimeUnit.SECONDS.sleep(10);\n     assertEquals(\"A BIG THANK YOU TOM NOW SEE BELOW WHAT YOU CAN DO\", driver.findElement(By.cssSelector(\"h1\")).getText());\n     String order = driver.findElement(By.xpath(\"/html/body/div[2]/div[1]/div[1]/div[3]/div[2]/div[1]/div[1]/div/strong\")).getText();\n     String regex = \"[0-9]\\\\d+\";\n     Pattern p = Pattern.compile(regex);\n     Matcher m = p.matcher(order);\n     if (m.find()) {\n     \tdriver.get(baseUrl + \"customer/account/logout\");\n         TimeUnit.SECONDS.sleep(5);\n         driver.get(baseUrl + \"dukkan\");\n         TimeUnit.SECONDS.sleep(5);\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(\"Turnkey@1986\");\n         driver.findElement(By.id(\"login\")).clear();\n         driver.findElement(By.id(\"login\")).sendKeys(\"E/4zp^Gi79:heX6{wp\");\n         TimeUnit.SECONDS.sleep(5);\n         driver.findElement(By.cssSelector(\"input.form-button\")).click();\n         TimeUnit.SECONDS.sleep(25);\n         Boolean test1 = isElementPresent(By.cssSelector(\"a[title=\\\"close\\\"] > span\"));\n         if(test1 == true){        \t\n         \tdriver.findElement(By.cssSelector(\"a[title=\\\"close\\\"] > span\")).click();\n         }     \n         actions.moveToElement(driver.findElement(By.xpath(\"//*[@id='nav']/li[2]/a/span\"))).build().perform();\n         driver.findElement(By.xpath(\"//*[@id='nav']/li[2]/ul/li[1]/a/span\")).click();\n         TimeUnit.SECONDS.sleep(5);\n \t    driver.findElement(By.id(\"sales_order_grid_filter_am_real_order_id\")).clear();\n \t    driver.findElement(By.id(\"sales_order_grid_filter_am_real_order_id\")).sendKeys(m.group());\n     \tTimeUnit.SECONDS.sleep(5);\n     \tdriver.findElement(By.cssSelector(\"button[title=\\\"Search\\\"]\")).click();\n         TimeUnit.SECONDS.sleep(10);\n         driver.findElement(By.cssSelector(\"input[name=\\\"order_ids\\\"]\")).click();\n         TimeUnit.SECONDS.sleep(5);\n         new Select(driver.findElement(By.id(\"sales_order_grid_massaction-select\"))).selectByVisibleText(\"Cancel\");\n         driver.findElement(By.cssSelector(\"button[title=\\\"Submit\\\"]\")).click();\n \n         TimeUnit.SECONDS.sleep(10);\n         assertEquals(\"1 order(s) have been canceled.\", driver.findElement(By.cssSelector(\"li > span\")).getText());\n         driver.findElement(By.cssSelector(\"#html-body > div.wrapper > div.header > div.header-top > div > p > a.link-logout\")).click();\n         TimeUnit.SECONDS.sleep(8);\n     }\n     \n   }\n \n    private boolean isElementPresent(By by) {\n     try {\n       driver.findElement(by);\n       return true;\n     } catch (NoSuchElementException e) {\n       return false;\n     }\n   }\n \n   \n   private String closeAlertAndGetItsText() {\n     try {\n       Alert alert = driver.switchTo().alert();\n       String alertText = alert.getText();\n       if (acceptNextAlert) {\n         alert.accept();\n       } else {\n         alert.dismiss();\n       }\n       return alertText;\n     } finally {\n       acceptNextAlert = true;\n     }\n   }\n }\n", "path": "src/test/java/checkout/Order_login_customer.java", "repo name": "LanaVoit/pgs-smoke"}
{"repo_name": "Js_error_home_184", "method name": "Js error home", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \n     \tdriver.manage().window().setSize(new Dimension(1366, 1050));\n         driver.get(baseUrl);\n         \n         \n         Logs log = driver.manage().logs();\n         List<LogEntry> logsEntries = log.get(\"browser\").getAll();    \n         List<String> list = new ArrayList<String>();\n         list.isEmpty();\n         for (LogEntry entry: logsEntries) {        \t\n     \t\tSystem.out.println(entry.getMessage());  \n \n         }\n         \n \t\t    assertEquals(list, logsEntries);\n \n \t\t    \n   }\n", "path": "src/test/java/js_errors/Js_error_home.java", "repo name": "LanaVoit/pgs-smoke"}
{"repo_name": "Add_delete_wishlist_185", "method name": "Add delete wishlist", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     \tdriver.manage().window().setSize(new Dimension(1366, 1050));\n     \tActions actions = new Actions(driver);\n         driver.get(baseUrl + \"personalised-swarovski-crystal-heart-vase.html\");\n         TimeUnit.SECONDS.sleep(5);\n         ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n                 ,driver.findElement(By.cssSelector(\"li > a.button > span\")));\n         TimeUnit.SECONDS.sleep(5);\n         driver.findElement(By.cssSelector(\"li > a.button > span\")).click();\n         TimeUnit.SECONDS.sleep(5);\n         driver.findElement(By.id(\"email\")).clear();\n         driver.findElement(By.id(\"email\")).sendKeys(\"qatestingtestqa@gmail.com\");\n         driver.findElement(By.id(\"pass\")).clear();\n         driver.findElement(By.id(\"pass\")).sendKeys(\"qwerty\");\n         TimeUnit.SECONDS.sleep(5);\n         driver.findElement(By.id(\"send2\")).click();\n         TimeUnit.SECONDS.sleep(15);\n         driver.findElement(By.cssSelector(\"span\")).click();\n         TimeUnit.SECONDS.sleep(3);\n         driver.findElement(By.cssSelector(\"span\")).click();\n         TimeUnit.SECONDS.sleep(3);\n         assertEquals(\"Engraved Swarovski Crystal Heart Vase has been added to your wishlist.\", driver.findElement(By.cssSelector(\"span\")).getText());\n         driver.findElement(By.cssSelector(\"button.mfp-close\")).click();\n         TimeUnit.SECONDS.sleep(3);\n         /*WebElement my_account = driver.findElement(By.id(\"myaccount-menu-link\"));\n         ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n                 ,my_account);\n         TimeUnit.SECONDS.sleep(5);\n         actions.moveToElement(my_account).build().perform();\n         driver.findElement(By.linkText(\"My Wishlist\")).click();\n         TimeUnit.SECONDS.sleep(5);*/\n         driver.get(baseUrl + \"wishlist/\");\n         assertEquals(\"Engraved Swarovski Crystal Heart Vase\", driver.findElement(By.cssSelector(\"div.columns.small-6 > h3.product-name > a[title=\\\"Engraved Swarovski Crystal Heart Vase\\\"]\")).getText());\n         ((JavascriptExecutor)driver).executeScript(\"arguments[0].scrollIntoView();\"\n                 ,driver.findElement(By.cssSelector(\"div.columns.small-6 > h3.product-name > a[title=\\\"Engraved Swarovski Crystal Heart Vase\\\"]\")));\n         driver.findElement(By.cssSelector(\"div.r-tbody > div:last-child > div.columns.small-1 > a.btn-remove.btn-remove2\")).click();\n         assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to remove this product from your wishlist[\\\\s\\\\S]$\"));\n         TimeUnit.SECONDS.sleep(10);\n         assertEquals(\"(0 items)\", driver.findElement(By.cssSelector(\"span.item-count\")).getText());  \n         TimeUnit.SECONDS.sleep(5);\n         WebElement signout = driver.findElement(By.linkText(\"Sign Out\"));\n         WebElement my_account = driver.findElement(By.linkText(\"My Account\"));\n         actions.moveToElement(my_account).build().perform();\n         signout.click();\n \n \n   }\n", "path": "src/test/java/wishlist/Add_delete_wishlist.java", "repo name": "LanaVoit/pgs-smoke"}
{"repo_name": "Create_delete_wishlist_186", "method name": "Create delete wishlist", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     \tdriver.manage().window().setSize(new Dimension(1366, 1050));\n \tActions actions = new Actions(driver);\n     driver.get(baseUrl + \"customer/account/login/\");\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"qatestingtestqa@gmail.com\");\n     driver.findElement(By.id(\"pass\")).clear();\n     driver.findElement(By.id(\"pass\")).sendKeys(\"qwerty\");\n     TimeUnit.SECONDS.sleep(5);\n     driver.findElement(By.id(\"send2\")).click();\n     TimeUnit.SECONDS.sleep(5);\n     assertEquals(\"MY DASHBOARD\", driver.findElement(By.cssSelector(\"h1\")).getText());\n     //assertEquals(\"GREAT TO SEE YOU, TOM JOHNS!\", driver.findElement(By.cssSelector(\"h3.hello\")).getText());\n     TimeUnit.SECONDS.sleep(3);\n     driver.findElement(By.xpath(\"/html/body/div[2]/div[1]/div[1]/div[3]/div/div[2]/ul/li[8]/a\")).click();\n     assertEquals(\"MY WISHLISTS\", driver.findElement(By.cssSelector(\"h1\")).getText());\n     TimeUnit.SECONDS.sleep(3);\n     driver.findElement(By.id(\"wishlist-create-button\")).click();\n     TimeUnit.SECONDS.sleep(3);\n     driver.findElement(By.id(\"wishlist-name\")).clear();\n     driver.findElement(By.id(\"wishlist-name\")).sendKeys(\"Test 123\");\n     driver.findElement(By.cssSelector(\"button.button.btn-save\")).click();\n     TimeUnit.SECONDS.sleep(10);\n     assertEquals(\"Wishlist \\\"Test 123\\\" was successfully saved\", driver.findElement(By.cssSelector(\"li > span\")).getText());\n     assertEquals(\"Test 123 / Edit (0 items)\", driver.findElement(By.cssSelector(\"div.box-title > h3\")).getText());\n     driver.findElement(By.xpath(\"//*[@id='wishlist-view-form']/fieldset/div/button/span/span\")).click();\n     TimeUnit.SECONDS.sleep(7);\n     assertTrue(closeAlertAndGetItsText().matches(\"^You are about to delete your wish list\\\\.\\nThis action cannot be undone\\\\.\\nDo you want to proceed[\\\\s\\\\S]$\"));\n     TimeUnit.SECONDS.sleep(7);\n     assertEquals(\"Wishlist \\\"Test 123\\\" has been deleted.\", driver.findElement(By.cssSelector(\"li > span\")).getText());\n     driver.get(baseUrl + \"customer/account/logout\");\n     TimeUnit.SECONDS.sleep(7);\n   }\n", "path": "src/test/java/wishlist/Create_delete_wishlist.java", "repo name": "LanaVoit/pgs-smoke"}
{"repo_name": "createYoutubeVideoObjectFromVideoId_187", "method name": "create Youtube Video Object From Video Id", "comments": [" attempts to get a string representation of the transcript from a youtube url", " @param videoId", " @return transcript string formatted so that each 2 lines follows this pattern:", " the start time --- end time", " captions said during this time", " captions do not have any newlines within them"], "url": true, "content": "    private static YoutubeVideo function(String videoId) {\n         if (getNumConcurrentBrowswers() >= Constants.NUM_CONCURRENT_VIDEO_INFO_RETRIEVAL_ACTORS) {\n             throw new RuntimeException(\"Too Many Active Video Retrieval Browsers. Try again later\");\n         }\n         WebDriver browser = createWebDriver();\n         WebElement moreButton = null;\n         WebElement transcriptButton = null;\n         WebElement transcriptContainer = null;\n         WebElement videoEndTimeElement = null;\n         WebElement videoTitleElement = null;\n \n         String url = StringManip.generateUrlFromVideoId(videoId);\n         String videoEndTime = null;\n         String videoTitle = null;\n \n         long startTime = System.currentTimeMillis();\n         browser.manage().timeouts().implicitlyWait(TIMEOUT, TimeUnit.SECONDS);\n \n         try {\n             browser.get(url);\n             logger.debug(\"retrieved url: {}\", url);\n             videoEndTimeElement = new WebDriverWait(browser, TIMEOUT).until(ExpectedConditions.visibilityOfElementLocated(By.className(\"ytp-time-duration\")));\n             videoEndTime = videoEndTimeElement.getText();\n             logger.debug(\"retrieved video end time: {}\", videoEndTime);\n \n             videoTitleElement = new WebDriverWait(browser, TIMEOUT).until(ExpectedConditions.visibilityOfElementLocated(By.id(\"eow-title\")));\n             videoTitle = videoTitleElement.getText();\n             logger.debug(\"retrieved video title: {}\", videoTitle);\n \n             moreButton = new WebDriverWait(browser, TIMEOUT).until(ExpectedConditions.elementToBeClickable(By.id(\"action-panel-overflow-button\")));\n             clickElement(browser, moreButton);\n             logger.debug(\"clicked more button\");\n         } catch (Exception e) {\n             e.printStackTrace();\n             killWebDriver(browser);\n             return null;\n         }\n \n         int counter = 0;\n         while (transcriptButton == null && counter < Constants.BROWSER_RETRIES) {\n             try {\n                 transcriptButton = new WebDriverWait(browser, 1).until(ExpectedConditions.elementToBeClickable(By.className(\"action-panel-trigger-transcript\")));\n             } catch (Exception e) {\n                 System.out.println(\"caught exception\");\n                 clickElement(browser, moreButton);\n                 System.out.println(\"clicked more button\");\n                 counter++;\n             }\n         }\n         if (counter == Constants.BROWSER_RETRIES) {\n             killWebDriver(browser);\n             return null;\n         }\n \n         //click and wait for transcript to load\n         try {\n             Thread.sleep(1500);\n             clickElement(browser, transcriptButton);\n             transcriptContainer = new WebDriverWait(browser, TIMEOUT).until(ExpectedConditions.visibilityOfElementLocated(By.id(\"transcript-scrollbox\")));\n             logger.debug(\"transcript successfully loaded into webdriver\");\n \n             Document doc = Jsoup.parse(transcriptContainer.getAttribute(\"innerHTML\"));\n \n             LinkedHashMap<String, String> timeToText = new LinkedHashMap<>();\n \n             for (Element timeRegion : doc.body().children()) {\n                 Elements timeRegionData = timeRegion.children();\n \n                 //first element is always time, second is always text\n                 String currentTime = timeRegionData.get(0).text();\n                 String currentCaption = timeRegionData.get(1).text();\n                 //check for possible repeated times, and concatenate captions if that is the case\n                 if (timeToText.containsKey(currentTime)) {\n                     timeToText.put(currentTime, timeToText.get(currentTime) + currentCaption.trim());\n                 } else {\n                     timeToText.put(currentTime, currentCaption.trim());\n                 }\n             }\n \n             String rawTranscript = timeToTextMappingToRawTranscript(timeToText, videoEndTime);\n \n             logger.debug(\"transcript successfully parsed\");\n             long finishTime = System.currentTimeMillis();\n             logger.debug(\"time taken: {}\", (finishTime - startTime) * 1.0 / 1000);\n             killWebDriver(browser);\n             return new YoutubeVideo(videoId, rawTranscript, videoTitle);\n         } catch (Exception e) {\n             e.printStackTrace();\n             logger.error(e.toString());\n             killWebDriver(browser);\n             return null;\n         }\n     }\n", "path": "VideoSummary/app/utils/Summarizer/TranscriptFactory.java", "repo name": "PiedPiper1337/TLDW"}
{"repo_name": "resetUserPassword_188", "method name": "reset User Password", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String userId = createUser(\"user1\", \"user1@localhost\");\n \n         CredentialRepresentation cred = new CredentialRepresentation();\n         cred.setType(CredentialRepresentation.PASSWORD);\n         cred.setValue(\"password\");\n         cred.setTemporary(false);\n \n         realm.users().get(userId).resetPassword(cred);\n \n         String accountUrl = RealmsResource.accountUrl(UriBuilder.fromUri(getAuthServerRoot())).build(REALM_NAME).toString();\n \n         driver.navigate().to(accountUrl);\n \n         assertEquals(\"Log in to admin-client-test\", driver.getTitle());\n \n         loginPage.login(\"user1\", \"password\");\n \n         assertTrue(driver.getTitle().contains(\"Account Management\"));\n     }\n", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "repo name": "abstractj/keycloak"}
{"repo_name": "openHomeUrl_189", "method name": "open Home Url", "comments": ["Step(\"Open home url\")"], "url": true, "content": "    public void function(){\n         driver.get(homeUrl);\n     }\n", "path": "src/test/java/ru/qatools/school/twister/web/steps/LoginSteps.java", "repo name": "autoschool/twister"}
{"repo_name": "CreatePostPage_190", "method name": "Create Post Page", "comments": [], "url": true, "content": "    public function(WebDriver driver) {\n         super(driver);\n         PageFactory.initElements(new HtmlElementDecorator(driver), this);\n         driver.get( homeUrl+\"post/new\" );\n     }\n", "path": "src/test/java/ru/qatools/school/twister/web/page/CreatePostPage.java", "repo name": "autoschool/twister"}
{"repo_name": "testISaidHello_191", "method name": "test I Said Hello", "comments": ["Test", "Ignore"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"/\");\n         final String htmlText = driver.findElement(By.tagName(\"h2\")).getText();\n         assertNotNull(driver.findElement(By.tagName(\"h2\")));\n         assertEquals(htmlText, \"Hello World!\");\n     }\n", "path": "server/src/test/java/org/craftercms/studio/test/integration/HomepageIntegrationTest.java", "repo name": "craftercms/studio3"}
{"repo_name": "getDocumentAndStoreSource_192", "method name": "get Document And Store Source", "comments": [], "url": true, "content": "  public Document function(final String url, File outputDir, String fileName) {\n     MonitorThread monitor = new MonitorThread(hardLimitTimeoutSeconds, new Runnable() {\n       @Override\n       public void run() {\n         driver.quit();\n         throw new TimeoutException(\"Timedout while retrieving DOM for \" + url);\n       }\n     });\n     monitor.setDaemon(true);\n     driver.manage().deleteAllCookies();\n     driver.get(url);\n     // TODO(claudio): handle download errors, truncated pages, weird redirects (e.g. opendns)\n     String page = driver.getPageSource();\n     storeHtmlSource(outputDir, fileName, page);\n     monitor.done();\n     Preconditions.checkNotNull(url);\n     return WebdriverHelper.getDom(page);\n   }\n", "path": "src/main/java/org/polimi/zarathustra/webdriver/LocalWebdriverWorker.java", "repo name": "google/zarathustra"}
{"repo_name": "cleanGoTo_193", "method name": "clean Go To", "comments": [], "url": true, "content": "  public void function(String url) {\n     cleanDriver.get(url);\n   }\n", "path": "src/main/java/org/polimi/zarathustra/webdriver/WebdriverWorker.java", "repo name": "google/zarathustra"}
{"repo_name": "infectedGoTo_194", "method name": "infected Go To", "comments": [" Navigates the infected webdriver to the given url"], "url": true, "content": "  public void function(String url) {\n     infectedDriver.get(url);\n   }\n", "path": "src/main/java/org/polimi/zarathustra/webdriver/WebdriverWorker.java", "repo name": "google/zarathustra"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_195", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "canBlockInvalidSslCertificates_196", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_197", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_198", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     waitFor(pageTitleToBe(driver, \"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_199", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     assumeFalse(TestUtilities.isFirefox(driver) && TestUtilities.isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     waitFor(pageTitleToBe(driver, \"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_200", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"Opera: failed\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     waitFor(pageTitleToBe(driver, \"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_201", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test", "Ignore(value = {HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     waitFor(pageTitleToBe(driver, \"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_202", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test", "Ignore(value = {HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     waitFor(pageTitleToBe(driver, \"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "handleFormWithJavascriptAction_203", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, HTMLUNIT, IPHONE, OPERA, PHANTOMJS, SAFARI, OPERA_MOBILE, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_204", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_205", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_206", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({ANDROID, IPHONE, OPERA, OPERA_MOBILE, MARIONETTE})"], "url": true, "content": "  public void function() {\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_207", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_208", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_209", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": ["Ignore(value = {IE, IPHONE, OPERA, ANDROID, SAFARI, OPERA_MOBILE, PHANTOMJS},", "Test"], "url": true, "content": "  public void function() {\n     // TODO(user): Set the SSL capability to true.\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     driver.get(url);\n \n     assertThat(driver.getTitle(), equalTo(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_210", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(TestUtilities.isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "jsakamoto/selenium"}
{"repo_name": "getTwitterAuthorizationPINPageSource_211", "method name": "get Twitter Authorization PIN Page Source", "comments": [], "url": true, "content": "\tprivate String function() {\n \t\tString url = requestToken.getAuthenticationURL();\n \t\tdriver.get(url);\n \t\tjse.executeScript(\"document.getElementById('username_or_email').setAttribute('value','\"\n \t\t\t\t+ username + \"')\"); // Twitter ID\n \t\tjse.executeScript(\"document.getElementById('password').setAttribute('value','\"\n \t\t\t\t+ password + \"')\"); // Twitter Password\n \t\tjse.executeScript(\"document.getElementById('allow').click()\");\n \t\tdriver.getPageSource();\n \n \t\treturn driver.getPageSource();\n \t}\n", "path": "ManalithBot/src/main/java/org/manalith/ircbot/plugin/tweetreader/TweetReader.java", "repo name": "mmx900/ManalithBot"}
{"repo_name": "goToURL_212", "method name": "go To URL", "comments": [], "url": true, "content": "    private static void function(FileWriter fw, WebDriver driver, String finalUrl) throws Exception {\n         driver.get(finalUrl);\n         List<WebElement> tables = driver.findElements(By.tagName(\"table\"));\n         // Second table\n         WebElement mainTable = tables.get(1);\n         List<WebElement> trs = mainTable.findElements(By.tagName(\"tr\"));\n         Boolean firstOne = true;\n         int cols = 0;\n         for (WebElement tr : trs) {\n             try {\n                 if (firstOne) {\n                     StringBuilder header = new StringBuilder();\n                     firstOne = false;\n                     List<WebElement> tds = tr.findElements(By.tagName(\"td\"));\n                     for (WebElement td : tds) {\n                         try {\n                             String s = td.findElement(By.tagName(\"strong\")).getText();\n                             header.append(s + \",\");\n                         } catch (NoSuchElementException e) {\n                             header.append(\"ImageURL,\");\n                         }\n                     }\n                     System.out.println(header.toString());\n                     fw.write(header + \"\\n\");\n                     cols = header.toString().split(\",\").length;\n                 } else {\n                     List<WebElement> tds = tr.findElements(By.tagName(\"td\"));\n                     if (tds.size() == cols) {\n                         StringBuilder line = new StringBuilder();\n                         for (WebElement td : tds) {\n                             try {\n                                 String s = \"http://shouji.gd.chinamobile.com\" + td.findElement(By.tagName(\"img\")).getAttribute(\"src\");\n                                 line.append(s + \",\");\n                             } catch (NoSuchElementException e) {\n                                 line.append(td.getText() + \",\");\n                             }\n                         }\n                         System.out.println(line);\n                         fw.write(line.toString() + \"\\n\");\n                     } else {\n                         StringBuilder line = new StringBuilder();\n                         for (int i = 0; i < (cols - tds.size()); i++) {\n                             line.append(\",\");\n                         }\n                         for (WebElement td : tds) {\n                             line.append(td.getText() + \",\");\n                         }\n                         System.out.println(line);\n                         fw.write(line.toString() + \"\\n\");\n                     }\n                 }\n             } catch (NoSuchElementException e) {\n                 System.out.println(\"One page end!\");\n                 fw.write(\"One page end!\".toString() + \"\\n\");\n             }\n         }\n     }\n", "path": "mmcrawler/src/main/java/com/waku/mmdataextract/SalesIssues3.java", "repo name": "mufengxuxu/myworks"}
{"repo_name": "readForEachPage_213", "method name": "read For Each Page", "comments": [], "url": true, "content": "    private static void function(FileWriter fw, WebDriver driver, String url) throws Exception {\n         try {\n             driver.get(url);\n             WebElement table = driver.findElement(By.xpath(\"//table[@bgcolor='BFBEC3']\"));\n             List<WebElement> items = table.findElements(By.xpath(\"./tbody/tr\"));\n             for (int i = 1; i < items.size() - 1; i++) {\n                 List<WebElement> cols = items.get(i).findElements(By.tagName(\"td\"));\n                 for (WebElement col : cols) {\n                     System.out.print(col.getText() + \",\");\n                     fw.write(col.getText() + \",\");\n                 }\n                 System.out.println();\n                 fw.write(\"\\n\");\n             }\n         } catch (Exception e) {\n             System.out.println(\"---------Retry--------------------------\");\n             System.out.println(e.getMessage());\n             System.out.println(\"---------Retry---------------------------\");\n             readForEachPage(fw, driver, url);\n         }\n     }\n", "path": "mmcrawler/src/main/java/com/waku/mmdataextract/IMEI.java", "repo name": "mufengxuxu/myworks"}
{"repo_name": "getHTMLContent_214", "method name": "get HTML Content", "comments": [], "url": true, "content": "\tpublic String function(String url){\n         // 现在用这个来访问谷歌\n         driver.get(url);\n         // 也可以用下面的方式访问谷歌\n         // driver.navigate().to(\"http://www.google.com\");\n         String source = driver.getPageSource();\n        \n         return source;\n \t}\n", "path": "src/com/onwebbe/travelPlan/databugs/QiongYouInternationalCityInfo.java", "repo name": "onwebbe/travelplan"}
{"repo_name": "getHTMLContent_215", "method name": "get HTML Content", "comments": [], "url": true, "content": "\tpublic String function(String url){\n         // 现在用这个来访问谷歌\n         driver.get(url);\n         // 也可以用下面的方式访问谷歌\n         // driver.navigate().to(\"http://www.google.com\");\n         String source = driver.getPageSource();\n        \n         return source;\n \t}\n", "path": "src/com/onwebbe/travelPlan/databugs/QiongYouInternationalCityType.java", "repo name": "onwebbe/travelplan"}
{"repo_name": "testWaitUntilPageTitlePresentPos_216", "method name": "test Wait Until Page Title Present Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilPageTitleContains(pageTitle);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilElementVisiblePos_217", "method name": "test Wait Until Element Visible Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilElementIsVisible(locator);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilTextPresentPos_218", "method name": "test Wait Until Text Present Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilTextPresent(text);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilElementDisapearPos_219", "method name": "test Wait Until Element Disapear Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilPageTitleContains(pageTitle);\n         Button btn = new Button(disappearElement);\n         btn.click();\n         WebDriverWaitUtils.waitUntilElementIsInvisible(disappearElement);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilElementPresentPos_220", "method name": "test Wait Until Element Present Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilElementIsPresent(locator);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWasitUntilElementPipedLocator_221", "method name": "test Wasit Until Element Piped Locator", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilElementIsPresent(pipedLocator);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilWebPageIsValidatedNeg_222", "method name": "test Wait Until Web Page Is Validated Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             Grid.driver().get(url);\n             WebDriverWaitUtils.waitUntilPageIsValidated(new BasicPageImpl() {\n                 @Override\n                 public BasicPageImpl getPage() {\n                     return this;\n                 }\n             });\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilPageTitlePresentNeg_223", "method name": "test Wait Until Page Title Present Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             Grid.driver().get(url);\n             WebDriverWaitUtils.waitUntilPageTitleContains(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilElementVisibleNeg_224", "method name": "test Wait Until Element Visible Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             Grid.driver().get(url);\n             WebDriverWaitUtils.waitUntilElementIsVisible(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilTextPresentNeg_225", "method name": "test Wait Until Text Present Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             WebDriverWaitUtils.waitUntilTextPresent(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilElementDisapearNeg_226", "method name": "test Wait Until Element Disapear Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { RuntimeException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             Grid.driver().get(url);\n             WebDriverWaitUtils.waitUntilElementIsInvisible(disappearElement);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "testWaitUntilElementPresentNeg_227", "method name": "test Wait Until Element Present Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             WebDriverWaitUtils.waitUntilElementIsPresent(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "paulbrodner/SeLion"}
{"repo_name": "logoutFromAdminConsole_228", "method name": "logout From Admin Console", "comments": [" To logout from admin console", " @param driver WebDriver instance", " @param url    base url of the server"], "url": true, "content": "    public static void function(ESWebDriver driver, String url) {\n         driver.get(url + ADMIN_CONSOLE_SUFFIX);\n         driver.findElement(By.linkText(\"Sign-out\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/es/ui/integration/util/ESUtil.java", "repo name": "rushmin/product-es"}
{"repo_name": "testESPublisherAssetOverrideExistingPageTestCase_229", "method name": "test ES Publisher Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding existing page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/assets/gadget/list\");\n //        driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         driver.findElement(By.id(\"popoverExampleTwo\")).click();\n \n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/assets/servicex/details\");\n         assertTrue(isElementPresent(driver, By.id(\"assetOveriddenDetailsPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverrideExistingPageTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testAddAsset_230", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing adding a new asset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, 60);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Addgadget\")));\n         driver.findElement(By.id(\"Addgadget\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.name(\"overview_name\")));\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION_1);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_1);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_1);\n         driver.findElement(By.name(\"images_thumbnail\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                                  +\"/../src/test/resources/images/thumbnail.jpg\");\n         driver.findElement(By.name(\"images_banner\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                               +\"/../src/test/resources/images/banner.jpg\");\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n \n         //driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Addgadget\")));\n \n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         //check if the created gadget is shown\n         assertTrue(isElementPresent(driver, By.linkText(assetName)), \"Adding an asset failed for user:\" + currentUserName);\n         driver.findElement(By.linkText(assetName)).click();\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(2) div.col-lg-10\")).getText());\n         assertEquals(ASSET_VERSION_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(3) div.col-lg-10\")).getText(),\n                      \"Incorrect version\");\n         assertEquals(ASSET_CATEGORY_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(4) div.col-lg-10\")).getText());\n         assertEquals(ASSET_URL_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(5) div.col-lg-10\")).getText(),\n                      \"Incorrect URL\");\n         assertEquals(ASSET_DESCRIPTION_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(6) div.col-lg-10\")).getText(),\n                      \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherAddEditAssetTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testEditAsset_231", "method name": "test Edit Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing editing an asset\", dependsOnMethods = \"testAddAsset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, 60);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(assetName)));\n         driver.findElement(By.linkText(assetName)).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Edit\")));\n         driver.findElement(By.id(\"Edit\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.name(\"overview_version\")));\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION_2);\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(ASSET_CATEGORY_2);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_2);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_2);\n         driver.findElement(By.id(\"editAssetButton\")).click();\n         //closeAlertAndGetItsText(driver, true);\n         //wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(\"Updated the gadget successfully\")));\n         //driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         //check updated info\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Overview\")));\n         driver.findElement(By.id(\"Overview\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Overview\")));\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"/html/body/div/div[3]/div[1]/div/div/div[2]/h1\")));\n \n         assertEquals(assetName, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(2) div.col-lg-10\")).getText());\n         assertEquals(ASSET_VERSION_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(3) div.col-lg-10\")).getText(),\n                      \"Incorrect version\");\n         assertEquals(ASSET_CATEGORY_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(4) div.col-lg-10\")).getText());\n         assertEquals(ASSET_URL_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(5) div.col-lg-10\")).getText(),\n                      \"Incorrect URL\");\n         assertEquals(ASSET_DESCRIPTION_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(6) div.col-lg-10\")).getText(),\n                      \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherAddEditAssetTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testAddAsset_232", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing adding a new asset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, 60);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Addgadget\")));\n         driver.findElement(By.id(\"Addgadget\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.name(\"overview_name\")));\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION_1);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_1);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_1);\n         driver.findElement(By.name(\"images_thumbnail\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                                  +\"/../src/test/resources/images/thumbnail.jpg\");\n         driver.findElement(By.name(\"images_banner\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                               + \"/../src/test/resources/images/banner.jpg\");\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n \n         //driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Addgadget\")));\n \n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         //check if the created gadget is shown\n         assertTrue(isElementPresent(driver, By.linkText(assetName)), \"Adding an asset failed for user:\" + currentUserName);\n         driver.findElement(By.linkText(assetName)).click();\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(2) div.col-lg-10\")).getText());\n         assertEquals(ASSET_VERSION_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(3) div.col-lg-10\")).getText(),\n                      \"Incorrect version\");\n         assertEquals(ASSET_CATEGORY_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(4) div.col-lg-10\")).getText());\n         assertEquals(ASSET_URL_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(5) div.col-lg-10\")).getText(),\n                      \"Incorrect URL\");\n         assertEquals(ASSET_DESCRIPTION_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(6) div.col-lg-10\")).getText(),\n                      \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherTenantAddEditAssetTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testEditAsset_233", "method name": "test Edit Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing editing an asset\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, 60);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(assetName)));\n         driver.findElement(By.linkText(assetName)).click();\n         //TODO edit is not visible in the UI for tenant admins ( check this and uncomment this code segment )\n /*        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Edit\")));\n         driver.findElement(By.id(\"Edit\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.name(\"overview_version\")));\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION_2);\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(ASSET_CATEGORY_2);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_2);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_2);\n         driver.findElement(By.id(\"editAssetButton\")).click();\n         //closeAlertAndGetItsText(driver, true);\n         //check updated info\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Overview\")));\n         driver.findElement(By.id(\"Overview\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Overview\")));\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"/html/body/div/div[3]/div[1]/div/div/div[2]/h1\")));\n \n         assertEquals(assetName, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(2) div.col-lg-10\")).getText());\n         assertEquals(ASSET_VERSION_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(3) div.col-lg-10\")).getText(),\n                      \"Incorrect version\");\n         assertEquals(ASSET_CATEGORY_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(4) div.col-lg-10\")).getText());\n         assertEquals(ASSET_URL_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(5) div.col-lg-10\")).getText(),\n                      \"Incorrect URL\");\n         assertEquals(ASSET_DESCRIPTION_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(6) div.col-lg-10\")).getText(),\n                      \"Incorrect description\");*/\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherTenantAddEditAssetTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testLoginToPublisher_234", "method name": "test Login To Publisher", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"verify login to ES Publisher\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(currentUserName);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(currentUserPwd);\n         driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n         assertEquals(\"Asset | WSO2 Enterprise Store back-office\", driver.getTitle());\n         assertEquals(currentUserName, driver.findElement(By.xpath(\"/html/body/div/div[1]/header/div/div[2]/div/a/div/span\"))\n                 .getText(), \"Logged in user not shown\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherLoginLogoutTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testESPublisherAssetNewPageTestCase_235", "method name": "test ES Publisher Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test adding a new asset page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/assets/gadget/list\");\n //        driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         driver.findElement(By.id(\"popoverExampleTwo\")).click();\n \n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/assets/servicex/new_page\");\n         assertTrue(isElementPresent(driver, By.id(\"assetNewPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetNewPageTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testESRegisterUserTestCase_236", "method name": "test ES Register User Test Case", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing user registration\")"], "url": true, "content": "    public void function() throws Exception {\n         //Register new user\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.id(\"btn-register\")).click();\n         driver.findElement(By.id(\"reg-username\")).clear();\n         driver.findElement(By.id(\"reg-username\")).sendKeys(NEW_USER_NAME);\n         driver.findElement(By.id(\"reg-password\")).clear();\n         driver.findElement(By.id(\"reg-password\")).sendKeys(NEW_USER_PWD);\n         driver.findElement(By.id(\"reg-password2\")).clear();\n         driver.findElement(By.id(\"reg-password2\")).sendKeys(NEW_USER_PWD);\n \n         driver.findElement(By.name(\"reg-email\")).clear();\n         driver.findElement(By.name(\"reg-email\")).sendKeys(NEW_USER_EMAIL);\n         driver.findElement(By.name(\"reg-first-name\")).clear();\n         driver.findElement(By.name(\"reg-first-name\")).sendKeys(NEW_USER_FNAME);\n         driver.findElement(By.name(\"reg-last-name\")).clear();\n         driver.findElement(By.name(\"reg-last-name\")).sendKeys(NEW_USER_LNAME);\n         new Select(driver.findElement(By.name(\"secret-question\"))).selectByVisibleText(SECRET_QUESTION);\n         driver.findElement(By.name(\"secret-answer\")).clear();\n         driver.findElement(By.name(\"secret-answer\")).sendKeys(SECRET_ANSWER);\n         driver.findElement(By.id(\"registrationSubmit\")).click();\n         //check login for store\n         assertTrue(isElementPresent(driver,By.linkText(\"My Items\")), \"Login failed for Store\");\n         assertTrue(isElementPresent(driver,By.linkText(NEW_USER_NAME)), \"Login failed for Store\");\n         //check login for publisher\n         driver.get(baseUrl + PUBLISHER_URL);\n         assertTrue(isElementPresent(driver,By.linkText(NEW_USER_NAME)), \"Login failed for Publisher\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRegisterUserTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testFacebookSharing_237", "method name": "test Facebook Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing facebook link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//span[contains(.,'Gadget')]\")).click();\n         driver.findElement(By.xpath(\"//h4[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/facebook.png']\")).click();\n         String facebookLink = driver.getCurrentUrl();\n         facebookLink = URLDecoder.decode(URLDecoder.decode(facebookLink, \"UTF-8\"), \"UTF-8\");\n         assertTrue(facebookLink.contains(correctFacebookLink), \"Facebook sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testGPlusSharing_238", "method name": "test G Plus Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Google plus link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//span[contains(.,'Gadget')]\")).click();\n         driver.findElement(By.xpath(\"//h4[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/google.png']\")).click();\n         String gplusLink = driver.getCurrentUrl();\n         gplusLink = URLDecoder.decode(gplusLink, \"UTF-8\");\n         assertTrue(gplusLink.contains(correctGplusLink), \"GPlus sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testTwitterSharing_239", "method name": "test Twitter Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Twitter link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//span[contains(.,'Gadget')]\")).click();\n         driver.findElement(By.xpath(\"//h4[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/twitter.png']\")).click();\n         String twitterLink = driver.getCurrentUrl();\n         twitterLink = URLDecoder.decode(twitterLink, \"UTF-8\");\n         assertTrue(twitterLink.contains(correctTwitterLink), \"Twitter sharing is wrong\");\n         assertTrue(twitterLink.contains(correctTwitterLink2), \"Twitter sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testDiggSharing_240", "method name": "test Digg Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Digg link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//span[contains(.,'Gadget')]\")).click();\n         driver.findElement(By.xpath(\"//h4[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/diggit.png']\")).click();\n         String diggLink = driver.getCurrentUrl();\n         diggLink = URLDecoder.decode(diggLink, \"UTF-8\");\n         assertTrue(diggLink.contains(correctDiggLink), \"Digg sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testESPublisherAssetCaramelPageTestCase_241", "method name": "test ES Publisher Asset Caramel Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Testing adding a new caramel page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/assets/gadget/list\");\n //        driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         driver.findElement(By.id(\"popoverExampleTwo\")).click();\n \n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/assets/servicex/new_caramel_page\");\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         assertTrue(isElementPresent(driver, By.id(\"Overview\")));\n         assertTrue(isElementPresent(driver, By.id(\"Edit\")));\n         //assertTrue(isElementPresent(driver, By.id(\"Life Cycle\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetCaramelPageTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "fakeTypeURL_242", "method name": "fake Type URL", "comments": [], "url": true, "content": "  private void function(String url) {\n     getWebDriver().get(url);\n   }\n", "path": "server/src/main/java/org/uiautomation/ios/server/command/web/GetHandler.java", "repo name": "shutkou/ios-driver"}
{"repo_name": "handleFormWithJavascriptAction_243", "method name": "handle Form With Javascript Action", "comments": ["Test(enabled = false)", " @Ignore(value = { ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, SAFARI,", " SELENESE, OPERA_MOBILE }, reason =", " \"Untested on all other browsers, fails on chrome, fails on IE.\", issues = {", " 3508 })"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "ios-selenium-tests/src/test/java/org/uiautomation/ios/selenium/FormHandlingTest.java", "repo name": "shutkou/ios-driver"}
{"repo_name": "gotoApplicationUrl_244", "method name": "goto Application Url", "comments": [], "url": true, "content": "\tvoid function(Context context) {\n \t\tLOG.debug(\"Navigating to homepage\");\n \n \t\tString homepageUrl = System.getProperty(HOMEPAGE_UR);\n \n \t\tif (homepageUrl == null || homepageUrl.isEmpty()) {\n \t\t\tLOG.info(String\n \t\t\t\t\t.format(\"System property \\\"%s\\\" not set, using default homepage url \\\"%s\\\"\",\n \t\t\t\t\t\t\tHOMEPAGE_UR, DEFAULT_HOMEPAGE_URL));\n \t\t\thomepageUrl = DEFAULT_HOMEPAGE_URL;\n \t\t}\n \n \t\tLOG.debug(String\n \t\t\t\t.format(\"Trying to navigate to url \\\"%s\\\"\", homepageUrl));\n \t\tcontext.driver().get(homepageUrl);\n \t}\n", "path": "java-maven/pi-calculator/pi-calculator-test/pi-calculator-selenium-test/src/main/java/com/jeeatwork/ci/exmaple/picalculator/test/selenium/SeleniumPiCalculator.java", "repo name": "tom1299/ci-example"}
{"repo_name": "doSeleniumActionOpenURL_245", "method name": "do Selenium Action Open URL", "comments": ["Override"], "url": true, "content": "    public MessageEvent function(Session session, String host, Identifier identifier, boolean withBase) {\n         MessageEvent message;\n         String url = \"\";\n         try {\n             url = identifier.getLocator();\n             if (!StringUtil.isNull(url)) {\n                 if (withBase) {\n                     host = StringUtil.cleanHostURL(host);\n                     url = host + url;\n                 }\n                 session.getDriver().get(url);\n                 message = new MessageEvent(MessageEventEnum.ACTION_SUCCESS_OPENURL);\n                 message.setDescription(message.getDescription().replaceAll(\"%URL%\", url));\n \n             } else {\n                 message = new MessageEvent(MessageEventEnum.ACTION_FAILED_OPENURL);\n                 message.setDescription(message.getDescription().replaceAll(\"%URL%\", url));\n             }\n         } catch (TimeoutException exception) {\n             message = new MessageEvent(MessageEventEnum.ACTION_FAILED_OPENURL_TIMEOUT);\n             message.setDescription(message.getDescription().replaceAll(\"%TIMEOUT%\", String.valueOf(session.getDefaultWait())));\n             message.setDescription(message.getDescription().replaceAll(\"%URL%\", url));\n             MyLogger.log(WebDriverService.class.getName(), Level.WARN, exception.toString());\n         } catch (WebDriverException exception) {\n             message = new MessageEvent(MessageEventEnum.ACTION_FAILED_SELENIUM_CONNECTIVITY);\n             MyLogger.log(WebDriverService.class.getName(), Level.FATAL, exception.toString());\n         }\n \n         return message;\n     }\n", "path": "source/src/main/java/org/cerberus/service/webdriver/impl/WebDriverService.java", "repo name": "vertigo17/Cerberus"}
{"repo_name": "doSeleniumActionUrlLogin_246", "method name": "do Selenium Action Url Login", "comments": ["Override"], "url": true, "content": "    public MessageEvent function(Session session, String host, String uri) {\n         MessageEvent message;\n \n         host = StringUtil.cleanHostURL(host);\n         String url = host + (host.endsWith(\"/\") ? uri.replace(\"/\", \"\") : uri);\n \n         try {\n             session.getDriver().get(url);\n             message = new MessageEvent(MessageEventEnum.ACTION_SUCCESS_URLLOGIN);\n             message.setDescription(message.getDescription().replaceAll(\"%URL%\", url));\n \n         } catch (TimeoutException exception) {\n             message = new MessageEvent(MessageEventEnum.ACTION_FAILED_URLLOGIN_TIMEOUT);\n             message.setDescription(message.getDescription().replaceAll(\"%TIMEOUT%\", String.valueOf(session.getDefaultWait())));\n             message.setDescription(message.getDescription().replaceAll(\"%URL%\", url));\n             MyLogger.log(WebDriverService.class.getName(), Level.WARN, exception.toString());\n         } catch (Exception e) {\n             message = new MessageEvent(MessageEventEnum.ACTION_FAILED_URLLOGIN);\n             message.setDescription(message.getDescription().replaceAll(\"%URL%\", url) + \" \" + e.getMessage());\n         }\n         return message;\n     }\n", "path": "source/src/main/java/org/cerberus/service/webdriver/impl/WebDriverService.java", "repo name": "vertigo17/Cerberus"}
{"repo_name": "testUserLogin_247", "method name": "test User Login", "comments": [], "url": true, "content": "  public void function(String user, String pass) throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     WebElement usernameField = driver.findElement(By.id(\"username\"));\n \tusernameField.clear();\n     usernameField.sendKeys(user);\n     WebElement passwordField = driver.findElement(By.name(\"password\"));\n \tpasswordField.clear();\n     passwordField.sendKeys(pass);\n     driver.findElement(By.name(\"submit\")).click();\n   }\n", "path": "src/test/java/ru/st/selenium/LoginTest.java", "repo name": "Katarinsa/JAVA-SEL2"}
{"repo_name": "OpenTargetURL_248", "method name": "Open Target URL", "comments": [], "url": true, "content": "    public void function(WebDriver driver, String url) {\n         driver.get(url);\n         System.out.println(\"Start to open the url : \" + url);\n     }\n", "path": "src/main/java/com/atlassian/test/BPT_Auto/PageFactory/CommonPageModel.java", "repo name": "MarcusChang/Taronga"}
{"repo_name": "getDHCPClientList_249", "method name": "get DHCP Client List", "comments": [], "url": true, "content": "\tpublic List<DHCPClient> function() {\n \t\tlogger.info(\"Fetching DHCP clients\");\n \t\twebDriver.get(baseUrl);\n \t    webDriver.findElement(By.id(\"pcPassword\")).clear();\n \t    webDriver.findElement(By.id(\"pcPassword\")).sendKeys(\"admin\");\n \t    webDriver.findElement(By.id(\"loginBtn\")).click();\n \t    \n \t    String title = webDriver.getTitle();\n \t    logger.debug(\"Page title:\" + title);\n \t    \n \t    \n \t    WebDriver menuFrame1 = webDriver.switchTo().frame(webDriver.findElement(By.id(\"frame1\")));\n \t    WebElement findElement = webDriver.findElement(By.id(\"menu\"));\n \t\tfindElement.findElement(By.id(\"menu_dhcp\")).click();\n \t    webDriver.findElement(By.id(\"menu_dhcpclient\")).click();\n \t    logger.debug(\"DHCP menu opened\");\n \t\t\n \t    webDriver.switchTo().defaultContent();\n \t    WebDriver menuFrame2 = webDriver.switchTo().frame(webDriver.findElement(By.id(\"frame2\")));\n \t    webDriver.findElement(By.id(\"updateBtn\")).click();\n \t    logger.debug(\"DHCP clients updated\");\n \t    \n \t    \n \t    WebElement dhcpClientsTable = webDriver.findElement(By.tagName(\"tbody\"));\n \t    List<WebElement> dhcpClientsTableRows = dhcpClientsTable.findElements(By.tagName(\"tr\"));\n \t    \n \t    List<DHCPClient> dhcpClients = new ArrayList<DHCPClient>();\n \t    \n \t    for (WebElement webElement : dhcpClientsTableRows) {\n \t\t\tList<WebElement> dhcpClientsTableCols = webElement.findElements(By.tagName(\"td\"));\n \t    \tDHCPClient client = new DHCPClient();\n \t    \t\n \t    \tclient.setId(Integer.parseInt(dhcpClientsTableCols.get(0).getText().trim()));\n \t    \tclient.setName(dhcpClientsTableCols.get(1).getText().trim());\n \t    \tclient.setMacAddress(dhcpClientsTableCols.get(2).getText().trim());\n \t    \tclient.setAssignedIP(dhcpClientsTableCols.get(3).getText().trim());\n \t    \tclient.setLeaseTime(dhcpClientsTableCols.get(4).getText().trim());\n \t    \tdhcpClients.add(client);\n \t    \tlogger.info(client.getId() + \" \" + client.getName() + \" \" + client.getMacAddress() + \" \"\n \t    \t\t\t+ client.getAssignedIP() + \" \" + client.getLeaseTime());\n \t\t}\n \t    return dhcpClients;\n \t}\n", "path": "routerapi/src/main/java/vb/smarthome/routerAPI/driver/ClientDriver.java", "repo name": "Mercury01/smarthome"}
{"repo_name": "doSeleniumActionOpenURL_250", "method name": "do Selenium Action Open URL", "comments": ["Override"], "url": true, "content": "    public MessageEvent function(Session session, String host, String value, String property, boolean withBase) {\n         MessageEvent message;\n         String url = \"null\";\n         try {\n             if (!StringUtil.isNull(value)) {\n                 url = value;\n             } else if (!StringUtil.isNull(property)) {\n                 url = property;\n             }\n             if (!StringUtil.isNull(url)) {\n                 if (withBase) {\n                     url = \"http://\" + host + url;\n                 }\n                 session.getDriver().get(url);\n \n                 message = new MessageEvent(MessageEventEnum.ACTION_SUCCESS_OPENURL);\n                 message.setDescription(message.getDescription().replaceAll(\"%URL%\", url));\n                 return message;\n             }\n         } catch (WebDriverException exception) {\n             message = new MessageEvent(MessageEventEnum.ACTION_FAILED_SELENIUM_CONNECTIVITY);\n             MyLogger.log(WebDriverService.class.getName(), Level.FATAL, exception.toString());\n             return message;\n         }\n         message = new MessageEvent(MessageEventEnum.ACTION_FAILED_OPENURL);\n         message.setDescription(message.getDescription().replaceAll(\"%URL%\", url));\n         return message;\n     }\n", "path": "source/src/main/java/org/cerberus/serviceEngine/impl/WebDriverService.java", "repo name": "afnogueira/Cerberus"}
{"repo_name": "doSeleniumActionUrlLogin_251", "method name": "do Selenium Action Url Login", "comments": ["Override"], "url": true, "content": "    public MessageEvent function(Session session, String host, String uri) {\n         MessageEvent message;\n \n         String url = \"http://\" + host + (host.endsWith(\"/\") ? uri.replace(\"/\", \"\") : uri);\n         try {\n             session.getDriver().get(url);\n             message = new MessageEvent(MessageEventEnum.ACTION_SUCCESS_URLLOGIN);\n             message.setDescription(message.getDescription().replaceAll(\"%URL%\", url));\n             return message;\n         } catch (Exception e) {\n             message = new MessageEvent(MessageEventEnum.ACTION_FAILED_URLLOGIN);\n             message.setDescription(message.getDescription().replaceAll(\"%URL%\", url) + \" \" + e.getMessage());\n             return message;\n         }\n     }\n", "path": "source/src/main/java/org/cerberus/serviceEngine/impl/WebDriverService.java", "repo name": "afnogueira/Cerberus"}
{"repo_name": "testLoginSuccess_252", "method name": "test Login Success", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         // 指定したURLのウェブページに移動\n         String url = \"http://192.168.99.100/\";\n         String url_goods = \"http://192.168.99.100/products/detail/10002\";\n \n         driver.get(url);\n         driver.get(url_goods);\n         driver.findElement(By.className(\"btn-primary\")).click();\n         driver.findElement(By.className(\"hover_change_image\")).click();\n         driver.findElement(By.className(\"hover_change_image\")).click();\n         driver.get(\"http://192.168.99.100/shopping/nonmember\");\n \n         driver.findElement(By.id(\"nonmember_name_name01\")).sendKeys(\"Familyname\");\n         driver.findElement(By.id(\"nonmember_name_name02\")).sendKeys(\"Firstname\");\n         driver.findElement(By.id(\"nonmember_kana_kana01\")).sendKeys(\"familyname\");\n         driver.findElement(By.id(\"nonmember_kana_kana02\")).sendKeys(\"firstname\");\n         driver.findElement(By.id(\"nonmember_company_name\")).sendKeys(\"会社名\");\n         driver.findElement(By.id(\"zip01\")).sendKeys(\"000\");\n         driver.findElement(By.id(\"zip02\")).sendKeys(\"0000\");\n         WebElement selectBox0 = (driver.findElement(By.id(\"pref\")));\n         Select select0 = new Select(selectBox0);\n         select0.selectByValue(\"36\");\n         driver.findElement(By.id(\"addr01\")).sendKeys(\"都道府県11111\");\n         driver.findElement(By.id(\"addr02\")).sendKeys(\"町11111\");\n         driver.findElement(By.id(\"nonmember_tel_tel01\")).sendKeys(\"000\");\n         driver.findElement(By.id(\"nonmember_tel_tel02\")).sendKeys(\"0000\");\n         driver.findElement(By.id(\"nonmember_tel_tel03\")).sendKeys(\"0000\");\n         driver.findElement(By.id(\"nonmember_fax_fax01\")).sendKeys(\"00\");\n         driver.findElement(By.id(\"nonmember_fax_fax02\")).sendKeys(\"0000\");\n         driver.findElement(By.id(\"nonmember_fax_fax03\")).sendKeys(\"0000\");\n         driver.findElement(By.id(\"nonmember_email\")).sendKeys(\"matsumoto@example.com\");\n         driver.findElement(By.id(\"nonmember_sex_1\")).click();\n         WebElement selectBox = (driver.findElement(By.id(\"nonmember_job\")));\n         Select select = new Select(selectBox);\n         select.selectByValue(\"1\");\n         WebElement selectBox1 = (driver.findElement(By.id(\"nonmember_birth_year\")));\n         Select select1 = new Select(selectBox1);\n         select1.selectByValue(\"1993\");\n         WebElement selectBox2 = (driver.findElement(By.id(\"nonmember_birth_month\")));\n         Select select2 = new Select(selectBox2);\n         select2.selectByValue(\"1\");\n         WebElement selectBox3 = (driver.findElement(By.id(\"nonmember_birth_day\")));\n         Select select3 = new Select(selectBox3);\n         select3.selectByValue(\"7\");\n         // driver.findElement(By.id(\"nonmember_sex_2\")).sendKeys(\"\");\n         driver.findElement(By.id(\"singular\")).click();\n \n         // page changed\n         // Thread.sleep(1000);\n         driver.findElement(By.id(\"next-top\")).click();\n \n         // next page\n         assertThat(driver.findElement(By.className(\"title\")).getText(), is(\"ご購入完了\"));\n     }\n", "path": "src/test/java/introwork/Work.java", "repo name": "aion-sm7/shift-work"}
{"repo_name": "testLoginSuccess_253", "method name": "test Login Success", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n \n         // 入門課題1のURLを取得\n         File html = new File(\"introwork/introWork1.html\");\n         String url = html.toURI().toString();\n         System.out.println(url);\n \n         // 指定したURLのウェブページに移動\n         driver.get(url);\n \n         // 文字列入力・クリックなどの処理\n         Thread.sleep(1000); // デモ用。目で見て分かりやすいように、各操作の間にSleepを入れる\n         WebElement userName = driver.findElement(By.id(\"user_name\"));\n         userName.sendKeys(\"TestUser\");\n         Thread.sleep(1000); // デモ用\n         WebElement password = driver.findElement(By.id(\"password\"));\n         password.sendKeys(\"pass\");\n         Thread.sleep(1000); // デモ用\n         WebElement login = driver.findElement(By.id(\"login\"));\n         login.click();\n         Thread.sleep(1000); // デモ用\n         driver.switchTo().alert().accept();\n         Thread.sleep(1000); // デモ用\n     }\n", "path": "src/test/java/introwork/IntroWork1Test.java", "repo name": "aion-sm7/shift-work"}
{"repo_name": "checkThatInstalledSuccessfully_254", "method name": "check That Installed Successfully", "comments": [" このプログラムはハンズオンに必要なプログラムが適切にインストールされたかをチェックするプログラムです。", " このファイルをInteillJ IDEA上から、右クリック>'Run EnvironmentCheckTest' によりJUnitとして実行し、", " JUnitのテストが成功すれば、インストールは正常に完了しています。", "Ignore", "Test"], "url": true, "content": "    public void function() {\n         File html = new File(\"introWork/introWork1.html\");\n         String url = html.toURI().toString();\n         driver.get(url);        \n         WebElement userName = driver.findElement(By.id(\"user_name\"));\n         userName.sendKeys(\"TestUser\");\n         WebElement password = driver.findElement(By.id(\"password\"));\n         password.sendKeys(\"pass\");\n         WebElement login = driver.findElement(By.id(\"login\"));\n         login.click();\n         driver.switchTo().alert().accept();\n     }\n", "path": "src/test/java/EnvironmentCheckTest.java", "repo name": "aion-sm7/shift-work"}
{"repo_name": "getGoogleAccessToken_255", "method name": "get Google Access Token", "comments": [" This can get a single scope only.  Unable to automate requesting token for multiple scopes."], "url": true, "content": "    private String function(String email, String pw, String client_id, String redirect_uri, String scope) {\n         Property staticToken = property(\"authToken\");\n         if (staticToken.exists()) {\n             return staticToken.getPropertyValue();\n         }\n \n         // https://accounts.google.com/o/oauth2/auth?response_type=token&client_id=37298738223-o26xasxd7a217srs4t7ue1fudmt1ao1ge5.apps.googleusercontent.com&redirect_uri=https://[YOUR_TEST_APP].appspot.com/your_redirect_path&scope=https://www.googleapis.com/auth/userinfo.email\n \n         String requestTokenUrl = String.format(\"%s?response_type=token&client_id=%s&redirect_uri=%s&scope=%s\",\n             GOOGLE_OAUTH2_REQUEST_TOKEN_URL, client_id, redirect_uri, scope);\n \n         String cacheKey = email + \":\" + requestTokenUrl;\n         if (tokenCache.containsKey(cacheKey)) {\n             return tokenCache.get(cacheKey);\n         }\n         driver.manage().deleteAllCookies();\n         driver.get(requestTokenUrl);\n \n         try {\n             driver.findElement(By.id(\"Email\")).sendKeys(email);\n             driver.findElement(By.id(\"Passwd\")).sendKeys(pw);\n             driver.findElement(By.id(\"signIn\")).submit();\n         } catch (NoSuchElementException nsee) {\n             String errMsg = driver.getCurrentUrl() + \" ----- \" + driver.getPageSource();\n             throw new NoSuchElementException(nsee.toString() + \" ----- \" + errMsg);\n         }\n \n         try {\n             WebElement button = driver.findElement(By.id(\"submit_approve_access\"));\n             Graphene.waitModel(driver).withTimeout(5, TimeUnit.SECONDS).until().element(button).is().enabled();\n             button.click();\n         } catch (NoSuchElementException e) {\n             // Apparently access has already been approved and the user is not being asked to approve access.\n             // The approval page will only be displayed again after access is revoked through Google Accounts.\n         }\n \n         // The redirect looks like:\n         // https://[YOUR_TEST_APP.appspot.com/your_redirect_path#access_token=ee29.AHES6ZQPPOue4vgQhacbi__AN8Y0wLLt60sEchFaw&token_type=Bearer&expires_in=3600\n \n         // URLEncodedUtils unable to parse parameters after #\n         String redirectUrlWithToken = driver.getCurrentUrl().replace(\"#access_token=\", \"?access_token=\");\n \n         List<NameValuePair> params;\n         try {\n             params = URLEncodedUtils.parse(new URI(redirectUrlWithToken), \"UTF-8\");\n         } catch (URISyntaxException urise) {\n             throw new IllegalStateException(urise);\n         }\n \n         String accessToken = null;\n         for (NameValuePair param : params) {\n             if (param.getName().equals(\"access_token\")) {\n                 accessToken = param.getValue();\n             }\n         }\n         assertNotNull(\"Token is null:\" + driver.getCurrentUrl() + \" ----- \" + driver.getPageSource(), accessToken);\n \n         tokenCache.put(cacheKey, accessToken);\n         return accessToken;\n     }\n", "path": "tests/appengine-tck-oauth/src/test/java/com/google/appengine/tck/oauth/ClientSideWebAppFlowTest.java", "repo name": "alesj/appengine-tck"}
{"repo_name": "urlToPng_256", "method name": "url To Png", "comments": [" Loads a URL in the given driver and returns PNG data.", " ", " @param driver", "            the driver to load the URL in.", " @param url", "            the URL to load.", " @return PNG data."], "url": true, "content": "    public static byte[] function(WebDriver driver, String url) {\n         driver.get(url);\n         TakesScreenshot ts = (TakesScreenshot) driver;\n         byte[] data = ts.getScreenshotAs(OutputType.BYTES);\n         return data;\n     }\n", "path": "web-renderer-java/src/main/java/io/github/arnodb/webrenderer/WebRenderer.java", "repo name": "arnodb/web-renderer"}
{"repo_name": "testPageTitle_257", "method name": "test Page Title", "comments": [], "url": true, "content": "    public void function(String url, String ER){\n       driver.get(url);\n       String title = driver.getTitle();\n       assertThat(title, equalTo(ER));\n     }\n", "path": "src/test/java/ru/yandex/autoschool/splinter/IndexResources/PageTitleTest.java", "repo name": "autoschool/splinter"}
{"repo_name": "goToServerRoot_258", "method name": "go To Server Root", "comments": [], "url": true, "content": "    public void function() {\n         d.get( serverUrl );\n     }\n", "path": "server/src/webtest/java/org/neo4j/server/webdriver/WebadminWebdriverLibrary.java", "repo name": "dksaputra/community"}
{"repo_name": "goToWebadminStartPage_259", "method name": "go To Webadmin Start Page", "comments": [], "url": true, "content": "    public void function() {\n         if(isUsingDevDotHTML()) {\n             d.get( serverUrl + \"webadmin/dev.html\" );\n         } else if(avoidRedirectAndGoStraightToWebAdminHomepage()) {\n             d.get( serverUrl + \"webadmin/\" );\n         } else {\n             goToServerRoot();\n         }\n         waitForTitleToBe( \"Neo4j Monitoring and Management Tool\" );\n     }\n", "path": "server/src/webtest/java/org/neo4j/server/webdriver/WebadminWebdriverLibrary.java", "repo name": "dksaputra/community"}
{"repo_name": "testWithWebDriver_260", "method name": "test With Web Driver", "comments": ["@Test"], "url": true, "content": "    public void function() throws Exception {\n         int port = 9090;\n         HttpProxyServer proxyServer = new DefaultHttpProxyServer(port);\n         proxyServer.start();\n \n         Proxy proxy = new Proxy();\n         proxy.setProxyType(Proxy.ProxyType.MANUAL);\n         String proxyStr = String.format(\"localhost:%d\", port);\n         proxy.setHttpProxy(proxyStr);\n         proxy.setSslProxy(proxyStr);\n \n         DesiredCapabilities capability = DesiredCapabilities.firefox();\n         capability.setCapability(CapabilityType.PROXY, proxy);\n \n         final String urlString = \"http://www.yahoo.com/\";\n         \n         // Note this will actually launch a browser!!\n         final WebDriver driver = new FirefoxDriver(capability);\n         driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);\n \n         driver.get(urlString);\n         final String source = driver.getPageSource();\n         \n         // Just make sure it got something within reason.\n         assertTrue(source.length() > 100);\n         driver.close();\n \n         proxyServer.stop();\n     }\n", "path": "src/test/java/org/littleshoot/proxy/EndToEndStoppingTest.java", "repo name": "edisonh/LittleProxy"}
{"repo_name": "visitTestCases_261", "method name": "visit Test Cases", "comments": [], "url": true, "content": "    public static void function( AtomicInteger nextTest, int tests ) {\n         String baseUrl = \"https://localhost:8443/benchmark/BenchmarkTest\";\n         FirefoxDriver driver = new FirefoxDriver();\n         JavascriptExecutor js = (JavascriptExecutor) driver;\n \n         while( nextTest.get() <= tests ) {\n             String test = \"000000\" + nextTest.getAndIncrement();\n             test = test.substring(test.length() - 5);\n \n             try {\n                 String url = baseUrl + test + \".html\";\n                 System.out.println(\"URL: \" + url);\n                 driver.get(url);\n                 \n                 // get URL, find all buttons, and click them\n                 for ( WebElement we : driver.findElements(By.tagName(\"form\"))) {\n                     we.submit();\n                 }\n \n                 // reload page, and if there's a javascript button, click that\n                 driver.get(url);\n                 Thread.sleep(500);\n                 String jQuerySelector = \"#login-btn\";\n                 js.executeScript(\"$(\\\"\" + jQuerySelector + \"\\\").click();\");\n                 Thread.sleep(500);\n             } catch (Exception e) {\n                 // This is expected since many pages do not have the jquery button\n                 // System.err.println(\"  -> ERROR: \" + e.getMessage());\n             }\n         }\n \n         driver.quit();\n     }\n", "path": "src/main/java/org/owasp/benchmark/tools/BenchmarkRunner.java", "repo name": "h3xstream/Benchmark"}
{"repo_name": "testLoginProjectsLogout_262", "method name": "test Login Projects Logout", "comments": ["Ignore(\"test needs an started totask2 web applications\")", "Test"], "url": true, "content": "  public void function() throws Exception {\n       \n     LOG.debug(\"selenium: running test..\");\n   \n     // open | / | \n     driver.get(baseUrl + \"/\");\n     // assertText | css=h1 | *totask2*\n     assertTrue(driver.findElement(By.cssSelector(\"h1\")).getText().matches(\"^[\\\\s\\\\S]*totask2[\\\\s\\\\S]*$\"));\n     // assertText | //a[contains(@href, '/weekEntry')] | edit weekly work hours..\n     assertEquals(\"edit weekly work hours..\", driver.findElement(By.xpath(\"//a[contains(@href, '/weekEntry')]\")).getText());\n     // click | link=projects.. | \n     driver.findElement(By.linkText(\"projects..\")).click();\n     // assertText | id=loginForm | *sign in*\n     assertTrue(driver.findElement(By.id(\"loginForm\")).getText().matches(\"^[\\\\s\\\\S]*sign in[\\\\s\\\\S]*$\"));\n     // type | name=username | unit-test-user\n     driver.findElement(By.name(\"username\")).clear();\n     driver.findElement(By.name(\"username\")).sendKeys(\"unit-test-user\");\n     // type | name=password | t123456\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"t123456\");\n     // click | css=button.btn.btn-primary | \n     driver.findElement(By.cssSelector(\"button.btn.btn-primary\")).click();\n     // assertText | css=h1 | currently defined projects*\n     assertTrue(driver.findElement(By.cssSelector(\"h1\")).getText().matches(\"^currently defined projects[\\\\s\\\\S]*$\"));\n     // click | //button[@value='sign out'] | \n     driver.findElement(By.xpath(\"//button[@value='sign out']\")).click();\n     // assertText | css=div.container.paper-box | *you have been logged out*\n     assertTrue(driver.findElement(By.cssSelector(\"div.container.paper-box\")).getText().matches(\"^[\\\\s\\\\S]*you have been logged out[\\\\s\\\\S]*$\"));\n   }\n", "path": "src/test/java/org/manathome/totask2/selenium/LoginProjectsLogout.java", "repo name": "man-at-home/totask2"}
{"repo_name": "navigateToUrl_263", "method name": "navigate To Url", "comments": [" Navigate to a particular url", " @param url"], "url": true, "content": "\tpublic void function(String url){\n \t\tthis.driver.get(url);\n \t}\n", "path": "src/test/java/org/imaginea/test/automation/framework/keyword/webdriverbased/google/GoogleKeyword.java", "repo name": "menonvarun/taf-test"}
{"repo_name": "a_test_login_page_264", "method name": "a test login page", "comments": ["Test"], "url": true, "content": "    public void function() throws Throwable {\n         System.out.println(\"This is test number 1\");\n         driver.get(url);\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.id(\"email\")).sendKeys(\"admin@test.com\");\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.id(\"pwd\")).sendKeys(\"1234\");\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.className(\"btn-default\")).click();\n         assert (driver.findElement(By.id(\"calendarView\")) != null);\n     }\n", "path": "src/test/java/no/ntnu/team2/studyeasy/selenium/SeleniumTests.java", "repo name": "oskogstad/StudyEasy"}
{"repo_name": "b_test_headerNavigation_265", "method name": "b test headerNavigation", "comments": ["Test"], "url": true, "content": "    public void function() throws Throwable {\n         System.out.println(\"This is test number 2\");\n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.get(url);\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.id(\"users_link\")).click();\n         assert (driver.findElement(By.id(\"createUserForm\")) != null);\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.id(\"orderRoom_link\")).click();\n         assert (driver.findElement(By.id(\"mapWrap\")) != null);\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.id(\"createTimetable_link\")).click();\n         assert (driver.findElement(By.id(\"createTimetableForm\")) != null);\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.id(\"calendar_link\")).click();\n         assert (driver.findElement(By.id(\"calendarView\")) != null);\n     }\n", "path": "src/test/java/no/ntnu/team2/studyeasy/selenium/SeleniumTests.java", "repo name": "oskogstad/StudyEasy"}
{"repo_name": "c_test_calendar_266", "method name": "c test calendar", "comments": ["Test"], "url": true, "content": "    public void function() throws Throwable {\n         System.out.println(\"This is test number 3\");\n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.get(url);\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.className(\"fc-agendaWeek-button\")).click();\n         assert (driver.findElement(By.className(\"fc-agendaWeek-view\")) != null);\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.className(\"fc-agendaDay-button\")).click();\n         assert (driver.findElement(By.className(\"fc-agendaDay-view\")) != null);\n \n         if (wait) {\n             Thread.sleep(2000);\n         }\n         driver.findElement(By.className(\"fc-month-button\")).click();\n         assert (driver.findElement(By.className(\"fc-month-view\")) != null);\n     }\n", "path": "src/test/java/no/ntnu/team2/studyeasy/selenium/SeleniumTests.java", "repo name": "oskogstad/StudyEasy"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_267", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "soundcloud/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_268", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, HTMLUNIT, IE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "soundcloud/selenium"}
{"repo_name": "testWaitUntilPageTitlePresentPos_269", "method name": "test Wait Until Page Title Present Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilPageTitleContains(pageTitle);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilElementVisiblePos_270", "method name": "test Wait Until Element Visible Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilElementIsVisible(locator);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilTextPresentPos_271", "method name": "test Wait Until Text Present Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilTextPresent(text);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilElementDisapearPos_272", "method name": "test Wait Until Element Disapear Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilPageTitleContains(pageTitle);\n         Button btn = new Button(disappearElement);\n         btn.click();\n         WebDriverWaitUtils.waitUntilElementIsInvisible(disappearElement);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilElementPresentPos_273", "method name": "test Wait Until Element Present Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilElementIsPresent(locator);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWasitUntilElementPipedLocator_274", "method name": "test Wasit Until Element Piped Locator", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilElementIsPresent(pipedLocator);\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilWebPageIsValidatedNeg_275", "method name": "test Wait Until Web Page Is Validated Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             Grid.driver().get(url);\n             WebDriverWaitUtils.waitUntilWebPageIsValidated(new BasicPageImpl() {\n                 @Override\n                 public BasicPageImpl getPage() {\n                     return this;\n                 }\n             });\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilPageTitlePresentNeg_276", "method name": "test Wait Until Page Title Present Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             Grid.driver().get(url);\n             WebDriverWaitUtils.waitUntilPageTitleContains(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilElementVisibleNeg_277", "method name": "test Wait Until Element Visible Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             Grid.driver().get(url);\n             WebDriverWaitUtils.waitUntilElementIsVisible(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilTextPresentNeg_278", "method name": "test Wait Until Text Present Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             WebDriverWaitUtils.waitUntilTextPresent(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilElementDisapearNeg_279", "method name": "test Wait Until Element Disapear Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { RuntimeException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             Grid.driver().get(url);\n             WebDriverWaitUtils.waitUntilElementIsInvisible(disappearElement);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "testWaitUntilElementPresentNeg_280", "method name": "test Wait Until Element Present Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             WebDriverWaitUtils.waitUntilElementIsPresent(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "ILikeToNguyen/SeLion"}
{"repo_name": "getWebDriver_281", "method name": "get Web Driver", "comments": [], "url": true, "content": "\tprivate WebDriver function(){\n \t\tWebDriver driver = null;\n \n \t\tif (driver==null){\n \t\t\ttry {\n \t\t\t\tFirefoxBinary ffox = new FirefoxBinary();\n \t\t\t\tif (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n \t\t\t\t\tffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to run with DISPLAY 99\n \t\t\t\t}\n \t\t\t\tFirefoxProfile profile = new FirefoxProfile();\n \t\t\t\tdriver = new FirefoxDriver(ffox, profile);\n \t\t\t} catch (Exception e){\n \t\t\t}\n \t\t}\n \n \t\tif (driver==null){\n \t\t\ttry {\n \t\t\t\tdriver = new ChromeDriver();\n \t\t\t} catch (Exception e){\n \t\t\t}\n \t\t}\n \n \t\tif (driver==null){\n \t\t\ttry {\n \t\t\t\tdriver = new SafariDriver();\n \t\t\t} catch (Exception e){\n \t\t\t}\n \t\t}\n \n \t\tString url;\n \t\tif (System.getProperty(\"url\")!=null) {\n \t\t\turl = System.getProperty(\"url\");\n \t\t} else {\n \t\t\turl = \"http://localhost:8080\";\n \t\t}\n \n \t\tlong start = System.currentTimeMillis();\n \t\tboolean loaded = false;\n \t\tdriver.get(url);\n \n \t\twhile (System.currentTimeMillis() - start < 60*1000) {\n \t        // wait for page load\n \t\t\ttry {\n \t\t        (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n \t\t            public Boolean apply(WebDriver d) {\n \t\t                return d.findElement(By.partialLinkText(\"Start\")).isDisplayed();\n \t\t            }\n \t\t        });\n \t\t        loaded = true;\n \t\t        break;\n \t\t\t} catch (TimeoutException e){\n \t\t\t\tdriver.navigate().to(url);\n \t\t\t}\n \t\t}\n \n \t\tif (loaded==false) {\n \t\t\tfail();\n \t\t}\n \n \t\treturn driver;\n \t}\n", "path": "zeppelin/zeppelin-server/src/test/java/com/nflabs/zeppelin/ZeppelinIT.java", "repo name": "KrishnaVamsiKV/Shark"}
{"repo_name": "go_to_the_page_282", "method name": "go to the page", "comments": ["Given(\"^Go to the page, (.*)$\")"], "url": true, "content": "\tpublic void function(String url) throws Throwable {\n \t\tdriver.get(url);\n \t}\n", "path": "src/test/java/cn/shin/autotest/steps/CucumberSteps.java", "repo name": "ShinFK/shin-autotest"}
{"repo_name": "testVaadinAbstractForm_283", "method name": "test Vaadin Abstract Form", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/test\");\n \t\tassertEquals(\n \t\t\t\t\"Search Key\",\n \t\t\t\tdriver.findElement(\n \t\t\t\t\t\tBy.xpath(\"//div[@id='ROOT-2521314']/div/div[2]/div/div/div/div/div/div/div/div/div/div/div[6]/div/div\"))\n \t\t\t\t\t\t.getText());\n \t}\n", "path": "org.abstractform.vaadin/src/test/java/org/abstractform/vaadin/test/ITTestVaadinAbstractForm.java", "repo name": "frincon/abstractform"}
{"repo_name": "testVaadinAbstractForm_284", "method name": "test Vaadin Abstract Form", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/test\");\n \t\tassertEquals(\"Sample Name\", driver.findElement(By.xpath(\"(//input[@type='text'])[4]\")).getAttribute(\"value\"));\n \t\tassertEquals(\"on\", driver.findElement(By.id(\"gwt-uid-2\")).getAttribute(\"value\"));\n \t\tdriver.findElement(By.cssSelector(\"span.v-button-caption\")).click();\n \t\tThread.sleep(500);\n \t\tassertEquals(\"A\", driver.findElement(By.xpath(\"(//input[@type='text'])[8]\")).getAttribute(\"value\"));\n \t\tassertEquals(\"mail@nomail.org\", driver.findElement(By.xpath(\"(//input[@type='text'])[7]\")).getAttribute(\"value\"));\n \t\tassertEquals(\"▼Others\", driver.findElement(By.cssSelector(\"span.v-button-caption\")).getText());\n \t\tdriver.findElement(By.xpath(\"//div[2]/div/div/span/span\")).click();\n \t\tThread.sleep(1000);\n \t\tassertEquals(\"Otro nombre\", driver.findElement(By.xpath(\"(//input[@type='text'])[4]\")).getAttribute(\"value\"));\n \t\tassertEquals(\"B\", driver.findElement(By.xpath(\"(//input[@type='text'])[8]\")).getAttribute(\"value\"));\n \t}\n", "path": "org.abstractform.itest/src/test/java/org/abstractform/vaadin/itest/test/ITTestAll.java", "repo name": "frincon/abstractform"}
{"repo_name": "should_find_saved_people_285", "method name": "should find saved people", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         JdbcConnectionPool dataSource = JdbcConnectionPool.\n                 create(\"jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\", \"sa\", \"sa\");\n         JdbcPersonRepository.createDatabaseSchema(dataSource);\n         new EnvEntry(\"jdbc/primaryDs\", dataSource);\n \n         Server server = new Server(0);\n         server.setHandler(new WebAppContext(\"src/main/webapp\", \"/\"));\n         server.start();\n \n         String rootUrl = \"http://localhost:\" + server.getConnectors()[0].getLocalPort() + \"/\";\n \n         WebDriver browser = new HtmlUnitDriver() {\n             @Override\n             public WebElement findElement(By by) {\n                 try {\n                     return super.findElement(by);\n                 } catch (NoSuchElementException e) {\n                     throw new NoSuchElementException(\"Can't find \" + by + \" in \" + getPageSource());\n                 }\n             }\n         };\n         browser.get(rootUrl);\n         browser.findElement(By.linkText(\"Create person\")).click();\n         browser.findElement(By.name(\"full_name\")).sendKeys(\"Darth Vader\");\n         browser.findElement(By.name(\"create_person\")).click();\n \n         browser.findElement(By.linkText(\"Find people\")).click();\n         assertThat(browser.getPageSource())\n             .contains(\"Darth Vader\");\n     }\n", "path": "src/test/java/com/exilesoft/javaee/PersonWebTest.java", "repo name": "jhannes/javaee-spike"}
{"repo_name": "redirectToLocation_286", "method name": "redirect To Location", "comments": [" Redirect user to given location", " @param domain   name of the domain where user wants to direct in to", " @param location name of the location to be directed to"], "url": true, "content": "    public void function(String domain, String location) throws Exception {\n         driver = getDriver();\n         String url = getBaseUrl() + \"/\" + domain;\n \n         if (location != null && !location.isEmpty()) {\n             url += \"/\" + location;\n         }\n         driver.get(url);\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/ds/ui/integration/util/DSUIIntegrationTest.java", "repo name": "lalankea/product-ues"}
{"repo_name": "testOrderBook_287", "method name": "test Order Book", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"catalog-search-input\")).clear();\n     driver.findElement(By.id(\"catalog-search-input\")).sendKeys(\"beckett\");\n     driver.findElement(By.id(\"catalog-search-button\")).click();\n     driver.findElement(By.id(\"exlidFacet3-0\")).click();\n     driver.findElement(By.id(\"exlidFacet4-0\")).click();\n     driver.findElement(By.linkText(\"Wie es ist\")).click();\n     driver.findElement(By.linkText(\"Bestellen\")).click();\n     driver.findElement(By.id(\"REQUEST_TAB_SIGN_IN_RECORD_3\")).click();\n   }\n", "path": "src/test/java/selenium/BookOrder.java", "repo name": "library-example/test"}
{"repo_name": "testSearchTitle_288", "method name": "test Search Title", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"catalog-search-input\")).clear();\n     driver.findElement(By.id(\"catalog-search-input\")).sendKeys(\"waiting for godot\");\n     driver.findElement(By.id(\"catalog-search-button\")).click();\n     driver.findElement(By.linkText(\"Waiting for Godot [En attendant Godot. Engl.]. A tragicomedy in 2 acts. (1. publ.)\")).click();\n   }\n", "path": "src/test/java/selenium/TitleSearch.java", "repo name": "library-example/test"}
{"repo_name": "testStoreSortOnPopularity_289", "method name": "test Store Sort On Popularity", "comments": ["TODO-disabled bug", "Test(groups = \"wso2.es.store\", description = \"Testing sorting on popularity\", enabled = false)"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         //sort by popularity\n         driver.findElement(By.cssSelector(\"i.icon-star\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"h4\"),\n                 popularAsset1));\n         assertEquals(driver.findElement(By.cssSelector(\"h4\")).getText(), popularAsset1,\n                 \"Popularity Sort failed\");\n         assertEquals(driver.findElement(By.xpath\n                 (\"//div[@id='assets-container']/div/div[2]/div/div/a/h4\")).getText(),\n                 popularAsset2, \"Popularity Sort failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testStoreSortOnAlphabeticalOrder_290", "method name": "test Store Sort On Alphabetical Order", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing sorting on alphabetical order\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         //sort by alphabetical order\n         driver.findElement(By.cssSelector(\"i.icon-sort-alphabetical\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.xpath\n                 (\"//div[@id='assets-container']/div/div[3]/div/div/a/h4\"), BUBBLE_CHART));\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h4\")).getText(),\n                 \"Alphabetical Sort failed\");\n         assertEquals(BAR_CHART, driver.findElement(By.xpath\n                 (\"//div[@id='assets-container']/div/div[2]/div/div/a/h4\")).getText(),\n                 \"Alphabetical Sort failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testStoreSortOnCreatedTime_291", "method name": "test Store Sort On Created Time", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing sorting on created time\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         //sort by created time\n         driver.findElement(By.cssSelector(\"i.icon-calendar\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"h4\"),\n                 assetName));\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h4\")).getText()\n                 , \"Recent Sort failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testCategoryGoogle_292", "method name": "test Category Google", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category Google\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         //google category\n         driver.findElement(By.cssSelector(\"i.icon-caret-down\")).click();\n         driver.findElement(By.linkText(\"Google\")).click();\n         assertEquals(3, driver.findElements(By.cssSelector(\"div.asset-details\")).size(),\n                 \"Google Category wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testCategoryWSO2_293", "method name": "test Category WSO2", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category WSO2\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"i.icon-caret-down\")).click();\n         driver.findElement(By.linkText(\"WSO2\")).click();\n         assertEquals(5, driver.findElements(By.cssSelector(\"div.asset-details\")).size(),\n                 \"WSO2 Category wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testCategoryTemplate_294", "method name": "test Category Template", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category template\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"i.icon-caret-down\")).click();\n         driver.findElement(By.linkText(\"Templates\")).click();\n         assertEquals(6, driver.findElements(By.cssSelector(\"div.span3.asset\")).size(),\n                 \"Templates Category wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testCategoryMenu_295", "method name": "test Category Menu", "comments": ["TODO-BUG", "Test(groups = \"wso2.es.store\", description = \"Testing category drop down\", enabled = false)"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"i.icon-caret-down\")).click();\n         driver.findElement(By.linkText(\"Templates\")).click();\n         assertEquals(\"Templates\", driver.findElement(By.cssSelector(\"div.breadcrumb-head\"))\n                 .getText(), \"Category drop down not showing selected category \");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testAddAsset_296", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing adding a new asset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.linkText(\"Add\")).click();\n         driver.findElement(By.name(\"overview_provider\")).clear();\n         driver.findElement(By.name(\"overview_provider\")).sendKeys(currentUserName);\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(assetVersion);\n         driver.findElement(By.name(\"overview_createdtime\")).clear();\n         driver.findElement(By.name(\"overview_createdtime\")).sendKeys(assetCreatedTime);\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText\n                 (assetCategory1);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(assetUrl1);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(assetDescription1);\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n \n         driver.findElementPoll(By.linkText(assetName), 30);\n         //check if the created gadget is shown\n         assertTrue(isElementPresent(By.linkText(assetName)), \"Adding an asset failed for user:\" +\n                 currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherAddEditAssetTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testEditAsset_297", "method name": "test Edit Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing editing an asset\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.linkText(assetName)).click();\n         driver.findElement(By.linkText(\"Edit\")).click();\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText\n                 (assetCategory2);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(assetUrl2);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(assetDescription2);\n         driver.findElement(By.id(\"editAssetButton\")).click();\n         closeAlertAndGetItsText();\n \n         //check updated info\n         driver.findElement(By.linkText(\"Overview\")).click();\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h4\")).getText());\n         assertEquals(currentUserName, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr/td[2]\")).getText(),\n                 \"Incorrect provider\");\n         assertEquals(assetName, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[2]/td[2]\"))\n                 .getText(), \"Incorrect asset name\");\n         assertEquals(assetVersion, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[3]/td[2]\"))\n                 .getText(), \"Incorrect version\");\n         assertEquals(assetCategory2, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[5]/td[2]\"))\n                 .getText(), \"Incorrect Category\");\n         assertEquals(assetUrl2, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[6]/td[2]\"))\n                 .getText(), \"Incorrect URL\");\n         assertEquals(assetDescription2, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[7]/td[2]\"))\n                 .getText(), \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherAddEditAssetTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESPublisherOverridenGlobalPageTestCase_298", "method name": "test ES Publisher Overriden Global Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/pages/splash\");\n         assertTrue(isElementPresent(By.id(\"assetOverridenGlobalPage\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherOverridenGlobalPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESPublisherAssetOverrideExistingPageTestCase_299", "method name": "test ES Publisher Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         // driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/asts/servicex/details\");\n //      driver.findElementPoll(By.id(\"assetOveriddenDetailsPageH1\"),30);\n         assertTrue(isElementPresent(By.id(\"assetOveriddenDetailsPageH1\")));\n //      assertTrue(isElementPresent(By.cssSelector(\"h1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverrideExistingPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testAddAsset_300", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing adding a new asset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.linkText(\"Add\")).click();\n         driver.findElement(By.name(\"overview_provider\")).clear();\n         driver.findElement(By.name(\"overview_provider\")).sendKeys(providerName);\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(assetVersion);\n         driver.findElement(By.name(\"overview_createdtime\")).clear();\n         driver.findElement(By.name(\"overview_createdtime\")).sendKeys(assetCreatedTime);\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText\n                 (assetCategory1);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(assetUrl1);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(assetDescription1);\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n \n         driver.findElementPoll(By.linkText(assetName), 30);\n         //check if the created gadget is shown\n         assertTrue(isElementPresent(By.linkText(assetName)), \"Adding an asset failed for user:\" +\n                 currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherTenantAddEditAssetTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testEditAsset_301", "method name": "test Edit Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing editing an asset\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.linkText(assetName)).click();\n         driver.findElement(By.linkText(\"Edit\")).click();\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText\n                 (assetCategory2);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(assetUrl2);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(assetDescription2);\n         driver.findElement(By.id(\"editAssetButton\")).click();\n         closeAlertAndGetItsText();\n \n         //check updated info\n         driver.findElement(By.linkText(\"Overview\")).click();\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h4\")).getText());\n         assertEquals(driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr/td[2]\")).getText\n                 (), providerName, \"Incorrect provider\");\n         assertEquals(driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[2]/td[2]\"))\n                 .getText(), assetName, \"Incorrect asset name\");\n         assertEquals(driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[3]/td[2]\"))\n                 .getText(), assetVersion, \"Incorrect version\");\n         assertEquals(driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[5]/td[2]\"))\n                 .getText(), \"WSO2\", \"Incorrect Category\");\n         assertEquals(driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[6]/td[2]\"))\n                 .getText(), assetUrl2, \"Incorrect URL\");\n         assertEquals(driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[7]/td[2]\"))\n                 .getText(), assetDescription2, \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherTenantAddEditAssetTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "findElementPoll_302", "method name": "find Element Poll", "comments": [" This method will keep refreshing/reloading the current url for a given number of poll-count", " until a given element is available", " @param by        Element that is expected to be present", " @param pollCount Number of time page need to be reloaded into webdriver"], "url": true, "content": "    public void function(By by, int pollCount) {\n         int count = 0;\n         while (!isElementPresent(by) && count < pollCount) {\n             String url = driver.getCurrentUrl();\n             driver.get(url);\n             count++;\n         }\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org.wso2.es.ui.integration.extension.util/ESWebDriver.java", "repo name": "maheshika/product-es"}
{"repo_name": "testAddAsset_303", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.store\", description = \"Add asset\")//,", "dependsOnMethods = \"testESStoreSearchAssetsByName\")"], "url": true, "content": "    public void function() throws Exception {\n         ESUtil.login(driver, baseUrl, \"publisher\", userInfo.getUserName(),\n                 userInfo.getPassword());\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.linkText(\"Add\")).click();\n //        wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"h4\"), \"Overview\"));\n         driver.findElement(By.name(\"overview_provider\")).clear();\n         driver.findElement(By.name(\"overview_provider\")).sendKeys(assetAuthor);\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(assetVersion);\n         driver.findElement(By.name(\"overview_createdtime\")).clear();\n         driver.findElement(By.name(\"overview_createdtime\")).sendKeys(assetCreatedTime);\n         new Select(driver.findElement(By.name(\"overview_category\")))\n                 .selectByVisibleText(assetCategory);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(assetURL);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(assetDescription);\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n         if (isAlertPresent()) {\n             String alert = closeAlertAndGetItsText();\n             log.warn(alert + \": modal box appeared\");\n         }\n         driver.findElementPoll(By.linkText(assetName), 10);\n         driver.findElement(By.cssSelector(\"a.btn\")).click();\n         driver.findElement(By.linkText(assetName)).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"h4\"),\n                 assetName));\n         driver.findElement(By.linkText(\"Life Cycle\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"div.pull-left\"),\n                 \"Lifecycle - \" + assetName));\n         driver.findElement(By.id(\"In-Review\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"commentModalLabel\"),\n                 \"Add a comment\"));\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(\"ok\");\n         driver.findElement(By.id(\"commentModalSave\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"state\"), \"IN-REVIEW\"));\n         assertEquals(driver.findElement(By.id(\"state\")).getText(), \"IN-REVIEW\",\n                 \"Not Promoted to In-Review\");\n         driver.get(driver.getCurrentUrl());\n         driver.findElement(By.id(\"Published\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"commentModalLabel\"),\n                 \"Add a comment\"));\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(\"ok\");\n         driver.findElement(By.id(\"commentModalSave\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"state\"), \"PUBLISHED\"));\n         assertEquals(driver.findElement(By.id(\"state\")).getText(), \"PUBLISHED\",\n                 \"Not Promoted to Published\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSearchGadgetListTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESPublisherNewGlobalPageTestCase_304", "method name": "test ES Publisher New Global Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/pages/servicex_global\");\n         assertTrue(isElementPresent(By.id(\"assetNewGlobalPage\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherNewGlobalPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESRegisterUserTestCase_305", "method name": "test ES Register User Test Case", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing user registration\")"], "url": true, "content": "    public void function() throws Exception {\n         //Register new user\n         driver.get(baseUrl + \"/store\");\n         driver.findElement(By.id(\"btn-register\")).click();\n         driver.findElement(By.id(\"reg-username\")).clear();\n         driver.findElement(By.id(\"reg-username\")).sendKeys(newUserName);\n         driver.findElement(By.id(\"reg-password\")).clear();\n         driver.findElement(By.id(\"reg-password\")).sendKeys(newUserPwd);\n         driver.findElement(By.id(\"reg-password2\")).clear();\n         driver.findElement(By.id(\"reg-password2\")).sendKeys(newUserPwd);\n         driver.findElement(By.id(\"registrationSubmit\")).click();\n         //check login for store\n         assertTrue(isElementPresent(By.linkText(\"My Items\")), \"Login failed for Store\");\n         assertTrue(isElementPresent(By.linkText(newUserName)), \"Login failed for Store\");\n         //check login for publisher\n         driver.get(baseUrl + \"/publisher\");\n         assertTrue(isElementPresent(By.linkText(newUserName)), \"Login failed for Publisher\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRegisterUserTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESStoreNewGlobalPageTestCase_306", "method name": "test ES Store New Global Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/pages/servicex_global\");\n         assertTrue(isElementPresent(By.id(\"assetNewGlobalPage\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreNewGlobalPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testStoreBeforeAddRatings_307", "method name": "test Store Before Add Ratings", "comments": ["Test(groups = \"wso2.es.store.ratings\", description = \"Test Start Add Rating\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"i.icon-cog\")).click();\n         driver.findElement(By.cssSelector(\"h4\")).click();\n         driver.findElement(By.linkText(\"User Reviews\")).click();\n         driver.switchTo().frame(driver.findElement(By.id(\"socialIfr\")));\n         assertEquals(\"Please Sign in to add a Review\",\n                 driver.findElement(By.cssSelector(\"div.com-guest\")).getText());\n         assertEquals(\"Be the first one to review!\",\n                 driver.findElement(By.cssSelector(\"p.com-first-review\")).getText());\n         driver.switchTo().defaultContent();\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreRatingsTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testSubscriptionCreation_308", "method name": "test Subscription Creation", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Check if subscriptions are created\")"], "url": true, "content": "    public void function() throws Exception {\n         //add new gadget\n         AssetUtil.addNewAsset(driver, baseUrl, assetType, providerName, assetName, assetVersion,\n                 createdTime);\n         if (isAlertPresent()) {\n             closeAlertAndGetItsText();\n         }\n         //navigate to admin console\n         driver.get(baseUrl + \"/carbon/\");\n         driver.findElement(By.linkText(\"Gadgets\")).click();\n         driver.findElementPoll(By.linkText(assetName), 30);\n         driver.findElement(By.linkText(assetName)).click();\n         //check two subscriptions\n         String subscription1 = driver.findElement(By.cssSelector(\"#subscriptionsTable > tbody > \" +\n                 \"tr.tableOddRow > td\")).getText();\n         String subscription2 = driver.findElement(By.xpath\n                 (\"//table[@id='subscriptionsTable']/tbody/tr[3]/td\")).getText();\n         String subscription1Name;\n         String subscription2Name;\n         //used to make the test independent of the subscription creation order\n         if (LC_SUBSCRIPTION.equalsIgnoreCase(subscription1)) {\n             subscription1Name = LC_SUBSCRIPTION;\n             subscription2Name = UPDATE_SUBSCRIPTION;\n         } else {\n             subscription1Name = UPDATE_SUBSCRIPTION;\n             subscription2Name = LC_SUBSCRIPTION;\n         }\n         assertEquals(subscription1Name, subscription1);\n         assertEquals(subscription2Name, subscription2);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherTenantSubscriptionTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testAnonHomePage_309", "method name": "test Anon Home Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Anonymous User Home Page\")"], "url": true, "content": "    public void function() throws Exception {\n         //test appearance\n         driver.get(baseUrl + \"/store\");\n         try {\n             assertTrue(isElementPresent(By.cssSelector(\"a.brand\")),\n                     \"Home Page error: Logo missing\");\n             assertEquals(\"Sign in\", driver.findElement(By.linkText(\"Sign in\")).getText(),\n                     \"Home Page error: Sign in button missing\");\n             assertTrue(isElementPresent(By.id(\"btn-register\")), \"Home Page error: Register button\" +\n                     \" missing\");\n             assertEquals(\"Gadget\", driver.findElement(By.xpath\n                     (\"//div[@id='container-search']/div/div/div/div/a[1]/li\")).getText(),\n                     \"Home Page error: Gadget menu missing\");\n             assertEquals(\"Site\", driver.findElement(By.xpath\n                     (\"//div[@id='container-search']/div/div/div/div/a[2]/li\")).getText(),\n                     \"Home Page error: Site menu missing\");\n             assertEquals(\"Recent Gadgets\", driver.findElement(By.linkText(\"Recent Gadgets\"))\n                     .getText(), \"Home Page error: Recent Gadgets links missing\");\n             assertEquals(\"Recent Sites\", driver.findElement(By.linkText(\"Recent Sites\")).getText(),\n                     \"Home Page error: Recent Sites links missing\");\n             assertTrue(isElementPresent(By.id(\"search\")), \"Home Page error: Search missing\");\n             assertTrue(isElementPresent(By.cssSelector(\"div.span3.store-right > div.row > div\" +\n                     \".span3\")), \"Home Page error: Recent Added side list missing\");\n         } catch (Error e) {\n             verificationErrors.append(e.toString());\n         }\n         verificationErrors = failOnError(verificationErrors);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonHomePageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testAnonNavigationTop_310", "method name": "test Anon Navigation Top", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Anonymous Navigation from top menu\")"], "url": true, "content": "    public void function() throws Exception {\n         //test menu navigation\n         driver.get(baseUrl + \"/store\");\n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[1]/li\"))\n                 .click();\n         assertEquals(LINE_PLUS_BAR_CHART, driver.findElement(By.xpath(\"//h4[contains(.,\" +\n                 \"'\" + LINE_PLUS_BAR_CHART + \"')]\")).getText(),\n                 \"Gadgets Menu not working\");\n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[2]/li\"))\n                 .click();\n         assertEquals(AMAZON, driver.findElement(By.xpath(\"//h4[contains(.,\" +\n                 \"'\" + AMAZON + \"')]\")).getText(),\n                 \"Sites Menu not working\");\n         driver.findElement(By.cssSelector(\"a.brand\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonHomePageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testAnonNavigationLinks_311", "method name": "test Anon Navigation Links", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Anonymous Navigation page links\")"], "url": true, "content": "    public void function() throws Exception {\n         //test link navigation\n         driver.get(baseUrl + \"/store\");\n         driver.findElement(By.cssSelector(\"a.brand\")).click();\n         driver.findElement(By.linkText(\"Recent Gadgets\")).click();\n         assertEquals(LINE_CHART, driver.findElement(By\n                 .xpath(\"//h4[contains(.,'\" + LINE_CHART + \"')]\")).getText(),\n                 \"Recent Gadgets link not working\");\n         driver.findElement(By.cssSelector(\"a.brand\")).click();\n         driver.findElement(By.linkText(\"Recent Sites\")).click();\n         assertEquals(AMAZON, driver.findElement(By.xpath(\"//h4[contains(.,'\" + AMAZON + \"')]\"))\n                 .getText(), \"Recent Sites link not working\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonHomePageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testGadgetPage_312", "method name": "test Gadget Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Gadgets Page\")"], "url": true, "content": "    public void function() throws Exception {\n         //test appearance of gadget page\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         try {\n             assertEquals(\"Gadget\", driver.findElement(By.xpath\n                     (\"//div[@id='container-search']/div/div/div/div/a/li\")).getText(),\n                     \"Gadget Menu missing\");\n             assertEquals(\"Line Plus Bar Chart\", driver.findElement(By.\n                     xpath(\"//a[contains(text(),'Line Plus Bar Chart')]\")).getText(),\n                     \"Gadgets missing\");\n             firstAsset = driver.findElement(By.cssSelector(\"h4\")).getText();\n             assertEquals(\"Recently Added\", driver.findElement(By.xpath\n                     (\"//div[@id='container-assets']/div/div[2]/div[1]/div/h4\")).getText(),\n                     \"Recently Added section missing\");\n             assertEquals(\"Line Plus Bar Chart\", driver.findElement(By.\n                     xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).getText(),\n                     \"Recently added Gadgets missing\");\n             assertEquals(\"Tags\", driver.findElement(By.xpath\n                     (\"//div[@id='container-assets']/div/div[2]/div[2]/div/h4\")).getText(),\n                     \"Tags section missing\");\n             assertTrue(isElementPresent(By.linkText(\"charts\")), \"Tags missing (charts tag)\");\n             assertEquals(\"All Categories\", driver.findElement(By.\n                     cssSelector(\"div.breadcrumb-head\")).getText()\n                     , \"Category drop down missing\");\n             assertTrue(isElementPresent(By.cssSelector(\"i.icon-star\")), \"Popularity sort missing\");\n             assertTrue(isElementPresent(By.cssSelector(\"i.icon-sort-alphabetical\")),\n                     \"Alphabetical sort missing\");\n             assertTrue(isElementPresent(By.cssSelector(\"i.icon-calendar\")), \"Recent sort missing\");\n             assertTrue(isElementPresent(By.id(\"search\")), \"Search tray missing\");\n         } catch (Error e) {\n             verificationErrors.append(e.toString());\n         }\n         verificationErrors = failOnError(verificationErrors);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreGadgetPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testLinksFromPage_313", "method name": "test Links From Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Gadgets Page Links\","], "url": true, "content": "    public void function() throws Exception {\n         //test links\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         try {\n             assertEquals(firstAsset, driver.findElement(By.cssSelector(\"h4\")).getText(),\n                     \"Cannot view selected Gadget's page through Gadget list\");\n             driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a/li\"))\n                     .click();\n             driver.findElement(By.xpath(\"//a[contains(text(),'Line Chart')]\")).click();\n             assertEquals(\"Line Chart\", driver.findElement(By.cssSelector(\"h3\")).getText(),\n                     \"Cannot view selected Gadget's page through Recently added list\");\n \n             //TODO disabled - bug\n //            driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a/li\"))\n //                    .click();\n //            driver.findElement(By.linkText(\"pie\")).click();\n //            assertEquals(1, driver.findElements(By.cssSelector(\"div.span3.asset\")).size(),\n //                    \"Tags not working\");\n         } catch (Error e) {\n             verificationErrors.append(e.toString());\n         }\n         verificationErrors = failOnError(verificationErrors);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreGadgetPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESPublisherAssetNewPageTestCase_314", "method name": "test ES Publisher Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/asts/servicex/new_page\");\n         assertTrue(isElementPresent(By.id(\"assetNewPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetNewPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESStoreLogin_315", "method name": "test ES Store Login", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Store Login\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store\");\n         driver.findElement(By.linkText(\"Sign in\")).click();\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(currentUserName);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(currentUserPwd);\n         driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n         assertTrue(isElementPresent(By.linkText(\"My Items\")), \"My Items link missing\");\n         assertTrue(isElementPresent(By.linkText(currentUserName)), \"Logged in user not shown\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreLoginLogoutTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESStoreLogout_316", "method name": "test ES Store Logout", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Store Logout\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store\");\n         driver.findElement(By.linkText(currentUserName)).click();\n         driver.findElement(By.linkText(\"Sign out\")).click();\n         assertTrue(isElementPresent(By.linkText(\"Sign in\")), \"Sign in link missing\");\n         assertEquals(\"Register\", driver.findElement(By.id(\"btn-register\")).getText(),\n                 \"Register button missing\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreLoginLogoutTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESPublisherAssetCaramelPageTestCase_317", "method name": "test ES Publisher Asset Caramel Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/asts/servicex/new_caramel_page\");\n         //WebDriverWait wait = new WebDriverWait(driver, 10);\n         //wait.until(ExpectedConditions.presenceOfElementLocated(By.linkText(\"Overview\")));\n         //wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.linkText(\"Overview\")));\n         //assertTrue(isElementPresent(By.cssSelector(\"span.publisherTitle\")));\n //        driver.findElementPoll(By.linkText(\"Overview\"),5);\n         assertTrue(isElementPresent(By.linkText(\"Overview\")));\n         assertTrue(isElementPresent(By.linkText(\"Edit\")));\n         assertTrue(isElementPresent(By.linkText(\"Life Cycle\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetCaramelPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESPublishToStore_318", "method name": "test ES Publish To Store", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing Publishing an asset to store\")"], "url": true, "content": "    public void function() throws Exception {\n         //Add a new gadget with info\n         driver.findElement(By.linkText(\"Add\")).click();\n         driver.findElement(By.name(\"overview_provider\")).clear();\n         driver.findElement(By.name(\"overview_provider\")).sendKeys(userInfo.getUserName());\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(assetVersion);\n         driver.findElement(By.name(\"overview_createdtime\")).clear();\n         driver.findElement(By.name(\"overview_createdtime\")).sendKeys(assetCreatedTime);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(assetUrl);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(assetDescription);\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n         if (isAlertPresent()) {\n             closeAlertAndGetItsText();\n         }\n         //publish the gadget to store\n         driver.findElement(By.cssSelector(\"a.btn\")).click();\n         driver.findElementPoll(By.linkText(assetName), 30);\n         driver.findElement(By.linkText(\"Publishing Asset\")).click();\n         driver.findElement(By.linkText(\"Life Cycle\")).click();\n \n         driver.findElement(By.id(\"In-Review\")).click();\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(lcComment);\n         driver.findElement(By.id(\"commentModalSave\")).click();\n \n         driver.get(driver.getCurrentUrl());\n         driver.findElement(By.id(\"Published\")).click();\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(lcComment);\n         driver.findElement(By.id(\"commentModalSave\")).click();\n         //navigate to store to check the published gadget\n         driver.get(baseUrl + \"/store\");\n         driver.findElementPoll(By.xpath(\"//a[contains(.,'\" + assetName + \"')]\"), 5);\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h4\")).getText());\n         driver.findElement(By.cssSelector(\"div.asset-author-category > ul > li\")).click();\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h3\")).getText());\n         assertEquals(assetDescription, driver.findElement(By.cssSelector(\"p\")).getText());\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESPublishToStore.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESStoreAssetNewPageTestCase_319", "method name": "test ES Store Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/servicex/new_page\");\n         assertTrue(isElementPresent(By.id(\"assetNewPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreAssetNewPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testSubscriptionCreation_320", "method name": "test Subscription Creation", "comments": ["Test(groups = \"wso2.es\", description = \"Check if subscriptions are created\", enabled = true)"], "url": true, "content": "    public void function() throws Exception {\n         //add new gadget\n         AssetUtil.addNewAsset(driver, baseUrl, assetType, currentUserName, assetName,\n                 assetVersion, createdTime);\n         if (isAlertPresent()) {\n             closeAlertAndGetItsText();\n         }\n         //navigate to admin console\n         driver.get(baseUrl + \"/carbon/\");\n         driver.findElement(By.linkText(\"Gadgets\")).click();\n         driver.findElementPoll(By.linkText(assetName), 30);\n         driver.findElement(By.linkText(assetName)).click();\n         //check two subscriptions\n         String subscription1 = driver.findElement(By.cssSelector(\"#subscriptionsTable > tbody > \" +\n                 \"tr.tableOddRow > td\")).getText();\n         String subscription2 = driver.findElement(By.xpath\n                 (\"//table[@id='subscriptionsTable']/tbody/tr[3]/td\")).getText();\n         String subscription1Name;\n         String subscription2Name;\n         //used to make the test independent of the subscription creation order\n         if (LC_SUBSCRIPTION.equalsIgnoreCase(subscription1)) {\n             subscription1Name = LC_SUBSCRIPTION;\n             subscription2Name = UPDATE_SUBSCRIPTION;\n         } else {\n             subscription1Name = UPDATE_SUBSCRIPTION;\n             subscription2Name = LC_SUBSCRIPTION;\n         }\n         assertEquals(subscription1Name, subscription1);\n         assertEquals(subscription2Name, subscription2);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherSubscriptionTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testUpdateNotification_321", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update \" +"], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         AssetUtil.updateAsset(driver, baseUrl, assetType, assetName, assetDescription);\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         //read email using smtp\n         boolean hasMail = ESUtil.containsEmail(smtpPropertyLocation, emailPwd, email,\n                 updateNotificationSubject);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherNotificationTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESStoreAssetOverrideExistingPageTestCase_322", "method name": "test ES Store Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n \n         driver.get(baseUrl + \"/store/asts/servicex/list\");\n         assertTrue(isElementPresent(By.id(\"assetListingPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreAssetOverrideExistingPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "logoutFromAdminConsole_323", "method name": "logout From Admin Console", "comments": [], "url": true, "content": "    public static void function(ESWebDriver driver, String url) {\n         driver.get(url + adminConsoleSuffix);\n         driver.findElement(By.linkText(\"Sign-out\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org.wso2.es.ui.integration.util/ESUtil.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESStoreAddedAssetTestCase_324", "method name": "test ES Store Added Asset Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[3]/li\")).click();\n         //driver.wait(3000);\n         driver.findElementPoll(By.id(\"assetListingPageH1\"),30);\n         assertTrue(isElementPresent(By.id(\"assetListingPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreAddedAssetTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testUpdateNotification_325", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update \" +"], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         AssetUtil.updateAsset(driver, baseUrl, assetType, assetName, assetDescription);\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         //read email using smtp\n         boolean hasMail = ESUtil.containsEmail(smtpPropertyLocation, emailPwd, email,\n                 updateNotificationSubject);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherTenantNotificationTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESPublisherAddedAssetTestCase_326", "method name": "test ES Publisher Added Asset Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/\");\n         assertTrue(isElementPresent(By.cssSelector(\"button.btn.dropdown-toggle\")));\n         driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.findElement(By.linkText(\"Service\")).click();\n         assertTrue(isElementPresent(By.cssSelector(\"span.publisherTitle\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAddedAssetTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "findElementPoll_327", "method name": "find Element Poll", "comments": [" This method will keep refreshing/reloading the current url for a given number of poll-count", " until a given element is available", " @param by        Element that is expected to be present", " @param pollCount Number of time page need to be reloaded into webdriver"], "url": true, "content": "    public void function(By by, int pollCount) {\n         int count = 0;\n         while (!isElementPresent(by) && count < pollCount) {\n             String url = driver.getCurrentUrl();\n             driver.get(url);\n             count++;\n         }\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org.wso2.es.ui.integration.util/ESWebDriver.java", "repo name": "maheshika/product-es"}
{"repo_name": "testListPageSortByName_328", "method name": "test List Page Sort By Name", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Test sort by name\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher\");\n         driver.findElementPoll(By.linkText(assetName), 30);\n         driver.findElement(By.partialLinkText(\"NAME\")).click();\n         assertEquals(nameSortAsset1, driver.findElement(By.xpath\n                 (\"//tbody[@id='list-asset-table-body']/tr[1]/td[2]\")).getText(),\n                 \"Sort on name failed\");\n         assertEquals(nameSortAsset2, driver.findElement(By.xpath\n                 (\"//tbody[@id='list-asset-table-body']/tr[14]/td[2]\")).getText(),\n                 \"Sort on name failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherListPageSortTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "goToUrl_329", "method name": "go To Url", "comments": [" @param url", "            The URL."], "url": true, "content": "\tpublic void function(String url) {\n \t\ttry {\n \t\t\tbrowser.navigate().to(url);\n \t\t\tThread.sleep(this.crawlWaitReload);\n \t\t\thandlePopups();\n \t\t} catch (WebDriverException e) {\n \t\t\tthrowIfConnectionException(e);\n \t\t\treturn;\n \t\t} catch (InterruptedException e) {\n \t\t\tLOGGER.error(\"goToUrl got interrupted while waiting for the page to be loaded\", e);\n \t\t\treturn;\n \t\t}\n \t}\n", "path": "src/main/java/com/crawljax/browser/WebDriverBackedEmbeddedBrowser.java", "repo name": "shauvik/crawljax-old"}
{"repo_name": "testSeleCreateLocation_330", "method name": "test Sele Create Location", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Locations\")).click();\n     driver.findElement(By.linkText(\"Add location\")).click();\n     driver.findElement(By.id(\"nick\")).clear();\n     driver.findElement(By.id(\"nick\")).sendKeys(\"user\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"pass\");\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     driver.findElement(By.id(\"name\")).clear();\n     driver.findElement(By.id(\"name\")).sendKeys(\"Huehue\");\n     driver.findElement(By.id(\"city\")).clear();\n     driver.findElement(By.id(\"city\")).sendKeys(\"Huehueland\");\n     driver.findElement(By.id(\"code\")).clear();\n     driver.findElement(By.id(\"code\")).sendKeys(\"66-666\");\n     driver.findElement(By.id(\"address\")).clear();\n     driver.findElement(By.id(\"address\")).sendKeys(\"Huehue st.\");\n     driver.findElement(By.id(\"public\")).click();\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     assertEquals(\"Name: Huehue\", driver.findElement(By.cssSelector(\"p\")).getText());\n     assertEquals(\"City: Huehueland\", driver.findElement(By.xpath(\"//p[2]\")).getText());\n     assertEquals(\"Postal: 66-666\", driver.findElement(By.xpath(\"//p[3]\")).getText());\n     assertEquals(\"Street: Huehue st.\", driver.findElement(By.xpath(\"//p[4]\")).getText());\n     assertEquals(\"Public: true\", driver.findElement(By.xpath(\"//p[5]\")).getText());\n   }\n", "path": "src/test/java/put/io2/nerdlounge/SeleCreateLocation.java", "repo name": "starspire/NerdLounge"}
{"repo_name": "testSeleLoginLogout_331", "method name": "test Sele Login Logout", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"nick\")).clear();\n     driver.findElement(By.id(\"nick\")).sendKeys(\"user\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"pass\");\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     assertEquals(\"user\", driver.findElement(By.cssSelector(\"p.navbar-text.navbar-right > span\")).getText());\n     driver.findElement(By.linkText(\"Logout\")).click();\n     assertEquals(\"Please input your credentials\", driver.findElement(By.xpath(\"//span\")).getText());\n   }\n", "path": "src/test/java/put/io2/nerdlounge/SeleLoginLogout.java", "repo name": "starspire/NerdLounge"}
{"repo_name": "navigateToUrl_332", "method name": "navigate To Url", "comments": [" Navigates to a new web page in the current browser window. <br />", " ", " Usage for FitNesse: |navigate to Url|http://www.example.org|<br />", " ", " FitNesse usage..: |navigate to Url|arg1| <br />", " FitNesse example: |navigate to Url|http://www.example.org| <br />", " <br />", " ", " @param url", "            URL of page to navigate to", " @return always true to show inside FitNesse a positive result"], "url": true, "content": "\tpublic boolean function(String url) {\n \t\twebDriver.get(url);\n \t\treturn true;\n \t}\n", "path": "web/src/main/java/org/testeditor/fixture/web/WebFixture.java", "repo name": "test-editor/fixtures"}
{"repo_name": "navigateToUrl_333", "method name": "navigate To Url", "comments": [" Navigates to a new web page in the current browser window.", " ", " @param url", "            URL of page to navigate to", " @return always {@code true} to show inside FitNesse a positive result"], "url": true, "content": "\tpublic boolean function(String url) {\n \t\twebDriver.get(url);\n \t\treturn true;\n \t}\n", "path": "web/src/main/java/org/testeditor/fixture/web/AbstractWebFixture.java", "repo name": "test-editor/fixtures"}
{"repo_name": "testSortItem_334", "method name": "test Sort Item", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/\");\n \t\tdriver.findElement(By.linkText(\"Innovation Item\")).click();\n \t\t//Thread.sleep(2500);\n \t\tdriver.findElement(By.linkText(\"Owner\")).click();\n \t\t//Thread.sleep(2500);\n \t\tdriver.findElement(By.linkText(\"Submission Date\")).click();\n \t\tdriver.findElement(By.linkText(\"Theme\")).click();\n \t\tdriver.findElement(By.cssSelector(\"span.glyphicon.glyphicon-chevron-up\")).click();\n \t\tdriver.findElement(By.cssSelector(\"span.glyphicon.glyphicon-chevron-down\")).click();\n \t\tdriver.findElement(By.xpath(\"//div[@id='albums']/div[3]/div/div[4]/div/div/div/a/span\")).click();\n \t\tdriver.findElement(By.cssSelector(\"div.dropdown.open > ul.dropdown-menu > li > a\")).click();\n \t\tdriver.findElement(By.id(\"releaseYear\")).clear();\n \t\tdriver.findElement(By.id(\"releaseYear\")).sendKeys(\"4/30/2015\");\n \t\tdriver.findElement(By.xpath(\"//div[3]/button\")).click();\n \t}\n", "path": "src/test/java/UITestBase.java", "repo name": "Cloud-Meets-CI/cirrus"}
{"repo_name": "testAddItem_335", "method name": "test Add Item", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/\");\n \t\tdriver.findElement(By.linkText(\"add an idea\")).click();\n \t\tdriver.findElement(By.id(\"title\")).clear();\n \t\tdriver.findElement(By.id(\"title\")).sendKeys(\"Authorization as a Service\");\n \t\tdriver.findElement(By.id(\"artist\")).clear();\n \t\tdriver.findElement(By.id(\"artist\")).sendKeys(\"Patrick Graziosi\");\n \t\tdriver.findElement(By.id(\"description\")).clear();\n \t\tdriver.findElement(By.id(\"description\")).sendKeys(\"That guy in the picture loved it!\");\n \t\tdriver.findElement(By.id(\"releaseYear\")).clear();\n \t\tdriver.findElement(By.id(\"releaseYear\")).sendKeys(\"4/30/2016\");\n \t\tdriver.findElement(By.id(\"genre\")).clear();\n \t\tdriver.findElement(By.id(\"genre\")).sendKeys(\"Right Speed IT\");\n \t\tdriver.findElement(By.xpath(\"//div[3]/button\")).click();\n \t\t//Thread.sleep(1000);\n \t}\n", "path": "src/test/java/UITestBase.java", "repo name": "Cloud-Meets-CI/cirrus"}
{"repo_name": "testAddAndDeleteItem_336", "method name": "test Add And Delete Item", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/\");\n \t\t// Idea 2\n \t\tdriver.findElement(By.linkText(\"add an idea\")).click();\n \t\tdriver.findElement(By.id(\"title\")).clear();\n \t\tdriver.findElement(By.id(\"title\")).sendKeys(\"Test Idea 2\");\n \t\tdriver.findElement(By.id(\"artist\")).clear();\n \t\tdriver.findElement(By.id(\"artist\")).sendKeys(\"Patrick Graziosi\");\n \t\tdriver.findElement(By.id(\"description\")).clear();\n \t\tdriver.findElement(By.id(\"description\")).sendKeys(\"Test Idea 2\");\n \t\tdriver.findElement(By.id(\"releaseYear\")).clear();\n \t\tdriver.findElement(By.id(\"releaseYear\")).sendKeys(\"4/30/2016\");\n \t\tdriver.findElement(By.id(\"genre\")).clear();\n \t\tdriver.findElement(By.id(\"genre\")).sendKeys(\"Cloud Ready\");\n \t\tdriver.findElement(By.xpath(\"//div[3]/button\")).click();\n \t\t// Idea 3\n \t\t//Thread.sleep(1000);\n \t\tdriver.findElement(By.linkText(\"add an idea\")).click();\n \t\tdriver.findElement(By.id(\"title\")).clear();\n \t\tdriver.findElement(By.id(\"title\")).sendKeys(\"Test Idea 3\");\n \t\tdriver.findElement(By.id(\"artist\")).clear();\n \t\tdriver.findElement(By.id(\"artist\")).sendKeys(\"Patrick Graziosi\");\n \t\tdriver.findElement(By.id(\"description\")).clear();\n \t\tdriver.findElement(By.id(\"description\")).sendKeys(\"Test Idea 3\");\n \t\tdriver.findElement(By.id(\"releaseYear\")).clear();\n \t\tdriver.findElement(By.id(\"releaseYear\")).sendKeys(\"4/30/2016\");\n \t\tdriver.findElement(By.id(\"genre\")).clear();\n \t\tdriver.findElement(By.id(\"genre\")).sendKeys(\"Connected Workforce\");\n \t\tdriver.findElement(By.xpath(\"//div[3]/button\")).click();\n \t\t//Thread.sleep(2500);\n \t    driver.findElement(By.xpath(\"//div[@id='albums']/div[3]/div/div[5]/div/div/div/a/span\")).click();\n \t    driver.findElement(By.xpath(\"(//a[contains(text(),'delete')])[5]\")).click();\n \t    //Thread.sleep(2500);\n \t    driver.findElement(By.xpath(\"//div[@id='albums']/div[3]/div/div[5]/div/div/div/a/span\")).click();\n \t    driver.findElement(By.xpath(\"(//a[contains(text(),'delete')])[5]\")).click();\n \t}\n", "path": "src/test/java/UITestBase.java", "repo name": "Cloud-Meets-CI/cirrus"}
{"repo_name": "testSoiduLoomine_337", "method name": "test Soidu Loomine", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/soidud\");\n     // ERROR: Caught exception [ERROR: Unsupported command [selectWindow | null | ]]\n     driver.findElement(By.id(\"est\")).click();\n     driver.findElement(By.cssSelector(\"button.btn.btn-default\")).click();\n     driver.findElement(By.id(\"lahtekoht\")).clear();\n     driver.findElement(By.id(\"lahtekoht\")).sendKeys(\"asd\");\n     driver.findElement(By.id(\"sihtkoht\")).clear();\n     driver.findElement(By.id(\"sihtkoht\")).sendKeys(\"asd\");\n     driver.findElement(By.id(\"lisainfo\")).clear();\n     driver.findElement(By.id(\"lisainfo\")).sendKeys(\"asd\");\n     driver.findElement(By.id(\"lisasoitnupp\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"Lisamine oli edukas\".equals(driver.findElement(By.xpath(\"//div/div/div/div\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n   }\n", "path": "Automaattestid/Soidu loomine.java", "repo name": "Martiiii/Poidlapuudja"}
{"repo_name": "testRegistreerimineFail_338", "method name": "test Registreerimine Fail", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/login\");\n     driver.findElement(By.id(\"kasutajanimi\")).clear();\n     driver.findElement(By.id(\"kasutajanimi\")).sendKeys(\"Testkasutaja\");\n     driver.findElement(By.id(\"eesnimi\")).clear();\n     driver.findElement(By.id(\"eesnimi\")).sendKeys(\"Test\");\n     driver.findElement(By.id(\"perenimi\")).clear();\n     driver.findElement(By.id(\"perenimi\")).sendKeys(\"Kasutaja1\");\n     driver.findElement(By.id(\"eesnimi\")).clear();\n     driver.findElement(By.id(\"eesnimi\")).sendKeys(\"Test1\");\n     driver.findElement(By.id(\"kasutajanimi\")).clear();\n     driver.findElement(By.id(\"kasutajanimi\")).sendKeys(\"Testkasutaja1\");\n     driver.findElement(By.id(\"parool\")).clear();\n     driver.findElement(By.id(\"parool\")).sendKeys(\"aaa\");\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"testkasutaja@hot.ee1\");\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"testkasutaja@hot.ee\");\n     driver.findElement(By.id(\"telnr\")).clear();\n     driver.findElement(By.id(\"telnr\")).sendKeys(\"55123123\");\n     driver.findElement(By.id(\"regamisnupp\")).click();\n     try {\n       assertEquals(\"The Parool field must be at least 8 characters in length.\", driver.findElement(By.cssSelector(\"p\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "Automaattestid/Registreerimine_fail.java", "repo name": "Martiiii/Poidlapuudja"}
{"repo_name": "testSisseLogimineFBga_339", "method name": "test Sisse Logimine F Bga", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/login\");\n     driver.findElement(By.id(\"engout\")).click();\n     try {\n       assertEquals(\"Pöidlapüüdja - Home\", driver.getTitle());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.id(\"loginButton\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"LOG OUT\".equals(driver.findElement(By.id(\"logout\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n   }\n", "path": "Automaattestid/Sisse logimine FBga.java", "repo name": "Martiiii/Poidlapuudja"}
{"repo_name": "testSisselogimineVale_340", "method name": "test Sisselogimine Vale", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/login\");\n     driver.findElement(By.id(\"estout\")).click();\n     driver.findElement(By.cssSelector(\"button.btn.btn-default\")).click();\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"Testkasutaja\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"valeparool\");\n     driver.findElement(By.id(\"logimisnupp\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"Invalid username or password\".equals(driver.findElement(By.xpath(\"//div/div/div/div\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n   }\n", "path": "Automaattestid/Sisselogimine_vale.java", "repo name": "Martiiii/Poidlapuudja"}
{"repo_name": "testSoidugaLiitumineJubaLiitunud_341", "method name": "test Soiduga Liitumine Juba Liitunud", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/soidud\");\n     driver.findElement(By.linkText(\"SÕIDUD\")).click();\n     driver.findElement(By.id(\"est\")).click();\n     try {\n       assertEquals(\"Pöidlapüüdja - Sõidud\", driver.getTitle());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.xpath(\"//tbody[@id='innertable']/tr/td[2]\")).click();\n     try {\n       assertEquals(\"Oled juba selle sõiduga liitunud\", driver.findElement(By.xpath(\"//div/div/div/div\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "Automaattestid/Soiduga liitumine juba liitunud.java", "repo name": "Martiiii/Poidlapuudja"}
{"repo_name": "testSoidugaLiitumine_342", "method name": "test Soiduga Liitumine", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/soidud\");\n     driver.findElement(By.linkText(\"SÕIDUD\")).click();\n     driver.findElement(By.id(\"est\")).click();\n     driver.findElement(By.xpath(\"//tbody[@id='innertable']/tr/td[2]\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"Liitusid sõiduga\".equals(driver.findElement(By.xpath(\"//div/div/div/div\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n   }\n", "path": "Automaattestid/Soiduga liitumine.java", "repo name": "Martiiii/Poidlapuudja"}
{"repo_name": "testSoiduKustutamineKaasreisjana_343", "method name": "test Soidu Kustutamine Kaasreisjana", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/soidud\");\n     driver.findElement(By.linkText(\"LIITUTUD SÕIDUD\")).click();\n     driver.findElement(By.id(\"est\")).click();\n     try {\n       assertEquals(\"Pöidlapüüdja - Liitutud sõidud\", driver.getTitle());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.xpath(\"//tbody[@id='innertable']/tr/td[2]\")).click();\n     try {\n       assertEquals(\"Lahkusid sõidust\", driver.findElement(By.xpath(\"//div/div/div/div\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "Automaattestid/Soidu kustutamine(kaasreisjana).java", "repo name": "Martiiii/Poidlapuudja"}
{"repo_name": "testValjaLogimine_344", "method name": "test Valja Logimine", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/soidud\");\n     driver.findElement(By.linkText(\"SÕIDUD\")).click();\n     driver.findElement(By.id(\"est\")).click();\n     driver.findElement(By.id(\"logout\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"Pöidlapüüdja - Pealeht\".equals(driver.getTitle())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"Logi sisse\".equals(driver.findElement(By.cssSelector(\"button.btn.btn-default\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n   }\n", "path": "Automaattestid/Valja logimine.java", "repo name": "Martiiii/Poidlapuudja"}
{"repo_name": "openHelloWorldPage_345", "method name": "open Hello World Page", "comments": [], "url": true, "content": "\tpublic HelloWorldPage function(){\n \t\tthis.webDriver.get(url);\n \t\treturn helloWorldPage;\n \t}\n", "path": "fantacalcio-web/src/test-acceptance/java/com/javangarda/fantacalcio/web/pages/Site.java", "repo name": "acichon89/fantacalcio"}
{"repo_name": "logoutFromAdminConsole_346", "method name": "logout From Admin Console", "comments": [" To logout from admin console dashboard server", " @param driver WebDriver instance", " @param url    base url of the server"], "url": true, "content": "    public static void function(DSWebDriver driver, String url) {\n         driver.get(url + ADMIN_CONSOLE_SUFFIX);\n         driver.findElement(By.cssSelector(\".right > a\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/ds/ui/integration/util/DSUIIntegrationTest.java", "repo name": "ayshsandu/product-ues"}
{"repo_name": "openMainPage_347", "method name": "open Main Page", "comments": [], "url": true, "content": "\tpublic void function() {\n \t    driver.get(baseUrl);\n \t}\n", "path": "src/main/java/automation/applogic/NavigationHelper.java", "repo name": "bodyajava/javacourse3"}
{"repo_name": "openRelativeUrl_348", "method name": "open Relative Url", "comments": [], "url": true, "content": "\tpublic void function(String url) {\n \t    driver.get(baseUrl + url);\n \t}\n", "path": "src/main/java/automation/applogic/NavigationHelper.java", "repo name": "bodyajava/javacourse3"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_349", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "bwp/SeleniumWebDriver"}
{"repo_name": "goToServerRoot_350", "method name": "go To Server Root", "comments": [], "url": true, "content": "    public void function() {\n         d.get( serverUrl );\n     }\n", "path": "server/src/webtest/java/org/neo4j/server/webdriver/WebadminWebdriverLibrary.java", "repo name": "eldersantos/community"}
{"repo_name": "testStudentListPage_351", "method name": "test Student List Page", "comments": ["Test"], "url": true, "content": "    public void function() {\n             try {\n             driver.get(studentListUrl + usernameParamPrefix + userA);\n             Select schoolSelect = new Select(driver.findElement(By.id(\"schoolSelect\")));\n             schoolSelect.selectByVisibleText(\"Illinois PS145\");\n             Select courseSelect = new Select(driver.findElement(By.id(\"courseSelect\")));\n             courseSelect.selectByVisibleText(\"Algebra\");\n             \n             // Verifying section 1 content\n             Select sectionSelect = new Select(driver.findElement(By.id(\"sectionSelect\")));\n             sectionSelect.selectByVisibleText(\"Section1\");\n                \n                 WebElement textDiv = driver.findElement(By.id(\"studentDiv\"));\n             String studentText = textDiv.getText();\n             \n             assertTrue(studentText.contains(\"Dawson Deborah\"));\n             assertFalse(studentText.contains(\"Random name\"));\n             \n             // Verifying section 2\n             sectionSelect = new Select(driver.findElement(By.id(\"sectionSelect\")));\n             sectionSelect.selectByVisibleText(\"Section2\");\n                \n                 WebElement temp = driver.findElement(By.id(\"studentDiv\"));\n             studentText = temp.getText();\n             \n             assertTrue(studentText.contains(\"Marks Hector\"));\n             assertFalse(studentText.contains(\"Dawson Deborah\"));\n         } catch (Exception e) {\n             System.err.println(e.getMessage());\n         } finally {\n             driver.close();\n         }\n     }   \n", "path": "src/integrationtest/java/org/slc/sli/selenium/controller/StudentListSeleniumITest.java", "repo name": "inbloom/APP-dashboard"}
{"repo_name": "testUsersHaveDiffLists_352", "method name": "test Users Have Diff Lists", "comments": ["Test"], "url": true, "content": "    public void function() {\n         try {\n             driver.get(studentListUrl + usernameParamPrefix + userA);\n             Select userASchoolSelect = new Select(driver.findElement(By.id(\"schoolSelect\")));\n             String userASchoolItem = userASchoolSelect.getOptions().get(1).getText();\n             \n             driver.get(studentListUrl + usernameParamPrefix + userB);\n             Select userBSchoolSelect = new Select(driver.findElement(By.id(\"schoolSelect\")));\n             String userBSchoolItem = userBSchoolSelect.getOptions().get(1).getText();\n             \n             assertFalse(userBSchoolItem.equals(userASchoolItem));\n             } catch (Exception e) {\n                 System.err.println(e.getMessage());\n             } finally {\n                 driver.close();\n             }\n     }\n", "path": "src/integrationtest/java/org/slc/sli/selenium/controller/StudentListSeleniumITest.java", "repo name": "inbloom/APP-dashboard"}
{"repo_name": "testLoginPage_353", "method name": "test Login Page", "comments": ["Test"], "url": true, "content": "    public void function() {\n         driver.get(loginUrl);\n         \n         /*\n          * Test for invalid username\n          */\n         WebElement username = driver.findElement(By.name(\"username\"));\n         username.sendKeys(testBadUser);\n         // Before submission - error message should not be displayed\n         WebElement errorMessage = driver.findElement(By.name(\"errorMessage\"));\n         assertTrue(errorMessage.getCssValue(\"display\").equalsIgnoreCase(\"none\"));\n \n         WebElement loginForm = driver.findElement(By.name(\"loginForm\"));\n         loginForm.submit();\n         // After submission - error message should be displayed\n         errorMessage = driver.findElement(By.name(\"errorMessage\"));\n         assertTrue(errorMessage.getCssValue(\"display\").equalsIgnoreCase(\"block\"));\n \n         /*\n          * Test for a valid username\n          */\n         username = driver.findElement(By.name(\"username\"));\n         username.sendKeys(testUser);\n         \n         loginForm = driver.findElement(By.name(\"loginForm\"));\n         loginForm.submit();\n         WebElement body = driver.findElement(By.tagName(\"body\"));\n         String bodyText = body.getText();\n         assertTrue(bodyText.contains(\"Select an application\"));\n         driver.close();\n     }\n", "path": "src/integrationtest/java/org/slc/sli/selenium/controller/LoginSeleniumITest.java", "repo name": "inbloom/APP-dashboard"}
{"repo_name": "collectOnlineData_354", "method name": "collect Online Data", "comments": [], "url": true, "content": "\tpublic void function() {\n \t\tif(StrUtils.isEmpty(httpUrl)) {\n \t\t\tUIUtils.log(\"无效的HTTP, 终止操作.\");\n \t\t\treturn;\n \t\t}\n \t\t\n \t\tisStop = false;\n \t\tUIUtils.log(\"正在开启浏览器捕获数据...\");\n \t\tWebDriver driver = null;\n \t\ttry {\n \t\t\tdriver = browserDriver.getWebDriver();\n \t\t\t\n \t\t\tUIUtils.log(\"正在打开网页 [\" + httpUrl + \"] ...\");\n \t\t\tdriver.get(httpUrl);\n \t\t\tUIUtils.openHomePage();\n \t\t\t\n \t\t\tUIUtils.log(\"统计在线用户数据开始...\");\n \t\t\tint lastSize = 0;\n \t\t\twhile(isStop() == false) {\n \t\t\t\tWebElement chatMsgList = driver.findElement(By.id(CHAT_MSG_LIST_NAME));\n \t\t\t\tString data = chatMsgList.getText();\n \t\t\t\t\n \t\t\t\tint curSize = data.length();\n \t\t\t\tif(lastSize != curSize) {\n \t\t\t\t\tlastSize = curSize;\n \t\t\t\t\t\n \t\t\t\t\tanalyzer.statistics(data);\n \t\t\t\t\tlog.info(\"已刷新在线用户数据.\");\n \t\t\t\t\t\n \t\t\t\t} else {\n \t\t\t\t\tlog.info(\"在线用户数据无变化.\");\n \t\t\t\t}\n \t\t\t\t\n \t\t\t\tbrowserDriver.refresh(driver);\n \t\t\t}\n \t\t\tUIUtils.log(\"统计在线用户数据结束.\");\n \t\t\t\n \t\t} catch (NoSuchElementException e) {\n \t\t\tlog.error(\"加载网页元素失败: [{}].\", httpUrl, e);\n \t\t\t\n \t\t} catch (Throwable e) {\n \t\t\tlog.error(\"统计在线用户数据异常: [{}].\", httpUrl, e);\n \t\t\t\n \t\t} finally {\n \t\t\tUIUtils.log(\"浏览器已关闭.\");\n \t\t\tisStop = true;\n \t\t\tbrowserDriver.close(driver);\n \t\t\tSystem.exit(0);\n \t\t}\n \t}\n", "path": "java/99-project/bilibili-lucky-princess/trunk/src/main/java/exp/blp/core/PageDataAnalyzer.java", "repo name": "lyy289065406/expcodes"}
{"repo_name": "startGraphHostAppInNewWinndow_355", "method name": "start Graph Host App In New Winndow", "comments": [" Starts the collection process of the newly added GraphHostApp in a new window."], "url": true, "content": "\tprivate static void function(String graphUrl) {\n \t\tWebDriver driver = new FirefoxDriver();\n \t\tdriver.get(graphUrl);\n \t\tdriver.findElement(By.id(\"continue\")).click();\n \t}\n", "path": "selenium2/src/at/mannaz/socialsnapshot/SocialSnapshot.java", "repo name": "mannaz/SocialSnapshot"}
{"repo_name": "testWaitUntilPageTitlePresentPos_356", "method name": "test Wait Until Page Title Present Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         try {\n             WebDriverWaitUtils.waitUntilPageTitleContains(pageTitle);\n             assertTrue(true);\n         } catch (WaitTimedOutException e) {\n             fail(e.getMessage());\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testWaitUntilElementVisiblePos_357", "method name": "test Wait Until Element Visible Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         try {\n             WebDriverWaitUtils.waitUntilElementIsVisible(locator);\n             assertTrue(true);\n         } catch (WaitTimedOutException e) {\n             fail(e.getMessage());\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testWaitUntilTextPresentPos_358", "method name": "test Wait Until Text Present Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         try {\n             WebDriverWaitUtils.waitUntilTextPresent(text);\n             assertTrue(true);\n         } catch (WaitTimedOutException e) {\n             fail(e.getMessage());\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testWaitUntilElementDisapearPos_359", "method name": "test Wait Until Element Disapear Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilPageTitleContains(pageTitle);\n         Button btn = new Button(disappearElement);\n         btn.click();\n         try {\n             WebDriverWaitUtils.waitUntilElementIsInvisible(disappearElement);\n             assertTrue(true);\n         } catch (WaitTimedOutException e) {\n             fail(e.getMessage());\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testWaitUntilElementPresentPos_360", "method name": "test Wait Until Element Present Pos", "comments": ["Test(groups = { \"browser-tests\" })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         try {\n             WebDriverWaitUtils.waitUntilElementIsPresent(locator);\n             assertTrue(true);\n         } catch (WaitTimedOutException e) {\n             fail(e.getMessage());\n         }\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testWaitUntilPageTitlePresentNeg_361", "method name": "test Wait Until Page Title Present Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { WaitTimedOutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilPageTitleContains(badLocator);\n         fail(\"Wait Timeout Exception was not thrown.\");\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testWaitUntilElementVisibleNeg_362", "method name": "test Wait Until Element Visible Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { WaitTimedOutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilElementIsVisible(badLocator);\n         fail(\"Wait Timeout Exception was not thrown.\");\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testWaitUntilTextPresentNeg_363", "method name": "test Wait Until Text Present Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             WebDriverWaitUtils.waitUntilTextPresent(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n         fail(\"Timeout Exception was not thrown.\");\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testWaitUntilElementDisapearNeg_364", "method name": "test Wait Until Element Disapear Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { RuntimeException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         WebDriverWaitUtils.waitUntilElementIsInvisible(disappearElement);\n         fail(\"Runtime Exception was not thrown.\");\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testWaitUntilElementPresentNeg_365", "method name": "test Wait Until Element Present Neg", "comments": ["Test(groups = { \"browser-tests\" }, expectedExceptions = { TimeoutException.class })", "WebTest"], "url": true, "content": "    public void function() {\n         Grid.driver().get(url);\n         String origTimeout = Config.getConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT);\n         try {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, \"20000\");\n             WebDriverWaitUtils.waitUntilElementIsPresent(badLocator);\n         } finally {\n             Config.setConfigProperty(Config.ConfigProperty.EXECUTION_TIMEOUT, origTimeout);\n         }\n         fail(\"Timeout Exception was not thrown.\");\n     }\n", "path": "client/src/test/java/com/paypal/selion/platform/grid/SeLionSeleniumTest.java", "repo name": "mengchen2/SeLion_Demo"}
{"repo_name": "testExampleCategorical2_366", "method name": "test Example Categorical2", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         String testName = \"testExampleCategorical2\";\n         \n         List<String> errorList = new ArrayList();\n         List<String> successList = new ArrayList();\n         List<String> exceptionList = new ArrayList();\n         Date start = new Date();\n         int targetCount = 1;\n \n         String mgiGeneAcc = \"MGI:98373\";\n         String impressParameter = \"M-G-P_014_001_001\";\n         String zygosity = \"homozygote\";\n         String geneSymbol = \"Sparc\";\n         driver.manage().timeouts().implicitlyWait(3, TimeUnit.SECONDS);\n         // <div class='topic'>Gene: Mysm1</div>\n         String tempUrl = baseUrl + \"/charts?accession=\" + mgiGeneAcc + \"&parameter_stable_id=\" + impressParameter + \"&zygosity=\" + zygosity;\n //        System.out.println(\"tempUrl=\" + tempUrl);\n         driver.get(tempUrl);\n         String title = driver.findElement(By.className(\"title\")).getText();\n //        System.out.println(\"title=\" + title + \"  geneSymbol=\" + geneSymbol);\n         if ( ! title.contains(geneSymbol)) {\n             errorList.add(\"ERROR: Expected title to contain '\" + geneSymbol + \"' but was '\" + title + \"'.  URL: \" + tempUrl + \"'\");\n         } else {\n             successList.add(\"OK\");\n         }\n             \n         TestUtils.printEpilogue(testName, start, errorList, exceptionList, successList,  targetCount, 1);\n         System.out.println();\n     }\n", "path": "src/test/java/org/mousephenotype/www/ChartsPageTest.java", "repo name": "mpi2/PhenotypeArchive"}
{"repo_name": "openMainPage_367", "method name": "open Main Page", "comments": [], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(baseUrl + \"/\");\n \t}\n", "path": "adressbook/src/com/example/fw/ApplicationManager.java", "repo name": "nahornova/pdt-java-27"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_368", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": [" @Ignore(value = {IE, CHROME, SELENESE, IPHONE, OPERA, ANDROID, SAFARI,", " OPERA_MOBILE}, reason = \"Safari: does not support insecure SSL\")", "Test(enabled = false)"], "url": true, "content": "  public void function() {\n     // TODO(user): Set the SSL capability to true.\n     //String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     //driver.get(url);\n \n     //Assert.assertEquals(driver.getTitle(), (\"Hello WebDriver\"));\n   }\n", "path": "ios-selenium-tests/src/test/java/org/uiautomation/ios/selenium/PageLoadingTest.java", "repo name": "crashlytics/ios-driver"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_369", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": [" @Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE,", " SAFARI, SELENESE})", "Test(enabled = false)"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     /*\n      * assumeTrue(TestUtilities.isLocal());\n      * \n      * DesiredCapabilities requiredCaps = new DesiredCapabilities();\n      * requiredCaps.setCapability(ACCEPT_SSL_CERTS, false); WebDriverBuilder\n      * builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n      * localDriver = builder.get();\n      * \n      * String url =\n      * GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\"\n      * ); localDriver.get(url);\n      * \n      * assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n      */\n   }\n", "path": "ios-selenium-tests/src/test/java/org/uiautomation/ios/selenium/PageLoadingTest.java", "repo name": "crashlytics/ios-driver"}
{"repo_name": "handleFormWithJavascriptAction_370", "method name": "handle Form With Javascript Action", "comments": ["Test(enabled = false)", " @Ignore(value = { ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, SAFARI,", " SELENESE, OPERA_MOBILE }, reason =", " \"Untested on all other browsers, fails on chrome, fails on IE.\", issues = {", " 3508 })"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "ios-selenium-tests/src/test/java/org/uiautomation/ios/selenium/FormHandlingTest.java", "repo name": "crashlytics/ios-driver"}
{"repo_name": "fakeTypeURL_371", "method name": "fake Type URL", "comments": [], "url": true, "content": "  private void function(String url) {\n     getSession().getRemoteWebDriver().get(url);\n   }\n", "path": "server/src/main/java/org/uiautomation/ios/server/command/web/GetHandler.java", "repo name": "crashlytics/ios-driver"}
{"repo_name": "testGoogleSeleniumWebdriverTestCase_372", "method name": "test Google Selenium Webdriver Test Case", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/\");\n \t\tdriver.findElement(By.id(\"gbqfq\")).clear();\n \t\tdriver.findElement(By.id(\"gbqfq\")).sendKeys(\"selenium hq\");\n \t\t// ERROR: Caught exception [ERROR: Unsupported command [isTextPresent]]\n \t}\n", "path": "src/com/example/tests/GoogleSeleniumWebdriverTestCase.java", "repo name": "czunker/check_selenium"}
{"repo_name": "openMainPage_373", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(baseUrl);\n \t}\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "dartland/GrandRio-Test"}
{"repo_name": "openRelativeUrl_374", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "\tpublic void function(String url) {\n \t\tdriver.get(baseUrl + url);\n \t}\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "dartland/GrandRio-Test"}
{"repo_name": "openMainPage_375", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic1/NavigationHelper1.java", "repo name": "eabramovich/Se-Java-17"}
{"repo_name": "openRelativeUrl_376", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic1/NavigationHelper1.java", "repo name": "eabramovich/Se-Java-17"}
{"repo_name": "checkAddFilmFromCatalog_377", "method name": "check Add Film From Catalog", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tWebDriverWait wait = new WebDriverWait(driver,30);\n \t\tWebElement userName = driver.findElement(By.cssSelector(\"input#username\"));\n \t\tWebElement password = driver.findElement(By.name(\"password\"));\n \t\tWebElement login = driver.findElement(By.name(\"submit\"));\n \t\tuserName.sendKeys(\"admin\");\n \t\tpassword.sendKeys(\"admin\");\n \t\tlogin.click();\n \t\t\n \t\tString movieTitle = \"Óíåñ¸ííûå âåòðîì\";\n \t\tWebElement addMovie = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"a[href='./?go=add']\")));\n \t\taddMovie.click();\n \t\t\n \t\tWebElement imdbsearchField = wait.until(ExpectedConditions.presenceOfElementLocated(By.name(\"imdbsearch\")));\n \t\timdbsearchField.sendKeys(movieTitle);\n \t\tdriver.findElement(By.cssSelector(\"input[value='Search']\")).click();\n \t\t\n \t\tWebElement movie = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"table.imdbmovies tr:nth-child(1)\")));\n \t\tString year = driver.findElement(By.cssSelector(\"table.imdbmovies tr:nth-child(1) td.year\")).getText();\n \t\tmovie.click();\n \t\t\n \t\twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"form#updateform\")));\n \t\tWebElement save =driver.findElement(By.id(\"submit\"));\n \t\tsave.click();\n \t\t\n \t\tWebElement h2Title = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\".maininfo_full h2\")));\n \n \t\tSystem.out.println(movieTitle + \" (\" + year + \")\");\n \t\tassertEquals(h2Title.getText(), movieTitle + \" (\" + year + \")\");\n \t}\n", "path": "src/test/java/ru/st/selenium/SearchFilmFromCatalog.java", "repo name": "eabramovich/Se-Java-17"}
{"repo_name": "checkEditFilm_378", "method name": "check Edit Film", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString movieTitle = \"Äåâ÷àòà\";\n \t\tString imdbNumber = \"0134614\";\n \t\tString alsoKnowAs = \"Devchata\";\n \t\tString duration = \"92\";\n \t\tString rating = \"8.362\";\n \t\tString pathToImage = \"C:/Users/Evgenia/Pictures/devchata.jpg\";\n \t\tString linkTrailer = \"https://www.youtube.com/watch?v=LaCUkjlQuVw\";\n \t\tString year = \"1961\";\n \t\t\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tWebDriverWait wait = new WebDriverWait(driver,30);\n \t\tWebElement userName = driver.findElement(By.cssSelector(\"input#username\"));\n \t\tWebElement password = driver.findElement(By.name(\"password\"));\n \t\tWebElement login = driver.findElement(By.name(\"submit\"));\n \t\tuserName.sendKeys(\"admin\");\n \t\tpassword.sendKeys(\"admin\");\n \t\tlogin.click();\n \t\t\n \t\tWebElement movie = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"#results div[title='\" + movieTitle + \"']\")));\n \t\tmovie.click();\n \t\t\n \t\tWebElement edit = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"#content nav ul li:nth-child(3) a\")));\n \t\tedit.click();\n \t\tWebElement imdbidField = driver.findElement(By.name(\"imdbid\"));\n \t\timdbidField.sendKeys(imdbNumber);\n \t\tWebElement akaField = driver.findElement(By.name(\"aka\"));\n \t\takaField.sendKeys(alsoKnowAs);\n \t\tWebElement durationField = driver.findElement(By.name(\"duration\"));\n \t\tdurationField.sendKeys(duration);\n \t\tWebElement ratingField = driver.findElement(By.name(\"rating\"));\n \t\tratingField.sendKeys(rating);\n \t\tWebElement fileInput = driver.findElement(By.id(\"cover\"));\n \t\tfileInput.sendKeys(pathToImage);\n \t\tWebElement trailerField = driver.findElement(By.name(\"trailer\"));\n \t\ttrailerField.sendKeys(linkTrailer);\n \t\t\n \t\tWebElement save = driver.findElement(By.id(\"submit\"));\n \t\tsave.click();\n \t\t\n \t\tWebElement h2Title = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\".maininfo h2\")));\n \t\tassertEquals(h2Title.getText(), movieTitle + \" (\" + year + \")\");\n \t\tdriver.findElement(By.cssSelector(\"#content nav ul li:nth-child(6) a\")).click();\n \t\t\n \t\tWebElement imdbidField2 = driver.findElement(By.name(\"imdbid\"));\n \t\tWebElement akaField2 = driver.findElement(By.name(\"aka\"));\n \t\tWebElement durationField2 = driver.findElement(By.name(\"duration\"));\n \t\tWebElement ratingField2 = driver.findElement(By.name(\"rating\"));\n \t\tWebElement trailerField2 = driver.findElement(By.name(\"trailer\"));\n \t\t\n \t\tassertEquals(imdbidField2.getAttribute(\"value\"), imdbNumber);\n \t\tassertEquals(akaField2.getText(), alsoKnowAs);\n \t\tassertEquals(durationField2.getAttribute(\"value\"), duration);\n \t\tassertEquals(ratingField2.getAttribute(\"value\"), rating);\n \t\tassertEquals(trailerField2.getAttribute(\"value\"), linkTrailer);\n \t}\n", "path": "src/test/java/ru/st/selenium/EditFilmTest.java", "repo name": "eabramovich/Se-Java-17"}
{"repo_name": "testSearchFilmWithoutResult_379", "method name": "test Search Film Without Result", "comments": ["SuppressWarnings(\"deprecation\")", "Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tWebDriverWait wait = new WebDriverWait(driver,30);\n \t\tWebElement userName = driver.findElement(By.cssSelector(\"input#username\"));\n \t\tWebElement password = driver.findElement(By.name(\"password\"));\n \t\tWebElement login = driver.findElement(By.name(\"submit\"));\n \t\tuserName.sendKeys(\"admin\");\n \t\tpassword.sendKeys(\"admin\");\n \t\tlogin.click();\n \t\t\n \t\tString movieTitle = \"Ïî ýòîìó çàïðîñó ÿ íè÷åãî íå íàéäó\";\n \t\tWebElement addMovie = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"a[href='./?go=add']\")));\n \t\taddMovie.click();\n \t\t\n \t\tWebElement imdbsearchField = wait.until(ExpectedConditions.presenceOfElementLocated(By.name(\"imdbsearch\")));\n \t\timdbsearchField.sendKeys(movieTitle);\n \t\tdriver.findElement(By.cssSelector(\"input[value='Search']\")).click();\n \t\t\n \t\tWebElement resultNotFound = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"#content .content div\")));\n \t\twait.until(ExpectedConditions.textToBePresentInElement(resultNotFound, \"No movies where found.\"));\n \t\t\n \t\tassertEquals(resultNotFound.getText(), \"No movies where found.\");\n \t}\n", "path": "src/test/java/ru/st/selenium/SearchFilmWithoutResult.java", "repo name": "eabramovich/Se-Java-17"}
{"repo_name": "checkRemoveFilm_380", "method name": "check Remove Film", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tWebDriverWait wait = new WebDriverWait(driver,30);\n \t\tWebElement userName = driver.findElement(By.cssSelector(\"input#username\"));\n \t\tWebElement password = driver.findElement(By.name(\"password\"));\n \t\tWebElement login = driver.findElement(By.name(\"submit\"));\n \t\tuserName.sendKeys(\"admin\");\n \t\tpassword.sendKeys(\"admin\");\n \t\tlogin.click();\n \t\t\n \t\tString movieTitle = \"Äåâ÷àòà\";\n \t\tString year = \"1961\";\n \t\tWebElement movie = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"#results img[title='\" + movieTitle + \"']\")));\n \t\tmovie.click();\n \t\t\n \t\tWebElement h2Title = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\".maininfo h2\")));\n \t\tAssertJUnit.assertEquals(h2Title.getText(), movieTitle + \" (\" + year + \")\");\n \t\tdriver.findElement(By.cssSelector(\"#content nav ul li:nth-child(7) a\")).click();\n \t\t\n \t\tAlert alert = wait.until(ExpectedConditions.alertIsPresent());\n \t\talert.accept();\n \t\t\n \t\twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"#results\")));\n \t\tassertEquals(0, driver.findElements(By.cssSelector(\"#results img[title='\" + movieTitle + \"']\")).size()); \n \t\t\n \t}\n", "path": "src/test/java/ru/st/selenium/RemoveFilmTest.java", "repo name": "eabramovich/Se-Java-17"}
{"repo_name": "testCaptureTutorial13_381", "method name": "test Capture Tutorial13", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString url = \"conts/web/view/tutorial/interacting-with-controllers\";\n \t\tdriver.get(url);\n \n \t\t// 画面キャプチャ\n \t\tScreenshotArgument arg = ScreenshotArgument.builder(\"tutorial13\")\n \t\t\t\t// 撮影対象を指定\n \t\t\t\t.addNewTarget()\n \t\t\t\t.addHiddenElementSelectors(GOTOTOP_DOM_ELEMENT)\n \t\t\t\t.build();\n \t\t\n \t\t// 画面キャプチャ\n \t\tassertionView.assertView(arg);\n \t}\n", "path": "pitalium-sample/src/main/java/com/htmlhifive/pitalium/sample/PtlSampleTest.java", "repo name": "hifive/hifive-pitalium"}
{"repo_name": "testCaptureTutorialTop_382", "method name": "test Capture Tutorial Top", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString url = \"conts/web/view/tutorial/menu\";\n \t\tdriver.get(url);\n \n \t\tPtlWebElement e = (PtlWebElement) driver.findElement(By.cssSelector(\".wikimodel-freestanding\"));\n \n \t\tDoubleValueRect rect = e.getDoubleValueRect();\n \t\tdriver.executeScript(\"arguments[0].width=arguments[1]\", e, rect.getWidth());\n \t\tdriver.executeScript(\"arguments[0].height=arguments[1]\", e, rect.getHeight());\n \t\tdriver.executeScript(\"arguments[0].src=''\", e);\n \n \t\t// 画面キャプチャ\n \t\tScreenshotArgument arg = ScreenshotArgument.builder(\"tutorialTop\")\n \t\t\t\t// 撮影対象を指定\n \t\t\t\t.addNewTarget()\n \t\t\t\t.addHiddenElementSelectors(GOTOTOP_DOM_ELEMENT)\n \t\t\t\t.build();\n \t\t\n \t\t// 画面キャプチャ\n \t\tassertionView.assertView(arg);\n \t}\n", "path": "pitalium-sample/src/main/java/com/htmlhifive/pitalium/sample/PtlSampleTest.java", "repo name": "hifive/hifive-pitalium"}
{"repo_name": "AbstractWebWorkFlow_383", "method name": "Abstract Web Work Flow", "comments": [], "url": true, "content": "    public function() {\n         String baseUrl = WebDriverFactory.INSTANCE.getHostUrl();\n         hostUrl = appendTrailingSlash(baseUrl);\n         driver = WebDriverFactory.INSTANCE.getDriver();\n         driver.get(hostUrl);\n     }\n", "path": "functional-test/src/main/java/org/zanata/workflow/AbstractWebWorkFlow.java", "repo name": "itsazzad/zanata-server"}
{"repo_name": "goToHome_384", "method name": "go To Home", "comments": [], "url": true, "content": "    public HomePage function() {\n         new BasePage(driver).waitForAMoment().until(new Predicate<WebDriver>() {\n             @Override\n             public boolean apply(WebDriver input) {\n                 driver.get(hostUrl);\n                 return new HomePage(driver).isPageValid();\n             }\n         });\n         return new HomePage(driver);\n     }\n", "path": "functional-test/src/main/java/org/zanata/workflow/AbstractWebWorkFlow.java", "repo name": "itsazzad/zanata-server"}
{"repo_name": "goToDashboard_385", "method name": "go To Dashboard", "comments": [], "url": true, "content": "    public DashboardBasePage function() {\n         driver.get(hostUrl + \"dashboard\");\n         return new DashboardBasePage(driver);\n     }\n", "path": "functional-test/src/main/java/org/zanata/workflow/AbstractWebWorkFlow.java", "repo name": "itsazzad/zanata-server"}
{"repo_name": "delayGetAndDelay_386", "method name": "delay Get And Delay", "comments": [], "url": true, "content": "\tpublic void function(String url) throws InterruptedException {\n \t\tThread.sleep(2000);\n \t\tdriver.get(url);\n \t\tThread.sleep(2000);\n \t}\n", "path": "ittest/src/test/java/com/flexdms/flexims/it/TestITbase.java", "repo name": "jasonzhang2022/flexims"}
{"repo_name": "logoutFromAdminConsole_387", "method name": "logout From Admin Console", "comments": [" To logout from admin console", " @param driver WebDriver instance", " @param url    base url of the server"], "url": true, "content": "    public static void function(ESWebDriver driver, String url) {\n         driver.get(url + ADMIN_CONSOLE_SUFFIX);\n         driver.findElement(By.linkText(\"Sign-out\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/es/ui/integration/util/ESUtil.java", "repo name": "rajeenthini/product-es"}
{"repo_name": "testESRegisterUserTestCase_388", "method name": "test ES Register User Test Case", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing user registration\")"], "url": true, "content": "    public void function() throws Exception {\n         //Register new user\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.id(\"btn-register\")).click();\n         driver.findElement(By.id(\"reg-username\")).clear();\n         driver.findElement(By.id(\"reg-username\")).sendKeys(NEW_USER_NAME);\n         driver.findElement(By.id(\"reg-password\")).clear();\n         driver.findElement(By.id(\"reg-password\")).sendKeys(NEW_USER_PWD);\n         driver.findElement(By.id(\"reg-password2\")).clear();\n         driver.findElement(By.id(\"reg-password2\")).sendKeys(NEW_USER_PWD);\n \n         driver.findElement(By.name(\"reg-email\")).clear();\n         driver.findElement(By.name(\"reg-email\")).sendKeys(NEW_USER_EMAIL);\n         driver.findElement(By.name(\"reg-first-name\")).clear();\n         driver.findElement(By.name(\"reg-first-name\")).sendKeys(NEW_USER_FNAME);\n         driver.findElement(By.name(\"reg-last-name\")).clear();\n         driver.findElement(By.name(\"reg-last-name\")).sendKeys(NEW_USER_LNAME);\n         driver.findElement(By.id(\"registrationSubmit\")).click();\n         // check the success message\n         assertTrue(isElementPresent(driver,By.id(\"regFormSuc\")),\"User creation failed.\");\n         driver.findElement(By.id(\"signInLink\")).click();\n \n         driver.findElementPoll(By.id(\"username\"), MAX_POLL_COUNT);\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(NEW_USER_NAME);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(NEW_USER_PWD);\n         driver.findElement(By.id(\"registrationSubmit\")).click();\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"#logedInUser\")));\n \n \n \n         //check login for store\n         assertTrue(isElementPresent(driver, By.linkText(\"My Items\")), \"Login failed for Store\");\n         assertTrue(isElementPresent(driver,By.linkText(NEW_USER_NAME)), \"Login failed for Store\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRegisterUserTestCase.java", "repo name": "rajeenthini/product-es"}
{"repo_name": "getAnalyzeMarketAvg_389", "method name": "get Analyze Market Avg", "comments": ["Сначала ставим товар потом перебираем по городам."], "url": true, "content": "    public MainPage function(int session) throws InterruptedException {\n \n         String mainUrl = driver.getCurrentUrl();\n         driver.get(\"http://virtonomica.ru/vera/main/globalreport/marketing/by_trade_at_cities\");\n         String productName=\"\";\n \n         Select s1 = new Select(driver.findElement(By.id(\"__product_category_list\")));\n         for(int i=0; i<s1.getOptions().size(); i++){\n             s1.selectByIndex(i);\n             for(int j=0; j<driver.findElements(By.xpath(\"//*[@id='__products_list']/span\")).size(); j++){\n                 waitForElement(\"//*[@id='__products_list']/span[\"+(j+1)+\"]//img\");\n                 driver.findElement(By.xpath(\"//*[@id='__products_list']/span[\"+(j+1)+\"]//img\")).click();\n                 productName = driver.findElement(By.xpath(\"//*[@id='__products_list']/span[\"+(j+1)+\"]//img\")).getAttribute(\"title\");\n                 getMarketAvgData(session,productName);\n             }\n             s1 = new Select(driver.findElement(By.id(\"__product_category_list\")));\n         }\n \n         driver.get(mainUrl);\n         logMe(\"Wait 11 minutes...\");\n         return new MainPage(driver);\n     }\n", "path": "src/main/java/general/virt/MainPage.java", "repo name": "relativist/virtonomica"}
{"repo_name": "getAnalyzeMarket_390", "method name": "get Analyze Market", "comments": ["Сначала ставим товар потом перебираем по городам."], "url": true, "content": "    public MainPage function(String productName, String typeProduct,int session) throws InterruptedException {\n \n         logMe(\"-----------------------------------------------\");\n         logMe(productName);\n         logMe(\"-----------------------------------------------\");\n \n         String [] countries = {\n //                \"Азербайджан\",\n //                \"Армения\",\n                 \"Болгария\",\n //                \"Великобритания\",\n                 \"Венесуэла\",\n                 \"Германия\",\n                 \"Греция\",\n                 \"Казахстан\",\n                 \"Канада\",\n                 \"Куба\",\n                 \"Латвия\",\n                 \"Литва\",\n                 \"Нидерланды\",\n                 \"Норвегия\",\n //                \"Республика Беларусь\",\n                 \"Россия\",\n //                \"Узбекистан\",\n                 \"Украина\",\n                 \"Финляндия\",\n                 \"Франция\",\n                 \"Эстония\"\n         };\n \n         String mainUrl = driver.getCurrentUrl();\n         driver.get(\"http://virtonomica.ru/vera/main/globalreport/marketing/by_trade_at_cities\");\n \n         Select s1 = new Select(driver.findElement(By.id(\"__product_category_list\")));\n         s1.selectByVisibleText(typeProduct);\n \n         waitForElement(\"//img[@alt='\"+productName+\"']\");\n         waitForElementVisible(\"//img[@alt='\" + productName + \"']\");\n \n         driver.findElement(By.xpath(\"//img[@alt='\"+productName+\"']\")).click();\n         int counter = 0;\n \n \n         // COUNTRY\n         Select c1 = new Select(driver.findElements(By.xpath(\"//*[@id='mainContent']/fieldset/table[2]//select\")).get(0));\n         for(int i=0; i<countries.length; i++){\n             c1.selectByVisibleText(countries[i]);\n             // REGION\n             Select c2 = new Select(driver.findElements(By.xpath(\"//*[@id='mainContent']/fieldset/table[2]//select\")).get(1));\n             for(int j=1; j<c2.getOptions().size(); j++){\n                 c2.selectByIndex(j);\n                 Select c3 = new Select(driver.findElements(By.xpath(\"//*[@id='mainContent']/fieldset/table[2]//select\")).get(2));\n                 //CITY\n                 for(int k=1; k<c3.getOptions().size();k++){\n                     c3.selectByIndex(k);\n                     getMarketData(session,productName);\n                     logMe(\"Completed: \" + counter);\n                     counter++;\n                     c3 = new Select(driver.findElements(By.xpath(\"//*[@id='mainContent']/fieldset/table[2]//select\")).get(2));\n                 }\n                 c2 = new Select(driver.findElements(By.xpath(\"//*[@id='mainContent']/fieldset/table[2]//select\")).get(1));\n             }\n             c1 = new Select(driver.findElements(By.xpath(\"//*[@id='mainContent']/fieldset/table[2]//select\")).get(0));\n         }\n \n         driver.get(mainUrl);\n         logMe(\"Wait 11 minutes...\");\n         Thread.sleep(5*60*1000);\n         return new MainPage(driver);\n     }\n", "path": "src/main/java/general/virt/MainPage.java", "repo name": "relativist/virtonomica"}
{"repo_name": "autoBuyWithDep_391", "method name": "auto Buy With Dep", "comments": ["автоматическая закупка в магазине при заданном отделе"], "url": true, "content": "    public StorePage function(String department) throws InterruptedException {\n         int maxDepSize = getStoreDepMaxSize();\n         ArrayList<String> companyDepSellProducts = getMyProductsDepToSell(); // продукция компании по отделам [0] - название отдела\n         driver.findElement(By.xpath(\"//a[text()='Торговый зал']\")).click();\n         ArrayList <String> currentTypesDep = getCurrentTypesDepFromSalesRoom();\n         ArrayList <String> companyProductsToSell = getMyProductsToSell(); // продукция компании с кретерием закупок.[0] - название продукта\n         int depCount = Integer.valueOf(currentTypesDep.size());\n         driver.findElement(By.xpath(\"//a[text()='Снабжение']\")).click();\n \n \n         //идем в снабжение и по выясненым отделам закупаем продукты. (смотрим на кретерий в конфиге)\n         //если встречаются в снабжении продукты пропускаем идем дальше\n         //если размер\n         String productInfo=new String();\n         org.openqa.selenium.support.ui.Select s = null;\n         for(String companyProduct: companyDepSellProducts){\n             if(department.equals(companyProduct.split(\";\")[0])){\n             //if(isDepToSell(companyProduct.split(\";\")[0],currentTypesDep)) {\n                 logMe(\"покупаем продукцию: \" + companyProduct.split(\";\")[0]);\n                 for(int i=1; i<companyProduct.split(\";\").length;i++){\n \n \n                     productInfo = getProductDataFromCompanyConfig(companyProduct.split(\";\")[i],companyProductsToSell);\n \n \n                     //этого продукта не должно быть на странице снабжения.\n                     if(isThisProductSellOnSellPage(productInfo.split(\";\")[0]))\n                         continue;\n \n                     logMe(productInfo);\n                     s = new org.openqa.selenium.support.ui.Select(driver.findElement(By.name(\"productCategory\")));\n                     s.selectByVisibleText(companyProduct.split(\";\")[0]);\n                     Thread.sleep(500);\n                     driver.findElement(By.xpath(\"//span[label/img[@alt='\"+productInfo.split(\";\")[0]+\"']]/input\")).click();\n \n \n                     String handle1 = driver.getWindowHandle();\n                     driver.findElement(By.xpath(\"//input[@value='Добавить поставщика']\")).click();\n                     Set<String> handles=driver.getWindowHandles();\n                     Iterator<String> it =handles.iterator();\n                     while (it.hasNext()) {\n                         String popupHandle = it.next().toString();\n                         if (!popupHandle.contains(handle1)) {\n                             driver.switchTo().window(popupHandle);\n                             //System.out.println(\"Pop Up Title: \" + driver.switchTo().window(popupHandle).getTitle());\n                         }\n                     }\n                     //#myPro#=title;volume;localsales;qa;brand;price;base_value_to_buy\n                     //параметры: бренд прайс качество\n                     Double price=Double.valueOf(driver.findElement(By.xpath(\"//table[@class='right_corner']//tr[2]/td[1]\")).getText().split(\":\")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                     Double qa=Double.valueOf(driver.findElement(By.xpath(\"//table[@class='right_corner']//tr[2]/td[2]\")).getText().split(\" \")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                     Double brand=Double.valueOf(driver.findElement(By.xpath(\"//table[@class='right_corner']//tr[2]/td[3]\")).getText().split(\" \")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                     Double confPrice = Double.valueOf(productInfo.split(\";\")[5]);\n                     Double confQa = Double.valueOf(productInfo.split(\";\")[3]);\n                     Double confBrand = Double.valueOf(productInfo.split(\";\")[4]);\n                     String valueToSet = productInfo.split(\";\")[6];\n \n                     logMe(\"\"+price+\">=\"+confPrice);\n                     logMe(\"\"+qa+\"<\"+confQa);\n                     logMe(\"\"+brand+\"<\"+confBrand);\n \n                     logMe(valueToSet);\n \n                     //если наши параметры подходят для покупки в этом городе - покупаем\n                     if(price>=confPrice && confBrand>brand && confQa>qa) {\n                         logMe(\"Ура, продукт подошел!\");\n \n                         driver.findElement(By.xpath(\"//a[text()='Свои']\")).click();\n                         if (driver.findElements(By.xpath(\"//a[contains(text(),'Отменить фильтр')]\")).size() != 0)\n                             if (driver.findElement(By.xpath(\"//a[contains(text(),'Отменить фильтр')]\")).isDisplayed())\n                                 driver.findElement(By.xpath(\"//a[contains(text(),'Отменить фильтр')]\")).click();\n \n                         //если нету своих - то ничего не покупаем\n                         if (driver.findElements(By.xpath(\"//tr[td[text()='Cвободно']]/td[2]/a[2]/img\")).size() != 0) {\n \n                             //сортировка\n                             Thread.sleep(500);\n                             driver.findElement(By.xpath(\"//tr[td[text()='Cвободно']]/td[2]/a[2]/img\")).click();\n \n                             String goodId = driver.findElement(By.xpath(\"//table//tr[@class='friendlyHighLight']/td[@class='choose']/span\")).getAttribute(\"id\");\n                             ((JavascriptExecutor) driver).executeScript(\"document.getElementById(\" + goodId + \").click();\");\n                             driver.findElement(By.id(\"amountInput\")).clear();\n                             driver.findElement(By.id(\"amountInput\")).clear();\n                             driver.findElement(By.id(\"amountInput\")).sendKeys(valueToSet);\n                             ((JavascriptExecutor) driver).executeScript(\"document.getElementById('submitLink').click();\");\n \n                             driver.findElement(By.xpath(\"//span[text()='Закрыть окно']\")).click();\n                             driver.switchTo().window(handle1);\n                             logMe(\"Закупились \" + productInfo.split(\";\")[0]);\n                         }\n                         else {\n                             logMe(\"Продукта нет!\");\n                             driver.findElement(By.xpath(\"//span[text()='Закрыть окно']\")).click();\n                             driver.switchTo().window(handle1);\n                         }\n                     }\n                     else {\n                         logMe(\"Продукт не подошел!\");\n                         driver.findElement(By.xpath(\"//span[text()='Закрыть окно']\")).click();\n                         driver.switchTo().window(handle1);\n                     }\n                 }\n             }\n         }\n \n \n         // Идем в зал продаж и ставим цены. на 30% дороже чем средняя цена по городу\n         boolean action=false;\n         Thread.sleep(3000);\n         waitForElementVisible(\"//a[text()='Торговый зал']\");\n         waitForElement(\"//a[text()='Торговый зал']\");\n         driver.findElement(By.xpath(\"//a[text()='Торговый зал']\")).click();\n         for(int i=0; i<driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).size();i++){\n             String salePrice=driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).getAttribute(\"value\");\n             if(salePrice.equals(\"0.00\")){\n                 Double setupvalue = Double.valueOf(driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[12]\")).get(i).getText().replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                 setupvalue=setupvalue*1.3;\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(String.valueOf(setupvalue));\n                 action=true;\n             }\n         }\n         if(action) {\n //            waitForElement(\"//input[@value='Установить цены']\");\n //            waitForElementVisible(\"//input[@value='Установить цены']\");\n //            driver.findElement(By.xpath(\"//input[@value='Установить цены']\")).click();\n             driver.findElement(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).sendKeys(Keys.RETURN);\n         }\n \n         driver.findElement(By.xpath(\"//a[text()='Магазин']\")).click();\n \n \n \n \n \n \n         return new StorePage(driver);\n     }\n \n     //автоматическая закупка в магазинах\n     public StorePage autoBuyProducts() throws InterruptedException {\n         int maxDepSize = Integer.valueOf(getParameter(\"StoreSize\"\n                 + driver.findElement(By.xpath(\"//tr[td[text()='Торговая площадь']]/td[2]\")).getText().replaceAll(\" \", \"\").split(\"м\")[0]));\n         ArrayList<String> companyDepSellProducts = getMyProductsDepToSell();\n         driver.findElement(By.xpath(\"//a[text()='Торговый зал']\")).click();\n         ArrayList <String> currentTypesDep = getCurrentTypesDepFromSalesRoom();\n         ArrayList <String> companyProductsToSell = getMyProductsToSell();\n         int depCount = Integer.valueOf(currentTypesDep.size());\n         driver.findElement(By.xpath(\"//a[text()='Снабжение']\")).click();\n \n \n         //идем в снабжение и по выясненым отделам закупаем продукты. (смотрим на кретерий в конфиге)\n         //если встречаются в снабжении продукты пропускаем идем дальше\n         //если размер\n         String productInfo=new String();\n         org.openqa.selenium.support.ui.Select s = null;\n         for(String companyProduct: companyDepSellProducts){\n             if(isDepToSell(companyProduct.split(\";\")[0],currentTypesDep)) {\n                 logMe(\"покупаем продукцию: \" + companyProduct.split(\";\")[0]);\n                 for(int i=1; i<companyProduct.split(\";\").length;i++){\n \n \n                     productInfo = getProductDataFromCompanyConfig(companyProduct.split(\";\")[i],companyProductsToSell);\n \n \n                     //этого продукта не должно быть на странице снабжения.\n                     if(isThisProductSellOnSellPage(productInfo.split(\";\")[0]))\n                         continue;\n \n                     logMe(productInfo);\n                     s = new org.openqa.selenium.support.ui.Select(driver.findElement(By.name(\"productCategory\")));\n                     s.selectByVisibleText(companyProduct.split(\";\")[0]);\n                     Thread.sleep(500);\n                     driver.findElement(By.xpath(\"//span[label/img[@alt='\"+productInfo.split(\";\")[0]+\"']]/input\")).click();\n \n \n                     String handle1 = driver.getWindowHandle();\n                     driver.findElement(By.xpath(\"//input[@value='Добавить поставщика']\")).click();\n                     Set<String> handles=driver.getWindowHandles();\n                     Iterator<String> it =handles.iterator();\n                     while (it.hasNext()) {\n                         String popupHandle = it.next().toString();\n                         if (!popupHandle.contains(handle1)) {\n                             driver.switchTo().window(popupHandle);\n                             //System.out.println(\"Pop Up Title: \" + driver.switchTo().window(popupHandle).getTitle());\n                         }\n                     }\n                     //#myPro#=title;volume;localsales;qa;brand;price;base_value_to_buy\n                     //параметры: бренд прайс качество\n                     Double price=Double.valueOf(driver.findElement(By.xpath(\"//table[@class='right_corner']//tr[2]/td[1]\")).getText().split(\":\")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                     Double qa=Double.valueOf(driver.findElement(By.xpath(\"//table[@class='right_corner']//tr[2]/td[2]\")).getText().split(\" \")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                     Double brand=Double.valueOf(driver.findElement(By.xpath(\"//table[@class='right_corner']//tr[2]/td[3]\")).getText().split(\" \")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                     Double confPrice = Double.valueOf(productInfo.split(\";\")[5]);\n                     Double confQa = Double.valueOf(productInfo.split(\";\")[3]);\n                     Double confBrand = Double.valueOf(productInfo.split(\";\")[4]);\n                     String valueToSet = productInfo.split(\";\")[6];\n \n                     logMe(\"\"+price+\">=\"+confPrice);\n                     logMe(\"\"+qa+\"<\"+confQa);\n                     logMe(\"\"+brand+\"<\"+confBrand);\n \n                     logMe(valueToSet);\n \n                     //если наши параметры подходят для покупки в этом городе - покупаем\n                     if(price>=confPrice && confBrand>brand && confQa>qa) {\n                         logMe(\"Ура, продукт подошел!\");\n \n                         driver.findElement(By.xpath(\"//a[text()='Свои']\")).click();\n                         if (driver.findElements(By.xpath(\"//a[contains(text(),'Отменить фильтр')]\")).size() != 0)\n                             if (driver.findElement(By.xpath(\"//a[contains(text(),'Отменить фильтр')]\")).isDisplayed())\n                                 driver.findElement(By.xpath(\"//a[contains(text(),'Отменить фильтр')]\")).click();\n \n                         //если нету своих - то ничего не покупаем\n                         if (driver.findElements(By.xpath(\"//tr[td[text()='Cвободно']]/td[2]/a[2]/img\")).size() != 0) {\n \n                             //сортировка\n                             Thread.sleep(500);\n                             driver.findElement(By.xpath(\"//tr[td[text()='Cвободно']]/td[2]/a[2]/img\")).click();\n \n                             String goodId = driver.findElement(By.xpath(\"//table//tr[@class='friendlyHighLight']/td[@class='choose']/span\")).getAttribute(\"id\");\n                             ((JavascriptExecutor) driver).executeScript(\"document.getElementById(\" + goodId + \").click();\");\n                             driver.findElement(By.id(\"amountInput\")).clear();\n                             driver.findElement(By.id(\"amountInput\")).clear();\n                             driver.findElement(By.id(\"amountInput\")).sendKeys(valueToSet);\n                             ((JavascriptExecutor) driver).executeScript(\"document.getElementById('submitLink').click();\");\n \n                             driver.findElement(By.xpath(\"//span[text()='Закрыть окно']\")).click();\n                             driver.switchTo().window(handle1);\n                             logMe(\"Закупились \" + productInfo.split(\";\")[0]);\n                         }\n                         else {\n                             logMe(\"Продукта нет!\");\n                             driver.findElement(By.xpath(\"//span[text()='Закрыть окно']\")).click();\n                             driver.switchTo().window(handle1);\n                         }\n                     }\n                     else {\n                         logMe(\"Продукт не подошел!\");\n                         driver.findElement(By.xpath(\"//span[text()='Закрыть окно']\")).click();\n                         driver.switchTo().window(handle1);\n                     }\n                 }\n             }\n         }\n \n         // второй заход, допокупаем отделы продуктов если позволяет магазин\n         for(String companyProduct: companyDepSellProducts){\n             //если размер магазина больше или равен дозволенного размера магазинов - прекращаем закупку!\n             if(depCount>=maxDepSize)\n                 break;\n \n             if(!isDepToSell(companyProduct.split(\";\")[0],currentTypesDep)) {\n                 logMe(\"Докупаем продукцию: \" + companyProduct.split(\";\")[0]);\n \n                 for(int i=1; i<companyProduct.split(\";\").length;i++){\n \n \n                     productInfo = getProductDataFromCompanyConfig(companyProduct.split(\";\")[i],companyProductsToSell);\n \n \n                     //этого продукта не должно быть на странице снабжения.\n                     if(isThisProductSellOnSellPage(productInfo.split(\";\")[0]))\n                         continue;\n \n                     logMe(productInfo);\n                     s = new org.openqa.selenium.support.ui.Select(driver.findElement(By.name(\"productCategory\")));\n                     s.selectByVisibleText(companyProduct.split(\";\")[0]);\n                     Thread.sleep(500);\n                     driver.findElement(By.xpath(\"//span[label/img[@alt='\"+productInfo.split(\";\")[0]+\"']]/input\")).click();\n \n \n                     String handle1 = driver.getWindowHandle();\n                     driver.findElement(By.xpath(\"//input[@value='Добавить поставщика']\")).click();\n                     Set<String> handles=driver.getWindowHandles();\n                     Iterator<String> it =handles.iterator();\n                     while (it.hasNext()) {\n                         String popupHandle = it.next().toString();\n                         if (!popupHandle.contains(handle1)) {\n                             driver.switchTo().window(popupHandle);\n                             //System.out.println(\"Pop Up Title: \" + driver.switchTo().window(popupHandle).getTitle());\n                         }\n                     }\n                     //#myPro#=title;volume;localsales;qa;brand;price;base_value_to_buy\n                     //параметры: бренд прайс качество\n                     Double price=Double.valueOf(driver.findElement(By.xpath(\"//table[@class='right_corner']//tr[2]/td[1]\")).getText().split(\":\")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                     Double qa=Double.valueOf(driver.findElement(By.xpath(\"//table[@class='right_corner']//tr[2]/td[2]\")).getText().split(\" \")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                     Double brand=Double.valueOf(driver.findElement(By.xpath(\"//table[@class='right_corner']//tr[2]/td[3]\")).getText().split(\" \")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                     Double confPrice = Double.valueOf(productInfo.split(\";\")[5]);\n                     Double confQa = Double.valueOf(productInfo.split(\";\")[3]);\n                     Double confBrand = Double.valueOf(productInfo.split(\";\")[4]);\n                     String valueToSet = productInfo.split(\";\")[6];\n \n                     logMe(\"\"+price+\">=\"+confPrice);\n                     logMe(\"\"+qa+\"<\"+confQa);\n                     logMe(\"\"+brand+\"<\"+confBrand);\n \n                     logMe(valueToSet);\n \n                     //если наши параметры подходят для покупки в этом городе - покупаем\n                     if(price>=confPrice && confBrand>brand && confQa>qa){\n                         logMe(\"Ура, продукт подошел!\");\n \n                         driver.findElement(By.xpath(\"//a[text()='Свои']\")).click();\n                         if (driver.findElements(By.xpath(\"//a[contains(text(),'Отменить фильтр')]\")).size() !=0)\n                             if (driver.findElement(By.xpath(\"//a[contains(text(),'Отменить фильтр')]\")).isDisplayed() )\n                                 driver.findElement(By.xpath(\"//a[contains(text(),'Отменить фильтр')]\")).click();\n                         if(driver.findElements(By.xpath(\"//tr[td[text()='Cвободно']]/td[2]/a[2]/img\")).size()!=0){\n                             Thread.sleep(500);\n                             //сортировка\n                             driver.findElement(By.xpath(\"//tr[td[text()='Cвободно']]/td[2]/a[2]/img\")).click();\n \n                             String goodId = driver.findElement(By.xpath(\"//table//tr[@class='friendlyHighLight']/td[@class='choose']/span\")).getAttribute(\"id\");\n                             ((JavascriptExecutor) driver).executeScript(\"document.getElementById(\" + goodId + \").click();\");\n                             driver.findElement(By.id(\"amountInput\")).clear();\n                             driver.findElement(By.id(\"amountInput\")).clear();\n                             driver.findElement(By.id(\"amountInput\")).sendKeys(valueToSet);\n                             ((JavascriptExecutor) driver).executeScript(\"document.getElementById('submitLink').click();\");\n \n                             driver.findElement(By.xpath(\"//span[text()='Закрыть окно']\")).click();\n                             driver.switchTo().window(handle1);\n                             logMe(\"Закупились \"+productInfo.split(\";\")[0]);\n                         }\n                         else {\n                             logMe(\"Продукта не нашли!!\");\n                             driver.findElement(By.xpath(\"//span[text()='Закрыть окно']\")).click();\n                             driver.switchTo().window(handle1);\n                         }\n \n                     }\n                     else {\n                         logMe(\"Продукт не подошел!\");\n                         driver.findElement(By.xpath(\"//span[text()='Закрыть окно']\")).click();\n                         driver.switchTo().window(handle1);\n                     }\n                 }\n                 depCount++;\n             }\n         }\n \n \n \n \n         // Идем в зал продаж и ставим цены. на 30% дороже чем средняя цена по городу\n         boolean action=false;\n         Thread.sleep(3000);\n         waitForElementVisible(\"//a[text()='Торговый зал']\");\n         waitForElement(\"//a[text()='Торговый зал']\");\n         driver.findElement(By.xpath(\"//a[text()='Торговый зал']\")).click();\n         for(int i=0; i<driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).size();i++){\n             String salePrice=driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).getAttribute(\"value\");\n             if(salePrice.equals(\"0.00\")){\n                 Double setupvalue = Double.valueOf(driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[12]\")).get(i).getText().replaceAll(\" \",\"\").replaceAll(\"\\\\$\",\"\"));\n                 setupvalue=setupvalue*1.3;\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(String.valueOf(setupvalue));\n                 action=true;\n             }\n         }\n         if(action) {\n //            waitForElement(\"//input[@value='Установить цены']\");\n //            waitForElementVisible(\"//input[@value='Установить цены']\");\n //            driver.findElement(By.xpath(\"//input[@value='Установить цены']\")).click();\n               driver.findElement(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).sendKeys(Keys.RETURN);\n         }\n \n         driver.findElement(By.xpath(\"//a[text()='Магазин']\")).click();\n \n \n \n \n \n \n         return new StorePage(driver);\n     }\n \n     public StorePage goToTradingRoom() throws InterruptedException {\n         waitForElementVisible(\"//a[text()='Торговый зал']\");\n         waitForElement(\"//a[text()='Торговый зал']\");\n         driver.findElement(By.xpath(\"//a[text()='Торговый зал']\")).click();\n         return new StorePage(driver);\n     }\n \n     public StorePage goToMainStorePage() throws InterruptedException {\n         waitForElementVisible(\"//a[text()='Магазин']\");\n         waitForElement(\"//a[text()='Магазин']\");\n         driver.findElement(By.xpath(\"//a[text()='Магазин']\")).click();\n         return new StorePage(driver);\n     }\n \n \n     public StorePage educate(){\n         if(isStuding() && isNeedtoEducate()){\n             logMe(\"Обучаю персонал\");\n             String currentUrl = driver.getCurrentUrl();\n             String UnitId = getUnitIdByUrl(currentUrl);\n             driver.get(\"http://virtonomica.ru/vera/window/unit/employees/education/\"+UnitId);\n             driver.findElement(By.xpath(\"//input[@value='Обучить']\")).click();\n             driver.get(currentUrl);\n         }\n         return new StorePage(driver);\n     }\n \n     public StorePage statusStore(){\n         String status = driver.findElement(By.xpath(\"//div[@class='productivity_hint']//div\")).getText();\n         if(!status.contains(\"Элитный\")){\n             logMe(\"Магазин не Элитный!!!\");\n             new HelpPage(driver).recordReport(driver.getCurrentUrl(),\"Магазин. Статус магазина: \"+status);\n         }\n         return new StorePage(driver);\n     }\n \n     public StorePage getStoreInfo() throws InterruptedException {\n         String depId = getUnitIdByUrl(driver.getCurrentUrl());\n         String currentUrl = driver.getCurrentUrl();\n         String status = driver.findElement(By.xpath(\"//div[@class='productivity_hint']//div\")).getText();\n         String famous = driver.findElement(By.xpath(\"//tr[td[text()='Известность']]/td[2]\")).getText().replaceAll(\" \",\"\");\n         String depCount = String.valueOf(getStoreDepSize());\n         String storeSize = driver.findElement(By.xpath(\"//tr[td[text()='Торговая площадь']]/td[2]\")).getText().replaceAll(\" \", \"\").split(\"м\")[0];\n         String employee = driver.findElement(By.xpath(\"//tr[td[text()='Количество сотрудников']]/td[2]\")).getText().replaceAll(\" \", \"\").split(\"\\\\(\")[0];\n         String visitors = driver.findElement(By.xpath(\"//tr[td[text()='Количество посетителей']]/td[2]\")).getText().replaceAll(\" \", \"\").replaceAll(\"\\\\D+\",\"\");\n         driver.findElement(By.xpath(\"//a[text()='Маркетинг и Реклама']\")).click();\n         Thread.sleep(2000);\n         String population = driver.findElement(By.xpath(\"//tr[td[text()='Население города']]/td[2]/input\")).getAttribute(\"value\");\n \n         logMe(depId+\"\\t\\t\\t\\t\"+employee+\"\\t\\t\\t\\t\"+storeSize+\"\\t\\t\\t\\t\"+depCount+\"\\t\\t\\t\\t\"+visitors+\"\\t\\t\\t\\t\"+famous+\"\\t\\t\\t\\t\"+population+\"\\t\\t\\t\\t\"+status);\n         driver.get(currentUrl);\n         return new StorePage(driver);\n     }\n \n \n \n     public StorePage finans(){\n         driver.findElement(By.xpath(\"//a[text()='Финансовый отчёт']\")).click();\n \n         String profit =\"\";\n         if(driver.findElements(By.xpath(\"/tr[td[text()='Прибыль']]/td[2]/span\")).size()>0)\n             profit = driver.findElement(By.xpath(\"//tr[td[text()='Прибыль']]/td[2]/span\")).getText().replaceAll(\" \", \"\").replaceAll(\"\\\\$\", \"\");\n         else\n             profit = driver.findElement(By.xpath(\"//tr[td[text()='Прибыль']]/td[2]\")).getText().replaceAll(\" \", \"\").replaceAll(\"\\\\$\", \"\");\n         String result = \"\";\n         if(Double.valueOf(profit)>0)\n             result=\"GOOD\";\n         else {result = \"BAD\";\n             if(Double.valueOf(driver.findElement(By.xpath(\"//tr[td[text()='Прибыль']]/td[3]/span\")).getText().replaceAll(\" \",\"\").replaceAll(\"\\\\$\", \"\"))<0\n                     && Double.valueOf(driver.findElement(By.xpath(\"//tr[td[text()='Прибыль']]/td[4]/span\")).getText().replaceAll(\" \",\"\").replaceAll(\"\\\\$\", \"\"))<0\n                     && Double.valueOf(driver.findElement(By.xpath(\"//tr[td[text()='Прибыль']]/td[5]/span\")).getText().replaceAll(\" \",\"\").replaceAll(\"\\\\$\", \"\"))<0\n                     )\n                 result=\"VERY BAD\";\n         }\n         logMe(result+\" profit: \"+profit);\n         driver.findElement(By.xpath(\"//a[text()='Магазин']\")).click();\n         return new StorePage(driver);\n     }\n \n \n     public StorePage advertising(Double fame,Double spentMoney){\n         driver.findElement(By.xpath(\"//a[text()='Маркетинг и Реклама']\")).click();\n         String localFame = driver.findElement(By.xpath(\"//tr[td[text()='Известность']]/td[2]\")).getText();\n         //if(Double.valueOf(localFame)<fame) Условие надо продумать!!!\n \n         driver.findElement(By.xpath(\"//a[text()='Магазин']\")).click();\n         return new StorePage(driver);\n     }\n \n     private void deselectAllAdvetising(){\n \n         driver.findElement(By.xpath(\"//tr[td/label[text()='Интернет']]/td/input\")).click();\n         driver.findElement(By.xpath(\"//tr[td/label[text()='Печатные издания']]/td/input\")).click();\n         driver.findElement(By.xpath(\"//tr[td/label[text()='Наружная реклама']]/td/input\")).click();\n         driver.findElement(By.xpath(\"//tr[td/label[text()='Радио']]/td/input\")).click();\n         driver.findElement(By.xpath(\"//tr[td/label[text()='Телевидение']]/td/input\")).click();\n \n     }\n \n //    1. store==0\n //        delete from sales and supply\n //    2. price == 0\n //        price = basicCost*1.30\n //        sell\n //    3. store/saled>2.5\n //        1. price<= basicCost\n //             offer=0 && delete product from offers.\n //             price=basic\n //        else\n //             offer=0\n //             price=price*0.9\n //    else:\n //         price<= basicCost\n //             offer=0 && delete product from offers.\n //             price=basic\n //         else\n //             offer=saled*1.10\n //             price=price*1.10\n //\n //    4. market>20\n //        price=price*1.10\n \n \n     public StorePage trading() throws InterruptedException {\n \n //        if(isDepProcessed(driver.getCurrentUrl())){\n //            logMe(\"Already processed\");\n //            return new StorePage(driver);\n //        }\n \n \n         driver.findElement(By.xpath(\"//a[text()='Торговый зал']\")).click();\n         String store = new String();\n         String price = new String();\n         String saled = new String();\n         String basicCost = new String();\n         String market = new String();\n         String offer = new String();\n         String avgPrice = new String();\n         String retailerStore = new String();\n         String result = new String();\n         String productName = new String();\n         boolean action=false;\n \n //      1. store==0\n //           delete from sales and supply\n         //удаляем товар из зала продаж который по нулям. не продается.на складе ноль.\n         for(int i=0; i<driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']\")).size();i++){\n             store = driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[6]\")).get(i).getText().replaceAll(\" \",\"\");\n             if(Double.valueOf(store)==0){\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[2]/input\")).get(i).click();\n                 action=true;\n             }\n         }\n \n \n         //Если ничего не продается, то нафиг такой магазин нужен??!? - Удаляем\n //        if(driver.findElements(By.xpath(\"//input[@value='Ликвидировать остатки товара']\")).size()>0)\n //            driver.findElement(By.xpath(\"//input[@value='Ликвидировать остатки товара']\")).click();\n //        else{\n //            driver.findElement(By.xpath(\"//a[text()='Магазин']\")).click();\n //            String currentUrl = driver.getCurrentUrl();\n //            String UnitId = getUnitIdByUrl(currentUrl);\n //            driver.get(\"http://virtonomica.ru/vera/window/unit/close/\"+UnitId);\n //            driver.findElement(By.xpath(\"//input[@value='Закрыть предприятие']\")).click();\n //            driver.switchTo().alert().accept();\n //            driver.findElement(By.xpath(\"//a[text()='Магазин']\")).click();\n //            return new StorePage(driver);\n //        }\n \n         if(action) {\n             if(driver.findElements(By.xpath(\"//input[@value='Ликвидировать остатки товара']\")).size()>0)\n                 driver.findElement(By.xpath(\"//input[@value='Ликвидировать остатки товара']\")).click();\n             driver.switchTo().alert().accept();\n         }\n \n         // ВТОРОЙ ЗАХОД. ибо с первого не проходит!\n         action=false;\n         for(int i=0; i<driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']\")).size();i++){\n             Thread.sleep(1000);\n             store = driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[6]\")).get(i).getText().replaceAll(\" \",\"\");\n             if(Double.valueOf(store)==0){\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[2]/input\")).get(i).click();\n                 action=true;\n             }\n         }\n         if(action) {\n             if(driver.findElements(By.xpath(\"//input[@value='Ликвидировать остатки товара']\")).size()>0)\n                 driver.findElement(By.xpath(\"//input[@value='Ликвидировать остатки товара']\")).click();\n             driver.switchTo().alert().accept();\n         }\n \n //    2. price == 0 если забыли проставить цену - назначаем среднюю цену по городу +30%\n //    price = avgPrice*1.30\n //\n //    3. store/saled>3 // если продажи отстают от снабжения\n //        1. price<= basicCost // товар продается ниже себестоимости // товар в конф фале должен быть не помечен как для низкой продажи\n //             offer=0.7 * offer // оффер уменьшаем на 30%\n //             price=price // цену не меняем!\n //        else\n //             offer=offer*0.7\n //             price=price*0.9 // цену делаем меньше\n //    else: // если с продажами все нормально\n //         price<= basicCost // товар в конф фале должен быть не помечен как для низкой продажи\n //             offer=0.7\n //             price=price // поправочка!!! можно продавать ниже себестоимости. // цену не меняем!\n //         else //продажи идут нормально но не шибко хорошо.\n //             offer=saled*0,9\n //             price=price*0,9\n //         if saled ==  store или saled > offer // продажи очень хорошо идут увеличиваем оффер//\n //              offer=saled*1.50\n //              price=price*1.10\n //          if рынок забит > 30%\n //              price=price*1.3\n \n         // Новое дополнение:\n         // если проддажа продукта превышает процент рынка - увеличиваем цену.\n         // или если количество проданного продукта больше указанной.\n \n         //сейчас мы в тоговом зале\n         for(int i=0; i<driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']\")).size();i++){\n             result=\"\";\n             store = driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[6]\")).get(i).getText().replaceAll(\" \",\"\");\n             saled = driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[4]\")).get(i).getText().replaceAll(\" \",\"\");\n             basicCost = driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[9]\")).get(i).getText().replaceAll(\" \", \"\").replaceAll(\"\\\\$\", \"\");\n             avgPrice = driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[12]\")).get(i).getText().replaceAll(\" \", \"\").replaceAll(\"\\\\$\", \"\");\n             price = driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).getAttribute(\"value\");\n             market =driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[11]\")).get(i).getText().split(\" \")[0];\n             productName =driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[3]\")).get(i).getAttribute(\"title\").split(\" \\\\(кликните\")[0];\n \n             //2\n             if(price.equals(\"0.00\")){\n                 price = String.valueOf(Double.valueOf(avgPrice)*1.30);\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(price);\n             }\n \n             //если продажи =0 Новый магазин, пусть цены и продажи устаканяться\n             if(Double.valueOf(saled) == 0) {\n                 logMe(\"Новый продукт, еще не продавался\");\n                 new HelpPage(driver).recordReport(driver.getCurrentUrl(),\"Новый продукт еще не продавался, цену не трогали: \"+productName);\n                 continue;\n             }\n \n             //3\n             if(Double.valueOf(store)/Double.valueOf(saled)>3){\n                 if(Double.valueOf(price)<Double.valueOf(basicCost) && !getParameter(\"ShopGoodsLessSelfCost\").contains(productName)){\n                     price = basicCost;\n //                    driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n //                    driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n //                    driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(price);\n                     result+=\"Продажа ниже себестоимости; \";\n                 }\n                 else {\n                     price = String.valueOf(Double.valueOf(price)*0.9);\n                     driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(price);\n                 }\n             }\n             else{\n                 if(Double.valueOf(price)<Double.valueOf(basicCost) && !getParameter(\"ShopGoodsLessSelfCost\").contains(productName)){\n                     if(saled.equals(store)){\n                         price = String.valueOf(Double.valueOf(price)*1.05);\n                         driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                         driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                         driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(price);\n                     }\n                     else {\n                         price = basicCost;\n //                    driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n //                    driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n //                    driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(price);\n                         result += \"Продажа ниже себестоимости; \";\n                     }\n                 }\n                 else {\n                     price = String.valueOf(Double.valueOf(price)*1.05);\n                     driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(price);\n                 }\n \n                 if(saled.equals(store)){\n                     price = String.valueOf(Double.valueOf(price)*1.05);\n                     driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(price);\n                 }\n             }\n //          4. market>20\n //               price=price*1.10\n             if(Double.valueOf(market)>30){\n                 price = String.valueOf(Double.valueOf(price)*1.05);\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).clear();\n                 driver.findElements(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).get(i).sendKeys(price);\n                 result+=\"Рынок забит; \";\n             }\n \n             recordDepartment(productName,result);\n         }\n \n         if(driver.findElements(By.xpath(\"//input[@value='Установить цены']\")).size()!=0) {\n //            driver.findElement(By.xpath(\"//input[@value='Установить цены']\")).click();\n //            waitForElement(\"//input[@class='button160']\");\n //            waitForElementVisible(\"//input[@class='button160']\");\n //            driver.findElement(By.xpath(\"//input[@class='button160']\")).click();\n             driver.findElement(By.xpath(\"//tr[@class='odd' or @class='even']/td[10]/input\")).sendKeys(Keys.ENTER);\n         }\n \n \n \n //    1. store==0\n //        delete from sales and supply\n //    2. price == 0\n //        price = basicCost*1.30\n //        sell\n //    3. store/saled>2.5\n //        1. price<= basicCost\n //             offer=offer*0.8.\n //             price=basic\n //        else\n //             offer=offer*0.8.\n //             price=price*0.9\n //    else:\n //         price<= basicCost\n //             offer=offer*0.8.\n //             price=basic\n //         else\n //             offer=saled*1.10\n //             price=price*1.10\n //\n //    4. market>20\n //        price=price*1.10\n \n \n         driver.findElement(By.xpath(\"//a[text()='Снабжение']\")).click();\n \n //      delete second offer!\n         if(driver.findElements(By.xpath(\"//tr[contains(@id,'product_sub_row')]/td[7]/input\")).size()>0){\n             waitForElement(\"//tr[contains(@id,'product_sub_row')]/td[7]/input\");\n             waitForElementVisible(\"//tr[contains(@id,'product_sub_row')]/td[7]/input\");\n             for(int i=0; i<driver.findElements(By.xpath(\"//tr[contains(@id,'product_sub_row')]/td[7]/input\")).size();i++){\n                 driver.findElements(By.xpath(\"//tr[contains(@id,'product_sub_row')]/td[7]/input\")).get(i).click();\n             }\n             driver.findElement(By.xpath(\"//input[@value='Разорвать выбранные контракты']\")).click();\n             driver.switchTo().alert().accept();\n             logMe(\"удалили второй офер\");\n         }\n \n //      1. store==0\n //      удаляем дублируемые саплаерные заказы\n         //Thread.sleep(15000);\n         action=false;\n         int rows = driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]\")).size();\n         waitForElement(\"//tr[contains(@id,'product_row')]/td[10]/input[\"+rows+\"]\");\n         for(int i=0; i< rows;i++){\n             store = driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[1]//tr[1]/td[2]\")).get(i).getText().replaceAll(\" \",\"\");\n             String supplierStore = driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[9]//tr[3]/td[2]\")).get(i).getText().replaceAll(\" \", \"\").replaceAll(\"\\\\$\", \"\");\n             if(Double.valueOf(store)==0 && Double.valueOf(supplierStore)!=0) {\n                 Thread.sleep(100);\n                 try {\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[10]/input\")).get(i).click();\n                     logMe(\"удалили того саплаера если у нас на складе ноль и у него на складе ноль.\");\n                     action=true;\n                 } catch (WebDriverException e) {\n                     System.out.println(e.getMessage());\n                     //System.out.println(driver.getPageSource());\n                 }\n             }\n         }\n         if(driver.findElements(By.xpath(\"//input[@value='Разорвать выбранные контракты']\")).size()>0){\n             driver.findElement(By.xpath(\"//input[@value='Разорвать выбранные контракты']\")).click();\n             driver.switchTo().alert().accept();\n         }\n \n \n         //3\n         for(int i=0; i<driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]\")).size();i++){\n             result=\"\";\n             saled = driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[1]//tr[5]/td[2]\")).get(i).getText().replaceAll(\" \",\"\");\n             basicCost = driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[8]//tr[1]/td[2]\")).get(i).getText().replaceAll(\" \", \"\").replaceAll(\"\\\\$\", \"\");\n             store = driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[1]//tr[1]/td[2]\")).get(i).getText().replaceAll(\" \",\"\");\n             retailerStore = driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[9]//tr[3]/td[2]\")).get(i).getText().replaceAll(\" \",\"\");\n             offer = driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).getAttribute(\"value\");\n             productName=driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/th//td/img\")).get(i).getAttribute(\"alt\");\n \n             //если новый продукт: офер не ноль, на складе поставщика не ноль, у нас на складе ноль, продажи = ноль\n             if(Double.valueOf(offer)>1 && Double.valueOf(retailerStore)>1 && Double.valueOf(store)<1 && Double.valueOf(saled)<1){\n                 continue;\n             }\n \n             if(Double.valueOf(saled)==0){\n                 logMe(\"Новый продукт для продажи, не трогаем оффер\");\n                 new HelpPage(driver).recordReport(driver.getCurrentUrl(),\"Оффер не изменен, продукт еще не продавался: \"+productName);\n                 continue;\n             }\n \n \n             //3\n             if(Double.valueOf(store)/Double.valueOf(saled)>=3){\n                 if(Double.valueOf(store)/Double.valueOf(saled)>=10){\n                     offer = \"0\";\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).sendKeys(offer);\n                     result+=\"Overcroud \"+productName+\" \"+store+\"; \";\n                 }\n                 else {\n                     offer = String.valueOf(Double.valueOf(offer)*0.8);\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).sendKeys(offer);\n                     result+=\"SuperOvercroud \"+productName+\" \"+store+\"; \";\n                 }\n             }\n             else{\n \n                 if(offer.equals(\"0\"))\n                     offer=String.valueOf(Double.valueOf(saled)*0.8);\n \n                 if(Double.valueOf(saled) == Double.valueOf(store) || Double.valueOf(saled) >= Double.valueOf(offer) ){\n                     offer = String.valueOf(Double.valueOf(saled)*1.5);\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).sendKeys(offer);\n                 }\n                 else {\n                     offer = String.valueOf(Double.valueOf(saled) * 1.1);\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).clear();\n                     driver.findElements(By.xpath(\"//tr[contains(@id,'product_row')]/td[5]/input\")).get(i).sendKeys(offer);\n                 }\n             }\n \n             if(Double.valueOf(retailerStore)/Double.valueOf(saled)<3){\n                 logMe(\"Warning! \" + productName + \" МАЛО!\");\n                 result+=\"Мало \"+productName+\" \"+retailerStore+\"; \";\n                 new HelpPage(driver).recordReport(driver.getCurrentUrl(),\"Магазин. У поставщика мало на складе: \"+productName);\n             }\n             recordDepartment(productName, result);\n         }\n \n         if(driver.findElements(By.xpath(\"//input[@value='Изменить']\")).size()>0){\n             driver.findElement(By.xpath(\"//input[@value='Изменить']\")).click();\n         }\n \n         //Записываем в базу о прохождении продразделения.\n         //recordDepartment(\"product\",\"ok\");\n         driver.findElement(By.xpath(\"//a[text()='Магазин']\")).click();\n         return new StorePage(driver);\n     }\n \n     protected void recordDepartment(String product,String result){\n         Connection c = null;\n         Statement stmt = null;\n         try {\n             Class.forName(\"org.sqlite.JDBC\");\n             c = DriverManager.getConnection(\"jdbc:sqlite:store.db\");\n             c.setAutoCommit(false);\n             //System.out.println(\"Opened database successfully\");\n \n             int session = Integer.valueOf(formattedDate(\"MMdd\"));\n             String depName =  driver.findElement(By.xpath(\"//div[@id='headerInfo']/h1\")).getText();\n             String depUrl = driver.getCurrentUrl();\n \n \n             stmt = c.createStatement();\n             String sql = \"INSERT INTO MARKET (SESSION,DEPNAME,DEPURL,RESULT,PRODUCT) \" +\n                     \"VALUES (\" +\n                     session +\n                     \",'\"+depName +\"'\"+\n                     \",'\"+depUrl +\"'\"+\n                     \",'\"+result +\"'\"+\n                     \",'\"+product +\"'\"+\n                     \");\";\n             stmt.executeUpdate(sql);\n \n             stmt.close();\n             c.commit();\n             c.close();\n         } catch ( Exception e ) {\n             System.err.println( e.getClass().getName() + \": \" + e.getMessage() );\n             System.exit(0);\n         }\n         //System.out.println(\"Records created successfully\");\n     } \n     public boolean isDepProcessed(String dep){\n         Connection c = null;\n         Statement stmt = null;\n         boolean result=false;\n         try {\n             Class.forName(\"org.sqlite.JDBC\");\n             c = DriverManager.getConnection(\"jdbc:sqlite:store.db\");\n             c.setAutoCommit(false);\n             //System.out.println(\"Opened database successfully\");\n \n             int session = Integer.valueOf(formattedDate(\"MMdd\"));\n             //String depName =  driver.findElement(By.xpath(\"//div[@id='headerInfo']/h1\")).getText();\n             String depUrl = driver.getCurrentUrl();\n \n \n             stmt = c.createStatement();\n             String sql = \"select count(*) from market where session=\"+session+\" and depurl like '\"+dep+\"%';\";\n             ResultSet rs =  stmt.executeQuery(sql);\n \n             while ( rs.next() ) {\n                 int id = rs.getInt(\"count(*)\");\n                 if(id>0)\n                     result=true;\n                 else\n                     result=false;\n             }\n \n             rs.close();\n             stmt.close();\n             c.commit();\n             c.close();\n         } catch ( Exception e ) {\n             System.err.println( e.getClass().getName() + \": \" + e.getMessage() );\n             System.exit(0);\n         }\n         //logMe(\"result is \"+result);\n         return result;\n     }\n \n     public StorePage setAutoQaSlave() throws InterruptedException {\n         new SalaryPage(driver).autoSetSalaryAndQaFormula();\n         //new SalaryPage(driver).autoSetSalaryAndQa();\n         return new StorePage(driver);\n     }\n \n     private boolean isNeedtoEducate(){\n         String salarySlave = driver.findElement(By.xpath(\"//tr[td[text()='Зарплата одного сотрудника']]/td[2]\")).getText().replaceAll(\" \",\"\").split(\"\\\\$\")[0].replaceAll(\" \",\"\");\n         String salaryTown  = driver.findElement(By.xpath(\"//tr[td[text()='Зарплата одного сотрудника']]/td[2]\")).getText().split(\"городу \")[1].replaceAll(\" \",\"\").replaceAll(\"\\\\$\\\\)\", \"\").replaceAll(\" \",\"\");\n         //logMe(salarySlave);\n         //logMe(salaryTown);\n         if (Double.valueOf(salarySlave) > Double.valueOf(salaryTown)*0.3)\n             return true;\n         else return false;\n     }\n \n     private boolean isStuding(){\n         if(driver.findElements(By.xpath(\"//a[text()='Обучение персонала']\")).size()>0)\n             return true;\n         else return false;\n     }\n \n \n }\n", "path": "src/main/java/general/virt/StorePage.java", "repo name": "relativist/virtonomica"}
{"repo_name": "test_calculate_two_values_392", "method name": "test calculate two values", "comments": ["Test"], "url": true, "content": "    public void function(){\n         driver.get(url);\n \n         WebElement number1 = driver.findElement(By.id(\"number1\"));\n         number1.sendKeys(this.number1);\n \n         WebElement number2 = driver.findElement(By.id(\"number2\"));\n         number2.sendKeys(this.number2);\n \n         WebElement functionList = driver.findElement(By.id(\"function\"));\n         functionList.findElement(\n                         By.cssSelector(\n                                 \"option[value='\" + this.function + \"']\"))\n                     .click();\n \n         WebElement calculateButton = driver.findElement(By.id(\"calculate\"));\n         calculateButton.click();\n \n         WebElement answer = new WebDriverWait(driver,10).\n                                     until(ExpectedConditions.\n                                             visibilityOfElementLocated(\n                                                     By.id(\"answer\")));\n \n         assertThat(answer.getText(),is(equalTo(this.answer)));\n \n     }\n", "path": "src/test/java/com/seleniumsimplified/webdriver/datadriven/CsvDataDrivenTest.java", "repo name": "sayems/WebDriverBasics"}
{"repo_name": "test_calculate_two_values_393", "method name": "test calculate two values", "comments": ["Test"], "url": true, "content": "    public void function(){\n         driver.get(url);\n \n         WebElement number1 = driver.findElement(By.id(\"number1\"));\n         number1.sendKeys(this.number1);\n \n         WebElement number2 = driver.findElement(By.id(\"number2\"));\n         number2.sendKeys(this.number2);\n \n         WebElement functionList = driver.findElement(By.id(\"function\"));\n         functionList.findElement(\n                         By.cssSelector(\n                                 \"option[value='\" + this.function + \"']\"))\n                     .click();\n \n         WebElement calculateButton = driver.findElement(By.id(\"calculate\"));\n         calculateButton.click();\n \n         WebElement answer = new WebDriverWait(driver,10).\n                                     until(ExpectedConditions.\n                                             visibilityOfElementLocated(\n                                                     By.id(\"answer\")));\n \n         assertThat(answer.getText(),is(equalTo(this.answer)));\n \n     }\n", "path": "src/test/java/com/seleniumsimplified/webdriver/datadriven/BasicDataDrivenTest.java", "repo name": "sayems/WebDriverBasics"}
{"repo_name": "testLogOutputInHtmlResponse_394", "method name": "test Log Output In Html Response", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         String url = getBaseUrl();\n         logger.info(\"making request to '{}'\", url);\n         webDriver.get(url);\n \n         String title = webDriver.getTitle();\n         assertThat(title, is(\"Bootstrap 101 Template\"));\n \n         String source = webDriver.getPageSource();\n         assertThat(source, is(notNullValue()));\n \n         JavascriptExecutor executor = (JavascriptExecutor) webDriver;\n         Double length = (Double) executor.executeScript(\"return logged.length;\");\n         assertThat(length.intValue(), is(greaterThan(0)));\n     }\n", "path": "src/test/java/com/willvuong/logbackrequest/it/WebDriverIT.java", "repo name": "wvuong/logback-request"}
{"repo_name": "testLogOutputInServletResponse_395", "method name": "test Log Output In Servlet Response", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         String url = getBaseUrl() + \"/testservlet\";\n         logger.info(\"making request to '{}'\", url);\n         webDriver.get(url);\n \n         String title = webDriver.getTitle();\n         assertThat(title, is(\"TestServlet\"));\n \n         String source = webDriver.getPageSource();\n         assertThat(source, is(notNullValue()));\n \n         JavascriptExecutor executor = (JavascriptExecutor) webDriver;\n         Double length = (Double) executor.executeScript(\"return logged.length;\");\n         assertThat(length.intValue(), is(greaterThan(0)));\n     }\n", "path": "src/test/java/com/willvuong/logbackrequest/it/WebDriverIT.java", "repo name": "wvuong/logback-request"}
{"repo_name": "testLogOutputInForwardedRequest_396", "method name": "test Log Output In Forwarded Request", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         String url = getBaseUrl() + \"/forwardservlet\";\n         webDriver.get(url);\n \n         String title = webDriver.getTitle();\n         assertThat(title, is(\"WEB-INF/jsp/forward.jsp\"));\n \n         String source = webDriver.getPageSource();\n         assertThat(source, is(notNullValue()));\n         System.out.println(source);\n \n         JavascriptExecutor executor = (JavascriptExecutor) webDriver;\n         Double length = (Double) executor.executeScript(\"return logged.length;\");\n         assertThat(length.intValue(), is(greaterThan(0)));\n     }\n", "path": "src/test/java/com/willvuong/logbackrequest/it/WebDriverIT.java", "repo name": "wvuong/logback-request"}
{"repo_name": "testSearchFilmNegative_397", "method name": "test Search Film Negative", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tWebElement search_field = driver.findElement(By.xpath(\"//div[@id='content']/section/nav/div[@id='search']//input[@id='q']\"));\n \t\tsearch_field.click();\n \t\tsearch_field.clear();\n \t\tsearch_field.sendKeys(\"Hobbit\");\n \t\tsearch_field.sendKeys(Keys.ENTER);\n \t\t\n \t\tfor (int second = 0;; second++) {\n \t\t\tif (second >= 60)\n \t\t\t\tfail(\"timeout\");\n \t\t\ttry {\n \t\t\t\tif (isElementPresent(By.xpath(\"//div[@id='results']/div[contains(text(), \\\"No movies where found.\\\")]\")))\n \t\t\t\t\tbreak;\n \t\t\t} catch (Exception e) {\n \t\t\t}\n \t\t\tThread.sleep(1000);\n \t\t}\n \n \t}\n", "path": "src/test/java/selenium/tests/SearchFilm.java", "repo name": "Aks1389/Se-Java-13_2015"}
{"repo_name": "testSearchFilmPositive_398", "method name": "test Search Film Positive", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tint film_count = driver.findElements(By.xpath(\"//div[@id='results']//div[@class='movie_box']\")).size();\n \t\tint film_countAfter;\n \t\tWebElement search_field = driver.findElement(By.xpath(\"//div[@id='content']/section/nav/div[@id='search']//input[@id='q']\"));\n \t\tsearch_field.click();\n \t\tsearch_field.clear();\n \t\tsearch_field.sendKeys(\"Interstellar\");\n \t\tsearch_field.sendKeys(Keys.ENTER);\n \t\t\n \t\tfor (int second = 0;; second++) {\n \t\t\tif (second >= 60)\n \t\t\t\tfail(\"timeout\");\n \t\t\ttry {\n \t\t\t\tif (isElementPresent(By.xpath(\"//div[@id='results']/a//div[@class='title']/self::div[contains(text(),\\\"Interstellar\\\")]\")))\n \t\t\t\t\tbreak;\n \t\t\t} catch (Exception e) {\n \t\t\t}\n \t\t\tThread.sleep(1000);\n \t\t}\n \t\tThread.sleep(3000);\n \t\tfilm_countAfter = driver.findElements(By.xpath(\"//div[@id='results']//div[@class='movie_box']\")).size();\n \t\t//check1\n \t\t//assertTrue(\"Count of films has not changed\", film_count > film_countAfterSearch);\n \t\ttry {\n \t\t\tassertNotEquals(film_count, film_countAfter);\n \t\t} catch (Exception e) {\n \t\t\tverificationErrors.append(e.toString());\n \t\t}\n \t\t\n \t\t\n \t\t//check2\n \t\t//List<WebElement> fMovies = driver.findElements(By.xpath(\"//div[@id='results']//div[@class='movie_box']\"));\n \t\tList<WebElement> fMovies = driver.findElements(By.xpath(\"//div[@id='results']//div[@class='movie_box']//div[@class='title']\"));\n \t\tString title;\n \t\tfor (WebElement movieBox : fMovies) {\n \t\t\t//title = movieBox.findElement(By.xpath(\"//div[@class='title']\")).getText();\n \t\t\t try {\n \t\t\t\t//assertTrue(movieBox.findElement(By.xpath(\"//div[@class='title']\")).getText().contains(\"Interstellar\"));\n \t\t\t\t assertTrue(movieBox.getText().contains(\"Interstellar\"));\n \t\t\t} catch (Exception e) {\n \t\t\t\tverificationErrors.append(e.toString());\n \t\t\t}\n \t\t}\n \t\t\n \t\t\n \t}\n", "path": "src/test/java/selenium/tests/SearchFilm.java", "repo name": "Aks1389/Se-Java-13_2015"}
{"repo_name": "testElementsExists_399", "method name": "test Elements Exists", "comments": ["Test", "InSequence(1)"], "url": true, "content": "    public void function() {\n         browser.get(deploymentUrl + COMPONENT_PAGE);\n \n         final WebElement component = this.findWebElementByClassName(OUTER_COMPONENT);\n         Assert.assertEquals(\"Wrong tag name\", \"div\", component.getTagName());\n \n         this.findWebElementByClassName(OPTION_RENDERED);\n     }\n", "path": "test/src/test/java/de/larmic/butterfaces/test/component/ActivateLibrariesTest.java", "repo name": "ButterFaces/ButterFaces"}
{"repo_name": "testRenderedOption_400", "method name": "test Rendered Option", "comments": ["Test", "InSequence(2)"], "url": true, "content": "    public void function() throws Exception {\n         browser.get(deploymentUrl + COMPONENT_PAGE);\n \n         final WebElement showcaseRenderedOption = this.findWebElementByClassName(OPTION_RENDERED);\n \n         // test component rendered\n         String[] content = browser.getPageSource().split(\"arquillian_activateLibraries_selector\");\n         Assert.assertTrue(content[1].startsWith(\"\\\"><!--ButterFaces information\"));\n \n         // test component not rendered\n         guardAjax(showcaseRenderedOption).click();\n         content = browser.getPageSource().split(\"arquillian_activateLibraries_selector\");\n         Assert.assertFalse(content[1].startsWith(\"\\\"><!--ButterFaces information\"));\n     }\n", "path": "test/src/test/java/de/larmic/butterfaces/test/component/ActivateLibrariesTest.java", "repo name": "ButterFaces/ButterFaces"}
{"repo_name": "testElementsExists_401", "method name": "test Elements Exists", "comments": ["Test", "InSequence(1)"], "url": true, "content": "    public void function() {\n         browser.get(deploymentUrl + COMPONENT_PAGE);\n \n         final WebElement component = this.findWebElementByClassName(BUTTER_COMPONENT);\n         Assert.assertEquals(\"Wrong tag name\", \"a\", component.getTagName());\n \n         this.findWebElementByClassName(OPTION_RENDERED);\n         this.findWebElementByClassName(OPTION_VALUE);\n         this.findWebElementByClassName(OPTION_GLYPHICON);\n         this.findWebElementByClassName(CLICKS_SPAN);\n     }\n", "path": "test/src/test/java/de/larmic/butterfaces/test/component/CommandButtonTest.java", "repo name": "ButterFaces/ButterFaces"}
{"repo_name": "testRenderedOption_402", "method name": "test Rendered Option", "comments": ["Test", "InSequence(2)"], "url": true, "content": "    public void function() throws Exception {\n         browser.get(deploymentUrl + COMPONENT_PAGE);\n \n         final WebElement showcaseRenderedOption = this.findWebElementByClassName(OPTION_RENDERED);\n \n         // test component not rendered\n         guardAjax(showcaseRenderedOption).click();\n         Assert.assertNull(\"Element should not be rendered but was.\", findNullableWebElementByClassName(BUTTER_COMPONENT));\n \n         // test render component again\n         guardAjax(showcaseRenderedOption).click();\n         Assert.assertNotNull(\"Element should be rendered but was not.\", findNullableWebElementByClassName(BUTTER_COMPONENT));\n     }\n", "path": "test/src/test/java/de/larmic/butterfaces/test/component/CommandButtonTest.java", "repo name": "ButterFaces/ButterFaces"}
{"repo_name": "testValueOption_403", "method name": "test Value Option", "comments": ["Test", "Ignore(\"Test failes on maven build\")", "InSequence(3)"], "url": true, "content": "    public void function() throws Exception {\n         browser.get(deploymentUrl + COMPONENT_PAGE);\n \n         final WebElement showcaseValueOption = this.findWebElementByClassName(OPTION_VALUE);\n \n         // clear label\n         showcaseValueOption.clear();\n         guardHttp(showcaseValueOption).submit();\n         WebElement component = this.findWebElementByClassName(BUTTER_COMPONENT);\n         Assert.assertTrue(component.getText().isEmpty());\n \n         guardAjax(showcaseValueOption).sendKeys(\"hello\");\n         component = this.findWebElementByClassName(BUTTER_COMPONENT);\n         Assert.assertEquals(\"hello\", component.getText());\n \n         guardAjax(showcaseValueOption).sendKeys(\" world!\");\n         component = this.findWebElementByClassName(BUTTER_COMPONENT);\n         Assert.assertEquals(\"hello world!\", component.getText());\n     }\n", "path": "test/src/test/java/de/larmic/butterfaces/test/component/CommandButtonTest.java", "repo name": "ButterFaces/ButterFaces"}
{"repo_name": "testGlyphiconOption_404", "method name": "test Glyphicon Option", "comments": ["Test", "InSequence(4)"], "url": true, "content": "    public void function() throws Exception {\n         browser.get(deploymentUrl + COMPONENT_PAGE);\n \n         final Select glyphicon = new Select(this.findWebElementByClassName(OPTION_GLYPHICON));\n \n         guardAjax(glyphicon).selectByIndex(0);\n         WebElement component = this.findWebElementByClassName(BUTTER_COMPONENT);\n         List<WebElement> spans = component.findElements(By.cssSelector(\"span.butter-component-glyphicon\"));\n         Assert.assertEquals(\"Find span but span should not been rendered.\", 0, spans.size());\n \n         guardAjax(glyphicon).selectByIndex(1);\n         spans = component.findElements(By.cssSelector(\"span.butter-component-glyphicon\"));\n         Assert.assertEquals(\"Could not find span tag in showcase component.\", 1, spans.size());\n         Assert.assertTrue(spans.get(0).getAttribute(\"class\").contains(\"glyphicon\"));\n         Assert.assertTrue(spans.get(0).getAttribute(\"class\").contains(\"glyphicon-thumbs-up\"));\n         Assert.assertTrue(spans.get(0).getAttribute(\"class\").contains(\"glyphicon-lg\"));\n         Assert.assertTrue(spans.get(0).getAttribute(\"class\").contains(\"butter-component-glyphicon\"));\n \n         guardAjax(glyphicon).selectByIndex(2);\n         spans = component.findElements(By.cssSelector(\"span.butter-component-glyphicon\"));\n         Assert.assertEquals(\"Could not find span tag in showcase component.\", 1, spans.size());\n         Assert.assertTrue(spans.get(0).getAttribute(\"class\").contains(\"fa\"));\n         Assert.assertTrue(spans.get(0).getAttribute(\"class\").contains(\"fa-language\"));\n         Assert.assertTrue(spans.get(0).getAttribute(\"class\").contains(\"fa-lg\"));\n         Assert.assertTrue(spans.get(0).getAttribute(\"class\").contains(\"butter-component-glyphicon\"));\n     }\n", "path": "test/src/test/java/de/larmic/butterfaces/test/component/CommandButtonTest.java", "repo name": "ButterFaces/ButterFaces"}
{"repo_name": "testElementsExists_405", "method name": "test Elements Exists", "comments": ["Test", "InSequence(1)"], "url": true, "content": "    public void function() {\n         browser.get(deploymentUrl + COMPONENT_PAGE);\n \n         final WebElement outerComponent = this.findWebElementByClassName(ARQUILLIAN_CONTAINER);\n         Assert.assertEquals(\"Wrong tag name\", \"div\", outerComponent.getTagName());\n         final WebElement component = outerComponent.findElement(By.className(\"butter-component\"));\n         Assert.assertEquals(\"Wrong tag name\", \"div\", component.getTagName());\n         Assert.assertEquals(\"Wrong tag name\", \"button\", component.findElement(By.className(\"bootstrap-touchspin-up\")).getTagName());\n         Assert.assertEquals(\"Wrong tag name\", \"button\", component.findElement(By.className(\"bootstrap-touchspin-down\")).getTagName());\n         Assert.assertEquals(\"Wrong tag name\", \"input\", this.findButterInputComponent().getTagName());\n \n         this.findWebElementByClassName(OPTION_RENDERED);\n         this.findWebElementByClassName(OPTION_AJAX);\n         this.findWebElementByClassName(OUTPUT_VALUE);\n     }\n", "path": "test/src/test/java/de/larmic/butterfaces/test/component/NumberComponentTest.java", "repo name": "ButterFaces/ButterFaces"}
{"repo_name": "testRenderedOption_406", "method name": "test Rendered Option", "comments": ["Test", "InSequence(2)"], "url": true, "content": "    public void function() throws Exception {\n         browser.get(deploymentUrl + COMPONENT_PAGE);\n \n         final WebElement showcaseRenderedOption = this.findWebElementByClassName(OPTION_RENDERED);\n \n         // test component not rendered\n         guardAjax(showcaseRenderedOption).click();\n         Assert.assertNull(\"Element should not be rendered but was.\", findNullableButterComponent());\n \n         // test render component again\n         guardAjax(showcaseRenderedOption).click();\n         Assert.assertNotNull(\"Element should be rendered but was not.\", findNullableButterComponent());\n     }\n", "path": "test/src/test/java/de/larmic/butterfaces/test/component/NumberComponentTest.java", "repo name": "ButterFaces/ButterFaces"}
{"repo_name": "testAjaxOption_407", "method name": "test Ajax Option", "comments": ["Test", "InSequence(2)"], "url": true, "content": "    public void function() throws Exception {\n         browser.get(deploymentUrl + COMPONENT_PAGE);\n \n         final Select showcaseAjaxOption = new Select(this.findWebElementByClassName(OPTION_AJAX));\n \n         // test no ajax\n         WebElement number = this.findButterInputComponent();\n         number.sendKeys(\"23\");\n         number.submit();\n \n         Assert.assertEquals(\"23\", this.findWebElementByClassName(OUTPUT_VALUE).getText());\n \n         // activate ajax\n         guardAjax(showcaseAjaxOption).selectByIndex(1);\n \n         // click button up\n         guardAjax(this.findButtonUp()).click();\n         Assert.assertEquals(\"24\", this.findWebElementByClassName(OUTPUT_VALUE).getText());\n \n         // click button up second time\n         guardAjax(this.findButtonUp()).click();\n         Assert.assertEquals(\"25\", this.findWebElementByClassName(OUTPUT_VALUE).getText());\n \n         // click button down\n         guardAjax(this.findButtonDown()).click();\n         Assert.assertEquals(\"24\", this.findWebElementByClassName(OUTPUT_VALUE).getText());\n     }\n", "path": "test/src/test/java/de/larmic/butterfaces/test/component/NumberComponentTest.java", "repo name": "ButterFaces/ButterFaces"}
{"repo_name": "seleniumTestRun_408", "method name": "selenium Test Run", "comments": [], "url": true, "content": "    private void function(File indexHtml, boolean chrome) {\n         WebDriver driver;\n         if (chrome) {\n             boolean onTravisCI =\n                     StringUtils.equals(System.getenv(\"CI\"), \"true\")\n                     && StringUtils.equals(System.getenv(\"TRAVIS\"), \"true\");\n             boolean onCircleCI =\n                     StringUtils.equals(System.getenv(\"CI\"), \"true\")\n                     && StringUtils.equals(System.getenv(\"CIRCLECI\"), \"true\");\n \n             // Don't execute ChromeDriver test on Travis CI\n             // because the test will freeze..\n             Assume.assumeTrue(!onTravisCI);\n \n             // CircleCI environment has its own ChromeDriver\n             if (!onCircleCI) {\n                 System.setProperty(\"webdriver.chrome.driver\", chromeDriverPath());\n             }\n             driver = new ChromeDriver();\n         } else {\n             driver = new FirefoxDriver();\n         }\n \n         // TODO need more check such as Js error check\n         // TODO SHA1 encoded name test\n         try {\n             driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n             String indexHtmlUrl = \"file:///\" + indexHtml.getAbsolutePath();\n             driver.get(indexHtmlUrl);\n             driver.findElement(By.linkText(\"sample.SampleTest.shouldSucceed\")).click();\n             driver.navigate().back();\n             driver.findElement(By.linkText(\"sample.SampleTest.shouldFail\")).click();\n         } finally {\n             quietQuit(driver);\n         }\n     }\n", "path": "src/test/java/org/sahagin/report/HtmlReportTest.java", "repo name": "SahaginOrg/sahagin-java"}
{"repo_name": "testIDETest1_409", "method name": "test IDE Test1", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/ss/\");\n         driver.findElement(By.cssSelector(\"em > a\")).click();\n         driver.findElement(By.linkText(\"网友速递\")).click();\n         driver.findElement(By.xpath(\"(//a[contains(text(),'网友速递')])[2]\")).click();\n         driver.findElement(By.cssSelector(\"img[alt=\\\"新足迹\\\"]\")).click();\n         driver.findElement(By.linkText(\"论坛信息\")).click();\n     }\n", "path": "src/test/java/com/selflearning/webdriver/IDETest1.java", "repo name": "XinCai/webdriverProject"}
{"repo_name": "getUptimeTest_410", "method name": "get Uptime Test", "comments": ["Test"], "url": true, "content": "    public void function() {\n         final WebDriver driver = new FirefoxDriver();\n \n         final String zenossUrl = System.getProperty(\"zenossUrl\");\n         final String zenossUsername = System.getProperty(\"zenossUsername\");\n         final String zenossPassword = System.getProperty(\"zenossPassword\");\n \n         if (zenossUrl == null || zenossUsername == null || zenossPassword == null) {\n             System.out.println(\"Skipping test because of missing system properties!\");\n         }\n \n         driver.get(zenossUrl);\n \n         // Login\n         final WebElement username = driver.findElement(By.name(\"__ac_name\"));\n         username.sendKeys(zenossUsername);\n         final WebElement password = driver.findElement(By.name(\"__ac_password\"));\n         password.sendKeys(zenossPassword);\n         password.submit();\n \n         System.out.println(\"Page title is: \" + driver.getTitle());\n         new WebDriverWait(driver, 10).until((WebDriver d) -> {\n             return d.getTitle().toLowerCase().contains(\"dashboard\");\n         });\n \n         final WebElement searchBox = driver.findElement(By.id(\"searchbox-query\"));\n         searchBox.sendKeys(\"localhost\");\n \n         new WebDriverWait(driver, 5).until((WebDriver d) -> {\n             final WebElement excerpt = d.findElement(By.className(\"excerpt\"));\n             return null != excerpt && excerpt.getText().contains(\"etiscan-1\");\n         });\n \n         final WebElement excerpt = driver.findElement(By.className(\"excerpt\"));\n         excerpt.click();\n \n         new WebDriverWait(driver, 5).until((WebDriver d) -> {\n             return d.getTitle().toLowerCase().endsWith(\"etiscan-1\");\n         });\n \n         final WebElement uptime = driver.findElement(By.name(\"uptime\"));\n         System.out.println(\"Uptime: \" + uptime.getText());\n     }\n", "path": "src/test/java/de/spqrinfo/selenium/ZenossTest.java", "repo name": "bwolf/selenium-workshop"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_411", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "carsonmcdonald/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_412", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({MARIONETTE})"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "carsonmcdonald/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_413", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "carsonmcdonald/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_414", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "carsonmcdonald/selenium"}
{"repo_name": "handleFormWithJavascriptAction_415", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {PHANTOMJS, SAFARI, MARIONETTE, HTMLUNIT},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "carsonmcdonald/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_416", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "carsonmcdonald/selenium"}
{"repo_name": "testAddFilmPositive_417", "method name": "test Add Film Positive", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \tWebElement addMovieButton = driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\"));\n \taddMovieButton.click();\n \t\n \tWebDriverWait wait = new WebDriverWait(driver,50);\n     WebElement imdbidField = wait.until(ExpectedConditions.presenceOfElementLocated(By.name(\"imdbid\")));\n \timdbidField.clear();\n     imdbidField.sendKeys(\"1111\");\n     \n     String filmTitle = \"My Test Film\";\n     WebElement filmTitleField = driver.findElement(By.name(\"name\"));\n \tfilmTitleField.clear();\n     filmTitleField.sendKeys(filmTitle);\n     \n     WebElement akaField = driver.findElement(By.name(\"aka\"));\n \takaField.clear();\n     akaField.sendKeys(\"Selenium First Test\");\n     \n     int year = 1989;\n     String yearToStr = new Integer(year).toString();\n     WebElement yearField = driver.findElement(By.name(\"year\"));\n \tyearField.clear();\n     yearField.sendKeys(yearToStr);\n     \n     WebElement durationField = driver.findElement(By.name(\"duration\"));\n \tdurationField.clear();\n     durationField.sendKeys(\"120\");\n     \n     WebElement ratingField = driver.findElement(By.name(\"rating\"));\n \tratingField.clear();\n     ratingField.sendKeys(\"5\");\n     \n     WebElement formatField = driver.findElement(By.id(\"formats\"));\n \tformatField.clear();\n     formatField.sendKeys(\"DVD\");\n     \n     WebElement ownRadioButtonNo = driver.findElement(By.id(\"own_no\"));\n \townRadioButtonNo.click();\n     \n     WebElement seenRadioButtonNo = driver.findElement(By.id(\"seen_no\"));\n \tseenRadioButtonNo.click();\n     \n     WebElement loanedRadioButtonYes = driver.findElement(By.id(\"loaned_yes\"));\n \tloanedRadioButtonYes.click();\n     \n     WebElement loanNameField = driver.findElement(By.name(\"loanname\"));\n \tloanNameField.clear();\n     loanNameField.sendKeys(\"John Doe\");\n     \n     WebElement loanDateField = driver.findElement(By.name(\"loandate\"));\n \tloanDateField.clear();\n     loanDateField.sendKeys(\"2015-04-24\");\n     \n     driver.findElement(By.id(\"cover\")).sendKeys((new File(\"cover.jpg\").getAbsolutePath()));\n     \n     WebElement trailerUrlField = driver.findElement(By.name(\"trailer\"));\n \ttrailerUrlField.clear();\n     trailerUrlField.sendKeys(\"http://youtube.com\");\n     \n     WebElement notesField = driver.findElement(By.name(\"notes\"));\n \tnotesField.clear();\n     notesField.sendKeys(\"notes\");\n     \n     WebElement taglinesField = driver.findElement(By.name(\"taglines\"));\n \ttaglinesField.clear();\n     taglinesField.sendKeys(\"tag\");\n     \n     WebElement plotOutLinesField = driver.findElement(By.name(\"plotoutline\"));\n \tplotOutLinesField.clear();\n     plotOutLinesField.sendKeys(\"plot_outline\");\n     \n     WebElement plotsField = driver.findElement(By.name(\"plots\"));\n \tplotsField.clear();\n     plotsField.sendKeys(\"plots\");\n     \n     WebElement languagesField = driver.findElement(By.id(\"text_languages_0\"));\n \tlanguagesField.clear();\n     languagesField.sendKeys(\"langs\");\n     \n     WebElement subtitlesField = driver.findElement(By.name(\"subtitles\"));\n \tsubtitlesField.clear();\n     subtitlesField.sendKeys(\"subtitles\");\n     \n     WebElement audioField = driver.findElement(By.name(\"audio\"));\n \taudioField.clear();\n     audioField.sendKeys(\"audio\");\n     \n     WebElement videoField = driver.findElement(By.name(\"video\"));\n \tvideoField.clear();\n     videoField.sendKeys(\"video\");\n     \n     WebElement countryField = driver.findElement(By.name(\"country\"));\n \tcountryField.clear();\n     countryField.sendKeys(\"country\");\n     \n     WebElement genresField = driver.findElement(By.name(\"genres\"));\n \tgenresField.clear();\n     genresField.sendKeys(\"genres\");\n     \n     WebElement directorField = driver.findElement(By.name(\"director\"));\n \tdirectorField.clear();\n     directorField.sendKeys(\"director\");\n     \n     WebElement writerField = driver.findElement(By.name(\"writer\"));\n \twriterField.clear();\n     writerField.sendKeys(\"writer\");\n     \n     WebElement producerField = driver.findElement(By.name(\"producer\"));\n \tproducerField.clear();\n     producerField.sendKeys(\"producer\");\n     \n     WebElement musicField = driver.findElement(By.name(\"music\"));\n \tmusicField.clear();\n     musicField.sendKeys(\"music\");\n     \n     WebElement castField = driver.findElement(By.name(\"cast\"));\n \tcastField.clear();\n     castField.sendKeys(\"cast\");\n     \n     WebElement saveFilmButton = driver.findElement(By.id(\"submit\"));\n \tsaveFilmButton.click();\n     \n \t\n \tWebElement movie = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"movie\")));\n \tWebElement titleAndYear = movie.findElement(By.tagName(\"h2\"));\n \tassertTrue(titleAndYear.getText().equals(filmTitle + \" (\" + yearToStr + \")\"));\n \t\n \tWebElement goHomeButton = driver.findElement(By.linkText(\"Home\"));\n \tgoHomeButton.click();\n \tWebElement movies = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"results\")));\n \tassertTrue(isElementPresent(movies, (By.cssSelector(\"img[alt=\\\"\" + filmTitle + \"\\\"]\"))));\n   }\n", "path": "src/test/java/ru/abbyy/lingvolive/AddFilmTest.java", "repo name": "darialopteva/Se-Java-12"}
{"repo_name": "testAddFilmFromImdb_418", "method name": "test Add Film From Imdb", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \tWebElement addMovieButton = driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\"));\n \taddMovieButton.click();\n \tWebDriverWait wait = new WebDriverWait(driver,100);\n \t\n \tWebElement imdbSearchField =  wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"imdbsearch\")));\n \timdbSearchField.clear();\n     imdbSearchField.sendKeys(\"123456\");\n     \n     WebElement imdbSearchButton = driver.findElement(By.xpath(\"/html/body/div/div/div/section/div/form/table/tbody/tr[2]/td/input\"));\n \timdbSearchButton.click();\n     \n \t\n \tWebElement searchedMovie = wait.until(ExpectedConditions.presenceOfElementLocated(By.linkText(\"Home and Away\")));\n     \n \tsearchedMovie.click();\n     \n     WebElement saveFilmButton = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"submit\")));\n \tsaveFilmButton.click();\n     \n \tWebElement movie = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"movie\")));\n \tWebElement titleAndYear = movie.findElement(By.tagName(\"h2\"));\n \tassertTrue(titleAndYear.getText().equals(\"Home and Away (1988)\")); \n \t\n \tWebElement goHomeButton = driver.findElement(By.linkText(\"Home\"));\n \tgoHomeButton.click();\n   }\n", "path": "src/test/java/ru/abbyy/lingvolive/AddFilmTest.java", "repo name": "darialopteva/Se-Java-12"}
{"repo_name": "testAddFilmNoYear_419", "method name": "test Add Film No Year", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \tWebElement addMovieButton = driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\"));\n \taddMovieButton.click();\n \t\n \tWebElement filmTitleField = driver.findElement(By.name(\"name\"));\n \tfilmTitleField.clear();\n     filmTitleField.sendKeys(\"My Test Film\");\n     \n     WebElement saveFilmButton = driver.findElement(By.id(\"submit\"));\n \tsaveFilmButton.click();\n     \n     WebElement errorLabel = driver.findElement(By.xpath(\"/html/body/div/div/div/section/div/div/form/table/tbody/tr[4]/td[2]/label\"));\n     assertTrue(errorLabel.isDisplayed());\n   }\n", "path": "src/test/java/ru/abbyy/lingvolive/AddFilmTest.java", "repo name": "darialopteva/Se-Java-12"}
{"repo_name": "testLoginToApplication_420", "method name": "test Login To Application", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n \tString siteUsername = PropertyLoader.loadProperty(\"site.username\");\n \tString sitePassword = PropertyLoader.loadProperty(\"site.password\");\n     WebElement usernameField = driver.findElement(By.id(\"username\"));\n \tusernameField.clear();\n     usernameField.sendKeys(siteUsername);\n     WebElement passwordField = driver.findElement(By.name(\"password\"));\n \tpasswordField.clear();\n     passwordField.sendKeys(sitePassword);\n     driver.findElement(By.name(\"submit\")).click();\n     Thread.sleep(200);\n     WebElement logoutButton = driver.findElement(By.xpath(\"/html/body/div[1]/div/header/div/nav/ul/li[4]\"));\n     assertTrue(logoutButton.isDisplayed());\n   }\n", "path": "src/test/java/ru/abbyy/lingvolive/LoginTest.java", "repo name": "darialopteva/Se-Java-12"}
{"repo_name": "testSearchNegative_421", "method name": "test Search Negative", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     List<WebElement> films = driver.findElements(By.className(\"movie_box\"));\n     WebElement searchField = driver.findElement(By.id(\"q\"));\n \tsearchField.clear();\n     searchField.sendKeys(\"rainbow\" + Keys.RETURN);\n     Thread.sleep(500);\n     List<WebElement> newFilms = driver.findElements(By.className(\"movie_box\"));\n     assertTrue(newFilms.isEmpty());\n   }\n", "path": "src/test/java/ru/abbyy/lingvolive/SearchFilmTest.java", "repo name": "darialopteva/Se-Java-12"}
{"repo_name": "testDeleteFilmPositive_422", "method name": "test Delete Film Positive", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     List<WebElement> films = driver.findElements(By.className(\"movie_box\"));\n     String filmId = films.get(0).getAttribute(\"id\");\n     films.get(0).click();\n     WebDriverWait wait = new WebDriverWait(driver,50);\n     WebElement deleteButton = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"img[alt=\\\"Remove\\\"]\")));\n     deleteButton.click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to remove this[\\\\s\\\\S]$\"));\n     Thread.sleep(100);\n     List<WebElement> newFilms = driver.findElements(By.className(\"movie_box\"));\n     for (WebElement element : newFilms) {\n \t\tassertNotEquals(element.getAttribute(\"id\"), filmId);\n \t}\n   }\n", "path": "src/test/java/ru/abbyy/lingvolive/DeleteFilmTest.java", "repo name": "darialopteva/Se-Java-12"}
{"repo_name": "testManagerLogin_423", "method name": "test Manager Login", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"FYPFirstChoice/\");\n     driver.findElement(By.id(\"Login_Username\")).clear();\n     driver.findElement(By.id(\"Login_Username\")).sendKeys(\"gillian\");\n     driver.findElement(By.id(\"Login_Password\")).clear();\n     driver.findElement(By.id(\"Login_Password\")).sendKeys(\"test\");\n     driver.findElement(By.id(\"Login_0\")).click();\n     driver.findElement(By.id(\"Logout_0\")).click();\n   }\n", "path": "WEB-INF/src/java/junit/ManagerLoginTest.java", "repo name": "gillroro/FYPFirstChoice"}
{"repo_name": "testEmptyLogin_424", "method name": "test Empty Login", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"FYPFirstChoice/\");\n     driver.findElement(By.id(\"Login_Username\")).clear();\n     driver.findElement(By.id(\"Login_Username\")).sendKeys(\"\");\n     driver.findElement(By.id(\"Login_Password\")).clear();\n     driver.findElement(By.id(\"Login_Password\")).sendKeys(\"\");\n     driver.findElement(By.id(\"Login_0\")).click();\n     try {\n       assertEquals(\"Invalid username\", driver.findElement(By.cssSelector(\"div.errorMessage\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     try {\n       assertEquals(\"Invalid Password\", driver.findElement(By.cssSelector(\"#wwerr_Login_Password > div.errorMessage\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "WEB-INF/src/java/junit/EmptyLoginTest.java", "repo name": "gillroro/FYPFirstChoice"}
{"repo_name": "testManageAppraisal_425", "method name": "test Manage Appraisal", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"FYPFirstChoice/\");\n     driver.findElement(By.id(\"Login_Username\")).clear();\n     driver.findElement(By.id(\"Login_Username\")).sendKeys(\"gillian\");\n     driver.findElement(By.id(\"Login_Password\")).clear();\n     driver.findElement(By.id(\"Login_Password\")).sendKeys(\"test\");\n     driver.findElement(By.id(\"Login_0\")).click();\n     driver.findElement(By.linkText(\"Manage Employee Appraisal\")).click();\n     new Select(driver.findElement(By.id(\"SelectedEmployee_firstName\"))).selectByVisibleText(\"Poppy\");\n     driver.findElement(By.id(\"SelectedEmployee_Submit\")).click();\n     driver.findElement(By.xpath(\"/html/body/div/div/table/tbody/tr[6]/td[8]/a/i\")).click();\n   }\n", "path": "WEB-INF/src/java/junit/ManageAppraisalTest.java", "repo name": "gillroro/FYPFirstChoice"}
{"repo_name": "testEmployeeLogin_426", "method name": "test Employee Login", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"FYPFirstChoice/\");\n     driver.findElement(By.id(\"Login_Username\")).clear();\n     driver.findElement(By.id(\"Login_Username\")).sendKeys(\"sarah\");\n     driver.findElement(By.id(\"Login_Password\")).clear();\n     driver.findElement(By.id(\"Login_Password\")).sendKeys(\"test\");\n     driver.findElement(By.id(\"Login_0\")).click();\n     driver.findElement(By.id(\"Logout_0\")).click();\n   }\n", "path": "WEB-INF/src/java/junit/EmployeeLoginTest.java", "repo name": "gillroro/FYPFirstChoice"}
{"repo_name": "testProjectAssignment_427", "method name": "test Project Assignment", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"FYPFirstChoice/\");\n     driver.findElement(By.id(\"Login_Username\")).clear();\n     driver.findElement(By.id(\"Login_Username\")).sendKeys(\"gillian\");\n     driver.findElement(By.id(\"Login_Password\")).clear();\n     driver.findElement(By.id(\"Login_Password\")).sendKeys(\"test\");\n     driver.findElement(By.id(\"Login_0\")).click();\n     driver.findElement(By.linkText(\"Manage Projects\")).click();\n     driver.findElement(By.linkText(\"Assign Employee\")).click();\n     new Select(driver.findElement(By.id(\"CompleteAssignment_projectName\"))).selectByVisibleText(\"iOS App Development\");\n     new Select(driver.findElement(By.id(\"CompleteAssignment_firstName\"))).selectByVisibleText(\"Sarah\");\n     driver.findElement(By.id(\"CompleteAssignment_Assign\")).click();\n     try {\n       assertEquals(\"Project Assignment Complete\", driver.findElement(By.cssSelector(\"h4.center\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "WEB-INF/src/java/junit/ProjectAssignmentTest.java", "repo name": "gillroro/FYPFirstChoice"}
{"repo_name": "testInvalidLogin_428", "method name": "test Invalid Login", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"FYPFirstChoice/\");\n     driver.findElement(By.id(\"Login_0\")).click();\n     try {\n       assertEquals(\"Invalid username\", driver.findElement(By.cssSelector(\"div.errorMessage\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "WEB-INF/src/java/junit/InvalidLoginTest.java", "repo name": "gillroro/FYPFirstChoice"}
{"repo_name": "testRegisterEmployee_429", "method name": "test Register Employee", "comments": ["Ignore", "Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"FYPFirstChoice/\");\n     driver.findElement(By.id(\"Login_Username\")).clear();\n     driver.findElement(By.id(\"Login_Username\")).sendKeys(\"gillian\");\n     driver.findElement(By.id(\"Login_Password\")).clear();\n     driver.findElement(By.id(\"Login_Password\")).sendKeys(\"test\");\n     driver.findElement(By.id(\"Login_0\")).click();\n     driver.findElement(By.linkText(\"Register Employee\")).click();\n     driver.findElement(By.id(\"Register_newFirstName\")).clear();\n     driver.findElement(By.id(\"Register_newFirstName\")).sendKeys(\"Olive\");\n     driver.findElement(By.id(\"Register_surname\")).clear();\n     driver.findElement(By.id(\"Register_surname\")).sendKeys(\"Maguire\");\n     driver.findElement(By.id(\"Register_Username\")).clear();\n     driver.findElement(By.id(\"Register_Username\")).sendKeys(\"olive124\");\n     driver.findElement(By.id(\"Register_Password\")).clear();\n     driver.findElement(By.id(\"Register_Password\")).sendKeys(\"test\");\n     driver.findElement(By.id(\"Register_Address\")).clear();\n     driver.findElement(By.id(\"Register_Address\")).sendKeys(\"Dublin\");\n     driver.findElement(By.id(\"Register_Salary\")).clear();\n     driver.findElement(By.id(\"Register_Salary\")).sendKeys(\"12345\");\n     driver.findElement(By.id(\"Register_UserType\")).clear();\n     driver.findElement(By.id(\"Register_UserType\")).sendKeys(\"employee\");\n     new Select(driver.findElement(By.id(\"Register_firstName\"))).selectByVisibleText(\"Gillian\");\n     driver.findElement(By.id(\"Register_0\")).click();\n     try {\n       assertEquals(\"Employee Registered\", driver.findElement(By.cssSelector(\"h4.center\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "WEB-INF/src/java/junit/RegisterEmployeeTest.java", "repo name": "gillroro/FYPFirstChoice"}
{"repo_name": "testAppraisalWithNoProjects_430", "method name": "test Appraisal With No Projects", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"FYPFirstChoice/\");\n     driver.findElement(By.id(\"Login_Username\")).clear();\n     driver.findElement(By.id(\"Login_Username\")).sendKeys(\"poppy\");\n     driver.findElement(By.id(\"Login_Password\")).clear();\n     driver.findElement(By.id(\"Login_Password\")).sendKeys(\"test\");\n     driver.findElement(By.id(\"Login_0\")).click();\n     driver.findElement(By.linkText(\"Self Appraise\")).click();\n     driver.findElement(By.id(\"Appraisal_accomplishments\")).clear();\n     driver.findElement(By.id(\"Appraisal_accomplishments\")).sendKeys(\"accomplishments\");\n     driver.findElement(By.id(\"Appraisal_barriers\")).clear();\n     driver.findElement(By.id(\"Appraisal_barriers\")).sendKeys(\"barriers\");\n     driver.findElement(By.id(\"Appraisal_improvements\")).clear();\n     driver.findElement(By.id(\"Appraisal_improvements\")).sendKeys(\"improvement\");\n     driver.findElement(By.id(\"Appraisal_performance\")).clear();\n     driver.findElement(By.id(\"Appraisal_performance\")).sendKeys(\"knowledge\");\n     driver.findElement(By.id(\"Appraisal_attendanceRecordVery Good\")).click();\n     driver.findElement(By.id(\"Appraisal_respectRecordAverage Respect for others\")).click();\n     new Select(driver.findElement(By.id(\"Appraisal_firstName\"))).selectByVisibleText(\"Gillian\");\n     driver.findElement(By.id(\"Appraisal_Appraisal\")).click();\n     try {\n       assertEquals(\"Self Appraisal Complete\", driver.findElement(By.cssSelector(\"h6.center\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "WEB-INF/src/java/junit/AppraisalWithNoProjectsTest.java", "repo name": "gillroro/FYPFirstChoice"}
{"repo_name": "testCreateReviewWithAbapBackend_431", "method name": "test Create Review With Abap Backend", "comments": ["Test"], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(serverUrl + applicationPath);\n \t\tCustomerReviewsPage reviewsPage = CustomerReviewsPage.create(driver);\n \n \t\t// ABAP backend system (default as defined in config.js)\n \t\tSettingsPage abapsettingsview = reviewsPage.navigateToSettings();\n \t\tabapsettingsview.switchToAbapBackend();\n \t\tabapsettingsview.pressOk();\n \t\tabapsettingsview.confirmRefresh();\n \n \t\ttry {\n \t\t\tThread.sleep(5000);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \n \t\treviewsPage.waitForPageAfterRefresh();\n \n \t\tassertEquals(\"Default category does not match\", \"All Categories\",\n \t\t\t\treviewsPage.getCategory());\n \t\tassertEquals(\"Default product does not match\",\n \t\t\t\t\"10\\\" Portable DVD player\", reviewsPage.getProduct());\n \t\tassertFalse(\"First reviewer name is empty\", reviewsPage\n \t\t\t\t.getFirstReviewer().isEmpty());\n \t\tassertFalse(\"First review comment is empty\", reviewsPage\n \t\t\t\t.getFirstReviewComment().isEmpty());\n \n \t\treviewsPage.selectCategory(\"Speakers\");\n \t\treviewsPage.selectProduct(\"Sound Booster\");\n \n \t\tCustomerReviewCreationPage reviewCreationPage = reviewsPage\n \t\t\t\t.writeCustomerReview();\n \n \t\tWebElement myDynamicElement = (new WebDriverWait(driver, 20))\n \t\t\t\t.until(ExpectedConditions.presenceOfElementLocated(By\n \t\t\t\t\t\t.id(\"review-comment-text-area-id\")));\n \n \t\tString reviewId = UUID.randomUUID().toString();\n \t\treviewCreationPage.writeReviewComments(\"Good performance (\" + reviewId\n \t\t\t\t+ \")\");\n \t\treviewCreationPage.setReviewRating(3);\n \t\treviewCreationPage.setFirstName(\"James\");\n \t\treviewCreationPage.setLastName(\"Field\");\n \n \t\treviewsPage = reviewCreationPage.submitAndConfirmReview();\n \n \t\tassertEquals(3, reviewsPage.getFirstReviewRating());\n \t\tassertTrue(reviewsPage.getFirstReviewComment().contains(reviewId));\n \t\tassertEquals(\"James Field\", reviewsPage.getFirstReviewer());\n \t}\n", "path": "espm-ui-reviews-web/src/test/java/com/sap/espm/ui/reviews/web/CustomerReviewsIT.java", "repo name": "steve27/espm-cloud-beta"}
{"repo_name": "testCreateReviewWithCloudBackend_432", "method name": "test Create Review With Cloud Backend", "comments": [" TODO: Enable as soon as ESPM OData service bug for reviews case is fixed", " @Test"], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(serverUrl + applicationPath);\n \t\tCustomerReviewsPage reviewsPage = CustomerReviewsPage.create(driver);\n \n \t\t// HANA Cloud remote\n \t\tSettingsPage cloudsettingsview = reviewsPage.navigateToSettings();\n \t\tcloudsettingsview.switchToHanaCloudRemote();\n \t\tcloudsettingsview.pressOk();\n \t\tcloudsettingsview.confirmRefresh();\n \n \t\ttry {\n \t\t\tThread.sleep(5000);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \n \t\treviewsPage.waitForPageAfterRefresh();\n \n \t\tassertEquals(\"Default category does not match\", \"All Categories\",\n \t\t\t\treviewsPage.getCategory());\n \t\tassertEquals(\"Default product does not match\",\n \t\t\t\t\"10\\\" Portable DVD player\", reviewsPage.getProduct());\n \t\tassertFalse(\"First reviewer name is empty\", reviewsPage\n \t\t\t\t.getFirstReviewer().isEmpty());\n \t\tassertFalse(\"First review comment is empty\", reviewsPage\n \t\t\t\t.getFirstReviewComment().isEmpty());\n \n \t\treviewsPage.selectCategory(\"Speakers\");\n \t\treviewsPage.selectProduct(\"Sound Booster\");\n \n \t\tCustomerReviewCreationPage reviewCreationPage = reviewsPage\n \t\t\t\t.writeCustomerReview();\n \n \t\tWebElement myDynamicElement = (new WebDriverWait(driver, 20))\n \t\t\t\t.until(ExpectedConditions.presenceOfElementLocated(By\n \t\t\t\t\t\t.id(\"review-comment-text-area-id\")));\n \n \t\tString reviewId = UUID.randomUUID().toString();\n \t\treviewCreationPage.writeReviewComments(\"Good performance (\" + reviewId\n \t\t\t\t+ \")\");\n \t\treviewCreationPage.setReviewRating(3);\n \t\treviewCreationPage.setFirstName(\"James\");\n \t\treviewCreationPage.setLastName(\"Field\");\n \n \t\treviewsPage = reviewCreationPage.submitAndConfirmReview();\n \n \t\tassertEquals(3, reviewsPage.getFirstReviewRating());\n \t\tassertTrue(reviewsPage.getFirstReviewComment().contains(reviewId));\n \t\tassertEquals(\"James Field\", reviewsPage.getFirstReviewer());\n \t}\n", "path": "espm-ui-reviews-web/src/test/java/com/sap/espm/ui/reviews/web/CustomerReviewsIT.java", "repo name": "steve27/espm-cloud-beta"}
{"repo_name": "navigateToUrl_433", "method name": "navigate To Url", "comments": [" Navigates to a new web page in the current browser window. <br />", " ", " Usage for FitNesse: |navigate to Url|http://www.example.org|<br />", " ", " FitNesse usage..: |navigate to Url|arg1| <br />", " FitNesse example: |navigate to Url|http://www.example.org| <br />", " <br />", " ", " @param url", "            URL of page to navigate to", " @return always true to show inside FitNesse a positive result"], "url": true, "content": "\tpublic boolean function(String url) {\n \t\twebDriver.get(url);\n \t\treturn true;\n \t}\n", "path": "src/main/java/org/testeditor/fixture/web/WebFixture.java", "repo name": "test-editor/web-fixture"}
{"repo_name": "navigateToUrl_434", "method name": "navigate To Url", "comments": [" Navigates to a new web page in the current browser window.", " ", " @param url", "            URL of page to navigate to", " @return always {@code true} to show inside FitNesse a positive result"], "url": true, "content": "\tpublic boolean function(String url) {\n \t\twebDriver.get(url);\n \t\treturn true;\n \t}\n", "path": "src/main/java/org/testeditor/fixture/web/AbstractWebFixture.java", "repo name": "test-editor/web-fixture"}
{"repo_name": "wholesalePayWithCC_435", "method name": "wholesale Pay With CC", "comments": ["wholesale pay with cc", "Test"], "url": true, "content": "\tpublic void function() throws Exception {\n     \n \t\tdriver.get(baseUrl);\n     \n \t\tAction.globalRegist();\n \t\tThread.sleep(5000);\n     \n \t\t//check wording\n \t\tString setscroll = \"document.documentElement.scrollTop=3000\";  \n        \n \t\tJavascriptExecutor jse=(JavascriptExecutor) driver;  \n \t\tjse.executeScript(setscroll); \n     \n \t\t// click 'Bulk Orders'\n \t\tdriver.findElement(By.linkText(FreeBouqPage.LinkText_wholeSale)).click();\n \t\tThread.sleep(2000);\n     \n \t\tdriver.findElement(By.xpath(\"//img[@alt='Rose - 40cm - Red']\")).click();\n \t\tThread.sleep(2000);\n     \n \t\t// verify buy this exist\n \t\tassertTrue(selenium.isTextPresent(FreeBouqPage.Text_BuyThisButton));\n     \n \t\t//facebook\n \t\tassertTrue(selenium.isElementPresent(FreeBouqPage.Xpath_ShareFacebookLink));\n     \n \t\t//twitter\n \t\tassertTrue(selenium.isElementPresent(FreeBouqPage.Xpath_ShareTwitterLink));\n     \n \t\t//pinterest\n \t\tassertTrue(selenium.isElementPresent(FreeBouqPage.Xpath_SharePinterestLink));\n \t\tThread.sleep(2000);  \n     \n \t\t//click buy this\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ChekoutGiftCard)).click();\n \t\tThread.sleep(2000);\n     \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_AddCheckOut)).click();\n \t\tThread.sleep(5000);\n     \n \t\t//verify warning\n \t\tassertTrue(selenium.isTextPresent(\"This field is required.\"));\n        \n \t\t//input info\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).sendKeys(\"wholesale first\");\n \t\tThread.sleep(2000);\n     \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).sendKeys(\"wholesale last\"); \n \t\tThread.sleep(2000);\n     \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Address)).click();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Address)).sendKeys(\"5300 steven creek blvd\"); \n \t\tThread.sleep(2000);\n     \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_City)).click();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_City)).sendKeys(\"san jose\"); \n \t\tThread.sleep(2000);\n     \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Zip)).click();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Zip)).sendKeys(\"95129\");\n \t\tThread.sleep(2000);\n     \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_SelectRelationshipWholeSale)).click();\n \t\tdriver.findElement(By.partialLinkText(FreeBouqPage.Text_California)).click();\n \t\tThread.sleep(2000);\n     \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Phone)).click();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Phone)).sendKeys(\"8212345678\");\n \t\tThread.sleep(2000);\n     \n \t\t//get regular delivery date\n \t\tString deliverDate,dte,dateText;\n \t\tint i;\n \t\tThread.sleep(1000);\n     \n \t\tSystem.out.println(selenium.getText(\"//div[@class='pro-intro-sm clearfix hidden-xs']/div[3]/p\"));\n \t\tdateText=selenium.getText(\"//div[@class='pro-intro-sm clearfix hidden-xs']/div[3]/p\");\n \t\tdte= dateText.substring(22, 24);\n \t\tSystem.out.println(dte);\n     \n \t\ti = Integer.valueOf(dte).intValue();\n \t\tdeliverDate = Integer.toString(i);\n \t\tSystem.out.println(deliverDate);\n     \n \t\t// select delivery date\n \t\tdriver.findElement(By.linkText(deliverDate)).click();\n \t\tThread.sleep(2000);   \n     \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_AddCheckOut)).click();\n \t\tThread.sleep(2000);\n     \n \t\t// click use this address button\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_UseThisAddressButton)).click();\n \t\tThread.sleep(2000);\n     \n \t\t//Cart page,if pop-up error tips, click 'X'\n \t\tString txt;\n \t    txt = driver.findElement(By.id(\"errors-modal-body\")).getText();\n \t    \n \t    if(CheckoutPage.Text_ErrorTips.equals(txt)){\n \t    \tassertTrue(selenium.isTextPresent(CheckoutPage.Text_ErrorTips)); \n \t    \tThread.sleep(1000);\n \t    \n \t    \tdriver.findElement(By.xpath(\"//div[@id='errors-modal']/div[2]/div/div/button\")).click();\n \t    \tThread.sleep(2000);\n \t    }\n \t     \n \t    //paid with CC  \n \t    Action.payWithCCOnCartPage(CheckoutPage.Data_CardNum,\n \t      \tCheckoutPage.Data_CardNum2,\n \t      \tCheckoutPage.Data_CardNum2,\n \t      \tCheckoutPage.Data_CardNum2,\n \t      \tCheckoutPage.Data_CardCode,\n \t      \tCheckoutPage.Data_BillingZip);\n   \n \t\t// check pay for success, to generate the order \n \t\tassertTrue(selenium.isTextPresent(OrderConfirmationPage.Text_OrderSucceed));  \n   }\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/ForBusiness/BulkOrders_PaidWithCC.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "deleteUpsellBouq_436", "method name": "delete Upsell Bouq", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \n \t\tAction.globalRegist();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \t\t\tSystem.out.println(\"this bouq has upsell.\");\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// select first upell bouq\n \t\t\t\tdriver.findElement(By.xpath(\"//ul[@class= 'clearfix']/li/a\"))\n \t\t\t\t\t\t.click();\n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// no select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t  \t// click 'remove' link\n \t  \tdriver.findElement(By.linkText(CheckoutPage.Link_removeOnCart)).click();\n \t  \tThread.sleep(3000);\n \t  \t\n \t  \tassertTrue(selenium.isTextPresent(CheckoutPage.Text_EmptyCart));\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Upsell/DeletePrimaryBouq.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "CreateNewAccountBuySomeBouqs_437", "method name": "Create New Account Buy Some Bouqs", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\t// open test.thebouqs.com web.\n \t\tdriver.get(baseUrl);\n \n \t\t// click X to close POP-UP\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\tThread.sleep(1000);\n \n \t\t// click \"Log In\" link\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LoginLink_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// click create account button.\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_CreateAccount_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(1000);\n \n \t\t// input first name\n \t\tAction.inputFirstNameOnGlobal(Regist_Login_Page.Id_SignUpName,\n \t\t\t\tRegist_Login_Page.strName);\n \n \t\t// input new email\n \t\tString eml = new Email().newEmail();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.sendKeys(eml);\n \t\tThread.sleep(3000);\n \n \t\t// get new email address\n \t\tEmail.setEmail(eml);\n \t\tSystem.out.println(eml);\n \n \t\t// input password\n \t\tAction.inputPasswordOnRegistPage(\n \t\t\t\tRegist_Login_Page.Id_SignUpPassword_Global,\n \t\t\t\tRegist_Login_Page.strPassword);\n \n \t\t// click 'sign up' button\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(3000);\n \n \t\t// input months\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileMonths,\n \t\t\t\tRegist_Login_Page.strMonths_Global);\n \n \t\t// input days\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileDays,\n \t\t\t\tRegist_Login_Page.strDays_Global);\n \n \t\t// input years\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileYears,\n \t\t\t\tRegist_Login_Page.strYears_Global);\n \n \t\t// select gender\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileMale)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(Regist_Login_Page.Xpath_SelectPersonal_Global))\n \t\t\t\t.click();\n \n \t\t// submit\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LastSignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// Buys bouqs\n \t\tAction.BuyBouqsPayWithCC(FreeBouqPage.Css_SelectBouqName);\n \n \t\t// check pay for success, to generate the order\n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(OrderConfirmationPage.Text_OrderSucceed));\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/FreeBouq/Join_ExistingUser_PurchasedBefore.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "bRegistNewAccount_438", "method name": "b Regist New Account", "comments": [" Regist in user that never bought bouq in prestashop system.", " @throws Exception", "Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(5000);\n \t\t\n \t\t// click X to close POP-UP\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\tThread.sleep(1000);\n \n \t\t// click \"Log In\" link\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LoginLink_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// click create account button.\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_CreateAccount_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(1000);\n \n \t\t// input first name\n \t\tAction.inputFirstNameOnGlobal(Regist_Login_Page.Id_SignUpName,\n \t\t\t\tRegist_Login_Page.strName);\n \n \t\t// input new email\n \t\tString eml = new Email().newEmail();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.sendKeys(eml);\n \t\tThread.sleep(3000);\n \n \t\t// get new email address\n \t\tEmail.setEmail(eml);\n \t\tSystem.out.println(eml);\n \n \t\t// input password\n \t\tAction.inputPasswordOnRegistPage(\n \t\t\t\tRegist_Login_Page.Id_SignUpPassword_Global,\n \t\t\t\tRegist_Login_Page.strPassword);\n \n \t\t// click 'sign up' button\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(3000);\n \n \t\tdriver.quit();\n \t\t\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/OfferFunnel/Combination_VaseProductLinkVoucher_LoginNeverBuy_Upsell.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "ultimateGiftVerifyBack_439", "method name": "ultimate Gift Verify Back", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \n \t\t// register\n \t\tAction.globalRegist();\n \n \t\t// ---------------------subscription page-------------------\n \n \t\t// go to package subscription page\n \t\tAction.enterPKGSubAfterRegist();\n \n \t\t// select The Ultimate Gift collection\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_Collection3LearnMore))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// --------------------PDP-------------------------------\n \n \t\t// check collection name\n \t\t// This name is a configuration(Bouq name) in admin side\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_Collection3Name))\n \t\t\t\t.isDisplayed());\n \n \t\t// check bouq 3 sizes\n \t\t// This name is a configuration(Bouq size) in admin side\n \t\tassertTrue(driver.findElements(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_CollectionSize)).size() == 3);\n \n \t\t// check text on button\n \t\tassertEquals(PackageSubscriptionPage.Text_BuyButton, driver\n \t\t\t\t.findElement(By.id(PackageSubscriptionPage.Id_BuyButton))\n \t\t\t\t.getText());\n \n \t\t// get this package\n \t\tdriver.findElement(By.id(PackageSubscriptionPage.Id_BuyButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// check text\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_SendTo)).isDisplayed());\n \n \t\t// fill the relationship form\n \t\tAction.inputRelationshipOnPDP(\n \t\t\t\tPackageSubscriptionPage.Text_RelationshipSister,\n \t\t\t\tPackageSubscriptionPage.Text_FirstName,\n \t\t\t\tPackageSubscriptionPage.Text_LastName,\n \t\t\t\tPackageSubscriptionPage.Text_Zip);\n \n \t\t// select date\n \t\tAction.datePickerOnSubPDP(PackageSubscriptionPage.Xpth_DatePickerMonth,\n \t\t\t\tPackageSubscriptionPage.Text_DatePickerMonth,\n \t\t\t\tPackageSubscriptionPage.Text_DatePickerDay);\n \n \t\t// input address\n \t\tAction.inputAddressOnPDP(PackageSubscriptionPage.Data_Address,\n \t\t\t\tPackageSubscriptionPage.Data_PhoneNum);\n \n \t\t// add and checkout\n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \t\t\n \t\t// verify enter step4 page.\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.Step4));\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.BillingPage));\n \t\t\n \t\t/**\n \t\t *  on step4: click back button\n \t\t */\n \t\tdriver.findElement(By.xpath(PackageSubscriptionPage.Xpath_BackOnStepFourPP)).click();\n \t\t\n \t\t// verify back step3 page.\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.Step3));\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.RecipientPage));\n \t\t\n \t\t/**\n \t\t *  on step3: click back button\n \t\t */\n \t\tdriver.findElement(By.xpath(PackageSubscriptionPage.Xpath_BackOnPackageSubs)).click();\n \t\t\n \t\t// verify back step2 page.\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.SelectDelivrySchedulePage));\n \t\t\n \t\t// \"one a month, 1 bouq/delivery\" is selected\n \t\tString vef = driver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpath_EveryMonth)).getText();\n \t\tSystem.out.println(vef);\n \t\t\n \t\tassertEquals(PackageSubscriptionPage.EveryMonth,vef);\n \t\t\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.Discount20));\n \t\t\n \t\t/**\n \t\t *  on step2: click back button\n \t\t */\n \t\t\n \t\tdriver.findElement(By.xpath(PackageSubscriptionPage.Xpath_BackOnPackageSubs)).click();\n \t\t\n \t\t// verify back step1 page.\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.Step1));\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.SelectCollectionSize));\n \t\t\n \t\t// verify size is selected.\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath\n \t\t\t\t(PackageSubscriptionPage.Xpath_SizeIsSelected))\n \t\t\t\t.isEnabled());\n \t\t\n \t\t// back Concierge Services page\n \t\tdriver.findElement(By.xpath(PackageSubscriptionPage.Xpath_BackOnStepOne)).click(); \n \t\tThread.sleep(5000);\n \t\t\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.ConciergeServices));\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/PackagedSubscription/PKGSubs_UltimateGift_BACK.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "cancelOrderCheckOrderHistoryVideo_440", "method name": "cancel Order Check Order History Video", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \n \t\tAction.globalRegist();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// verify video message text exist.\n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(\"Add a video message for your recipient\"));\n \t\tThread.sleep(8000);\n \n \t\tAction.selectVieoMesaage(true);\n \n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\t// verify video message add succeed on cart page.\n \t\tassertTrue(selenium.isTextPresent(\"(Video Message Added)\"));\n \n \t\t// pay with cc\n \t\tAction.payWithCCOnCartPage(CheckoutPage.Data_CardNum,\n \t\t\t\tCheckoutPage.Data_CardNum2, CheckoutPage.Data_CardNum2,\n \t\t\t\tCheckoutPage.Data_CardNum2, CheckoutPage.Data_CardCode,\n \t\t\t\tCheckoutPage.Data_BillingZip);\n \n \t\t// enter order history\n \t\t// Action.checkOrderHistory();\n \t\tString orderNum;\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \n \t\t// click 'Order history / order tracking' link\n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(AccountSetting.Link_OrderHistory.toUpperCase()))\n \t\t\t\t.click();\n \t\tSystem.out.println(AccountSetting.Text_VerifyOrderHistoryLinkShown);\n \n \t\t// get order num value\n \t\torderNum = driver.findElement(By.xpath(AccountSetting.Xpth_OrderNum))\n \t\t\t\t.getText();\n \n \t\tEmail.setEmail(orderNum);\n \n \t\tdriver.findElement(By.linkText(orderNum)).click();\n \n \t\t// verify 'order num', 'edit order button' and 'return to order history\n \t\t// button' are shown.\n \t\tassertEquals(AccountSetting.Text_OrderDetail + orderNum, driver\n \t\t\t\t.findElement(By.cssSelector(AccountSetting.CssSelector_Array))\n \t\t\t\t.getText());\n \n \t\tdriver.findElement(\n \t\t\t\tBy.id(OrderConfirmationPage.Id_EditButtonOnOrderHistory))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(\n \t\t\t\tBy.id(OrderConfirmationPage.Id_cancelButtonOnOrderHistoy))\n \t\t\t\t.click();\n \t\tThread.sleep(3000);\n \n \t\t// verify text is show 'Please confirm cancellation of the order.'\n \t\t// And close js pop-up window(select yes.)\n \t\tassertEquals(\"Please confirm cancellation of the order.\",\n \t\t\t\tcloseAlertAndGetItsText());\n \n \t\t/**\n \t\t * Not finished recording,video message link isn't shown.\n \t\t */\n \t\tassertFalse(selenium.isTextPresent(\"Edit Video Message\"));\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/VideoMessage/CustomerCancelOrderCheckVideo.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "wholesalePayWithPP_441", "method name": "wholesale Pay With PP", "comments": [" wholesale pay with PP", "Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(2000);\n \n \t\tAction.globalRegist();\n \t\tThread.sleep(5000);\n \n \t\t// check wording\n \t\tString setscroll = \"document.documentElement.scrollTop=3000\";\n \n \t\tJavascriptExecutor jse = (JavascriptExecutor) driver;\n \t\tjse.executeScript(setscroll);\n \n \t\t// click 'Bulk Orders'\n \t\tdriver.findElement(By.linkText(FreeBouqPage.LinkText_wholeSale))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.xpath(\"//img[@alt='Rose - 40cm - Red']\")).click();\n \t\tThread.sleep(2000);\n \n \t\t// verify buy this exist\n \t\tassertTrue(selenium.isTextPresent(FreeBouqPage.Text_BuyThisButton));\n \n \t\t// facebook\n \t\tassertTrue(selenium\n \t\t\t\t.isElementPresent(FreeBouqPage.Xpath_ShareFacebookLink));\n \n \t\t// twitter\n \t\tassertTrue(selenium\n \t\t\t\t.isElementPresent(FreeBouqPage.Xpath_ShareTwitterLink));\n \n \t\t// pinterest\n \t\tassertTrue(selenium\n \t\t\t\t.isElementPresent(FreeBouqPage.Xpath_SharePinterestLink));\n \t\tThread.sleep(2000);\n \n \t\t// click buy this\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ChekoutGiftCard)).click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_AddCheckOut)).click();\n \t\tThread.sleep(5000);\n \n \t\t// verify warning\n \t\tassertTrue(selenium.isTextPresent(\"This field is required.\"));\n \n \t\t// input info\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).sendKeys(\n \t\t\t\t\"wholesale first\");\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).sendKeys(\n \t\t\t\t\"wholesale last\");\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Address)).click();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Address)).sendKeys(\n \t\t\t\t\"5300 steven creek blvd\");\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_City)).click();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_City)).sendKeys(\"san jose\");\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Zip)).click();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Zip)).sendKeys(\"95129\");\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(FreeBouqPage.Xpath_SelectRelationshipWholeSale))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.partialLinkText(FreeBouqPage.Text_California))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Phone)).click();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Phone)).sendKeys(\"8212345678\");\n \t\tThread.sleep(2000);\n \n \t\t// get regular delivery date\n \t\tString deliverDate, dte, dateText;\n \t\tint i;\n \t\tThread.sleep(1000);\n \n \t\tSystem.out.println(selenium.getText\n \t\t\t\t(\"//div[@class='pro-intro-sm clearfix hidden-xs']/div[3]/p\"));\n \t\t\n \t\tdateText = selenium.getText(\"//div[@class='pro-intro-sm clearfix hidden-xs']/div[3]/p\");\n \t\tdte = dateText.substring(22, 24);\n \t\tSystem.out.println(dte);\n \n \t\ti = Integer.valueOf(dte).intValue();\n \t\tdeliverDate = Integer.toString(i);\n \t\tSystem.out.println(deliverDate);\n \n \t\t// select delivery date\n \t\tdriver.findElement(By.linkText(deliverDate)).click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_AddCheckOut)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click use this address button\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_UseThisAddressButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// Cart page\n \t\ttry {\n \t\t\tThread.sleep(2000);\n \t\t} catch (InterruptedException e) {\n \t\t\tdriver.findElement(By.xpath(CheckoutPage.Xpth_OkButton)).click();\n \t\t\tThread.sleep(2000);\n \t\t}\n \n \t\t// click 'edit' link\n \t\tdriver.findElement(By.linkText(CheckoutPage.Link_EditOnCart)).click();\n \t\tThread.sleep(3000);\n \n \t\t// edit regular delivery date\n \t\tString deliverDateEdit, dteEdit, dateTextEdit;\n \t\tint iEdit;\n \t\tThread.sleep(1000);\n \n \t\tSystem.out.println(selenium.getText(\"//div[@class='pro-intro-sm clearfix hidden-xs']/div[3]/p\"));\n \t\tdateTextEdit = selenium.getText(\"//div[@class='pro-intro-sm clearfix hidden-xs']/div[3]/p\");\n \t\tdteEdit = dateTextEdit.substring(22, 24);\n \t\tSystem.out.println(dteEdit);\n \n \t\tiEdit = Integer.valueOf(dteEdit).intValue();\n \n \t\tdeliverDateEdit = Integer.toString(iEdit);\n \n \t\tSystem.out.println(\"After edit\");\n \t\tSystem.out.println(dteEdit);\n \t\tSystem.out.println(iEdit);\n \t\tSystem.out.println(deliverDateEdit);\n \n \t\tdriver.findElement(By.linkText(deliverDateEdit)).click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_AddCheckOut)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click use this address button\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_UseThisAddressButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// paid with paypal\n \t\tAction.payWithPPOnCartPage(CheckoutPage.Data_TestPayPalEmail,\n \t\t\t\tCheckoutPage.Data_TestPayPalPassword);\n \n \t\t// check pay for success, to generate the order\n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(OrderConfirmationPage.Text_OrderSucceed));\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/ForBusiness/BuyEditWholeSale.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "addFiveRelationship_442", "method name": "add Five Relationship", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString arr[] = { \"lei\", \"li\", \"5300 stevens creek blvd\", \"san jose\",\n \t\t\t\t\"California\", \"95129\", \"13565211111\" };\n \t\tString rel[][] = { { \"Mom\", \"Katrina\" }, { \"Dad\", \"Jim\" },\n \t\t\t\t{ \"Son\", \"Tom\" }, { \"Friend\", \"Lily\" }, { \"Sister\", \"Lucy\" } };\n \n \t\tString coupon = \"Relationship Reward\";\n \t\tString balance = \"$5.00\";\n \n \t\t// register\n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(2000);\n \t\t\n \t\tAction.globalRegist();\n \t\tActions act = new Actions(driver);\n \n \t\tact.moveToElement(driver.findElement(By.xpath(HomePage.Xpath_AccountIcon))).perform();\n \t\tdriver.findElement(By.linkText(AccountSetting.Link_AccountSetting)).click();\n \t\tdriver.findElement(By.linkText(AccountSetting.Link_ManageRelationship\n \t\t\t\t\t\t.toUpperCase())).click();\n \t\tThread.sleep(2000);\n \n \t\tfor (int i = 0; i <= 4; i++) {\n \t\t\t// click\n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.xpath(AccountSetting.Xpath_AddNewRelationship)).click();\n \t\t\tThread.sleep(2000);\n \n             // select relationship type\n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.xpath(AccountSetting.Xpath_SelectRelationshipType)).click();\n \t\t\tdriver.findElement(By.linkText(rel[i][0])).click();\n \n             // input relationship name\n \t\t\tdriver.findElement(By.id(AccountSetting.Id_RelationshipName)).clear();\n \t\t\tdriver.findElement(By.id(AccountSetting.Id_RelationshipName)).sendKeys(rel[i][1]);\n \t\t\tdriver.findElement(By.xpath(AccountSetting.Xpath_SaveButtonOnRelationship)).click();\n \t\t\tThread.sleep(2000);\n \n \t\t\t// add birthday 12/29\n \t\t\tdriver.findElement(By.xpath(AccountSetting.Xpath_SelectOccasionType))\n \t\t\t\t\t.click();\n \t\t\tdriver.findElement(By.linkText(AccountSetting.OccasionBirthday)).click();\n \t\t\tJavascriptExecutor js = (JavascriptExecutor) driver;\n \t\t\tjs.executeScript(\"var date=document.getElementById('occasion_date');date.value='12/29';\");\n \t\t\tdriver.findElement(By.cssSelector(AccountSetting.CssSelector_Occasion))\n \t\t\t\t\t.click();\n \t\t\tThread.sleep(2000);\n \n \t\t\tassertEquals(AccountSetting.OccasionBirthday,\n                 driver.findElement(By.xpath(AccountSetting.Xpath_OccasionListLabel1)).getText());\n \t\t\tassertEquals(\"12/29\",\n \t\t\t\t\tdriver.findElement(By.xpath(AccountSetting.Xpath_OccasionListLabel2)).getText());\n \t\t\tSystem.out.println(\"Occasion birthday is added with 12/29\");\n \n \t\t\t// add mother's day\n \t\t\tdriver.findElement(By.xpath(AccountSetting.Xpath_SelectOccasionType))\n \t\t\t\t\t.click();\n \t\t\tdriver.findElement(By.xpath(AccountSetting.Xpath_SelectMotherDay))\n \t\t\t\t\t.click();\n \t\t\tdriver.findElement(By.xpath(AccountSetting.Xpath_SaveButtonOnRelationship)).click();\n \t\t\tThread.sleep(2000);\n \n \t\t\tSystem.out.println(\"Occasion mother's day is added.\");\n \n \t\t\t// choose flower\n \t\t\tdriver.findElement(By.xpath(\"//label[@for='bouq_style-1']\"))\n \t\t\t\t\t.click();\n \t\t\tdriver.findElement(By.id(\"tabcat-62\")).click();\n \t\t\tdriver.findElement(By.id(\"tabcat-15\")).click();\n \t\t\tdriver.findElement(By.id(\"tabcat-11\")).click();\n \t\t\tSystem.out.println(\"Flower choosed!\");\n \n \t\t\t// add address\n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).clear();\n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).sendKeys(arr[0]);\n \n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).clear();\n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).sendKeys(arr[1]);\n \n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_Address)).clear();\n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_Address)).sendKeys(arr[2]);\n \n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_City)).clear();\n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_City)).sendKeys(arr[3]);\n \n \t\t\tdriver.findElement(By.xpath(FreeBouqPage.Xpth_State_InputAddressPage))\n \t\t\t\t\t.click();\n \t\t\tdriver.findElement(By.linkText(arr[4])).click();\n \n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_Zip)).clear();\n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_Zip)).sendKeys(arr[5]);\n \n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_Phone)).clear();\n \t\t\tdriver.findElement(By.id(FreeBouqPage.Id_Phone)).sendKeys(arr[6]);\n \n \t\t\tdriver.findElement(By.id(AccountSetting.Id_AddAddressOnRelationship)).click();\n \t\t\tdriver.findElement(By.xpath(FreeBouqPage.Xpth_NoUseOriginal))\n \t\t\t\t\t.click();\n \t\t\tThread.sleep(2000);\n \n \t\t\tdriver.findElement(By.xpath(AccountSetting.Xpath_OkButtonOnRelationship)).click();\n \t\t\tThread.sleep(2000);\n \n \t\t\tSystem.out.println(\"address added!\");\n \t\t}\n \n \t\t// check 5 relatives\n \t\tfor (int i = 0; i <= 4; i++) {\n \t\t\tint j = i + 2;\n \t\t\tassertEquals(\n \t\t\t\t\trel[i][0] + \", \" + rel[i][1],\n \t\t\t\t\tdriver.findElement(\n \t\t\t\t\t\t\tBy.xpath(\"//form[@id='relationship_form']/div/div[\"\n \t\t\t\t\t\t\t\t\t+ j + \"]/div[2]\")).getText());\n \t\t}\n \n \t\tSystem.out.println(\"5 relatives added!\");\n \n \t\t// check credit\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(\"My vouchers / store credits\".toUpperCase()))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\tfor (int i = 1; i <= 4; i++) {\n \t\t\tassertEquals(\n \t\t\t\t\tcoupon,\n \t\t\t\t\tdriver.findElement(\n \t\t\t\t\t\t\tBy.xpath(\"//table/tbody/tr[\" + i + \"]/td[2]\"))\n \t\t\t\t\t\t\t.getText());\n \t\t\tassertEquals(\n \t\t\t\t\tbalance,\n \t\t\t\t\tdriver.findElement(\n \t\t\t\t\t\t\tBy.xpath(\"//table/tbody/tr[\" + i + \"]/td[3]\"))\n \t\t\t\t\t\t\t.getText());\n \t\t}\n \n \t\tSystem.out.println(\"Four store credit code with each $5 shown.\");\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/AccountSetting/AddFiveRelationship.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "giftCardBuyWithCC_443", "method name": "gift Card Buy With CC", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \n \t\tAction.globalRegist();\n \t\tThread.sleep(5000);\n \n \t\t// check wording\n \t\tString setscroll = \"document.documentElement.scrollTop=3000\";\n \n \t\tJavascriptExecutor jse = (JavascriptExecutor) driver;\n \t\tjse.executeScript(setscroll);\n \n \t\t// click 'Gift Cards'\n \t\tdriver.findElement(By.linkText(FreeBouqPage.LinkText_GiftCards))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.CssSelector_GiftCards))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// verify buy this exist\n \t\tassertTrue(selenium.isTextPresent(FreeBouqPage.Text_BuyThisButton));\n \n \t\t// facebook\n \t\tassertTrue(selenium\n \t\t\t\t.isElementPresent(FreeBouqPage.Xpath_ShareFacebookLink));\n \n \t\t// twitter\n \t\tassertTrue(selenium\n \t\t\t\t.isElementPresent(FreeBouqPage.Xpath_ShareTwitterLink));\n \n \t\t// pinterest\n \t\tassertTrue(selenium\n \t\t\t\t.isElementPresent(FreeBouqPage.Xpath_SharePinterestLink));\n \t\tThread.sleep(2000);\n \n \t\t// click buy this\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ChekoutGiftCard)).click();\n \t\tThread.sleep(2000);\n \n \t\t// select relationship from dropdown\n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpth_selectRelationship))\n \t\t\t\t.click();\n \t\tdriver.findElement(\n \t\t\t\tBy.partialLinkText(FreeBouqPage.Text_RelationshipWife)).click();\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).sendKeys(\n \t\t\t\t\"Giftcard first\");\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).sendKeys(\n \t\t\t\t\"Giftcard last\");\n \n \t\t// click 'no'\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Message)).click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_AddCheckOut)).click();\n \t\tThread.sleep(5000);\n \n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(\"Did you mean to send this email with out a message?\"));\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_MessageClickNo)).click();\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_AddCheckOut)).click();\n \t\tThread.sleep(5000);\n \n \t\t// Cart page,if pop-up error tips, click 'X'\n \t\tString txt;\n \t\ttxt = driver.findElement(By.id(\"errors-modal-body\")).getText();\n \n \t\tif (CheckoutPage.Text_ErrorTips.equals(txt)) {\n \t\t\tassertTrue(selenium.isTextPresent(CheckoutPage.Text_ErrorTips));\n \t\t\tThread.sleep(1000);\n \n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.xpath(\"//div[@id='errors-modal']/div[2]/div/div/button\"))\n \t\t\t\t\t.click();\n \t\t\tThread.sleep(2000);\n \t\t}\n \n \t\t// edit gift card\n \t\t// click 'edit' link\n \t\tdriver.findElement(By.linkText(CheckoutPage.Link_EditOnCart)).click();\n \t\tThread.sleep(3000);\n \n \t\t// edit person info\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_FirstName)).sendKeys(\n \t\t\t\t\"Giftcard firstEdit\");\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_LastName)).sendKeys(\n \t\t\t\t\"Giftcard lastEdit\");\n \n \t\t// don't supper 'Send Anonymously '\n \t\t// driver.findElement(By.id(FreeBouqPage.Id_SendAnonymous)).click();\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_AddCheckOut)).click();\n \t\tThread.sleep(5000);\n \n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(\"Did you mean to send this email with out a message?\"));\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_MessageClickYes)).click();\n \t\tThread.sleep(2000);\n \n \t\t// Cart page,if pop-up error tips, click 'X'\n \t\tif (CheckoutPage.Text_ErrorTips.equals(txt)) {\n \t\t\tassertTrue(selenium.isTextPresent(CheckoutPage.Text_ErrorTips));\n \t\t\tThread.sleep(1000);\n \n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.xpath(\"//div[@id='errors-modal']/div[2]/div/div/button\"))\n \t\t\t\t\t.click();\n \t\t\tThread.sleep(2000);\n \t\t}\n \n \t\t// paid with CC\n \t\tAction.payWithCCOnCartPage(CheckoutPage.Data_CardNum,\n \t\t\t\tCheckoutPage.Data_CardNum2, CheckoutPage.Data_CardNum2,\n \t\t\t\tCheckoutPage.Data_CardNum2, CheckoutPage.Data_CardCode,\n \t\t\t\tCheckoutPage.Data_BillingZip);\n \n \t\t// check pay for success, to generate the order\n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(OrderConfirmationPage.Text_OrderSucceed));\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/GiftCard/BuyEditGiftCard.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "checkBookSubsWithVideo_444", "method name": "check Book Subs With Video", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \n \t\tAction.globalRegist();\n \n \t\t/**\n \t\t * add regular subscription relationship 'Self'\n \t\t */\n \n \t\t// go to subscription\n \t\tdriver.findElement(By.xpath(Subscription.Xpth_SubscriptionsOnHeader))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\t// select regular subscription\n \t\tdriver.findElement(By.xpath(Subscription.Xpath_SelectRegularSubscription))\n \t\t\t\t.click();\n \n \t\t// check enter step 1 page\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.Step1));\n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(PackageSubscriptionPage.SelectCollectionSize));\n \n \t\t// select 'The Farmer's Market'\n \t\tdriver.findElement(By.cssSelector(Subscription.Css_TheFarmersMarket))\n \t\t\t\t.click();\n \n \t\t// select 'Original $40'\n \t\tdriver.findElement(By.xpath(Subscription.Xpath_OriginalOnSubs))\n \t\t\t\t.click();\n \n \t\t// click 'Next' button\n \t\tdriver.findElement(By.id(Subscription.Id_NextButtonOnSubs)).click();\n \t\tThread.sleep(2000);\n \t\t\n \t\tAction.dateOnSubsPage(PackageSubscriptionPage.Xpth_DatePickerMonth,\n \t\t\t\tPackageSubscriptionPage.Text_DatePickerMonth,\n \t\t\t\tPackageSubscriptionPage.Text_DatePickerDay);\n \n \t\tdriver.findElement(By.id(Subscription.Id_ThirdOnSubs)).click();\n \n \t\tdriver.findElement(By.xpath(Subscription.Xpath_NextButtonOnSubs)).click();\n \n \t\tAction.inputInfoOnSubsPage(FreeBouqPage.Text_RelationshipSelf,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_Address, FreeBouqPage.Data_ZipCode,\n \t\t\t\t\"SAN JOSE\", FreeBouqPage.Text_California, \"18212345678\");\n \t\t\n \t\tdriver.findElement(By.xpath(Subscription.Xpath_NextButtonOnSubs)).click();\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpth_NoUseOriginal)).click();\n \n \t\t// pay with paypal\n \t\tAction.payWithPPOnSubCartPage(CheckoutPage.Data_TestPayPalEmail,\n \t\t\t\tCheckoutPage.Data_TestPayPalPassword);\n \t\t\n \t\tdriver.findElement(By.xpath(Subscription.Xpath_SelectBookedSubs)).click();\n \t\t\n \t\tdriver.findElement(By.id(Subscription.Id_EditButtonOnSubs)).click();\n \t\tThread.sleep(5000);\n \t\t\n \t\t/**\n \t\t *  change regular subscription relationship 'wife'\n \t\t */\n \t\t// select relationship from dropdown\n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpth_selectRelationship))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.partialLinkText(FreeBouqPage.Text_RelationshipWife)).click();\n \t\t\n \t\t// Zip\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Zip)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_Zip)).sendKeys(FreeBouqPage.Data_ZipCode);\n \n \t\t// click next button\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_RelationshipNextBtton))\n \t\t\t\t.click();\n \t\t\n \t\t// verify video message text exist.\n \t\tassertTrue(selenium.isTextPresent(\"Add a video message for your recipient\"));\n \t\t\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/VideoMessage/VideoWidget_Pending.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "checkBookOrderWithVideo_445", "method name": "check Book Order With Video", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \n \t\tAction.globalRegist();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// verify video message text exist.\n \t\tassertTrue(selenium.isTextPresent(\"Add a video message for your recipient\"));\n \t\tThread.sleep(8000);\n \n \t\tAction.selectVieoMesaage(true);\n \n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\t// verify video message add succeed on cart page.\n \t\tassertTrue(selenium.isTextPresent(\"(Video Message Added)\"));\n \n \t\t/**\n \t\t * edit cancel select video message\n \t\t */\n \n \t\tdriver.findElement(By.linkText(CheckoutPage.Link_EditOnCart)).click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \n \t\t// click next button\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_RelationshipNextBtton))\n \t\t\t\t.click();\n \t\tThread.sleep(10000);\n \n \t\t// verify video message text exist.\n \t\tassertTrue(selenium.isTextPresent(\"Add a video message for your recipient\"));\n \n \t\t// verify video message is selected.\n \t\tboolean vf = driver.findElement(By.name(\"giftpixel-isgift\")).isSelected();\n \t\t//assertTrue(vf);\n \t\tSystem.out.println(\"first edit video message status =  \" + vf);\n \n \t\t// click cancel video message.\n \t\tdriver.findElement(By.name(\"giftpixel-isgift\")).click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SaveChangesButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click use this address button\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_UseThisAddressButton)).click();\n \t\tThread.sleep(5000);\n \n \t\t// verify video message is not show on cart page.\n \t\tassertFalse(selenium.isTextPresent(\"(Video Message Added)\"));\n \n \t\t/**\n \t\t * edit add video message.\n \t\t */\n \n \t\tdriver.findElement(By.linkText(CheckoutPage.Link_EditOnCart)).click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(8000);\n \n \t\t// verify video message text exist.\n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(\"Add a video message for your recipient\"));\n \n \t\t// verify video message isn't selected.\n \t\tboolean vff = driver.findElement(By.name(\"giftpixel-isgift\")).isSelected();\n \t\t//assertFalse(vff);\n \t\tSystem.out.println(\"second edit video message status =  \" + vff);\n \n \t\t// click add video message.\n \t\tAction.selectVieoMesaage(true);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SaveChangesButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click use this address button\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_UseThisAddressButton)).click();\n \t\tThread.sleep(5000);\n \n \t\t// verify video message is not show on cart page.\n \t\tassertTrue(selenium.isTextPresent(\"(Video Message Added)\"));\n \n \t\t// pay with cc\n \t\tAction.payWithCCOnCartPage(CheckoutPage.Data_CardNum,\n \t\t\t\tCheckoutPage.Data_CardNum2, CheckoutPage.Data_CardNum2,\n \t\t\t\tCheckoutPage.Data_CardNum2, CheckoutPage.Data_CardCode,\n \t\t\t\tCheckoutPage.Data_BillingZip);\n \n \t\t// enter order history\n \t\tAction.checkOrderHistory();\n \n \t\t/**\n \t\t * Not finished recording,video message link isn't shown.\n \t\t */\n \n \t\tassertFalse(selenium.isTextPresent(\"Edit Video Message\"));\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/VideoMessage/BookOrderWithVideo.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "testHomePage_446", "method name": "test Home Page", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(3000);\n \n \t\t// Close welcome pop-up\n \t\tdriver.findElement(By.linkText(Regist_Login_Page.Link_ClosePOPUP)).click();\n \t\t\n \t\t//For OUR COLLECTIONS section, click option 'Artisan florist'.\n \t\tString setscroll = \"document.documentElement.scrollTop=1000\";\n \n \t\tJavascriptExecutor jse = (JavascriptExecutor) driver;\n \t\tjse.executeScript(setscroll);\n \t\tThread.sleep(2000);\n \t\t\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_ArtisanFlorists)).click();\n \t\t\n \n \t\t //* Submit with empty zipcode.\n \n \t\tassertTrue(selenium.isVisible(\"xpath=//div[@class='hero']\"));\n \t\t\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ArtisanZip)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ArtisanButton)).click();\n \t\t\n \t\tassertTrue(selenium.isTextPresent(\"This field is required.\"));\n \t\t\n \n \t\t// * Submit with letters sjs zipcode\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ArtisanZip)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ArtisanZip)).sendKeys(\"sjs\");\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ArtisanButton)).click();\n \n \t\tassertTrue(selenium.isTextPresent(\"Please enter only digits\"));\n \t\t\n \n \t\t//* Not found by zipcode interface.(e.g 89899)\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ArtisanZip)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ArtisanZip)).sendKeys(\"89899\");\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ArtisanButton)).click();\n \n \t\tSystem.out.println(driver.findElement(\n \t\t\t\tBy.xpath(\"//div[@id='zipPopupFailed']/div/h4\")).getText());\n \t\t\n \t\tassertTrue(selenium.isTextPresent(\"AW SHUCKS! Same day delivery is not yet available for that area.\"));\n \t\tassertTrue(selenium.isTextPresent(\"Check another zip code or shop our Farm To Table Bouqs.\"));\n \t\t\n \n \t\t// * Less than 5 characters(e.g 9512)\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ZipCode2)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ZipCode2)).sendKeys(\"9512\");\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ZipCodeButton2)).click();\n \n \t\tassertTrue(selenium.isTextPresent(\"Please enter at least 5 characters.\"));\n \t\t\n \n \t\t// * This product is not available for this zipcode area.\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ZipCode2)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ZipCode2)).sendKeys(\"76442\");\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ZipCodeButton2)).click();\n \t\t\n \t\tSystem.out.println(driver.findElement(\n \t\t\t\tBy.xpath(\"//div[@id='zipPopupFailed']/div/h4\")).getText());\n \t\t\n \t\tassertTrue(selenium.isTextPresent(\"AW SHUCKS! Same day delivery is not yet available for that area.\"));\n \t\tassertTrue(selenium.isTextPresent(\"Check another zip code or shop our Farm To Table Bouqs.\"));\n \t\t\n \n \t\t //* Submit with valid zipcode(e.g 60604)\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ZipCode2)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ZipCode2)).sendKeys(\"60604\");\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_ZipCodeButton2)).click();\n \t\t\n \t\tassertTrue(selenium.isVisible(\"xpath=//ul[@class='product-frame row']\"));\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Shopping/ZipFilter_HomePage.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "aCancelUpsellBouq_447", "method name": "a Cancel Upsell Bouq", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \n \t\t/**\n \t\t * Buy main and upsell.\n \t\t */\n \t\tAction.globalRegist();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \t\t\tSystem.out.println(\"this bouq has upsell.\");\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// select first upell bouq\n \t\t\t\tdriver.findElement(By.xpath(\"//ul[@class= 'clearfix']/li/a\"))\n \t\t\t\t\t\t.click();\n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// no select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\t// check upsell discount is applied automatically.\n \t\tassertTrue(selenium.isTextPresent(\"2nd Bouq for $15\"));\n \n \t\t// paid with paypal\n \t\tAction.payWithPPOnCartPage(CheckoutPage.Data_TestPayPalEmail,\n \t\t\t\tCheckoutPage.Data_TestPayPalPassword);\n \n \t\t// check pay for success, to generate the order\n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(OrderConfirmationPage.Text_OrderSucceed));\n \n \t\t/**\n \t\t * Enter orderHistory to cancel main bouq.\n \t\t */\n \t\tString orderNum, orderNumUpsell;\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \n \t\t// click 'Order history / order tracking' link\n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(AccountSetting.Link_OrderHistory.toUpperCase()))\n \t\t\t\t.click();\n \t\tSystem.out.println(AccountSetting.Text_VerifyOrderHistoryLinkShown);\n \n \t\t// get upsell num value\n \t\torderNumUpsell = driver.findElement(\n \t\t\t\tBy.xpath(AccountSetting.Xpth_OrderNum)).getText();\n \n \t\t// get main bouq num\n \t\torderNum = driver.findElement(By.xpath(\"//table/tbody/tr[3]/td/a\"))\n \t\t\t\t.getText();\n \n \t\tEmail.setEmail(orderNumUpsell);\n \t\tEmail.setReferralByUser(orderNum);\n \n \t\torderNum = driver.findElement(By.xpath(\"//table/tbody/tr[3]/td/a\"))\n \t\t\t\t.getText();\n \n \t\tSystem.out.println(\"orderNumUpsell = \" + orderNumUpsell);\n \t\tSystem.out.println(\"orderNum = \" + orderNum);\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Upsell/AdminCancelMainUpsellBouq.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "cCancelMainBouq_448", "method name": "c Cancel Main Bouq", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \n \t\t/**\n \t\t * Buy main and upsell.\n \t\t */\n \t\tAction.globalRegist();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \t\t\tSystem.out.println(\"this bouq has upsell.\");\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// select first upell bouq\n \t\t\t\tdriver.findElement(By.xpath(\"//ul[@class= 'clearfix']/li/a\"))\n \t\t\t\t\t\t.click();\n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// no select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\t// check upsell discount is applied automatically.\n \t\tassertTrue(selenium.isTextPresent(\"2nd Bouq for $15\"));\n \n \t\t// paid with paypal\n \t\tAction.payWithPPOnCartPage(CheckoutPage.Data_TestPayPalEmail,\n \t\t\t\tCheckoutPage.Data_TestPayPalPassword);\n \n \t\t// check pay for success, to generate the order\n \t\tassertTrue(selenium\n \t\t\t\t.isTextPresent(OrderConfirmationPage.Text_OrderSucceed));\n \n \t\t/**\n \t\t * Enter orderHistory to cancel main bouq.\n \t\t */\n \t\tString orderNum, orderNumUpsell;\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \n \t\t// click 'Order history / order tracking' link\n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(AccountSetting.Link_OrderHistory.toUpperCase()))\n \t\t\t\t.click();\n \t\tSystem.out.println(AccountSetting.Text_VerifyOrderHistoryLinkShown);\n \n \t\t// get upsell num value\n \t\torderNumUpsell = driver.findElement(\n \t\t\t\tBy.xpath(AccountSetting.Xpth_OrderNum)).getText();\n \n \t\t// get main bouq num\n \t\torderNum = driver.findElement(By.xpath(\"//table/tbody/tr[3]/td/a\"))\n \t\t\t\t.getText();\n \n \t\tEmail.setEmail(orderNumUpsell);\n \t\tEmail.setReferralByUser(orderNum);\n \n \t\torderNum = driver.findElement(By.xpath(\"//table/tbody/tr[3]/td/a\"))\n \t\t\t\t.getText();\n \n \t\tSystem.out.println(\"orderNumUpsell = \" + orderNumUpsell);\n \t\tSystem.out.println(\"orderNum = \" + orderNum);\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Upsell/AdminCancelMainUpsellBouq.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "CreateNewAccount_449", "method name": "Create New Account", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\t// open test.thebouqs.com web.\n \t\tdriver.get(baseUrl);\n \n \t\t// click X to close POP-UP\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\tThread.sleep(1000);\n \n \t\t// click \"Log In\" link\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LoginLink_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// click create account button.\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_CreateAccount_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(1000);\n \n \t\t// input first name\n \t\tAction.inputFirstNameOnGlobal(Regist_Login_Page.Id_SignUpName,\n \t\t\t\tRegist_Login_Page.strName);\n \n \t\t// input new email\n \t\tString eml = new Email().newEmail();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.sendKeys(eml);\n \t\tThread.sleep(3000);\n \n \t\t// get new email address\n \t\tEmail.setEmail(eml);\n \t\tSystem.out.println(eml);\n \n \t\t// input password\n \t\tAction.inputPasswordOnRegistPage(\n \t\t\t\tRegist_Login_Page.Id_SignUpPassword_Global,\n \t\t\t\tRegist_Login_Page.strPassword);\n \n \t\t// click 'sign up' button\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(3000);\n \n \t\t// input months\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileMonths,\n \t\t\t\tRegist_Login_Page.strMonths_Global);\n \n \t\t// input days\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileDays,\n \t\t\t\tRegist_Login_Page.strDays_Global);\n \n \t\t// input years\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileYears,\n \t\t\t\tRegist_Login_Page.strYears_Global);\n \n \t\t// select gender\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileMale)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(Regist_Login_Page.Xpath_SelectPersonal_Global))\n \t\t\t\t.click();\n \n \t\t// submit\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LastSignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/FreeBouq/Join_ExistingUser_neverPurchased.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "contactUSEmail_450", "method name": "contact US Email", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\t// Go to homepage.\n \t\tdriver.get(baseUrl);\n \n \t\t// register\n \t\tAction.globalRegist();\n \n \t\t// buy bouq\n \t\tAction.BuyBouqsPayWithCC(FreeBouqPage.Css_SelectBouqName);\n \n \t\tThread.sleep(2000);\n \n \t\t// goolge trust store\n \n \t\ttry {\n \t\t\tdriver.findElement(By.id(\"gts-g-cl\")).click();\n \t\t} catch (NoSuchElementException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \n \t\t// ContactUS email\n \t\tString setscroll = \"document.documentElement.scrollTop=1000\";\n \n \t\tJavascriptExecutor jse = (JavascriptExecutor) driver;\n \t\tjse.executeScript(setscroll);\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.linkText(AccountSetting.Link_ContactUs)).click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.xpath(AccountSetting.Xpath_SelectRelationship))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.linkText(AccountSetting.Link_Relationship))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.xpath(AccountSetting.Xpath_IdContact)).click();\n \t\tdriver.findElement(By.linkText(\"Customer service\")).click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.xpath(AccountSetting.Xpath_IdOrder)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(\"//div[button/@data-id='id_order']//li[2]/a\")).click();\n \t\tdriver.findElement(By.id(AccountSetting.Id_ContactMessage)).click();\n \n \t\tdriver.findElement(By.id(AccountSetting.Id_ContactMessage)).clear();\n \t\tdriver.findElement(By.id(AccountSetting.Id_ContactMessage)).sendKeys(\n \t\t\t\t\"This is email body.\");\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(AccountSetting.Id_SendButtonOnMessage)).click();\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/AccountSetting/ContactUSEmail.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "aCustmoerCancelUpsellBouq_451", "method name": "a Custmoer Cancel Upsell Bouq", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \t\t\n \t\t/**\n \t\t * Buy main and upsell.\n \t\t */\n \t\tAction.globalRegist();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \t\t\tSystem.out.println(\"this bouq has upsell.\");\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// select first upell bouq\n \t\t\t\tdriver.findElement(By.xpath(\"//ul[@class= 'clearfix']/li/a\"))\n \t\t\t\t\t\t.click();\n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// no select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\t// check upsell discount is applied automatically.\n \t\tassertTrue(selenium.isTextPresent(\"2nd Bouq for $15\"));\n \n \t\t// paid with paypal\n \t\tAction.payWithPPOnCartPage(CheckoutPage.Data_TestPayPalEmail,\n \t\t\t\tCheckoutPage.Data_TestPayPalPassword);\n \n \t\t// check pay for success, to generate the order\n \t\tassertTrue(selenium.isTextPresent(OrderConfirmationPage.Text_OrderSucceed));\n \t\t\n \t\t/**\n \t\t * Enter orderHistory to cancel main bouq.\n \t\t */\n \t\tString orderNum, orderNumUpsell, vf;\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \n \t\t// click 'Order history / order tracking' link\n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(AccountSetting.Link_OrderHistory.toUpperCase()))\n \t\t\t\t.click();\n \t\tSystem.out.println(AccountSetting.Text_VerifyOrderHistoryLinkShown);\n \t\t\n \t\t// get order num value\n \t\torderNumUpsell = driver.findElement(By.xpath(AccountSetting.Xpth_OrderNum))\n \t\t\t\t.getText();\n \t\t\n \t\tEmail.setEmail(orderNumUpsell);\n \t\t\n \t\torderNum = driver.findElement(By.xpath(\"//table/tbody/tr[3]/td/a\"))\n \t\t\t\t.getText();\n \t\t\n \t\t// get upsell price\n \t\tvf = driver.findElement(By.xpath(\"//table/tbody/tr[2]/td[4]\")).getText();\n \t\tSystem.out.println(vf);\n \t\t\n \t\tif(\"$18.00\".equals(vf)){\n \t\t\t\n \t\t\tSystem.out.println(\"orderNumUpsell = \" + orderNumUpsell);\n \t\t\tSystem.out.println(\"orderNum = \" + orderNum);\n \t\t\t\n \t\t\t// enter upsell order history\n \t\t\tdriver.findElement(By.linkText(orderNumUpsell)).click();\n \t\t\t\n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.id(OrderConfirmationPage.Id_EditButtonOnOrderHistory))\n \t\t\t\t\t.click();\n \t\t\tThread.sleep(2000);\n \n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.id(OrderConfirmationPage.Id_cancelButtonOnOrderHistoy))\n \t\t\t\t\t.click();\n \t\t\tThread.sleep(3000);\n \n \t\t\tassertEquals(\"Please confirm cancellation of the order.\",\n \t\t\t\t\tcloseAlertAndGetItsText());\n \t\t\tThread.sleep(2000);\n \t\t\t\n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.id(AccountSetting.Id_ReturnToOrderHistoryButton))\n \t\t\t\t\t.click();\n \n \t\t\t\n \t\t\t/**\n \t\t\t * verify main and upsell bouq order both canceled.\n \t\t\t */\n \t\t\tString status1, status2;\n \t\t\t\n \t\t\tstatus1 = driver.findElement(By.xpath(\"//table/tbody/tr[2]/td[7]\")).getText();\n \t\t\t\n \t\t\tstatus2 = driver.findElement(By.xpath(\"//table/tbody/tr[3]/td[7]\")).getText();\n \t\t\t\n \t\t\tassertTrue(selenium.getText(\n \t\t\t\t\t\"//table/tbody/tr[2]/td[7]\").contains(\"Canceled\"));\n \t\t\t\n \t\t\tassertTrue(selenium.getText(\n \t\t\t\t\t\"//table/tbody/tr[3]/td[7]\").contains(\"Canceled\"));\n \t\t\t\n \t\t\tSystem.out.println(\"bouqs status = \" + status1);\n \t\t\tSystem.out.println(\"upsell status = \" + status2);\n \n \t\t}\n \t\telse{\n \t\t\tSystem.out.println(\"don't select upsell bouq.\");\n \t\t\tfail(\"don't select upsell bouq.\");\n \t\t\n \t\t}\n \t\t\n \t\t\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Upsell/CustmoerCancelMainUpsellBouq.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "cCustmoerCancelMainBouq_452", "method name": "c Custmoer Cancel Main Bouq", "comments": [" cancel main bouqs", " @throws Exception", "Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \t\t\n \t\t/**\n \t\t * Buy main and upsell.\n \t\t */\n \t\tAction.globalRegist();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \t\t\tSystem.out.println(\"this bouq has upsell.\");\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// select first upell bouq\n \t\t\t\tdriver.findElement(By.xpath(\"//ul[@class= 'clearfix']/li/a\"))\n \t\t\t\t\t\t.click();\n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// no select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\t// check upsell discount is applied automatically.\n \t\tassertTrue(selenium.isTextPresent(\"2nd Bouq for $15\"));\n \n \t\t// paid with paypal\n \t\tAction.payWithPPOnCartPage(CheckoutPage.Data_TestPayPalEmail,\n \t\t\t\tCheckoutPage.Data_TestPayPalPassword);\n \n \t\t// check pay for success, to generate the order\n \t\tassertTrue(selenium.isTextPresent(OrderConfirmationPage.Text_OrderSucceed));\n \t\t\n \t\t/**\n \t\t * Enter orderHistory to cancel main bouq.\n \t\t */\n \t\tString orderNum, orderNumUpsell, vf;\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \n \t\t// click 'Order history / order tracking' link\n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(AccountSetting.Link_OrderHistory.toUpperCase()))\n \t\t\t\t.click();\n \t\tSystem.out.println(AccountSetting.Text_VerifyOrderHistoryLinkShown);\n \t\t\n \t\t// get order num value\n \t\torderNumUpsell = driver.findElement(By.xpath(AccountSetting.Xpth_OrderNum))\n \t\t\t\t.getText();\n \t\t\n \t\torderNum = driver.findElement(By.xpath(\"//table/tbody/tr[3]/td/a\"))\n \t\t\t\t.getText();\n \t\t\n \t\tEmail.setEmail(orderNum);\n \t\t\n \t\t// get upsell price\n \t\tvf = driver.findElement(By.xpath(\"//table/tbody/tr[2]/td[4]\")).getText();\n \t\tSystem.out.println(vf);\n \t\t\n \t\tif(\"$18.00\".equals(vf)){\n \t\t\t\n \t\t\tSystem.out.println(\"orderNumUpsell = \" + orderNumUpsell);\n \t\t\tSystem.out.println(\"orderNum = \" + orderNum);\n \t\t\t\n \t\t\t// enter main order history\n \t\t\tdriver.findElement(By.linkText(orderNum)).click();\n \t\t\t\n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.id(OrderConfirmationPage.Id_EditButtonOnOrderHistory))\n \t\t\t\t\t.click();\n \t\t\tThread.sleep(2000);\n \n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.id(OrderConfirmationPage.Id_cancelButtonOnOrderHistoy))\n \t\t\t\t\t.click();\n \t\t\tThread.sleep(3000);\n \n \t\t\tassertEquals(\"Please confirm cancellation of the order.\",\n \t\t\t\t\tcloseAlertAndGetItsText());\n \t\t\tThread.sleep(2000);\n \t\t\t\n \t\t\tdriver.findElement(\n \t\t\t\t\tBy.id(AccountSetting.Id_ReturnToOrderHistoryButton))\n \t\t\t\t\t.click();\n \n \t\t\t\n \t\t\t/**\n \t\t\t * verify main and main bouq order both canceled.\n \t\t\t */\n \t\t\tString status1, status2;\n \t\t\t\n \t\t\tstatus1 = driver.findElement(By.xpath(\"//table/tbody/tr[2]/td[7]\")).getText();\n \t\t\t\n \t\t\tstatus2 = driver.findElement(By.xpath(\"//table/tbody/tr[3]/td[7]\")).getText();\n \t\t\t\n \t\t\tassertTrue(selenium.getText(\n \t\t\t\t\t\"//table/tbody/tr[2]/td[7]\").contains(\"Canceled\"));\n \t\t\t\n \t\t\tassertTrue(selenium.getText(\n \t\t\t\t\t\"//table/tbody/tr[3]/td[7]\").contains(\"Canceled\"));\n \t\t\t\n \t\t\tSystem.out.println(\"bouqs status = \" + status1);\n \t\t\tSystem.out.println(\"upsell status = \" + status2);\n \n \t\t}\n \t\telse{\n \t\t\tSystem.out.println(\"don't select upsell bouq.\");\n \t\t\tfail(\"don't select upsell bouq.\");\n \t\t\n \t\t}\n \t\t\n \t\t\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Upsell/CustmoerCancelMainUpsellBouq.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "upsellBouqApplyDiscount_453", "method name": "upsell Bouq Apply Discount", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \n \t\tAction.globalRegist();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \t\t\tSystem.out.println(\"this bouq has upsell.\");\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// select first upell bouq\n \t\t\t\tdriver.findElement(By.xpath(\"//ul[@class= 'clearfix']/li/a\"))\n \t\t\t\t\t\t.click();\n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// no select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\t// check upsell discount is applied automatically.\n \t\tassertTrue(selenium.isTextPresent(\"2nd Bouq for $15\"));\n \t\t\n \t\t// remove welcome 15 discount.\n \t\tdriver.findElement(By.xpath(\"//tbody/tr[2]/td/a/img[@class= 'remove-icon']\")).click();\n \t\t\n \t\t/** \n \t\t *  use 'discount' JM1000 and remove\n \t\t */\n \t\tAction.useDiscountOnCartPage(\"JM1000\");\n \t\tThread.sleep(2000);\n \t\t\n \t\t// check JM1000 discount is applied.\n \t\t//assertTrue(selenium.isTextPresent(\"Jason Melvin - Welcome Discount\"));\n \t\t\n \t\tString dis;\n \t\tdis = driver.findElement(By.xpath(\"//tbody/tr[2]/td[2]\")).getText();\n \t\tSystem.out.println(\"JM1000 discount is 10%, expected = -$4.00 & actual = \" + dis);\n \t\tassertTrue(selenium.isTextPresent(\"-$4.00\"));\n \t\t\n \t\t// remove Jm1000 discount.\n \t\tdriver.findElement(By.xpath(\"//tbody/tr[2]/td/a/img[@class= 'remove-icon']\")).click();\n \t\t\n \t\t// check JM1000 discount is removed.\n \t\t//assertFalse(selenium.isTextPresent(\"Jason Melvin - Welcome Discount\"));\n \t\tSystem.out.println(\"remove Jm1000 discount\");\n \t\t\n \t\t/**\n \t\t * use store credit code\n \t\t */\n \t\tAction.useDiscountOnCartPage(\"GTB09N1000K\");\n \t\tThread.sleep(2000);\n \t\t\n \t\t// verify apply  store credit $\n \t\tassertTrue(selenium.isTextPresent(\"Your Store Credits\"));\n \t\tassertTrue(selenium.isTextPresent(\"Google Credit\"));\n \t\tassertTrue(selenium.isTextPresent(\"-$40.00\"));\n \t\tSystem.out.println(\"store credit code 'GTB09N1000K' applied.\");\n \t\t \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Upsell/BuyUpsellBouq_applyDiscount.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "checkVipAccountNotUpsellShown_454", "method name": "check Vip Account Not Upsell Shown", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t\n \t\tdriver.get(baseUrl);\n \t\t\n \t\t/**\n \t\t * create new account.\n \t\t */\n \t\t\n \t\t// click X to close POP-UP\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\tThread.sleep(1000);\n \n \t\t// click \"Log In\" link\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LoginLink_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// click create account button.\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_CreateAccount_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(1000);\n \n \t\t// input first name\n \t\tAction.inputFirstNameOnGlobal(Regist_Login_Page.Id_SignUpName,\n \t\t\t\tRegist_Login_Page.strName);\n \n \t\t// input new email\n \t\tString eml = new Email().newEmail();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.sendKeys(eml);\n \t\tThread.sleep(3000);\n \n \t\t// get new email address\n \t\tEmail.setEmail(eml);\n \t\tSystem.out.println(eml);\n \n \t\t// input password\n \t\tAction.inputPasswordOnRegistPage(\n \t\t\t\tRegist_Login_Page.Id_SignUpPassword_Global,\n \t\t\t\tRegist_Login_Page.strPassword);\n \n \t\t// click 'sign up' button\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(3000);\n \n \t\t// input months\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileMonths,\n \t\t\t\tRegist_Login_Page.strMonths_Global);\n \n \t\t// input days\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileDays,\n \t\t\t\tRegist_Login_Page.strDays_Global);\n \n \t\t// input years\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileYears,\n \t\t\t\tRegist_Login_Page.strYears_Global);\n \n \t\t// select gender\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileMale)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(Regist_Login_Page.Xpath_SelectPersonal_Global))\n \t\t\t\t.click();\n \n \t\t// submit\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LastSignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \t\t\n \t\t\n \t\t/**\n \t\t * add this account to vip.\n \t\t */\n \n \t\tdriver.get(SiteInfo.adminUrl());\n \t\tThread.sleep(5000);\n \t\t\n \t\tString getEmail = Email.getEmail();\n \n \t\tSystem.out.println(\"account = \" + getEmail);\n \n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_Email_Data)).clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_Email_Data)).sendKeys(\n \t\t\t\tEmail.adminEmail);\n \n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_Password_Data)).clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_Password_Data)).sendKeys(\n \t\t\t\tEmail.adminPasswd);\n \n \t\tdriver.findElement(By.name(\"Submit\")).click();\n \t    driver.findElement(By.linkText(\"Customers\")).click();\n \t    \n \t    // search this account\n \t    driver.findElement(By.name(\"customerFilter_email\")).clear();\n \t    driver.findElement(By.name(\"customerFilter_email\")).sendKeys(getEmail);\n \t    driver.findElement(By.id(\"submitFilterButton_customer\")).click();\n \t    Thread.sleep(2000);\n \t    \n \t    // edit this account\n \t    driver.findElement(By.xpath(\"//img[@title = 'Edit']\")).click();\n \t    Thread.sleep(2000);\n \t    \n \t    // select vip.\n \t    new Select(driver.findElement(By.name(\"id_default_group\"))).selectByVisibleText(\"VIP\");\n \t    driver.findElement(By.name(\"submitAddcustomer\")).click();\n \t    Thread.sleep(2000);\n \t\t\n \t    \n \t\t/**\n \t\t * login this vip account, enter PDP\n \t\t * check upsell window isn't shown.\n \t\t */\n \t    \n \t    driver.get(baseUrl);\n \t    Thread.sleep(5000);\n \t    \n \t    // verify login account\n \t\tassertTrue(selenium.isElementPresent(\"xpath=//i[@class='icon-logged-in']\"));\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \t\t\n \t\t// check upsell window isn't shown.\n \t\tassertFalse(selenium.isTextPresent(\"ADD A 2ND BOUQ FOR JUST $15\"));\n \t\tassertFalse(selenium.isElementPresent(FreeBouqPage.Id_butonNoThanks));\n \t\tSystem.out.println(\"Upsell window not shown because of VIP account having discount.\");\n \t\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Upsell/Bookorder_corpAccount.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "BookSubsUpsellForWifeWithVase_455", "method name": "Book Subs Upsell For Wife With Vase", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(5000);\n \n \t\t// click X to close POP-UP\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\tThread.sleep(1000);\n \n \t\t// click \"Log In\" link\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LoginLink_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// click create account button.\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_CreateAccount_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(1000);\n \n \t\t// input first name\n \t\tAction.inputFirstNameOnGlobal(Regist_Login_Page.Id_SignUpName,\n \t\t\t\tRegist_Login_Page.strName);\n \n \t\t// input new email\n \t\tString eml = new Email().newEmail();\n \t\tSystem.out.println(eml);\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.sendKeys(eml);\n \t\tThread.sleep(3000);\n \n \t\t// input password\n \t\tAction.inputPasswordOnRegistPage(\n \t\t\t\tRegist_Login_Page.Id_SignUpPassword_Global,\n \t\t\t\tRegist_Login_Page.strPassword);\n \n \t\t// click 'sign up' button\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(3000);\n \n \t\t// input months\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileMonths,\n \t\t\t\tRegist_Login_Page.strMonths_Global);\n \n \t\t// input days\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileDays,\n \t\t\t\tRegist_Login_Page.strDays_Global);\n \n \t\t// input years\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileYears,\n \t\t\t\tRegist_Login_Page.strYears_Global);\n \n \t\t// select gender\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileMale)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(Regist_Login_Page.Xpath_SelectPersonal_Global))\n \t\t\t\t.click();\n \n \t\t// submit\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LastSignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// logout this account.\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \t\tThread.sleep(1000);\n \n \t\t// click 'logout' link\n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(AccountSetting.Link_Logout.toUpperCase())).click();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_ShopOnHeader)).click();\n \n \t\t// select bouq and size with vase.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// without upsell\n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// click 'No thanks'\n \t\t\t\tdriver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t\t.click();\n \n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, true);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\ttry {\n \n \t\t\t// click 'no thanks'\n \t\t\tboolean vel = driver.findElement(By.id(\"stick-with-original\"))\n \t\t\t\t\t.isEnabled();\n \n \t\t\tif (vel == true) {\n \t\t\t\tdriver.findElement(By.id(\"stick-with-original\")).click();\n \t\t\t\tThread.sleep(1000);\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has this button\");\n \t\t}\n \n \t\t// verify Subs upsell not shown.\n \t\t// check 'Romance Package' exist.\n \t\tassertFalse(selenium.isTextPresent(Subscription.Text_RomancePackage));\n \n \t\t// check Subscription discount 15% not exist\n \t\tassertFalse(selenium\n \t\t\t\t.isTextPresent(Subscription.Text_SubscriptionDiscount15));\n \t\tThread.sleep(2000);\n \n \t\t// login existing account \t\n         driver.findElement(By.id(FreeBouqPage.Id_SignUpEmail)).clear();\n     \tdriver.findElement(By.id(FreeBouqPage.Id_SignUpEmail)).sendKeys(eml);\n     \t\n     \tdriver.findElement(By.id(FreeBouqPage.Id_SignUpPassword)).clear();\n     \tdriver.findElement(By.id(FreeBouqPage.Id_SignUpPassword)).sendKeys(Regist_Login_Page.strPassword);\n     \t\n     \tdriver.findElement(By.id(FreeBouqPage.Id_SignUpButton)).click();\n     \tThread.sleep(3000);\n     \t\n \t\t// verify auto apply 'Welcome!'\n \t\t//assertTrue(selenium.isTextPresent(\"Welcome!\"));\n \n \t\t// verify Subs upsell not shown.\n \t\t// check 'Romance Package' exist.\n \t\tassertFalse(selenium.isTextPresent(Subscription.Text_RomancePackage));\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/SubscriptionUpsell/SubsUpsell_LoginCart_Vase.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "bRegistNewAccount_456", "method name": "b Regist New Account", "comments": [" Regist in user that never bought bouq in prestashop system.", " @throws Exception", "Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(5000);\n \t\t\n \t\t// click X to close POP-UP\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\tThread.sleep(1000);\n \n \t\t// click \"Log In\" link\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LoginLink_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// click create account button.\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_CreateAccount_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(1000);\n \n \t\t// input first name\n \t\tAction.inputFirstNameOnGlobal(Regist_Login_Page.Id_SignUpName,\n \t\t\t\tRegist_Login_Page.strName);\n \n \t\t// input new email\n \t\tString eml = new Email().newEmail();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.sendKeys(eml);\n \t\tThread.sleep(3000);\n \n \t\t// get new email address\n \t\tEmail.setEmail(eml);\n \t\tSystem.out.println(eml);\n \n \t\t// input password\n \t\tAction.inputPasswordOnRegistPage(\n \t\t\t\tRegist_Login_Page.Id_SignUpPassword_Global,\n \t\t\t\tRegist_Login_Page.strPassword);\n \n \t\t// click 'sign up' button\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(3000);\n \n \t\tdriver.quit();\n \t\t\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/OfferFunnel/Combination_VaseProductLinkVoucher_LoginNeverBuy_Free.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "BookSubsUpsellForMomWithVase_457", "method name": "Book Subs Upsell For Mom With Vase", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(5000);\n \t\t\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\t\n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq and size with vase.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// without upsell\n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// click 'No thanks'\n \t\t\t\tdriver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t\t.click();\n \n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipMom,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, true);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\ttry {\n \n \t\t\t// click 'no thanks'\n \t\t\tboolean vel = driver.findElement(By.id(\"stick-with-original\"))\n \t\t\t\t\t.isEnabled();\n \n \t\t\tif (vel == true) {\n \t\t\t\tdriver.findElement(By.id(\"stick-with-original\")).click();\n \t\t\t\tThread.sleep(1000);\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has this button\");\n \t\t} \n \n \t\t// verify Subs upsell not shown.\n \t\t// check 'MOTHERLY LOVE PACKAGE' not exist.\n         assertFalse(selenium.isTextPresent(Subscription.Text_MotherlyLovePackage)); \n \n \t\t// check Subscription discount 15% not exist\n \t\tassertFalse(selenium\n \t\t\t\t.isTextPresent(Subscription.Text_SubscriptionDiscount15));\n \t\tThread.sleep(2000);\n \t\t\n \t\tString eml = new Email().newEmail();\n \t\tEmail.setReferralByUser(eml);\n \t\tAction.inputNewEmailRegistFromCart(CheckoutPage.Id_SignUpEmail,eml);\n \t      \n \t\t//input password\n \t\tAction.inputPasswordRegistFromCart(CheckoutPage.Id_SignUpPassword,Regist_Login_Page.strPassword);\n \t\t    \n \t\t//click 'sign up' button\n \t\tdriver.findElement(By.id(CheckoutPage.Id_SignUpButton)).click();\n \t\tThread.sleep(5000);\n \n \t\t// verify auto apply 'Welcome!'\n \t\t//assertTrue(selenium.isTextPresent(\"Welcome\"));\n \n \t\t// verify Subs upsell not shown.\n \t\t// check 'MOTHERLY LOVE PACKAGE' not exist.\n         assertFalse(selenium.isTextPresent(Subscription.Text_MotherlyLovePackage)); \n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/SubscriptionUpsell/SubsUpsell_RegistCart_Vase.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "relationshipOccasionFromPDP_458", "method name": "relationship Occasion From PDP", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString add1[] = { \"MeiMei\", \"Han\", \"5300 stevens creek blvd\",\n \t\t\t\t\"SAN JOSE\", \"California\", \"95129\", \"8212345678\" };\n \n \t\tdriver.get(baseUrl);\n \n \t\t// register\n \t\tAction.globalRegist();\n \t\t\n \t\t/**\n \t\t *  Select flower for wife, occasion \"Wedding Anniversary\"\n \t\t *  buy Above & Beyond and pay with CC\n \t\t */\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \t\tThread.sleep(5000);\n \n \t\t// select first bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife, FreeBouqPage.Data_FirstName,\n \t\t\t\tFreeBouqPage.Data_LastName, FreeBouqPage.Data_ZipCode);\n \t\t\n \t\tString dateText, dte;\n \t\tdateText = driver.findElement(\n \t\t\t\tBy.xpath(FreeBouqPage.Xpath_SelectDeliveryDate)).getText();\n \t\tdte = dateText.substring(19, 24);\n \t\tSystem.out.println(dte);\n \t\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Wedding Anniversary\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \t\t\n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \t\t\n \t\tAction.clickAddCheckOutOnButtonPDP();\n \n \t\t// pay with CC\n \t\tAction.payWithCCOnCartPage(CheckoutPage.Data_CardNum,\n \t\t\t\tCheckoutPage.Data_CardNum2, CheckoutPage.Data_CardNum2,\n \t\t\t\tCheckoutPage.Data_CardNum2, CheckoutPage.Data_CardCode,\n \t\t\t\tCheckoutPage.Data_BillingZip);\n \n \t\t// Check occasion\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(AccountSetting.Link_ManageRelationship.toUpperCase()))\n \t\t\t\t.click();\n \t\t\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(\"//form[@id='relationship_form']/div/div[2]//button\"))\n \t\t\t\t.click();\n \t\t\n \t\t// verify relationship type is wife.\n \t\tassertEquals(\n \t\t\t\tFreeBouqPage.Text_RelationshipWife,\n \t\t\t\tdriver.findElement(\n \t\t\t\t\t\tBy.xpath(\"//button[@data-id='relationship_type']\"))\n \t\t\t\t\t\t.getAttribute(\"title\"));\n \t\t\n \t\t// verify occasion list is Wedding Anniversary.\n \t\tassertEquals(\n \t\t\t\t\"Wedding Anniversary\",\n \t\t\t\tdriver.findElement(\n \t\t\t\t\t\tBy.xpath(\"//div[@id='occasion_list']/div/label[1]\"))\n \t\t\t\t\t\t.getText());\n \t\t\n \t\tSystem.out.println(\"select date = \" + dte);\n \t\tassertEquals(\n \t\t\t\tdte,\n \t\t\t\tdriver.findElement(\n \t\t\t\t\t\tBy.xpath(\"//div[@id='occasion_list']/div/label[2]\"))\n \t\t\t\t\t\t.getText());\n \n \t\tSystem.out.println(\"Wife with occasion 'Wedding aniversary' ,date 06/30 added!\");\n \n \t\t//name1 = add1[0] + \" \" + add1[1] + \"-\" + add1[3];\n \t\taddress1 = add1[2];\n \t\tcity1 = add1[3] + \", \" + add1[5];\n \t\t\n \t\t// verify info\n \t\tassertEquals(\"Home\",\n \t\t\t\tdriver.findElement(By.xpath(\"//div[@id='address_list']/p[1]\"))\n \t\t\t\t\t\t.getText());\n \n \t\tassertEquals(address1,\n \t\t\t\tdriver.findElement(By.xpath(\"//div[@id='address_list']/p[2]\"))\n \t\t\t\t\t\t.getText());\n \n \t\tassertEquals(city1,\n \t\t\t\tdriver.findElement(By.xpath(\"//div[@id='address_list']/p[3]\"))\n \t\t\t\t\t\t.getText());\n \n \t\tSystem.out.println(driver.findElement(\n \t\t\t\tBy.xpath(\"//div[@id='address_list']/p[3]\")).getText());\n \n \t\tSystem.out.println(\"Address that user inputed is saved.\");\n \n \t\t\n \t\t/**\n \t\t *  Select flower for Dad, occasion \"Love\"\n \t\t *  buy Above & Beyond and pay with CC \n \t\t */\n \t\t\n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_ShopOnHeader)).click();\n \t\tThread.sleep(5000);\n \n \t\t// select first bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(\"Dad\", FreeBouqPage.Data_FirstName,\n \t\t\t\tFreeBouqPage.Data_LastName, FreeBouqPage.Data_ZipCode);\n \n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Love\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \n \t\tdriver.findElement(By.id(CheckoutPage.Id_SubmitButton)).click();\n \t\tThread.sleep(8000);\n \n \t\t// Check occasion\n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(AccountSetting.Link_ManageRelationship.toUpperCase()))\n \t\t\t\t.click();\n \n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(\"//form[@id='relationship_form']/div/div[3]//button\"))\n \t\t\t\t.click();\n \t\t\n \t\t// verify relationship type is dad.\n \t\tassertEquals(\n \t\t\t\t\"Dad\",\n \t\t\t\tdriver.findElement(\n \t\t\t\t\t\tBy.xpath(\"//button[@data-id='relationship_type']\"))\n \t\t\t\t\t\t.getAttribute(\"title\"));\n \t\t\n \t\t// verify occasion_list is Love.\n \t\ttry {\n \t\t\tassertEquals(\n \t\t\t\t\t\"Love\",\n \t\t\t\t\tdriver.findElement(\n \t\t\t\t\t\t\tBy.xpath(\"//div[@id='occasion_list']/div/label[1]\"))\n \t\t\t\t\t\t\t.getText());\n \t\t\tfail(\"Love occasion is added!\");\n \t\t} catch (NoSuchElementException e) {\n \t\t}\n \t\t\n \t\tSystem.out.println(\"'Love' occasion is not shown.\");\n \t\t\n \t\t// verify info\n \t\tassertEquals(\"Home\",\n \t\t\t\tdriver.findElement(By.xpath(\"//div[@id='address_list']/p[1]\"))\n \t\t\t\t\t\t.getText());\n \n \t\tassertEquals(address1,\n \t\t\t\tdriver.findElement(By.xpath(\"//div[@id='address_list']/p[2]\"))\n \t\t\t\t\t\t.getText());\n \n \t\tassertEquals(city1,\n \t\t\t\tdriver.findElement(By.xpath(\"//div[@id='address_list']/p[3]\"))\n \t\t\t\t\t\t.getText());\n \n \t\tSystem.out.println(\"Dad with correct delivery address.\");\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/AccountSetting/RelationshipOccasionFromPDP.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "editPrimaryBouq_459", "method name": "edit Primary Bouq", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \t\t\n \t\t// click X to close POP-UP\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\t\n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \t\t\n \t\t// no select upsell bouq\n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \t\t\tSystem.out.println(\"this bouq has upsell.\");\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// click 'No thanks'\n \t\t\t\tdriver.findElement(By.id(FreeBouqPage.Id_butonNoThanks)).click();\n \t\t\t\t\n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\tdriver.findElement(By.linkText(FreeBouqPage.link_Loginlink)).click();\n \n \t\t// back to sign up window\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_BackToSignUp)).click();\n \t\tThread.sleep(2000);\n \n \t\t// regist new account.\n \t\tString emil = new Email().newEmail();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SignUpEmail)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SignUpEmail)).sendKeys(emil);\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SignUpPassword)).clear();\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SignUpPassword)).sendKeys(\n \t\t\t\tRegist_Login_Page.strPassword);\n \t\tdriver.findElement(By.id(CheckoutPage.Id_SignUpButton)).click();\n \t\tThread.sleep(3000);\n \n \t\tassertTrue(selenium.isElementPresent(HomePage.Xpath_AccountIcon));\n \t\t\n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, true);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \t\t\n \t\t\n \t\t/**\n \t\t * select first upsell bouq.\n \t\t */\n \t\t\n \t\t// click edit on cart page.\n \t\tdriver.findElement(By.linkText(CheckoutPage.Link_EditOnCart)).click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \t\t\n \t\tAction.selectUpsellBouq(\"//ul[@class= 'clearfix']/li/a\");\n \n \t  \tdriver.findElement(By.id(FreeBouqPage.Id_SaveChangesButton)).click();\n \t  \tThread.sleep(2000);\n \t  \t\n \t    // click use this address button\n \t  \tdriver.findElement(By.id(FreeBouqPage.Id_UseThisAddressButton)).click();\n \t  \tThread.sleep(5000);\n \t\t\n \t\t// check upsell discount is applied automatically.\n \t\tassertTrue(selenium.isTextPresent(\"2nd Bouq for $15\"));\n \t\t\n \t\t\n \t\t/**\n \t\t * select another upsell bouq.\n \t\t */\n \t\t\n \t\tdriver.findElement(By.linkText(CheckoutPage.Link_EditOnCart)).click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \t\t\n \t\t// select second upsell bouq.\n \t\tAction.selectUpsellBouq(\"//ul[@class= 'clearfix']/li[2]/a\");\n \t\t\n \t  \tdriver.findElement(By.id(FreeBouqPage.Id_SaveChangesButton)).click();\n \t  \tThread.sleep(2000);\n \t  \t\n \t    // click use this address button\n \t  \tdriver.findElement(By.id(FreeBouqPage.Id_UseThisAddressButton)).click();\n \t  \tThread.sleep(5000);\n \t\t\n \t\t// check upsell discount is applied automatically.\n \t\tassertTrue(selenium.isTextPresent(\"2nd Bouq for $15\"));\n \n \t\t// paid with paypal\n \t\tAction.payWithPPOnCartPage(CheckoutPage.Data_TestPayPalEmail,\n \t\t\t\tCheckoutPage.Data_TestPayPalPassword);\n \n \t\t// check pay for success, to generate the order\n \t\tassertTrue(selenium.isTextPresent(OrderConfirmationPage.Text_OrderSucceed));\n \t\tThread.sleep(3000);\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Upsell/EditPrimaryBouq.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "CreateNewAccountAndBuyBouqs_460", "method name": "Create New Account And Buy Bouqs", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\t// open test.thebouqs.com web.\n \t\tdriver.get(baseUrl);\n \n \t\t// click X to close POP-UP\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\tThread.sleep(1000);\n \n \t\t// click \"Log In\" link\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LoginLink_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// click create account button.\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_CreateAccount_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(1000);\n \n \t\t// input first name\n \t\tAction.inputFirstNameOnGlobal(Regist_Login_Page.Id_SignUpName,\n \t\t\t\tRegist_Login_Page.strName);\n \n \t\t// input new email\n \t\tString eml = new Email().newEmail();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.sendKeys(eml);\n \t\tThread.sleep(3000);\n \n \t\t// get new email address\n \t\tEmail.setEmail(eml);\n \t\tSystem.out.println(eml);\n \n \t\t// input password\n \t\tAction.inputPasswordOnRegistPage(\n \t\t\t\tRegist_Login_Page.Id_SignUpPassword_Global,\n \t\t\t\tRegist_Login_Page.strPassword);\n \n \t\t// click 'sign up' button\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(3000);\n \n \t\t// input months\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileMonths,\n \t\t\t\tRegist_Login_Page.strMonths_Global);\n \n \t\t// input days\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileDays,\n \t\t\t\tRegist_Login_Page.strDays_Global);\n \n \t\t// input years\n \t\tAction.inputBirthdayOnGlobal(Regist_Login_Page.Id_ProfileYears,\n \t\t\t\tRegist_Login_Page.strYears_Global);\n \n \t\t// select gender\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileMale)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(Regist_Login_Page.Xpath_SelectPersonal_Global))\n \t\t\t\t.click();\n \n \t\t// submit\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LastSignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/FreeBouq/GuestUser_LoginWindow_NotSaturday.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "CommonUserRegist_461", "method name": "Common User Regist", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tdriver.findElement(By.xpath(\"//button[@onclick = 'welcomePopupMini()']\")).click();\n \t\tdriver.findElement(By.linkText(Regist_Login_Page.Id_Login_Data))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_CreateAccount_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpName)).clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpName)).sendKeys(\n \t\t\t\tRegist_Login_Page.strName);\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpEmail_Global))\n \t\t\t\t.sendKeys(new Email().newEmail());\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpPassword_Global))\n \t\t\t\t.clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpPassword_Global))\n \t\t\t\t.sendKeys(Regist_Login_Page.strPassword);\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_SignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(1000);\n \n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileMonths)).sendKeys(\n \t\t\t\t\"2\");\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileDays)).sendKeys(\n \t\t\t\t\"32\");\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileYears)).sendKeys(\n \t\t\t\t\"1988\");\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileFemale)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(Regist_Login_Page.Xpath_SelectPersonal_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LastSignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(1000);\n \n \t\t/**\n \t\t *  Check this page with warning message:Invalid date of birth.\n \t\t */\n \t\tSystem.out.println(driver.findElement(\n \t\t\t\tBy.xpath(\"//label[@class='input-invalid']\")).getText());\n \t\t//assertTrue(selenium.isTextPresent(\"Invalid date of birth\"));\n \n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileMonths)).clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileMonths)).sendKeys(\n \t\t\t\t\"5\");\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileDays)).clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileDays)).sendKeys(\n \t\t\t\t\"30\");\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileYears)).clear();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileYears)).sendKeys(\n \t\t\t\t\"2003\");\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_ProfileMale)).click();\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(Regist_Login_Page.Xpath_SelectBusiness_Global))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(Regist_Login_Page.Id_LastSignUpButton_Global))\n \t\t\t\t.click();\n \t\tThread.sleep(3000);\n \n \t\t/**\n \t\t *  Check on top right page, link 'log in' is changed to logged in\n \t\t *  status.\n \t\t */\n \t\tassertTrue(selenium.isElementPresent(HomePage.Xpath_AccountIcon));\n \t\tThread.sleep(1000);\n \n \t\tdriver.findElement(By.xpath(HomePage.Xpath_AccountIcon)).click();\n \t\tThread.sleep(2000);\n \n \t\tdriver.findElement(\n \t\t\t\tBy.linkText(AccountSetting.Link_myPersonalInfo.toUpperCase()))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t/**\n \t\t *  Check title.\n \t\t */\n \t\t// assertTrue(selenium.isElementPresent(AccountSetting.Id_male));\n \t\tSystem.out.print(selenium.isChecked(AccountSetting.Id_male));\n \t\tassertTrue(selenium.isChecked(AccountSetting.Id_male));\n \n \t\t/**\n \t\t *  Check mouth.\n \t\t */\n \t\tSystem.out.print(driver.findElement(\n \t\t\t\tBy.xpath(AccountSetting.Xpth_SelectorMonth)).getText());\n \t\tassertTrue(driver\n \t\t\t\t.findElement(By.xpath(AccountSetting.Xpth_SelectorMonth))\n \t\t\t\t.getText().contains(\"May\"));\n \n \t\t/**\n \t\t *  Check days.\n \t\t */\n \t\tSystem.out.print(driver.findElement(\n \t\t\t\tBy.xpath(AccountSetting.Xpth_SelectorDay)).getText());\n \t\tassertTrue(driver\n \t\t\t\t.findElement(By.xpath(AccountSetting.Xpth_SelectorDay))\n \t\t\t\t.getText().contains(\"30\"));\n \n \t\t/**\n \t\t *  Check years.\n \t\t */\n \t\tSystem.out.print(driver.findElement(\n \t\t\t\tBy.xpath(AccountSetting.Xpth_SelectorYear)).getText());\n \t\tassertTrue(driver\n \t\t\t\t.findElement(By.xpath(AccountSetting.Xpth_SelectorYear))\n \t\t\t\t.getText().contains(\"2003\"));\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Regist/RegistFromSignUpWindow.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "bouqOfTheMonth_462", "method name": "bouq Of The Month", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tList<WebElement> ls;\n \t\tdriver.get(baseUrl);\n \n \t\t// register\n \t\tAction.globalRegist();\n \n \t\t// --------------subscription page-------------\n \t\t// go to package subscription page\n \t\tAction.enterPKGSubAfterRegist();\n \n \t\t// select Bouq of the month collection\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_Collection1LearnMore))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// -----------------PDP------------------------\n \n \t\t// check collection name\n \t\t// This name is a configuration(Bouq name) in admin side\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_Collection1Name))\n \t\t\t\t.isDisplayed());\n \n \t\t// check bouq 3 sizes\n \t\t// This name is a configuration(Bouq size) in admin side\n \t\tassertTrue(driver.findElements(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_CollectionSize)).size() == 3);\n \n \t\t// check text on button\n \t\tassertEquals(PackageSubscriptionPage.Text_BuyButton, driver\n \t\t\t\t.findElement(By.id(PackageSubscriptionPage.Id_BuyButton))\n \t\t\t\t.getText());\n \n \t\t// get this package\n \t\tdriver.findElement(By.id(PackageSubscriptionPage.Id_BuyButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// check text\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_SendTo)).isDisplayed());\n \n \t\t// fill the relationship form\n \t\tAction.inputRelationshipOnPDP(\n \t\t\t\tPackageSubscriptionPage.Text_RelationshipSister,\n \t\t\t\tPackageSubscriptionPage.Text_FirstName,\n \t\t\t\tPackageSubscriptionPage.Text_LastName,\n \t\t\t\tPackageSubscriptionPage.Text_Zip);\n \n \t\t// select date\n \t\tAction.datePickerOnSubPDP(PackageSubscriptionPage.Xpth_DatePickerMonth,\n \t\t\t\tPackageSubscriptionPage.Text_DatePickerMonth,\n \t\t\t\tPackageSubscriptionPage.Text_DatePickerDay);\n \n \t\t// input address\n \t\tAction.inputAddressOnPDP(PackageSubscriptionPage.Data_Address,\n \t\t\t\tPackageSubscriptionPage.Data_PhoneNum);\n \n \t\t// add and checkout\n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\t// ---------------------checkout page-----------------------------\n \t\tassertEquals(\n \t\t\t\tSubscriptionCheckoutPage.Text_ServiceNote,\n \t\t\t\tdriver.findElement(\n \t\t\t\t\t\tBy.xpath(SubscriptionCheckoutPage.Xpth_ServiceNote))\n \t\t\t\t\t\t.getText().trim());\n \t\t// check discount rate\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath(SubscriptionCheckoutPage.Xpth_20off)).isDisplayed());\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath(SubscriptionCheckoutPage.Xpth_10off)).isDisplayed());\n \n \t\t// pay with paypal\n \t\tAction.payWithPPOnSubCartPage(CheckoutPage.Data_TestPayPalEmail,\n \t\t\t\tCheckoutPage.Data_TestPayPalPassword);\n \n \t\t// check result\n \t\tassertEquals(\n \t\t\t\tPackageSubscriptionPage.Text_Active,\n \t\t\t\tdriver.findElement(\n \t\t\t\t\t\tBy.cssSelector(PackageSubscriptionPage.Css_Active))\n \t\t\t\t\t\t.getText());\n \n \t\t// check subscription number\n \t\tdriver.findElement(By.xpath(Subscription.Xpth_SubList)).click();\n \t\tThread.sleep(2000);\n \t\t\n \t\tls = driver.findElements(By.xpath(Subscription.Xpth_SubItem));\n \t\tassertTrue(ls.size() != 0);\n \n \t\t// ---------------edit bouq-------------------\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_FirstEditButton)).click();\n \t\tThread.sleep(10000);\n \t\t\n \t\tassertTrue(driver.findElement(By.id(PackageSubscriptionPage.Id_BuyBouqButton)).isDisplayed());\n \t\t\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.id(PackageSubscriptionPage.Id_CancelButton)).isDisplayed());\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/PackagedSubscription/NewPKGSubs_BouqOfMonth_SL_PP.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "decorateVerifyBack_463", "method name": "decorate Verify Back", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \n \t\t// register\n \t\tAction.globalRegist();\n \n \t\t// ---------------subscription page-------------------------\n \t\t// go to package subscription page\n \t\tAction.enterPKGSubAfterRegist();\n \n \t\t// select Decorator's package collection\n \t\tdriver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_Collection2LearnMore))\n \t\t\t\t.click();\n \t\tThread.sleep(2000);\n \n \t\t// ----------------------PDP----------------------------\n \t\t// check collection name\n \t\t// This name is a configuration(Bouq name) in admin side\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_Collection2Name))\n \t\t\t\t.isDisplayed());\n \n \t\t// check bouq 3 sizes\n \t\t// This name is a configuration(Bouq size) in admin side\n \n \t\tassertTrue(driver.findElements(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_CollectionSize)).size() == 3);\n \n \t\t// check text on button\n \t\tassertEquals(PackageSubscriptionPage.Text_BuyButton, driver\n \t\t\t\t.findElement(By.id(PackageSubscriptionPage.Id_BuyButton))\n \t\t\t\t.getText());\n \n \t\t// get this package\n \t\tdriver.findElement(By.id(PackageSubscriptionPage.Id_BuyButton)).click();\n \t\tThread.sleep(2000);\n \n \t\t// check text\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpth_SendTo)).isDisplayed());\n \n \t\t// fill the relationship form\n \t\tAction.inputRelationshipOnPDP(\n \t\t\t\tPackageSubscriptionPage.Text_RelationshipSister,\n \t\t\t\tPackageSubscriptionPage.Text_FirstName,\n \t\t\t\tPackageSubscriptionPage.Text_LastName,\n \t\t\t\tPackageSubscriptionPage.Text_Zip);\n \n \t\t// select date\n \t\tAction.datePickerOnSubPDP(PackageSubscriptionPage.Xpth_DatePickerMonth,\n \t\t\t\tPackageSubscriptionPage.Text_DatePickerMonth,\n \t\t\t\tPackageSubscriptionPage.Text_DatePickerDay);\n \n \t\t// input address\n \t\tAction.inputAddressOnPDP(PackageSubscriptionPage.Data_Address,\n \t\t\t\tPackageSubscriptionPage.Data_PhoneNum);\n \n \t\t// add and checkout\n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \t\t\n \t\t// verify enter step4 page.\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.Step4));\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.BillingPage));\n \n \t\t/**\n \t\t *  on step4: click back button\n \t\t */\n \t\tdriver.findElement(By.xpath(PackageSubscriptionPage.Xpath_BackOnStepFourPP)).click();\n \t\t\n \t\t// verify back step3 page.\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.Step3));\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.RecipientPage));\n \t\t\n \t\t/**\n \t\t *  on step3: click back button\n \t\t */\n \t\tdriver.findElement(By.xpath(PackageSubscriptionPage.Xpath_BackOnPackageSubs)).click();\n \t\t\n \t\t// verify back step2 page.\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.SelectDelivrySchedulePage));\n \t\t\n \t\t// \"one a month, 1 bouq/delivery\" is selected\n \t\tString vef = driver.findElement(\n \t\t\t\tBy.xpath(PackageSubscriptionPage.Xpath_EveryMonth)).getText();\n \t\tSystem.out.println(vef);\n \t\t\n \t\tassertEquals(PackageSubscriptionPage.EveryMonth,vef);\n \t\t\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.Discount20));\n \t\t\n \t\t/**\n \t\t *  on step2: click back button\n \t\t */\n \t\t\n \t\tdriver.findElement(By.xpath(PackageSubscriptionPage.Xpath_BackOnPackageSubs)).click();\n \t\t\n \t\t// verify back step1 page.\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.Step1));\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.SelectCollectionSize));\n \t\t\n \t\t// verify size is selected.\n \t\tassertTrue(driver.findElement(\n \t\t\t\tBy.xpath\n \t\t\t\t(PackageSubscriptionPage.Xpath_SizeIsSelected))\n \t\t\t\t.isEnabled());\n \t\t\n \t\t// back Concierge Services page\n \t\tdriver.findElement(By.xpath(PackageSubscriptionPage.Xpath_BackOnStepOne)).click(); \n \t\tThread.sleep(5000);\n \t\t\n \t\tassertTrue(selenium.isTextPresent(PackageSubscriptionPage.ConciergeServices));\n \n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/PackagedSubscription/PKGSubs_Decorate_BACK.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "deleteUpsellBouq_464", "method name": "delete Upsell Bouq", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(10000);\n \n \t\tAction.globalRegist();\n \n \t\t// click 'shop' button\n \t\tdriver.findElement(By.xpath(Regist_Login_Page.Xpath_Shop)).click();\n \n \t\t// select bouq.\n \t\tdriver.findElement(By.cssSelector(FreeBouqPage.Css_SelectBouqName))\n \t\t\t\t.click();\n \t\tThread.sleep(5000);\n \n \t\tdriver.findElement(By.xpath(FreeBouqPage.Xpath_OriginalSize)).click();\n \t\tThread.sleep(2000);\n \n \t\t// click send this bouq.\n \t\tdriver.findElement(By.id(FreeBouqPage.Id_SendThisBouqButton)).click();\n \t\tThread.sleep(2000);\n \n \t\tString vef;\n \t\ttry {\n \t\t\tvef = driver.findElement(By.id(FreeBouqPage.Id_butonNoThanks))\n \t\t\t\t\t.getText();\n \t\t\tSystem.out.println(vef);\n \t\t\tSystem.out.println(\"this bouq has upsell.\");\n \n \t\t\tif (\"NO THANKS\".equals(vef)) {\n \n \t\t\t\t// select first upell bouq\n \t\t\t\tdriver.findElement(By.xpath(\"//ul[@class= 'clearfix']/li/a\")).click();\n \t\t\t} else {\n \t\t\t\tSystem.out.println(\"not has upsell\");\n \t\t\t}\n \t\t} catch (NoSuchElementException e) {\n \t\t\tSystem.out.println(\"not has upsell\");\n \t\t}\n \n \t\t// input info.\n \t\tAction.inputRelationshipOnPDP(FreeBouqPage.Text_RelationshipWife,\n \t\t\t\tFreeBouqPage.Data_FirstName, FreeBouqPage.Data_LastName,\n \t\t\t\tFreeBouqPage.Data_ZipCode);\n \n \t\t// no select vase\n \t\tAction.inputOssasionAndHaveMessageOnPDP(\"Birthday\", false,\n \t\t\t\tFreeBouqPage.Data_Message, false, false);\n \n \t\tAction.inputAddressOnPDP(FreeBouqPage.Data_Address,\n \t\t\t\tFreeBouqPage.Data_PhoneNum);\n \n \t\tAction.clickAddCheckOutOnButtonPDP();\n \t\tThread.sleep(5000);\n \n \t\t// check upsell discount is applied automatically.\n \t\tassertTrue(selenium.isTextPresent(\"2nd Bouq for $15\"));\n \t\t\n \t\t//reomve upsell\n \t\tdriver.findElement(By.xpath(\"//div[@class= 'cart-detail']/div[4]/div[2]/a\")).click();\n \t\tThread.sleep(5000);\n \t\t\n \t\t// verify upsell remove.\n \t\tassertFalse(selenium.isTextPresent(\"2nd Bouq for $15\"));\n \t\t\n \t\t// verify only main bouq shown in cart.\n \t\tList<WebElement> ls;\n \t\tls = driver.findElements(By.xpath(\"//div[@class= 'cart-item']\"));\n \t\tSystem.out.println(\"Bouqs number in cart = \" + ls);\n \t\t\n \t\tassertTrue(ls.size() == 1);\n \t\tSystem.out.println(\"only main bouq shown in cart.\");\n \t}\n", "path": "Automation-Test/Bouqs_Web_Automation/src/com/bouqs/test/Upsell/DeleteUpsellVase.java", "repo name": "thebouqs/prestashop.api"}
{"repo_name": "CreateMovieFail_465", "method name": "Create Movie Fail", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws InterruptedException {\n \t\t driver.get(baseUrl + \"/php4dvd/\");\n \t\t driver.findElement(By.xpath(\".//*[@id='content']/section/nav/ul/li[1]/div/div/a\")).click();\n \t\t driver.findElement(By.name(\"name\")).sendKeys(\"Òåñòîâûé Ôèëüì\"); //TITLE\n \t\t driver.findElement(By.name(\"aka\")).sendKeys(\"òåñò\");  //also as\n \t\t// driver.findElement(By.name(\"year\")).sendKeys(\"2015\"); //YEAR\n \t\t driver.findElement(By.name(\"duration\")).sendKeys(\"60\"); //duration\n \t\t driver.findElement(By.name(\"rating\")).sendKeys(\"9\"); //rating\n \t\t driver.findElement(By.name(\"trailer\")).sendKeys(\"https://youtu.be/4Hau3QZh7FY\"); //trailer\n \t\t driver.findElement(By.name(\"notes\")).sendKeys(\"test notes\");\n \t\t driver.findElement(By.name(\"taglines\")).sendKeys(\"taglines\");\n \t\t driver.findElement(By.name(\"plotoutline\")).sendKeys(\"plotoutline\");\n \t\t driver.findElement(By.name(\"plots\")).sendKeys(\"plots\"); \n \t\t driver.findElement(By.name(\"languages\")).sendKeys(\"languages\");\n \t\t driver.findElement(By.name(\"subtitles\")).sendKeys(\"subtitles\");\n \t\t driver.findElement(By.name(\"audio\")).sendKeys(\"audio\");\n \t\t driver.findElement(By.name(\"video\")).sendKeys(\"video\");\n \t\t driver.findElement(By.name(\"country\")).sendKeys(\"country\");\n \t\t driver.findElement(By.name(\"genres\")).sendKeys(\"genres\");\n \t\t driver.findElement(By.name(\"director\")).sendKeys(\"director\");\n \t\t driver.findElement(By.name(\"writer\")).sendKeys(\"writer\");\n \t\t driver.findElement(By.name(\"producer\")).sendKeys(\"producer\");\n \t\t driver.findElement(By.name(\"music\")).sendKeys(\"music\");\n \t\t driver.findElement(By.name(\"cast\")).sendKeys(\"cast\");\n \t\t driver.findElement(By.name(\"submit\")).click();\n \t\t Thread.sleep(2000);\n \t\t if(driver.findElement(By.name(\"submit\")) != null) {\n \t\t\t System.out.println(\"CreateMovieFail:done\");\n \t\t\t }\n \t\t\t else {\n \t\t\t\t System.out.println(\"CreateMovieFail:fail\");\n \t\t\t }\n \t\t\n \t\t\n \t}\n", "path": "src/test/java/zolota/AddMovie.java", "repo name": "zolotarevskaya/homework"}
{"repo_name": "MovieNotFound_466", "method name": "Movie Not Found", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws InterruptedException {\n \t\t\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tdriver.findElement(By.xpath(\".//*[@id='q']\")).clear();\n \t\tdriver.findElement(By.xpath(\".//*[@id='q']\")).sendKeys(\"asd\");\n \t\tdriver.findElement(By.xpath(\".//*[@id='q']\")).sendKeys(Keys.ENTER);\n \t\tThread.sleep(3000);\n \t\tif(driver.getPageSource().contains(\"No movies where found.\")) {\n \t\t\t System.out.println(\"MovieNotFound:done\");\n \t\t\t }\n \t\t\t else {\n \t\t\t\t System.out.println(\"MovieNotFound:fail\");\n \t\t\t }\n \t\n \t\tThread.sleep(5000);\n \t\t\n \t\t\n \t}\n", "path": "src/test/java/zolota/Poisk.java", "repo name": "zolotarevskaya/homework"}
{"repo_name": "testCaptureTutorial13_467", "method name": "test Capture Tutorial13", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString url = \"conts/web/view/tutorial/interacting-with-controllers\";\n \t\tdriver.get(url);\n \n \t\t// 画面キャプチャ\n \t\tassertionView.assertView(\"tutorial13\", null, HIDE_ELEMENTS);\n \t}\n", "path": "hifive-test-library-sample/src/main/java/com/htmlhifive/testlib/sample/MrtSampleTest.java", "repo name": "3bch/hifive-test-library"}
{"repo_name": "testCaptureTutorialTop_468", "method name": "test Capture Tutorial Top", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString url = \"conts/web/view/tutorial/menu\";\n \t\tdriver.get(url);\n \n \t\tMrtWebElement e = (MrtWebElement) driver.findElement(By.cssSelector(\".wikimodel-freestanding\"));\n \n \t\tJavascriptExecutor jse = (JavascriptExecutor) driver;\n \t\tjse.executeScript(\"arguments[0].width=arguments[1]\", e, e.getRect().getWidth());\n \t\tjse.executeScript(\"arguments[0].height=arguments[1]\", e, e.getRect().getHeight());\n \t\tjse.executeScript(\"arguments[0].src=''\", e);\n \n \t\t// 画面キャプチャ\n \t\tassertionView.assertView(\"tutorial13\", null, HIDE_ELEMENTS);\n \t}\n", "path": "hifive-test-library-sample/src/main/java/com/htmlhifive/testlib/sample/MrtSampleTest.java", "repo name": "3bch/hifive-test-library"}
{"repo_name": "testAddAndUpdateIndex_469", "method name": "test Add And Update Index", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception{\n         driver.get(baseUrl + \"/admin/clear-index\");\n \n         // add a document\n         StringBuffer sb = new StringBuffer(\"<pmdocument><submissions>\");\n         sb.append(TestUtils.getTestSubmission(0));\n         sb.append(\"</submissions></pmdocument>\");\n         String sourceLocation = BSInterfaceTestApplication.getInstance().getPreferences().getString(\"bs.studies.source-location\");\n         File file = new File(sourceLocation, \"temp-test-study.xml\");\n         FileUtils.writeStringToFile(file, sb.toString());\n         driver.get(baseUrl + \"/admin/reload-xml/temp-test-study.xml\");\n         file.delete();\n \n         driver.get(baseUrl + \"/studies\");\n         assertEquals(\"1 result\", driver.findElements(By.cssSelector(\".ae-stats\")).get(0).getText());\n \n         file = new File(sourceLocation, \"temp-test-study.xml\");\n         FileUtils.writeStringToFile(file, StringUtils.replaceOnce(sb.toString(), \"<value>Test Document 0</value>\", \"<value>Updated Test Document 0</value>\"));\n         driver.get(baseUrl + \"/admin/reload-xml/temp-test-study.xml\");\n         file.delete();\n         driver.get(baseUrl + \"/studies/TEST-0\");\n         assertEquals(\"Updated Test Document 0\",driver.findElement(By.cssSelector(\"#ae-detail-title\")).getText());\n         driver.get(baseUrl + \"/admin/clear-index\");\n         driver.get(baseUrl + \"/admin/reload-xml/\");\n     }\n", "path": "webapp/src/test/java/uk/ac/ebi/biostudies/test/integration/IndexTest.java", "repo name": "EBIBioStudies/FrontEndUI"}
{"repo_name": "testDeleteDocument_470", "method name": "test Delete Document", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception{\n         driver.get(baseUrl + \"/admin/clear-index\");\n \n         // add a document\n         StringBuffer sb = new StringBuffer(\"<pmdocument><submissions>\");\n         sb.append(TestUtils.getTestSubmission(0));\n         sb.append(\"</submissions></pmdocument>\");\n         String sourceLocation = BSInterfaceTestApplication.getInstance().getPreferences().getString(\"bs.studies.source-location\");\n         File file = new File(sourceLocation, \"temp-test-study.xml\");\n         FileUtils.writeStringToFile(file, sb.toString());\n         driver.get(baseUrl + \"/admin/reload-xml/temp-test-study.xml\");\n         file.delete();\n \n         driver.get(baseUrl + \"/admin/delete/TEST-0\");\n         driver.get(baseUrl + \"/studies\");\n         assertEquals(\"We’re sorry that we couldn’t find any matching studies\", driver.findElement(By.cssSelector(\"h2.alert\")).getText());\n \n         driver.get(baseUrl + \"/admin/clear-index\");\n         driver.get(baseUrl + \"/admin/reload-xml/\");\n     }\n", "path": "webapp/src/test/java/uk/ac/ebi/biostudies/test/integration/IndexTest.java", "repo name": "EBIBioStudies/FrontEndUI"}
{"repo_name": "testFileFilter_471", "method name": "test File Filter", "comments": [" Not working with HtmlUnitDriver", "Test"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"/studies/\");\n         new Select(driver.findElement(By.id(\"studies-browse-sorter\"))).selectByVisibleText(\"Files\");\n         driver.findElement(By.cssSelector(\".browse-study-title a\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 5);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#file-list_filter input\")));\n         driver.findElement(By.cssSelector(\"#file-list_filter input\")).click();\n         driver.findElement(By.cssSelector(\"#file-list_filter input\")).sendKeys(\"pdf\");\n         assertEquals(\"Showing 1 to 4 of 4 entries (filtered from 35 total entries)\",\n                 driver.findElement(By.cssSelector(\"#file-list_info\")).getText());\n     }\n", "path": "webapp/src/test/java/uk/ac/ebi/biostudies/test/integration/DetailTest.java", "repo name": "EBIBioStudies/FrontEndUI"}
{"repo_name": "testPageStats_472", "method name": "test Page Stats", "comments": ["Test"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"/studies\");\n         String pages = driver.findElement(By.cssSelector(\".ae-stats\")).getText();\n         assertTrue(pages.startsWith(\"Showing 1\"));\n     }\n", "path": "webapp/src/test/java/uk/ac/ebi/biostudies/test/integration/SearchTest.java", "repo name": "EBIBioStudies/FrontEndUI"}
{"repo_name": "testAutoComplete_473", "method name": "test Auto Complete", "comments": [" Does not work with <input type=\"search\"...", "Test"], "url": true, "content": "    public void function() throws Exception{\n         driver.get(baseUrl + \"/studies/\");\n         WebElement searchBox = driver.findElement (By.id(\"local-searchbox\"));\n         searchBox.click();\n         searchBox.sendKeys(\"dna\");\n         WebDriverWait wait = new WebDriverWait(driver, 5);\n         wait.until(ExpectedConditions.visibilityOfElementLocated (By.cssSelector(\".ac_inner\")));\n         List<WebElement> we = driver.findElements(By.cssSelector(\".ac_inner li\"));\n         assertTrue(we.get(3).getText().startsWith(\"DNA\"));\n \n     }*/\n", "path": "webapp/src/test/java/uk/ac/ebi/biostudies/test/integration/SearchTest.java", "repo name": "EBIBioStudies/FrontEndUI"}
{"repo_name": "testClearIndex_474", "method name": "test Clear Index", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/admin/clear-index\");\n         driver.get(baseUrl + \"/studies/\");\n         WebDriverWait wait = new WebDriverWait(driver, 5);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"h2.alert\")));\n         driver.get(baseUrl + \"/admin/reload-xml/\");\n         assertTrue(true);\n     }\n", "path": "webapp/src/test/java/uk/ac/ebi/biostudies/test/integration/SearchTest.java", "repo name": "EBIBioStudies/FrontEndUI"}
{"repo_name": "testLargeIndex_475", "method name": "test Large Index", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception{\n         int totalDocs = 100;\n         driver.get(baseUrl + \"/admin/clear-index\");\n         StringBuffer sb = new StringBuffer(\"<pmdocument><submissions>\");\n         for (int doc = 1; doc <= totalDocs; doc++) {\n             sb.append(TestUtils.getTestSubmission(doc));\n         }\n         sb.append(\"</submissions></pmdocument>\");\n         String sourceLocation = BSInterfaceTestApplication.getInstance().getPreferences().getString(\"bs.studies.source-location\");\n         File file = new File(sourceLocation, \"temp-test-study.xml\");\n         FileUtils.writeStringToFile(file, sb.toString());\n         driver.get(baseUrl + \"/admin/reload-xml/temp-test-study.xml\");\n         file.delete();\n         driver.get(baseUrl + \"/studies/\");\n         String pages = driver.findElement(By.cssSelector(\".ae-stats\")).getText();\n         assertTrue(pages.endsWith(\"Showing 1 - 25 of \" + (totalDocs) +\" results\"));\n         driver.get(baseUrl + \"/admin/clear-index\");\n         driver.get(baseUrl + \"/admin/reload-xml\");\n     }\n", "path": "webapp/src/test/java/uk/ac/ebi/biostudies/test/integration/SearchTest.java", "repo name": "EBIBioStudies/FrontEndUI"}
{"repo_name": "the_header_should_read_476", "method name": "the header should read", "comments": ["Then(\"^the header should read \\\"([^\\\"]*)\\\"$\")"], "url": true, "content": "    public void function(String text) throws Throwable {\n         String url = baseUrl + page + \"?\" + queryString;\n         for (WebDriver driver : driversManager.getDrivers()) {\n             driver.get(url);\n             Assert.assertEquals(text, driver.findElement(By.cssSelector(\"h1\")).getText());\n         }\n \n     }\n", "path": "integration/src/test/java/nl/hsleiden/cucumber/Glue.java", "repo name": "HogeschoolLeiden/website"}
{"repo_name": "testCreateReviewWithAbapBackend_477", "method name": "test Create Review With Abap Backend", "comments": ["Test"], "url": true, "content": "\tpublic void function() {\n \t\tSystem.out.println(\"Opening page \" + serverUrl + applicationPath);\n \t\tdriver.get(serverUrl + applicationPath);\n \t\t\n \t\ttry {\n \t\t\tThread.sleep(5000);\n \t\t} catch (InterruptedException e) {\n \t\t\te.printStackTrace();\n \t\t}\n \t\t\n \t\tCustomerReviewsPage reviewsPage = CustomerReviewsPage.create(driver);\n \n \t\t// ABAP backend system (default as defined in config.js)\n \t\tSettingsPage abapsettingsview = reviewsPage.navigateToSettings();\n \t\tabapsettingsview.switchToAbapBackend();\n \t\tabapsettingsview.pressOk();\n \t\tabapsettingsview.confirmRefresh();\n \n \t\ttry {\n \t\t\tThread.sleep(5000);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \n \t\treviewsPage.waitForPageAfterRefresh();\n \n \t\tassertEquals(\"Default category does not match\", \"All Categories\",\n \t\t\t\treviewsPage.getCategory());\n \n \t\ttry {\n \t\t\tThread.sleep(400);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \t\t\n \t\tassertEquals(\"Default product does not match\",\n \t\t\t\t\"10\\\" Portable DVD player\", reviewsPage.getProduct());\n \t\tassertFalse(\"First reviewer name is empty\", reviewsPage\n \t\t\t\t.getFirstReviewer().isEmpty());\n \t\tassertFalse(\"First review comment is empty\", reviewsPage\n \t\t\t\t.getFirstReviewComment().isEmpty());\n \n \t\treviewsPage.selectCategory(\"Speakers\");\n \n \t\ttry {\n \t\t\tThread.sleep(4000);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \t\t\n \t\treviewsPage.selectProduct(\"Sound Booster\");\n \n \t\ttry {\n \t\t\tThread.sleep(1000);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \t\t\n \t\tCustomerReviewCreationPage reviewCreationPage = reviewsPage\n \t\t\t\t.writeCustomerReview();\n \n \t\tWebElement myDynamicElement = (new WebDriverWait(driver, 20))\n \t\t\t\t.until(ExpectedConditions.presenceOfElementLocated(By\n \t\t\t\t\t\t.id(\"review-comment-text-area-id\")));\n \n \t\tString reviewId = UUID.randomUUID().toString();\n \t\treviewCreationPage.writeReviewComments(\"Good performance (\" + reviewId\n \t\t\t\t+ \")\");\n \t\treviewCreationPage.setReviewRating(3);\n \t\treviewCreationPage.setFirstName(\"James\");\n \t\treviewCreationPage.setLastName(\"Field\");\n \n \t\treviewsPage = reviewCreationPage.submitAndConfirmReview();\n \n \t\tassertEquals(3, reviewsPage.getFirstReviewRating());\n \t\tassertTrue(reviewsPage.getFirstReviewComment().contains(reviewId));\n \t\tassertEquals(\"James Field\", reviewsPage.getFirstReviewer());\n \t}\n", "path": "espm-ui-reviews-web/src/test/java/com/sap/espm/ui/reviews/web/CustomerReviewsIT.java", "repo name": "SAP/cloud-espm-scenarios"}
{"repo_name": "testCreateReviewWithCloudBackend_478", "method name": "test Create Review With Cloud Backend", "comments": [" TODO: Enable as soon as ESPM OData service bug for reviews case is fixed", " @Test"], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(serverUrl + applicationPath);\n \t\tCustomerReviewsPage reviewsPage = CustomerReviewsPage.create(driver);\n \n \t\t// HANA Cloud remote\n \t\tSettingsPage cloudsettingsview = reviewsPage.navigateToSettings();\n \t\tcloudsettingsview.switchToHanaCloudRemote();\n \t\tcloudsettingsview.pressOk();\n \t\tcloudsettingsview.confirmRefresh();\n \n \t\ttry {\n \t\t\tThread.sleep(5000);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \n \t\treviewsPage.waitForPageAfterRefresh();\n \n \t\tassertEquals(\"Default category does not match\", \"All Categories\",\n \t\t\t\treviewsPage.getCategory());\n \n \t\ttry {\n \t\t\tThread.sleep(400);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \t\tassertEquals(\"Default product does not match\",\n \t\t\t\t\"10\\\" Portable DVD player\", reviewsPage.getProduct());\n \t\tassertFalse(\"First reviewer name is empty\", reviewsPage\n \t\t\t\t.getFirstReviewer().isEmpty());\n \t\tassertFalse(\"First review comment is empty\", reviewsPage\n \t\t\t\t.getFirstReviewComment().isEmpty());\n \n \t\treviewsPage.selectCategory(\"Speakers\");\n \n \t\ttry {\n \t\t\tThread.sleep(400);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \t\treviewsPage.selectProduct(\"Sound Booster\");\n \n \t\ttry {\n \t\t\tThread.sleep(400);\n \t\t} catch (InterruptedException e) {\n \t\t\t// TODO Auto-generated catch block\n \t\t\te.printStackTrace();\n \t\t}\n \n \t\tCustomerReviewCreationPage reviewCreationPage = reviewsPage\n \t\t\t\t.writeCustomerReview();\n \n \t\tWebElement myDynamicElement = (new WebDriverWait(driver, 20))\n \t\t\t\t.until(ExpectedConditions.presenceOfElementLocated(By\n \t\t\t\t\t\t.id(\"review-comment-text-area-id\")));\n \n \t\tString reviewId = UUID.randomUUID().toString();\n \t\treviewCreationPage.writeReviewComments(\"Good performance (\" + reviewId\n \t\t\t\t+ \")\");\n \t\treviewCreationPage.setReviewRating(3);\n \t\treviewCreationPage.setFirstName(\"James\");\n \t\treviewCreationPage.setLastName(\"Field\");\n \n \t\treviewsPage = reviewCreationPage.submitAndConfirmReview();\n \n \t\tassertEquals(3, reviewsPage.getFirstReviewRating());\n \t\tassertTrue(reviewsPage.getFirstReviewComment().contains(reviewId));\n \t\tassertEquals(\"James Field\", reviewsPage.getFirstReviewer());\n \t}\n", "path": "espm-ui-reviews-web/src/test/java/com/sap/espm/ui/reviews/web/CustomerReviewsIT.java", "repo name": "SAP/cloud-espm-scenarios"}
{"repo_name": "inspectAllPages_479", "method name": "inspect All Pages", "comments": [], "url": true, "content": "    private void function(){\n         urlQueue.push(\"\");\n         urlQueue.poll();\n         inspectPage();\n         String nextPath = urlQueue.poll();\n         while(nextPath != null){\n             driver.get(baseUrl + nextPath);\n             inspectPage();\n             nextPath = urlQueue.poll();\n         }\n     }\n", "path": "project/PageInspector/src/com/sublerefal/pageinspector/selenium/core/SeleniumInspector.java", "repo name": "SublerEfal/PageInspector"}
{"repo_name": "testAddFilm_480", "method name": "test Add Film", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"My First Film\");\n     driver.findElement(By.name(\"year\")).clear();\n     driver.findElement(By.name(\"year\")).sendKeys(\"2014\");\n     driver.findElement(By.name(\"duration\")).clear();\n     driver.findElement(By.name(\"duration\")).sendKeys(\"120\");\n     driver.findElement(By.name(\"rating\")).clear();\n     driver.findElement(By.name(\"rating\")).sendKeys(\"120\");\n     driver.findElement(By.id(\"own_no\")).click();\n     driver.findElement(By.id(\"seen_no\")).click();\n     driver.findElement(By.id(\"submit\")).click();\n   }\n", "path": "training/src/test/java/ru/st/selenium/AddFilm.java", "repo name": "Sultanova/selenium-start"}
{"repo_name": "testCorrectLogin_481", "method name": "test Correct Login", "comments": ["Test"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"login\");\n \n         driver.findElement(By.name(\"j_username\")).sendKeys(\"john\");\n         driver.findElement(By.name(\"j_password\")).sendKeys(\"welcome1\");\n         driver.findElement(By.tagName(\"form\")).submit();\n \n         String currentUrl = driver.getCurrentUrl();\n         assertEquals(baseUrl, currentUrl);\n     }\n", "path": "jetty-seed/src/it/java/org/arp/servlet/LoginServletIT.java", "repo name": "aleroddepaz/java-samples"}
{"repo_name": "testIncorrectLogin_482", "method name": "test Incorrect Login", "comments": ["Test"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"login\");\n \n         driver.findElement(By.name(\"j_username\")).sendKeys(\"john\");\n         driver.findElement(By.name(\"j_password\")).sendKeys(\"john\");\n         driver.findElement(By.tagName(\"form\")).submit();\n \n         int size = driver.findElements(By.id(\"login-error\")).size();\n         assertEquals(1, size);\n     }\n", "path": "jetty-seed/src/it/java/org/arp/servlet/LoginServletIT.java", "repo name": "aleroddepaz/java-samples"}
{"repo_name": "пользователь_находится_на_странице_483", "method name": "пользователь находится на странице", "comments": ["Дано(\"^пользователь находится на странице \\\"(.*?)\\\" \\\"(.*?)\\\"$\")"], "url": true, "content": "    public void function(String title, String url) throws Throwable {\n         Init.getDriver().navigate().to(url);\n         Init.getPage(title);\n \n     }\n", "path": "src/test/java/com/mycompany/selenium/factory/steps/StepDefs.java", "repo name": "clicman/selenium-factory"}
{"repo_name": "testShouldNotBeAbleToSetDomainToSomethingThatIsUnrelatedToTheCurrentDomain_484", "method name": "test Should Not Be Able To Set Domain To Something That Is Unrelated To The Current Domain", "comments": ["Ignore(SELENESE)"], "url": true, "content": "  public void function() {\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\");\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"simpleTest.html\");\n     driver.get(url);\n \n     Cookie cookie = options.getCookieNamed(\"fish\");\n     assertNull(String.valueOf(cookie), cookie);\n   }\n", "path": "common/test/java/org/openqa/selenium/CookieImplementationTest.java", "repo name": "jijeshmohan/webdriver-rb"}
{"repo_name": "testGetCookieDoesNotRetriveBeyondCurrentDomain_485", "method name": "test Get Cookie Does Not Retrive Beyond Current Domain", "comments": ["Ignore(SELENESE)"], "url": true, "content": "  public void function() {\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\");\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"\");\n     driver.get(url);\n \n     Set<Cookie> cookies = options.getCookies();\n     assertFalse(cookies.contains(cookie1));\n   }\n", "path": "common/test/java/org/openqa/selenium/CookieImplementationTest.java", "repo name": "jijeshmohan/webdriver-rb"}
{"repo_name": "testCookieIntegrity_486", "method name": "test Cookie Integrity", "comments": ["Ignore(SELENESE)"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"animals\");\n \n     driver.get(url);\n     driver.manage().deleteAllCookies();\n \n     long time = System.currentTimeMillis() + (60 * 60 * 24);\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\", \"/common/animals\", new Date(time));\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     Set<Cookie> cookies = options.getCookies();\n     Iterator<Cookie> iter = cookies.iterator();\n     Cookie retrievedCookie = null;\n     while (iter.hasNext()) {\n       Cookie temp = iter.next();\n \n       if (cookie1.equals(temp)) {\n         retrievedCookie = temp;\n         break;\n       }\n     }\n \n     assertNotNull(retrievedCookie);\n     //Cookie.equals only compares name, domain and path\n     assertEquals(cookie1, retrievedCookie);\n   }\n", "path": "common/test/java/org/openqa/selenium/CookieImplementationTest.java", "repo name": "jijeshmohan/webdriver-rb"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_487", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": ["Ignore({FIREFOX, IE, CHROME, SELENESE})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     driver.get(url);\n \n     // This should work\n     assertThat(driver.getTitle(), equalTo(\"Hello WebDriver\"));\n   }\n", "path": "common/test/java/org/openqa/selenium/PageLoadingTest.java", "repo name": "jijeshmohan/webdriver-rb"}
{"repo_name": "openMainPage_488", "method name": "open Main Page", "comments": [], "url": true, "content": "\t  public void function() {\n \t    driver.get(baseUrl);\n \t  }\n", "path": "demos.telerik.com/src/com/example/fw/WebMailManager.java", "repo name": "makarkina/JavaForTesters"}
{"repo_name": "openLoginPage_489", "method name": "open Login Page", "comments": ["Override"], "url": true, "content": "\t\tpublic void function(String url) {\n \t\t\tdriver.get(url);\n \t\t}\n", "path": "ride-exchange-tests-logic/src/com/tests/logic1/NavigationHelper1.java", "repo name": "makarkina/JavaForTesters"}
{"repo_name": "openRelativeUrl_490", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "\t\tpublic void function(String url) {\n \t\t    driver.get(url);\n \t\t}\n", "path": "ride-exchange-tests-logic/src/com/tests/logic1/NavigationHelper1.java", "repo name": "makarkina/JavaForTesters"}
{"repo_name": "openMainPage_491", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "natgaleta/se_java_galeta"}
{"repo_name": "openRelativeUrl_492", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "natgaleta/se_java_galeta"}
{"repo_name": "LoginUkrNet_493", "method name": "Login Ukr Net", "comments": [" ============= UKr.net ==================="], "url": true, "content": "\tpublic void function(){\n \t\t\n \t\tdriver.get(baseUrlUkrNet);\n \t\tdriver.findElement(By.id(\"login\")).sendKeys(\"ate569@ukr.net\");\n \t\tdriver.findElement(By.id(\"password\")).sendKeys(\"US!pf.avg\");\n \t\tdriver.findElement(By.xpath(\".//*[@id='login-form']/div[3]/button\")).click();\n \t}\n", "path": "src/framework/Driver.java", "repo name": "observer75/ATE-Framework"}
{"repo_name": "openMainPage_494", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/php4dvd/applogic2/NavigationHelper2.java", "repo name": "renzograph/selenium_java"}
{"repo_name": "openRelativeUrl_495", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/php4dvd/applogic2/NavigationHelper2.java", "repo name": "renzograph/selenium_java"}
{"repo_name": "goToUrl_496", "method name": "go To Url", "comments": [" @param url", "            The URL.", "Override"], "url": true, "content": "\tpublic void function(URL url) {\n \t\ttry {\n \t\t\tbrowser.navigate().to(url);\n \t\t\tThread.sleep(this.crawlWaitReload);\n \t\t\thandlePopups();\n \t\t} catch (WebDriverException e) {\n \t\t\tthrowIfConnectionException(e);\n \t\t\treturn;\n \t\t} catch (InterruptedException e) {\n \t\t\tLOGGER.error(\"goToUrl got interrupted while waiting for the page to be loaded\", e);\n \t\t\treturn;\n \t\t}\n \t}\n", "path": "core/src/main/java/com/crawljax/browser/WebDriverBackedEmbeddedBrowser.java", "repo name": "saltlab/crawljax-graphdb"}
{"repo_name": "testAddFilm_497", "method name": "test Add Film", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \tdriver.findElement(By.id(\"username\")).clear();\n \tdriver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"password\")).clear();\n \tdriver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"submit\")).click();\t   \n \t  \n \t  \n     driver.findElement(By.xpath(\"//*[@id='content']/section/nav/ul/li[1]/div//img\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (isElementPresent(By.xpath(\"//*[@id='updateform']/table/tbody/tr[2]/td[2]/input\"))) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"AAA\");\n     driver.findElement(By.name(\"aka\")).clear();\n     driver.findElement(By.name(\"aka\")).sendKeys(\"BBB\");\n     driver.findElement(By.name(\"year\")).clear();\n     driver.findElement(By.name(\"year\")).sendKeys(\"2000\");\n     driver.findElement(By.name(\"duration\")).clear();\n     driver.findElement(By.name(\"duration\")).sendKeys(\"120\");\n     driver.findElement(By.name(\"rating\")).clear();\n     driver.findElement(By.name(\"rating\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"own_no\")).click();\n     driver.findElement(By.id(\"seen_no\")).click();\n     driver.findElement(By.id(\"loaned_yes\")).click();\n     driver.findElement(By.name(\"loanname\")).clear();\n     driver.findElement(By.name(\"loanname\")).sendKeys(\"XXX\");\n     driver.findElement(By.name(\"notes\")).clear();\n     driver.findElement(By.name(\"notes\")).sendKeys(\"Very good!\");\n     driver.findElement(By.name(\"taglines\")).clear();\n     driver.findElement(By.name(\"taglines\")).sendKeys(\"AAA\");\n     driver.findElement(By.name(\"plotoutline\")).clear();\n     driver.findElement(By.name(\"plotoutline\")).sendKeys(\"AAA\");\n     driver.findElement(By.name(\"plots\")).clear();\n     driver.findElement(By.name(\"plots\")).sendKeys(\"AAA\");\n     driver.findElement(By.id(\"text_languages_0\")).clear();\n     driver.findElement(By.id(\"text_languages_0\")).sendKeys(\"Russian\");\n     driver.findElement(By.name(\"subtitles\")).clear();\n     driver.findElement(By.name(\"subtitles\")).sendKeys(\"No\");\n     driver.findElement(By.name(\"audio\")).clear();\n     driver.findElement(By.name(\"audio\")).sendKeys(\"MP3\");\n     driver.findElement(By.name(\"video\")).clear();\n     driver.findElement(By.name(\"video\")).sendKeys(\"MP4\");\n     driver.findElement(By.name(\"country\")).clear();\n     driver.findElement(By.name(\"country\")).sendKeys(\"Russia\");\n     driver.findElement(By.name(\"genres\")).clear();\n     driver.findElement(By.name(\"genres\")).sendKeys(\"AAA\");\n     driver.findElement(By.name(\"director\")).clear();\n     driver.findElement(By.name(\"director\")).sendKeys(\"XYZ\");\n     driver.findElement(By.name(\"writer\")).clear();\n     driver.findElement(By.name(\"writer\")).sendKeys(\"QWE\");\n     driver.findElement(By.name(\"producer\")).clear();\n     driver.findElement(By.name(\"producer\")).sendKeys(\"ASD\");\n     driver.findElement(By.name(\"music\")).clear();\n     driver.findElement(By.name(\"music\")).sendKeys(\"ZXC\");\n     driver.findElement(By.name(\"cast\")).clear();\n     driver.findElement(By.name(\"cast\")).sendKeys(\"RTY\");\n     driver.findElement(By.id(\"submit\")).click();\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (isElementPresent(By.xpath(\"//img[@alt='Remove']\"))) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.xpath(\"//img[@alt='Remove']\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to remove this[\\\\s\\\\S]$\"));\n   }\n", "path": "src/test/java/ru/st/selenium/AddFilmPositiveAndRemoveTest.java", "repo name": "Avk05/Training-Se-Java-18"}
{"repo_name": "testFilmSearch_498", "method name": "test Film Search", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\"); \n \tdriver.findElement(By.id(\"username\")).clear();\n \tdriver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"password\")).clear();\n \tdriver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"submit\")).click();\n \tdriver.findElement(By.id(\"q\")).clear();\n     driver.findElement(By.id(\"q\")).sendKeys(\"AAA\");\n     try {\n       assertTrue(isElementPresent(By.cssSelector(\"img[alt=\\\"AAA\\\"]\")));\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.id(\"q\")).clear();\n     driver.findElement(By.id(\"q\")).sendKeys(\"CCC\");\n     try {\n       assertTrue(isElementPresent(By.xpath(\"//*[@id='results']/div[1]\")));\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "src/test/java/ru/st/selenium/FilmSearchTest.java", "repo name": "Avk05/Training-Se-Java-18"}
{"repo_name": "goToTargetHost_499", "method name": "go To Target Host", "comments": ["Override", "Monitor", "RetryFailure(retryCount=3)"], "url": true, "content": "    public WebDriverController function(String url) {\n         webDriver().get(url);\n         return this;\n     }\n", "path": "src/main/java/com/automation/seletest/core/selenium/webAPI/WebDriverController.java", "repo name": "GiannisPapadakis/seletest"}
{"repo_name": "testNotificacaoObito_500", "method name": "test Notificacao Obito", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/sincap/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"111.111.111-11\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"botaoLogin\")).click();\n     driver.findElement(By.xpath(\"//ul[@id='dashboard-menu']/li[2]/a/span\")).click();\n     driver.findElement(By.id(\"obito-tipoObito\")).click();\n     new Select(driver.findElement(By.id(\"obito-tipoObito\"))).selectByVisibleText(\"PCR\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"PCR\\\"]\")).click();\n     new Select(driver.findElement(By.id(\"obito-paciente-documentoSocial-tipoDocumentoComFoto\"))).selectByVisibleText(\"RG\");\n     driver.findElement(By.id(\"obito-paciente-documentoSocial-documento\")).clear();\n     driver.findElement(By.id(\"obito-paciente-documentoSocial-documento\")).sendKeys(\"3546545333\");\n     driver.findElement(By.id(\"obito-paciente-nome\")).clear();\n     driver.findElement(By.id(\"obito-paciente-nome\")).sendKeys(\"Notificacao de obito\");\n     driver.findElement(By.id(\"obito-paciente-dataNascimento\")).clear();\n     driver.findElement(By.id(\"obito-paciente-dataNascimento\")).sendKeys(\"12/04/1985\");\n     driver.findElement(By.id(\"obito-paciente-dataInternacao\")).clear();\n     driver.findElement(By.id(\"obito-paciente-dataInternacao\")).sendKeys(\"10/08/2015\");\n     driver.findElement(By.cssSelector(\"span.checked\")).click();\n     driver.findElement(By.id(\"obito-paciente-sexo:0\")).click();\n     driver.findElement(By.id(\"obito-paciente-nomeMae\")).clear();\n     driver.findElement(By.id(\"obito-paciente-nomeMae\")).sendKeys(\"Mae do obito\");\n     driver.findElement(By.id(\"obito-paciente-numeroSUS\")).clear();\n     driver.findElement(By.id(\"obito-paciente-numeroSUS\")).sendKeys(\"156234434345\");\n     driver.findElement(By.id(\"obito-paciente-numeroProntuario\")).clear();\n     driver.findElement(By.id(\"obito-paciente-numeroProntuario\")).sendKeys(\"2564554643\");\n     driver.findElement(By.id(\"descricaoComentario\")).clear();\n     driver.findElement(By.id(\"descricaoComentario\")).sendKeys(\"comentario 1\");\n     driver.findElement(By.id(\"btn-next\")).click();\n     driver.findElement(By.id(\"obito-dataObito\")).clear();\n     driver.findElement(By.id(\"obito-dataObito\")).sendKeys(\"13/08/2015\");\n     driver.findElement(By.id(\"horarioObito\")).clear();\n     driver.findElement(By.id(\"horarioObito\")).sendKeys(\"10:21\");\n     new Select(driver.findElement(By.id(\"obito-setor\"))).selectByVisibleText(\"CIRURGIA GERAL\");\n     new Select(driver.findElement(By.id(\"obito-corpoEncaminhamento\"))).selectByVisibleText(\"IML\");\n     driver.findElement(By.xpath(\"//div[@id='uniform-obito-aptoDoacao:0']/span\")).click();\n     driver.findElement(By.id(\"obito-aptoDoacao:0\")).click();\n     driver.findElement(By.id(\"obito-primeiraCausaMortis\")).clear();\n     driver.findElement(By.id(\"obito-primeiraCausaMortis\")).sendKeys(\"causa 1\");\n     driver.findElement(By.id(\"obito-segundaCausaMortis\")).clear();\n     driver.findElement(By.id(\"obito-segundaCausaMortis\")).sendKeys(\"causa 2\");\n     driver.findElement(By.id(\"obito-terceiraCausaMortis\")).clear();\n     driver.findElement(By.id(\"obito-terceiraCausaMortis\")).sendKeys(\"causa 3\");\n     driver.findElement(By.id(\"obito-quartaCausaMortis\")).clear();\n     driver.findElement(By.id(\"obito-quartaCausaMortis\")).sendKeys(\"causa 4\");\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n   }\n", "path": "src/test/java/br/ifes/leds/sincap/web/test/NotificacaoObito.java", "repo name": "LEDS/sincap-interface-web"}
{"repo_name": "testSigninNotificador_501", "method name": "test Signin Notificador", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/sincap/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"111.111.111-11\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"botaoLogin\")).click();\n   }\n", "path": "src/test/java/br/ifes/leds/sincap/web/test/SigninNotificador.java", "repo name": "LEDS/sincap-interface-web"}
{"repo_name": "testCadastroAnalista_502", "method name": "test Cadastro Analista", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/sincap/\");\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(\"333.333.333-33\");\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(\"abc123\");\n         driver.findElement(By.id(\"botaoLogin\")).click();\n \n         driver.findElement(By.cssSelector(\"li.settings.hidden-phone > a\")).click();\n         driver.findElement(By.xpath(\"//ul[@id='dashboard-menu']/li[2]/a/span\")).click();\n         driver.findElement(By.cssSelector(\"h4.aba-centralizada\")).click();\n         driver.findElement(By.xpath(\"//div[@id='analista-table_wrapper']/div/div/div[3]/a\")).click();\n \n \n //        driver.findElement(By.cssSelector(\"li.settings.hidden-phone > a\")).click();\n //        driver.findElement(By.xpath(\"//ul[@id='dashboard-menu']/li[2]/a/span\")).click();\n //        driver.findElement(By.xpath(\"//div[@id='analista-table_wrapper']/div/div/div[3]/a/i\")).click();\n \n //        driver.findElement(By.cssSelector(\"i.icon-cog\")).click();\n //        driver.findElement(By.xpath(\"//ul[@id='dashboard-menu']/li[2]/a/span\")).click();\n //        driver.findElement(By.xpath(\"//div[@id='analista-table_wrapper']/div/div/div[3]/a\")).click();\n \n         driver.findElement(By.id(\"nome\")).clear();\n         driver.findElement(By.id(\"nome\")).sendKeys(analista.getNome());\n         driver.findElement(By.id(\"senha\")).clear();\n         driver.findElement(By.id(\"senha\")).sendKeys(\"abc123\");\n         driver.findElement(By.id(\"confirmar-senha\")).clear();\n         driver.findElement(By.id(\"confirmar-senha\")).sendKeys(\"abc123\");\n         driver.findElement(By.id(\"cpf\")).clear();\n         driver.findElement(By.id(\"cpf\")).sendKeys(analista.getCpf());\n         driver.findElement(By.id(\"documentoSocial-documento\")).clear();\n         driver.findElement(By.id(\"documentoSocial-documento\")).sendKeys(analista.getDocumentoSocial().getDocumento());\n         new Select(driver.findElement(By.id(\"documentoSocial-tipoDocumentoComFoto\"))).selectByVisibleText(analista.getDocumentoSocial().getTipoDocumentoComFoto().name());\n         driver.findElement(By.id(\"email\")).clear();\n         driver.findElement(By.id(\"email\")).sendKeys(analista.getEmail());\n         new Select(driver.findElement(By.name(\"admin\"))).selectByVisibleText(\"Não\");\n         new Select(driver.findElement(By.id(\"endereco-estado-id\"))).selectByVisibleText(analista.getEndereco().getEstado().getNome());\n         new Select(driver.findElement(By.id(\"endereco-cidade-id\"))).selectByVisibleText(analista.getEndereco().getCidade().getNome());\n         new Select(driver.findElement(By.id(\"endereco-bairro-id\"))).selectByVisibleText(analista.getEndereco().getBairro().getNome());\n         driver.findElement(By.id(\"endereco-logradouro\")).clear();\n         driver.findElement(By.id(\"endereco-logradouro\")).sendKeys(analista.getEndereco().getLogradouro());\n         driver.findElement(By.id(\"endereco-numero\")).clear();\n         driver.findElement(By.id(\"endereco-numero\")).sendKeys(analista.getEndereco().getNumero());\n         driver.findElement(By.id(\"endereco-complemento\")).clear();\n         driver.findElement(By.id(\"endereco-complemento\")).sendKeys(analista.getEndereco().getComplemento());\n         driver.findElement(By.id(\"endereco-cep\")).clear();\n         driver.findElement(By.id(\"endereco-cep\")).sendKeys(analista.getEndereco().getCep());\n         driver.findElement(By.id(\"telefone-numero\")).sendKeys(analista.getTelefone().getNumero());\n         driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     }\n", "path": "src/test/java/br/ifes/leds/sincap/web/test/CadastroAnalista.java", "repo name": "LEDS/sincap-interface-web"}
{"repo_name": "testSigninNotificador_503", "method name": "test Signin Notificador", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/sincap/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"222.222.222-22\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"botaoLogin\")).click();\n   }\n", "path": "src/test/java/br/ifes/leds/sincap/web/test/SigninCaptador.java", "repo name": "LEDS/sincap-interface-web"}
{"repo_name": "testCadastroCaptador_504", "method name": "test Cadastro Captador", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/sincap/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"555.555.555-55\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"botaoLogin\")).click();\n     driver.findElement(By.cssSelector(\"li.settings.hidden-phone > a\")).click();\n     driver.findElement(By.xpath(\"//ul[@id='dashboard-menu']/li[2]/a/span\")).click();\n     driver.findElement(By.xpath(\"//ul[@id='dashboard-menu']/li[2]/a/span\")).click();\n     driver.findElement(By.xpath(\"//ul[@id='tabs']/li[3]/a/h4\")).click();\n     driver.findElement(By.xpath(\"//div[@id='captador-table_wrapper']/div/div/div[3]/a/i\")).click();\n     driver.findElement(By.id(\"nome\")).clear();\n     driver.findElement(By.id(\"nome\")).sendKeys(\"cadastro captador4\");\n     driver.findElement(By.id(\"senha\")).clear();\n     driver.findElement(By.id(\"senha\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"confirmar-senha\")).clear();\n     driver.findElement(By.id(\"confirmar-senha\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"cpf\")).clear();\n     driver.findElement(By.id(\"cpf\")).sendKeys(\"182.180.980-12\");\n     driver.findElement(By.id(\"documentoSocial-documento\")).clear();\n     driver.findElement(By.id(\"documentoSocial-documento\")).sendKeys(\"3248728342039\");\n     new Select(driver.findElement(By.id(\"documentoSocial-tipoDocumentoComFoto\"))).selectByVisibleText(\"RG\");\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"cadastro@captador.com\");\n     new Select(driver.findElement(By.id(\"endereco-estado-id\"))).selectByVisibleText(\"Espírito Santo\");\n     new Select(driver.findElement(By.id(\"endereco-cidade-id\"))).selectByVisibleText(\"Serra\");\n     new Select(driver.findElement(By.id(\"endereco-bairro-id\"))).selectByVisibleText(\"Chácara Parreiral\");\n     driver.findElement(By.id(\"endereco-logradouro\")).clear();\n     driver.findElement(By.id(\"endereco-logradouro\")).sendKeys(\"rua\");\n     driver.findElement(By.id(\"endereco-numero\")).clear();\n     driver.findElement(By.id(\"endereco-numero\")).sendKeys(\"84\");\n     driver.findElement(By.id(\"endereco-complemento\")).clear();\n     driver.findElement(By.id(\"endereco-complemento\")).sendKeys(\"casa\");\n     driver.findElement(By.id(\"endereco-cep\")).clear();\n     driver.findElement(By.id(\"endereco-cep\")).sendKeys(\"32498-20\");\n     driver.findElement(By.id(\"telefone-numero\")).sendKeys(\"(27)2717-8186\");\n     new Select(driver.findElement(By.id(\"bancoOlhos-id\"))).selectByVisibleText(\"BANCO DE OLHOS 1\");\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n   }\n", "path": "src/test/java/br/ifes/leds/sincap/web/test/CadastroCaptador.java", "repo name": "LEDS/sincap-interface-web"}
{"repo_name": "testCadastroSetor_505", "method name": "test Cadastro Setor", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/sincap/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"555.555.555-55\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"botaoLogin\")).click();\n     driver.findElement(By.cssSelector(\"i.icon-cog\")).click();\n     driver.findElement(By.xpath(\"//ul[@id='dashboard-menu']/li[3]/a/span\")).click();\n     driver.findElement(By.xpath(\"//button[@type='button']\")).click();\n     driver.findElement(By.id(\"nome\")).clear();\n     driver.findElement(By.id(\"nome\")).sendKeys(\"cadastro de setor\");\n     driver.findElement(By.cssSelector(\"button.btn-flat.default\")).click();\n   }\n", "path": "src/test/java/br/ifes/leds/sincap/web/test/CadastroSetor.java", "repo name": "LEDS/sincap-interface-web"}
{"repo_name": "testSigninNotificador_506", "method name": "test Signin Notificador", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/sincap/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"333.333.333-33\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"botaoLogin\")).click();\n   }\n", "path": "src/test/java/br/ifes/leds/sincap/web/test/SigninAnalista.java", "repo name": "LEDS/sincap-interface-web"}
{"repo_name": "testCadastroCausaNaoDoacao_507", "method name": "test Cadastro Causa Nao Doacao", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/sincap/\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"555.555.555-55\");\n     driver.findElement(By.id(\"botaoLogin\")).click();\n     driver.findElement(By.cssSelector(\"i.icon-cog\")).click();\n     driver.findElement(By.cssSelector(\"#dashboard-menu > li > a > span\")).click();\n     driver.findElement(By.xpath(\"//button[@type='button']\")).click();\n     driver.findElement(By.id(\"nome\")).clear();\n     driver.findElement(By.id(\"nome\")).sendKeys(\"causa de nao doacao\");\n     new Select(driver.findElement(By.id(\"tipoNaoDoacao\"))).selectByVisibleText(\"PROBLEMAS_LOGISTICOS\");\n     driver.findElement(By.cssSelector(\"button.btn-flat.default\")).click();\n   }\n", "path": "src/test/java/br/ifes/leds/sincap/web/test/CadastroCausaNaoDoacao.java", "repo name": "LEDS/sincap-interface-web"}
{"repo_name": "testCadastroHospital_508", "method name": "test Cadastro Hospital", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/sincap/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"555.555.555-55\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"abc123\");\n     driver.findElement(By.id(\"botaoLogin\")).click();\n     driver.findElement(By.cssSelector(\"i.icon-cog\")).click();\n     driver.findElement(By.xpath(\"//ul[@id='dashboard-menu']/li[4]/a/span\")).click();\n     driver.findElement(By.xpath(\"//div[@id='pad-wrapper']/div/div/a\")).click();\n     driver.findElement(By.id(\"nome\")).clear();\n     driver.findElement(By.id(\"nome\")).sendKeys(\"cadastro de hospital\");\n     driver.findElement(By.id(\"sigla\")).clear();\n     driver.findElement(By.id(\"sigla\")).sendKeys(\"cdh\");\n     driver.findElement(By.id(\"fantasia\")).clear();\n     driver.findElement(By.id(\"fantasia\")).sendKeys(\"hospital teste\");\n     driver.findElement(By.id(\"cnes\")).clear();\n     driver.findElement(By.id(\"cnes\")).sendKeys(\"564432\");\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"hospital@teste.com\");\n     new Select(driver.findElement(By.id(\"bancoOlhos-id\"))).selectByVisibleText(\"BANCO DE OLHOS 1\");\n     new Select(driver.findElement(By.id(\"endereco-estado-id\"))).selectByVisibleText(\"Espírito Santo\");\n     new Select(driver.findElement(By.id(\"endereco-cidade-id\"))).selectByVisibleText(\"Vitória\");\n     new Select(driver.findElement(By.id(\"endereco-bairro-id\"))).selectByVisibleText(\"República\");\n     driver.findElement(By.id(\"endereco-logradrouro\")).clear();\n     driver.findElement(By.id(\"endereco-logradrouro\")).sendKeys(\"rua\");\n     driver.findElement(By.id(\"endereco-numero\")).clear();\n     driver.findElement(By.id(\"endereco-numero\")).sendKeys(\"45\");\n     driver.findElement(By.id(\"endereco-complemento\")).clear();\n     driver.findElement(By.id(\"endereco-complemento\")).sendKeys(\"complemento\");\n     driver.findElement(By.id(\"endereco-cep\")).clear();\n     driver.findElement(By.id(\"endereco-cep\")).sendKeys(\"38198188\");\n     driver.findElement(By.id(\"telefone-numero\")).clear();\n     driver.findElement(By.id(\"telefone-numero\")).sendKeys(\"273217819\");\n     new Select(driver.findElement(By.id(\"lsetores\"))).selectByVisibleText(\"CLINICA MEDICA\");\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n   }\n", "path": "src/test/java/br/ifes/leds/sincap/web/test/CadastroHospital.java", "repo name": "LEDS/sincap-interface-web"}
{"repo_name": "implicitGrantWithDeny_509", "method name": "implicit Grant With Deny", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     OAuthService service = new ServiceBuilder().provider(OpenConextApi20Implicit.class)\n         .apiKey(OAUTH_KEY.concat(UUID.randomUUID().toString())).apiSecret(OAUTH_SECRET.concat(\"force_consent\"))\n         .callback(OAUTH_CALLBACK_URL).scope(OAUTH_OPENCONEXT_API_READ_SCOPE).build();\n     String authUrl = service.getAuthorizationUrl(null);\n     LOG.debug(\"Auth url: {}\", authUrl);\n     getWebDriver().get(authUrl);\n     loginAtMujinaIfNeeded(USER_ID);\n \n     // Deny on user consent page\n     WebElement authorizeButton = getWebDriver().findElement(By.id(\"decline_terms_button\"));\n     authorizeButton.click();\n \n     URI uri = URI.create(getWebDriver().getCurrentUrl());\n     LOG.debug(\"URL is: \" + uri.toString());\n     LOG.debug(\"Response body is: \" + getWebDriver().getPageSource());\n     callbackRequestFragment = uri.getFragment();\n     assertNotNull(\"redirect URL should contain fragment.\", callbackRequestFragment);\n     assertFalse(\"redirect URL fragment should not contain access token\", callbackRequestFragment.contains(\"access_token=\"));\n     assertFalse(\"redirect URL fragment should contain access token\", callbackRequestFragment.contains(\"access_token=\"));\n   }\n", "path": "coin-api-war/src/test/java/nl/surfnet/coin/selenium/Oauth20ImplicitGrantTestSelenium.java", "repo name": "OpenConext/OpenConext-api"}
{"repo_name": "noRedirectUriGiven_510", "method name": "no Redirect Uri Given", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = getApiBaseUrl() + \"oauth2/authorize?client_id=someclient&response_type=token\";\n \n     getWebDriver().get(url);\n \n     loginAtMujinaIfNeeded(USER_ID);\n \n     // Authorize on user consent page\n     giveUserConsentIfNeeded();\n \n     String pageSource = getWebDriver().getPageSource();\n     LOG.debug(\"Response body is: \" + pageSource);\n     assertTrue(\"Page should contain correct error message\", pageSource.contains(\"does not match one of the registered values\"));\n     assertFalse(\"Page should not be a 500\", pageSource.contains(\"500\"));\n     // callbackRequestFragment = uri.getFragment();\n \n   }\n", "path": "coin-api-war/src/test/java/nl/surfnet/coin/selenium/Oauth20ImplicitGrantTestSelenium.java", "repo name": "OpenConext/OpenConext-api"}
{"repo_name": "testJbillingSanityTest_511", "method name": "test Jbilling Sanity Test", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \t  \t\n \t  \t// login\n \t  \tdriver.get(baseUrl + \"/login/auth\");\n \t    driver.findElement(By.id(\"j_username\")).clear();\n \t    driver.findElement(By.id(\"j_username\")).sendKeys(\"admin\");\n \t    driver.findElement(By.id(\"j_password\")).clear();\n \t    driver.findElement(By.id(\"j_password\")).sendKeys(\"123qwe\");\n \t    WebElement selectCompany = driver.findElement(By.id(\"j_client_id\"));\n \t    List<WebElement> companies = selectCompany.findElements(By.tagName(\"option\"));\n \t    for (WebElement option : companies) {\n \t    \tif(\"Prancing Pony\".equals(option.getText())) {\n \t    \t\toption.click();\n \t    \t\tbreak;\n \t    \t}\n \t    }\n \n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    //Add Category\n \t    driver.get(baseUrl + \"/product/editCategory?add=true\");\n \t    driver.findElement(By.id(\"description\")).clear();\n \t    driver.findElement(By.id(\"description\")).sendKeys(\"Test Category\"+new Date().getSeconds()); //+new Date().getSeconds()\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    driver.findElement(By.cssSelector(\"li.active > a > span\")).click();\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    //Edit Category - below change be changed to a driver.get(url) \n \t    driver.findElement(By.cssSelector(\"li.active > a > span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"a.submit.edit > span\")).click();\n \t    driver.findElement(By.id(\"description\")).clear();\n \t    driver.findElement(By.id(\"description\")).sendKeys(\"New Test Category\"+new Date().getSeconds()); //+new Date().getSeconds()\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"#column2 > div.btn-box > a.submit.add > span\")).click();\n \t    driver.findElement(By.id(\"product.number\")).clear();\n \t    driver.findElement(By.id(\"product.number\")).sendKeys(\"Test Code\"+new Date().getSeconds()); //+new Date().getSeconds()\n \t    // Show English description textfield on product UI \n \t    driver.findElement(By.cssSelector(\"img[alt='remove']\")).click();\n \n \t    driver.findElement(By.id(\"product.descriptions[0].content\")).clear();\n \t    driver.findElement(By.id(\"product.descriptions[0].content\")).sendKeys(\"Test Code Description\"+new Date().getSeconds()); //+new Date().getSeconds()\n \t    // Click on save changes Button on product UI\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    // driver.findElement(By.xpath(\"//form[@id='save-product-form']/fieldset/div[2]\")).click();\n \t    // driver.findElement(By.linkText(\"Save Changes\")).click();\n \t    driver.findElement(By.cssSelector(\"li.active > a > span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"#column2 > div.btn-box > a.submit.add > span\")).click();\n \t    driver.findElement(By.cssSelector(\"img[alt='remove']\")).click();\n \t    driver.findElement(By.id(\"product.descriptions[0].content\")).clear();\n \t    driver.findElement(By.id(\"product.descriptions[0].content\")).sendKeys(\"Test Code Description 1\"+new Date().getSeconds()); // +new Date().getSeconds()\n \t    \n \t    driver.findElement(By.id(\"product.number\")).clear();\n \t    driver.findElement(By.id(\"product.number\")).sendKeys(\"Test Code 1\"+new Date().getSeconds()); //+new Date().getSeconds()\n \t    \n \t    WebElement select = driver.findElement(By.id(\"model.0.type\"));\n \t    List<WebElement> priceModelOptions = select.findElements(By.tagName(\"option\"));\n \t    for (WebElement option : priceModelOptions) {\n \t    \tif(\"Metered\".equals(option.getText())) {\n \t    \t\toption.click();\n \t    \t\tbreak;\n \t    \t}\n \t    }\n \t    \n \t    Thread.sleep(1000);\n \t    // driver.findElement(By.cssSelector(\"option[value=\\\"FLAT\\\"]\")).click();\n \t    driver.findElement(By.id(\"model.0.rateAsDecimal\")).clear();\n \t    driver.findElement(By.id(\"model.0.rateAsDecimal\")).sendKeys(\"12.00\");\n \t    // select Currency from Dropdown list\n \t    WebElement currencyCode = driver.findElement(By.id(\"model.0.currencyId\"));\n \t    List<WebElement> currencyOptions = currencyCode.findElements(By.tagName(\"option\"));\n \t    for (WebElement option : currencyOptions) {\n \t    \tif(\"United States Dollar\".equals(option.getText())) {\n \t    \t\toption.click();\n \t    \t\tbreak;\n \t    \t}\n \t    }\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    driver.findElement(By.linkText(\"Products\")).click();\n \t    driver.findElement(By.cssSelector(\"#category-2400 > td > a.cell.double > strong\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"#product-3200 > td > a.cell.double > strong\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"#column2 > div.btn-box > a.submit.edit > span\")).click();\n \t    \n \t    driver.findElement(By.id(\"product.number\")).clear();\n \t    driver.findElement(By.id(\"product.number\")).sendKeys(\"New Test Code\"+new Date().getSeconds()); //+new Date().getSeconds()\n \t    driver.findElement(By.id(\"product.descriptions[0].content\")).clear();\n \t    driver.findElement(By.id(\"product.descriptions[0].content\")).sendKeys(\"New Test Code Description \"+new Date().getSeconds()); // +new Date().getSeconds()\n \t    driver.findElement(By.id(\"product.percentageAsDecimal\")).clear();\n \t    driver.findElement(By.id(\"product.percentageAsDecimal\")).sendKeys(\"15\");\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    // Customers list\n \t    driver.findElement(By.linkText(\"Customers\")).click();\n \t    \n \t    // Create new customer\n \t    driver.findElement(By.cssSelector(\"a[href='/jbilling/customer/edit']\")).click();\n \t    driver.findElement(By.id(\"user.userName\")).clear();\n \t    driver.findElement(By.id(\"user.userName\")).sendKeys(\"Ashish\"+new Date().getSeconds()); //+new Date().getSeconds()\n \t    driver.findElement(By.id(\"newPassword\")).clear();\n \t    driver.findElement(By.id(\"newPassword\")).sendKeys(\"12345\");\n \t    driver.findElement(By.id(\"verifiedPassword\")).clear();\n \t    driver.findElement(By.id(\"verifiedPassword\")).sendKeys(\"12345\");\n \t    driver.findElement(By.id(\"contact-2.email\")).clear();\n \t    driver.findElement(By.id(\"contact-2.email\")).sendKeys(\"ashishs@360logica.com\");\n \t\n \t    // select country from Dropdown list\n \t    WebElement countryCode = driver.findElement(By.id(\"contact-2.countryCode\"));\n \t    List<WebElement> countryCodeOptions = countryCode.findElements(By.tagName(\"option\"));\n \t    for (WebElement option : countryCodeOptions) {\n \t    \tif(\"India\".equals(option.getText())) {\n \t    \t\toption.click();\n \t    \t\tbreak;\n \t    \t}\n \t    }\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    Thread.sleep(1000);\n \t    \n \t    // Edit existing customer\n \t    driver.findElement(By.cssSelector(\"a.submit.edit > span\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.id(\"contact-2.email\")).clear();\n \t    driver.findElement(By.id(\"contact-2.email\")).sendKeys(\"ashishs@gmail.com\");\n \t    driver.findElement(By.id(\"contact-2.address1\")).clear();\n \t    driver.findElement(By.id(\"contact-2.address1\")).sendKeys(\"Jaipur\");\n \t    driver.findElement(By.id(\"contact-2.address2\")).clear();\n \t    driver.findElement(By.id(\"contact-2.address2\")).sendKeys(\"Elements Mall\");\n \t    driver.findElement(By.id(\"contact-2.stateProvince\")).clear();\n \t    driver.findElement(By.id(\"contact-2.stateProvince\")).sendKeys(\"Rajasthan\");\n \t    driver.findElement(By.id(\"contact-2.city\")).clear();\n \t    driver.findElement(By.id(\"contact-2.city\")).sendKeys(\"Jaipur\");\n \t    driver.findElement(By.id(\"contact-2.postalCode\")).clear();\n \t    driver.findElement(By.id(\"contact-2.postalCode\")).sendKeys(\"302021\");\n \t    \n \t    driver.findElement(By.cssSelector(\"a.btn-open > span\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.id(\"creditCard.name\")).clear();\n \t    driver.findElement(By.id(\"creditCard.name\")).sendKeys(\"Ashish\");\n \t    driver.findElement(By.id(\"creditCard.number\")).clear();\n \t    driver.findElement(By.id(\"creditCard.number\")).sendKeys(\"4111111111111152\");\n \t    driver.findElement(By.id(\"expiryMonth\")).clear();\n \t    driver.findElement(By.id(\"expiryMonth\")).sendKeys(\"12\");\n \t    driver.findElement(By.id(\"expiryYear\")).clear();\n \t    driver.findElement(By.id(\"expiryYear\")).sendKeys(\"2020\");\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    \n \t    // Create Purchase Order:\n \t    driver.findElement(By.cssSelector(\"a.submit.order > span\")).click();\n \t    WebElement selectOrder = driver.findElement(By.id(\"period\"));\n \t    List<WebElement> order = selectOrder.findElements(By.tagName(\"option\"));\n \t    for (WebElement option : order) {\n \t    \tif(\"Monthly\".equals(option.getText())) {\n \t    \t\toption.click();\n \t    \t\tbreak;\n \t    \t}\n \t    }\n \t   \n \t    WebElement selectTypeid = driver.findElement(By.id(\"billingTypeId\"));\n \t    List<WebElement> typeid = selectTypeid.findElements(By.tagName(\"option\"));\n \t    for (WebElement option : typeid) {\n \t    \tif(\"pre paid\".equals(option.getText())) {\n \t    \t\toption.click();\n \t    \t\tbreak;\n \t    \t}\n \t    }\n \t  \n \t    \n \t    WebElement selectStatusid = driver.findElement(By.id(\"statusId\"));\n \t    List<WebElement> statusid = selectStatusid.findElements(By.tagName(\"option\"));\n \t    for (WebElement option : statusid) {\n \t    \tif(\"Active\".equals(option.getText())) {\n \t    \t\toption.click();\n \t    \t\tbreak;\n \t    \t}\n \t    }\n \t    \n \t    driver.findElement(By.id(\"activeSince\")).click();\n \t    driver.findElement(By.id(\"activeSince\")).clear();\n \t    driver.findElement(By.id(\"activeSince\")).sendKeys(\"01/01/2010\");\n \t    \n \t    driver.findElement(By.xpath(\"//form[@id='order-details-form']/div/div[4]\")).click();\n \t    driver.findElement(By.xpath(\"//a[contains(text(),'Products')]\")).click();\n \t    driver.findElement(By.id(\"filterBy\")).clear();\n \t    driver.findElement(By.id(\"filterBy\")).sendKeys(\"New Test Code\");\n \t    driver.findElement(By.cssSelector(\"strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t   \n \t    // Generate Invoice\n \t    driver.findElement(By.cssSelector(\"a.submit.order > span\")).click();\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    // Pay Invoice\n \t    driver.findElement(By.cssSelector(\"a.submit.payment > span\")).click();\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    //Review Payment\n \t    driver.findElement(By.id(\"processNow\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.payment > span\")).click();\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    //Make Payment\n \t    driver.findElement(By.cssSelector(\"a.submit.payment > span\")).click();\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    //Tear Down process\n \t    \n \t    driver.findElement(By.linkText(\"Unlink\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[2]\")).click();\n \t    Thread.sleep(1000);\n \t    \n \t   // Delete Payment\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[4]\")).click();\n \t    \n \t    // Delete Invoice\n \t    \n \t    driver.findElement(By.linkText(\"Invoices\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    Thread.sleep(500);\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[4]\")).click();\n \t    driver.findElement(By.xpath(\"//div[@id='navigation']/ul/li[8]/a/span\")).click();\n \t    Thread.sleep(1000);\n \t   // driver.findElement(By.xpath(\"(//button[@type='button'])[6]\")).click();\n \t    \n \t    //driver.findElement(By.xpath(\"(//button[@type='button'])[8]\")).click();\n \t    \n \t    \n \t    \n \t    \n    //Delete Order\n \t \n \t    driver.findElement(By.linkText(\"Orders\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    Thread.sleep(500);\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[2]\")).click();\n \t    Thread.sleep(1000);\n \t    \n //\t    //Delete Product\n //\t    \n \t    driver.findElement(By.linkText(\"Products\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"#category-2400 > td > a.cell.double > strong\")).click();\n \t    Thread.sleep(500);\n \t    driver.findElement(By.cssSelector(\"#product-3200 > td > a.cell.double > strong\")).click();\n \t    Thread.sleep(500);\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[6]\")).click();\n \t    Thread.sleep(1000);\n \t   \n //\t    //Delete Customer\n \t    \n \t    driver.findElement(By.linkText(\"Customers\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    Thread.sleep(500);\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    Thread.sleep(1000);\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[2]\")).click();\n \t    Thread.sleep(1000);\n \t    \n //\t    \n //\t    //Logout Jbilling\n //\t    \n \t    driver.findElement(By.linkText(\"Logout\")).click();\n \t    Thread.sleep(1000);\n \t    \n //\t    driver.findElement(By.linkText(\"editProduct\")).click();\n \t    /*driver.findElement(By.cssSelector(\"li.active > a > span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > em\")).click();\n \t    driver.findElement(By.cssSelector(\"#product-3200 > td > a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.edit > span\")).click();*/\n \t    \n \t    //Below Code having failure and need to appropiate invistigation.\n \t    /*Thread.sleep(1000);\n \t    driver.findElement(By.id(\"product.percentageAsDecimal\")).clear();\n \t    driver.findElement(By.id(\"product.percentageAsDecimal\")).sendKeys(\"15\");\n \t    driver.findElement(By.id(\"product.description\")).clear();\n \t    driver.findElement(By.id(\"product.description\")).sendKeys(\"New Test Code Description\");\n \t    driver.findElement(By.id(\"product.number\")).clear();\n \t    driver.findElement(By.id(\"product.number\")).sendKeys(\"New Test Code\");\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    \n \t    driver.findElement(By.cssSelector(\"span\")).click();\n \t    driver.findElement(By.cssSelector(\"span\")).click();\n \t    driver.findElement(By.cssSelector(\"div.btn-box > a.submit.add > span\")).click();\n \t    driver.findElement(By.id(\"user.userName\")).clear();\n \t    driver.findElement(By.id(\"user.userName\")).sendKeys(\"Ashish\");\n \t    driver.findElement(By.id(\"newPassword\")).clear();\n \t    driver.findElement(By.id(\"newPassword\")).sendKeys(\"12345\");\n \t    driver.findElement(By.id(\"verifiedPassword\")).clear();\n \t    driver.findElement(By.id(\"verifiedPassword\")).sendKeys(\"12345\");\n \t    driver.findElement(By.id(\"contact-2.email\")).clear();\n \t    driver.findElement(By.id(\"contact-2.email\")).sendKeys(\"ashish@gmail.com\");\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    driver.findElement(By.cssSelector(\"span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.linkText(\"Edit\")).click();\n \t    driver.findElement(By.id(\"contact-2.email\")).clear();\n \t    driver.findElement(By.id(\"contact-2.email\")).sendKeys(\"ashish@ymail.com\");\n \t    driver.findElement(By.id(\"contact-2.address1\")).clear();\n \t    driver.findElement(By.id(\"contact-2.address1\")).sendKeys(\"Jaipur\");\n \t    driver.findElement(By.id(\"contact-2.address2\")).clear();\n \t    driver.findElement(By.id(\"contact-2.address2\")).sendKeys(\"Elements Mall\");\n \t    driver.findElement(By.id(\"contact-2.stateProvince\")).clear();\n \t    driver.findElement(By.id(\"contact-2.stateProvince\")).sendKeys(\"Rajasthan\");\n \t    driver.findElement(By.id(\"contact-2.city\")).clear();\n \t    driver.findElement(By.id(\"contact-2.city\")).sendKeys(\"Jaipur\");\n \t    driver.findElement(By.id(\"contact-2.postalCode\")).clear();\n \t    driver.findElement(By.id(\"contact-2.postalCode\")).sendKeys(\"302021\");\n \t    new Select(driver.findElement(By.id(\"contact-2.countryCode\"))).selectByVisibleText(\"India\");\n \t    driver.findElement(By.cssSelector(\"a.btn-open > span\")).click();\n \t    driver.findElement(By.id(\"creditCard.name\")).clear();\n \t    driver.findElement(By.id(\"creditCard.name\")).sendKeys(\"Ashish\");\n \t    driver.findElement(By.id(\"creditCard.number\")).clear();\n \t    driver.findElement(By.id(\"creditCard.number\")).sendKeys(\"41111111111111\");\n \t    driver.findElement(By.id(\"expiryMonth\")).clear();\n \t    driver.findElement(By.id(\"expiryMonth\")).sendKeys(\"12\");\n \t    driver.findElement(By.id(\"expiryYear\")).clear();\n \t    driver.findElement(By.id(\"expiryYear\")).sendKeys(\"2020\");\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    driver.findElement(By.id(\"creditCard.number\")).clear();\n \t    driver.findElement(By.id(\"creditCard.number\")).sendKeys(\"4111111111111152\");\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    driver.findElement(By.cssSelector(\"span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.order > span\")).click();\n \t    new Select(driver.findElement(By.id(\"period\"))).selectByVisibleText(\"Monthly\");\n \t    driver.findElement(By.cssSelector(\"option[value=\\\"2\\\"]\")).click();\n \t    new Select(driver.findElement(By.id(\"billingTypeId\"))).selectByVisibleText(\"pre paid\");\n \t    driver.findElement(By.cssSelector(\"#billingTypeId > option[value=\\\"1\\\"]\")).click();\n \t    driver.findElement(By.cssSelector(\"img.ui-datepicker-trigger\")).click();\n \t    driver.findElement(By.cssSelector(\"span.ui-icon.ui-icon-circle-triangle-w\")).click();\n \t    driver.findElement(By.cssSelector(\"span.ui-icon.ui-icon-circle-triangle-w\")).click();\n \t    driver.findElement(By.linkText(\"1\")).click();\n \t    driver.findElement(By.id(\"activeSince\")).click();\n \t    driver.findElement(By.id(\"activeSince\")).clear();\n \t    driver.findElement(By.id(\"activeSince\")).sendKeys(\"01/01/2010\");\n \t    driver.findElement(By.xpath(\"//form[@id='order-details-form']/div/div[2]\")).click();\n \t    driver.findElement(By.xpath(\"//a[contains(text(),'Products')]\")).click();\n \t    driver.findElement(By.xpath(\"//table[@id='products']/tbody/tr[2]/td/a/strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    driver.findElement(By.cssSelector(\"#review-box > div.btn-box > a.submit.save > span\")).click();\n \t    driver.findElement(By.cssSelector(\"span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.edit > span\")).click();\n \t    driver.findElement(By.cssSelector(\"span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.order > span\")).click();\n \t    new Select(driver.findElement(By.id(\"period\"))).selectByVisibleText(\"Monthly\");\n \t    driver.findElement(By.cssSelector(\"option[value=\\\"2\\\"]\")).click();\n \t    new Select(driver.findElement(By.id(\"billingTypeId\"))).selectByVisibleText(\"pre paid\");\n \t    driver.findElement(By.cssSelector(\"#billingTypeId > option[value=\\\"1\\\"]\")).click();\n \t    driver.findElement(By.cssSelector(\"img.ui-datepicker-trigger\")).click();\n \t    driver.findElement(By.cssSelector(\"span.ui-icon.ui-icon-circle-triangle-w\")).click();\n \t    driver.findElement(By.cssSelector(\"span.ui-icon.ui-icon-circle-triangle-w\")).click();\n \t    driver.findElement(By.linkText(\"1\")).click();\n \t    driver.findElement(By.id(\"activeSince\")).click();\n \t    driver.findElement(By.id(\"activeSince\")).clear();\n \t    driver.findElement(By.id(\"activeSince\")).sendKeys(\"01/01/2010\");\n \t    driver.findElement(By.xpath(\"//form[@id='order-details-form']/div/div[4]\")).click();\n \t    driver.findElement(By.xpath(\"//a[contains(text(),'Products')]\")).click();\n \t    driver.findElement(By.cssSelector(\"strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.save > span\")).click();\n \t    driver.findElement(By.cssSelector(\"#review-box > div.btn-box > a.submit.save > span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.order > span\")).click();\n \t    driver.findElement(By.xpath(\"//div[@id='navigation']/ul/li[4]/a/span\")).click();\n \t    driver.findElement(By.xpath(\"//tr[@id='order-107900']/td[2]/a/strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.order > span\")).click();\n \t    driver.findElement(By.xpath(\"(//a[contains(text(),'04/19/2014')])[2]\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.payment > span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.payment > span\")).click();\n \t    driver.findElement(By.linkText(\"Make Payment\")).click();\n \t    driver.findElement(By.cssSelector(\"li.active > a > span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.linkText(\"Unlink\")).click();\n \t    driver.findElement(By.linkText(\"Delete\")).click();\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[2]\")).click();\n \t    driver.findElement(By.xpath(\"//div[@id='navigation']/ul/li[2]/a/span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[4]\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[4]\")).click();\n \t    driver.findElement(By.xpath(\"//div[@id='navigation']/ul/li[8]/a/span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"#product-3200 > td > a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[6]\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[8]\")).click();\n \t    driver.findElement(By.cssSelector(\"li.active > a > span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[4]\")).click();\n \t    driver.findElement(By.cssSelector(\"span\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.cssSelector(\"a.submit.delete > span\")).click();\n \t    driver.findElement(By.xpath(\"(//button[@type='button'])[2]\")).click();\n \t    driver.findElement(By.cssSelector(\"span\")).click();\n \t    driver.findElement(By.linkText(\"Logout\")).click();*/\n   }\n", "path": "test/functional/com/sapienter/jbilling/selenium/sanity/JBillingSanityTest.java", "repo name": "WebDataConsulting/billing"}
{"repo_name": "testS141Test_512", "method name": "test S141 Test", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \t  \n \t    //creating new customer\n \t    driver.get(baseUrl + \"/customer/index\");\n \t    driver.findElement(By.cssSelector(\"span\")).click();\n \t    driver.findElement(By.linkText(\"ADD NEW\")).click();\n \t    new Select(driver.findElement(By.id(\"accountTypeId\"))).selectByVisibleText(\"Direct Customer\");\n \t    driver.findElement(By.linkText(\"SELECT\")).click();\n \t    \n \t    driver.findElement(By.id(\"user.userName\")).clear();\n \t    driver.findElement(By.id(\"user.userName\")).sendKeys(\"Test Customer1\");\n \t    driver.findElement(By.linkText(\"SAVE CHANGES\")).click();\n \t    \n \t    Thread.sleep(2000);\n \t    \n \t    //creating order with customer\n \t    driver.findElement(By.linkText(\"Customers\")).click();\n \t    driver.findElement(By.cssSelector(\"td > a.cell.double > strong\")).click();\n \t    driver.findElement(By.linkText(\"CREATE ORDER\")).click();\n \t    driver.findElement(By.id(\"ui-id-8\")).click();\n \t    driver.findElement(By.cssSelector(\"td > a.cell.double >strong\")).click();\n \t    driver.findElement(By.cssSelector(\"#change--3-update-form > div.btn-box > a.submit.save > span\")).click();\n \t    driver.findElement(By.linkText(\"SAVE CHANGES\")).click();\n \t    \n \t    \n \t    \n \t    \n \t    //generating invoice\n \t    driver.findElement(By.linkText(\"Orders\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double >strong\")).click();\n \t    driver.findElement(By.linkText(\"GENERATE INVOICE\")).click();\n \t    //System.out.println(driver.getCurrentUrl());\n \t    \n \t    driver.findElement(By.linkText(\"Customers\")).click();\n \t    driver.findElement(By.cssSelector(\"a.cell.double > strong\")).click();\n \t    driver.findElement(By.linkText(\"MAKE PAYMENT\")).click();\n \t    \n \n \t    driver.findElement(By.name(\"invoiceId\")).click();\n \t    \n \t    //driver.findElement(By.xpath(\"//label[contains('invoice',.)]\")).click();\n \t    driver.findElement(By.id(\"paymentMethod_0.processingOrder\")).clear();\n \t    driver.findElement(By.id(\"paymentMethod_0.processingOrder\")).sendKeys(\"1\");\n \t    \n \t    driver.findElement(By.xpath(\"(//input[@type='text'])[5]\")).clear();\n \t    driver.findElement(By.xpath(\"(//input[@type='text'])[5]\")).sendKeys(\"Rahul\");\n \t    \n \t    driver.findElement(By.xpath(\"(//input[@type='text'])[6]\")).clear();\n \t    driver.findElement(By.xpath(\"(//input[@type='text'])[6]\")).sendKeys(\"4111111111111152\");\n \t    \n \t    driver.findElement(By.xpath(\"(//input[@type='text'])[7]\")).clear();\n \t    driver.findElement(By.xpath(\"(//input[@type='text'])[7]\")).sendKeys(\"12/2020\");\n \t    \n \t    driver.findElement(By.linkText(\"REVIEW PAYMENT\")).click();\n \t    driver.findElement(By.linkText(\"MAKE PAYMENT\")).click();\n \t    \n \t    \n \t    //Assertion is applied here\n \t    driver.findElement(By.linkText(\"Payments\")).click();\n \t    Assert.assertEquals(driver.getPageSource().contains(\"Test Customer1\"), true);\n \t    \n \t    Thread.sleep(1000);\n \t    \n \t    driver.findElement(By.linkText(\"Reports\")).click();\n \t    driver.findElement(By.xpath(\"//strong[text()='Invoice Reports']\")).click();\n \t    driver.findElement(By.xpath(\"//strong[text()='Total Amount Invoiced']\")).click();\n \t    driver.findElement(By.id(\"start_date\")).clear();\n \t    driver.findElement(By.id(\"start_date\")).sendKeys(\"10/8/2015\");\n \t    \n \t    driver.findElement(By.id(\"end_date\")).clear();\n \t    driver.findElement(By.id(\"end_date\")).sendKeys(\"10/8/2015\");\n \t  \n \t    new Select(driver.findElement(By.id(\"period\"))).selectByVisibleText(\"Day\");\n \t    new Select(driver.findElement(By.id(\"format\"))).selectByVisibleText(\"View as HTML\");\n \t    driver.findElement(By.linkText(\"RUN REPORT\")).click();\n \t    \n \t    new Select(driver.findElement(By.id(\"format\"))).selectByVisibleText(\"Adobe PDF\");\n \t    driver.findElement(By.linkText(\"RUN REPORT\")).click();\n \t    \n \t    new Select(driver.findElement(By.id(\"format\"))).selectByVisibleText(\"Excel\");\n \t    driver.findElement(By.linkText(\"RUN REPORT\")).click();\n \t    \n \t    \n   }\n", "path": "test/selenium-sanity/src/com/example/tests/CreatingReportsAndVerifying.java", "repo name": "WebDataConsulting/billing"}
{"repo_name": "testWithWebDriver_513", "method name": "test With Web Driver", "comments": ["@Test"], "url": true, "content": "    public void function() throws Exception {\n         int port = 9090;\n         HttpProxyServer proxyServer = new DefaultHttpProxyServer(port);\n         proxyServer.start();\n \n         Proxy proxy = new Proxy();\n         proxy.setProxyType(Proxy.ProxyType.MANUAL);\n         String proxyStr = String.format(\"localhost:%d\", port);\n         proxy.setHttpProxy(proxyStr);\n         proxy.setSslProxy(proxyStr);\n \n         DesiredCapabilities capability = DesiredCapabilities.firefox();\n         capability.setCapability(CapabilityType.PROXY, proxy);\n \n         final String urlString = \"http://www.yahoo.com/\";\n         \n         // Note this will actually launch a browser!!\n         final WebDriver driver = new FirefoxDriver(capability);\n         driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);\n \n         driver.get(urlString);\n         final String source = driver.getPageSource();\n         \n         // Just make sure it got something within reason.\n         assertTrue(source.length() > 100);\n         driver.close();\n \n         proxyServer.stop();\n     }\n", "path": "src/test/java/org/littleshoot/proxy/EndToEndStoppingTest.java", "repo name": "arielnetworks/LittleProxy"}
{"repo_name": "testHomePageHasAHeader_514", "method name": "test Home Page Has A Header", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     Assert.assertFalse(\"\".equals(homepage.header.getText()));\n   }\n", "path": "prestashop-sample/src/test/java/ru/stqa/selenium/samples/prestashop/SampleTestNgTest.java", "repo name": "barancev/selenium-samples"}
{"repo_name": "handleFormWithJavascriptAction_515", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {HTMLUNIT, PHANTOMJS, SAFARI, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "misttechnologies/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_516", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "misttechnologies/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_517", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, HTMLUNIT, IE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "misttechnologies/selenium"}
{"repo_name": "prepareBrowserAndPage_518", "method name": "prepare Browser And Page", "comments": ["BeforeTest", "Parameters({ \"url\", \"browser\", \"pageElementFinder\" })"], "url": true, "content": "\tpublic void function(String url, String browserName, String pageElementFinderName) {\n \t\tbrowser = BrowserProvider.provideBrowserByName(browserName);\n \t\tfinder = IndexPageElementFinderProvider.provideIndexPageElementFinderByName(pageElementFinderName, browser);\n \t\twait = new FluentWait<WebDriver>(browser).withTimeout(30, TimeUnit.SECONDS).pollingEvery(1, TimeUnit.SECONDS)\n \t\t\t\t.ignoring(StaleElementReferenceException.class);\n \t\tbrowser.get(url);\n \t\tdeleteAllItems();\n \t}\n", "path": "testwebdriver/src/test/java/org/mnowrot/quicklist/webdrivertests/IndexPageTest.java", "repo name": "mnowrot/Quicklist-RESTFul"}
{"repo_name": "testWebServiceResponse_519", "method name": "test Web Service Response", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tlogger.info(\"Starting web service response testing...\");\n \n \t\t// Maximize the browser\n \t\twebDriver.manage().window().maximize();\n \t\t// Go to our application\n \t\twebDriver.get(baseUrl);\n \t\t// Logout just in case the previous test failed\n \t\tloginPage.logoutWithOutLink();\n \t\t// Fill out and submit login credentials\n \t\tloginPage.login(loginName0, loginPassword0, false);\n \n \t\tStringBuilder urlTest1 = new StringBuilder(baseUrl);\n \t\turlTest1.append(\"/ajax\");\n \t\twebDriver.get(urlTest1.toString());\n \n         // Wait for the page to load\n \t\t// This will not work until it is set visible!!\n \t\t//webDriverWait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"ajaxGet\")));\n         JavascriptExecutor js = (JavascriptExecutor) webDriver;\n         js.executeScript(\"document.getElementById('ajaxGet').setAttribute('style', 'display: block');\");\n         webDriverWait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"ajaxGet\"), \"true\"));\n         String response = webDriver.findElement(By.id(\"ajaxGet\")).getText();\n         // Assert true in the response\n         Assert.assertEquals(\"true\", response);\n \n         Thread.sleep(2000);\n \n \t\t// Log out\n \t\tloginPage.logoutWithOutLink();\n \n \t\tlogger.info(\"testing web service complete...\");\n \t}\n", "path": "src/test/java/selenium/test/WebServiceIT.java", "repo name": "pilbender/seleniumExample"}
{"repo_name": "logoutWithOutLink_520", "method name": "logout With Out Link", "comments": [" For use on any page, whether the logout link exists or not.  This is useful for Selenium based tests that want", " to reset conditions like logins before completing execution."], "url": true, "content": "\tpublic void function() {\n \t\tlogger.info(\"Selenium testing logout starting...\");\n \t\twebDriver.get(baseUrl + \"/user/logout\");\n \t\tlogger.info(\"Selenium testing logout complete...\");\n \t}\n", "path": "src/test/java/selenium/page/LoginPage.java", "repo name": "pilbender/seleniumExample"}
{"repo_name": "crawlUsenix_Simple_Page_521", "method name": "crawlUsenix Simple Page", "comments": [], "url": true, "content": "\tprivate String function(String url) throws Exception{\n \t\tSystem.out.println(\"--->crawlUsenix_Simple_Page..............\");\n \t\tdriver.get(url);\n \t\t\n \t\ttry {\n \t\t\torg.openqa.selenium.WebElement element = driver.findElement(By.xpath(\"//body\"));\n \t\t\tString abs = \"\";\n \t\t\t//System.out.println(\"In testUseINX ==>\"+element.getText());\n \t\t\tString[] elements =  element.getText().split(\"\\n\") ;\n \t\t\tint length = element.getText().split(\"\\n\").length;\n \t\t\tboolean flag = false;\n \t\t\tfor (int i = 0; i < length; i++) {\n \t\t\t\t//System.out.println(\"testUseINX() : \"+i+\"==>\"+elements[i].trim());\n \t\t\t\tif(\"Abstract\".equals(elements[i].trim())){\n \t\t\t\t\t//return elements[i+1].trim();\n \t\t\t\t\t//System.out.println(\"######### Abstratc FOund ##### \");\n \t\t\t\t\tflag = true;\n \t\t\t\t}\n \t\t\t\tif(elements[i].trim().startsWith(\"Download the full text\")){\n \t\t\t\t\t//System.out.println(\"Ending text found\");\n \t\t\t\t\tflag = false;\n \t\t\t\t\tbreak;\n \t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\n \t\t\t\tif(flag){\n \t\t\t\t\tabs+=elements[i].trim();\n \t\t\t\t}\n \t\t\t}\n \t\t\tif(!flag)\n \t\t\treturn \"\".equals(abs)?null:abs.replaceFirst(\"Abstract\", \"\");\n \t\t}\n \t\tcatch (NoSuchElementException e) {\n \t\t\tthrow new Exception(\"Abstract Not Found\");\n \t\t}\n \t\treturn null;\n \t}\n", "path": "src/org/dblp/crawler/ViewAbstractExtractor.java", "repo name": "santonus/bigscholarlydata"}
{"repo_name": "openMainPage_522", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/lessonsSe/applogic2/NavigationHelper2.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "openRelativeUrl_523", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/lessonsSe/applogic2/NavigationHelper2.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "deletSumFilm_524", "method name": "delet Sum Film", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t// Вход и авторизация на учебный проект\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tString username = \"username\";\n \t\tdriver.findElement(By.id(username)).clear();\n \t\tdriver.findElement(By.id(username)).sendKeys(\"admin\");\n \t\tString password = \"password\";\n \t\tdriver.findElement(By.name(password)).clear();\n \t\tdriver.findElement(By.name(password)).sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"submit\")).click();\n \n \t\t// Удаление фильма\n \t\tdriver.findElements(By.cssSelector(\".center>nav>ul>li>a\")).get(0).click();\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t\t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".movie_box\")));\n \t\tint kol = driver.findElements(By.cssSelector(\".title\")).size();\n \t\tString elmovi = driver.findElements(By.cssSelector(\".movie_box\")).get(0).getAttribute(\"id\");\n \t\tdriver.findElements(By.cssSelector(\".title\")).get(0).click();\n \t\tdriver.findElement(By.linkText(\"Remove\")).click();\n \t\tdriver.switchTo().alert().accept();\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t\t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".movie_box\")));\n \t\tAssert.assertEquals(kol-1, driver.findElements(By.cssSelector(\".title\")).size());\n \t\tAssertJUnit.assertFalse(\"Фильм удален\",\n \t\t\t\tdriver.findElements(By.cssSelector(\".movie_box\")).get(0).getAttribute(\"id\").equals(elmovi));\n \n \t\tdriver.quit();\n \n \t}\n", "path": "src/test/java/LessonsSe/DeletSumFilm.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "addInSumFilmNot_525", "method name": "add In Sum Film Not", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t// Вход и авторизация на учебный проект\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tString username = \"username\";\n \t\tdriver.findElement(By.id(username)).clear();\n \t\tdriver.findElement(By.id(username)).sendKeys(\"admin\");\n \t\tString password = \"password\";\n \t\tdriver.findElement(By.name(password)).clear();\n \t\tdriver.findElement(By.name(password)).sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"submit\")).click();\n \n \t\t// Добавление новго фильма без заполнения обязательных полей\n \t\tdriver.findElements(By.cssSelector(\".button>div>a>img\")).get(0).click();\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t\t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".required.error\")));\n \t\tdriver.findElement(By.cssSelector(\"input[name='name']\")).clear();\n \t\tdriver.findElement(By.cssSelector(\"input[name='year']\")).clear();\n \t\tdriver.findElements(By.cssSelector(\"input[type='submit']\")).get(1).click();\n \t\tAssertJUnit.assertTrue(\"Поле год не заполнено\",\n \t\t\t\tdriver.findElement(By.cssSelector(\"label[for='year']\")).getText().equals(\"This field is required\"));\n \t\tAssertJUnit.assertTrue(\"Поле название фильма не заполнено\",\n \t\t\t\tdriver.findElement(By.cssSelector(\"label[for='name']\")).getText().equals(\"This field is required\"));\n \n \t\tdriver.quit();\n \t}\n", "path": "src/test/java/LessonsSe/AddInSumFilmNot.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "addInSumFilmNotYear_526", "method name": "add In Sum Film Not Year", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t// Вход и авторизация на учебный проект\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tString username = \"username\";\n \t\tdriver.findElement(By.id(username)).clear();\n \t\tdriver.findElement(By.id(username)).sendKeys(\"admin\");\n \t\tString password = \"password\";\n \t\tdriver.findElement(By.name(password)).clear();\n \t\tdriver.findElement(By.name(password)).sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"submit\")).click();\n \n \t\t// Добавление нового фильма без заполнения года\n \t\tdriver.findElements(By.cssSelector(\".button>div>a>img\")).get(0).click();\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t\t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".required.error\")));\n \t\tdriver.findElement(By.cssSelector(\"input[name='name']\")).sendKeys(\"NewFilm2\");\n \t\tdriver.findElement(By.cssSelector(\"input[name='year']\")).clear();\n \t\tdriver.findElements(By.cssSelector(\"input[type='submit']\")).get(1).click();\n \t\tAssertJUnit.assertTrue(\"Поле год не заполнено\",\n \t\t\t\tdriver.findElement(By.cssSelector(\"label[for='year']\")).getText().equals(\"This field is required\"));\n \n \t\tdriver.quit();\n \t}\n", "path": "src/test/java/LessonsSe/AddInSumFilmNotYear.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "addInSumFilmNotTitle_527", "method name": "add In Sum Film Not Title", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t// Вход и авторизация на учебный проект\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tString username = \"username\";\n \t\tdriver.findElement(By.id(username)).clear();\n \t\tdriver.findElement(By.id(username)).sendKeys(\"admin\");\n \t\tString password = \"password\";\n \t\tdriver.findElement(By.name(password)).clear();\n \t\tdriver.findElement(By.name(password)).sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"submit\")).click();\n \n \t\t// Добавление нового фильма без заполненного названия\n \t\tdriver.findElements(By.cssSelector(\".button>div>a>img\")).get(0).click();\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t\t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".required.error\")));\n \t\tdriver.findElement(By.cssSelector(\"input[name='year']\")).sendKeys(\"2010\");\n \t\tdriver.findElements(By.cssSelector(\"input[type='submit']\")).get(1).click();\n \t\tAssertJUnit.assertTrue(\"Поле название фильма не заполнено\",\n \t\t\t\tdriver.findElement(By.cssSelector(\"label[for='name']\")).getText().equals(\"This field is required\"));\n \n \t\tdriver.quit();\n \t}\n", "path": "src/test/java/LessonsSe/AddInSumFilmNotTitle.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "openMainPage_528", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/lessonsSe/applogic1/NavigationHelper1.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "openRelativeUrl_529", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/lessonsSe/applogic1/NavigationHelper1.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "searshFilmOk_530", "method name": "searsh Film Ok", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t// Вход и авторизация на учебный проект\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tString username = \"username\";\n \t\tdriver.findElement(By.id(username)).clear();\n \t\tdriver.findElement(By.id(username)).sendKeys(\"admin\");\n \t\tString password = \"password\";\n \t\tdriver.findElement(By.name(password)).clear();\n \t\tdriver.findElement(By.name(password)).sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"submit\")).click();\n \n \t\t// Создание фильма\n \t\tdriver.findElements(By.cssSelector(\".button>div>a>img\")).get(0).click();\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t\t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".required.error\")));\n \t\tdriver.findElement(By.cssSelector(\"input[name='name']\")).sendKeys(\"FilmForSearsh\");\n \t\tdriver.findElement(By.cssSelector(\"input[name='year']\")).sendKeys(\"2016\");\n \t\tdriver.findElements(By.cssSelector(\"input[type='submit']\")).get(1).click();\n \t\tdriver.findElements(By.cssSelector(\".center>nav>ul>li>a\")).get(0).click();\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".movie_box\")));\n \t\tint kol = driver.findElements(By.cssSelector(\".title\")).size();\n \n \t\t// Поиск фильма\n \t\tdriver.findElement(By.id(\"q\")).sendKeys(\"Film\");\n \t\tdriver.findElement(By.id(\"q\")).sendKeys(Keys.ENTER);\n \t\t(new WebDriverWait(driver, 30, 1)).until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"results\")));\n \t\tif (driver.findElements(By.cssSelector(\".title\")).size() < kol) {\n \t\t\tAssert.assertTrue(driver.findElement(By.cssSelector(\".title\")).getText().equals(\"FilmForSearsh\"),\n \t\t\t\t\t\"Такого фильма нет\");\n \t\t} else Assert.fail(\"Количество фильмов осталось прежним\");\n \n \n \t\tdriver.quit();\n \t}\n", "path": "src/test/java/LessonsSe/SearshFilmOk.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "testHomePageHasAHeader_531", "method name": "test Home Page Has A Header", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     AssertJUnit.assertFalse(\"\".equals(homepage.header.getText()));\n   }\n", "path": "src/test/java/LessonsSe/SampleTestNgTest.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "searshFilmNull_532", "method name": "searsh Film Null", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t// Вход и авторизация на учебный проект\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tString username = \"username\";\n \t\tdriver.findElement(By.id(username)).clear();\n \t\tdriver.findElement(By.id(username)).sendKeys(\"admin\");\n \t\tString password = \"password\";\n \t\tdriver.findElement(By.name(password)).clear();\n \t\tdriver.findElement(By.name(password)).sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"submit\")).click();\n \n \t\t// Поиск не коррктного значения\n \t\tdriver.findElement(By.id(\"q\")).sendKeys(\"sdflksdhgsd\");\n \t\tdriver.findElement(By.id(\"q\")).sendKeys(Keys.ENTER);\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t\t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".content\")));\n \t\tAssert.assertTrue(driver.findElement(By.cssSelector(\".content\")).getText().equals(\"No movies where found.\"),\n \t\t\t\t\"Нет такого фильма\");\n \n \t\tdriver.quit();\n \t}\n", "path": "src/test/java/LessonsSe/SearshFilmNull.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "addInSumFilm_533", "method name": "add In Sum Film", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t// Вход и авторизация на учебный проект\n \t\tapp.getNavigationHelper().gotoAddFilmPage();\n //\t\tdriver.get(baseUrl + \"/php4dvd/\");\n //\t\tString username = \"username\";\n //\t\tdriver.findElement(By.id(username)).clear();\n //\t\tdriver.findElement(By.id(username)).sendKeys(\"admin\");\n //\t\tString password = \"password\";\n //\t\tdriver.findElement(By.name(password)).clear();\n //\t\tdriver.findElement(By.name(password)).sendKeys(\"admin\");\n //\t\tdriver.findElement(By.name(\"submit\")).click();\n \n \t\t// Добавление нового фильма произвольного фильма\n //\t\tdriver.findElements(By.cssSelector(\".button>div>a>img\")).get(0).click();\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t\t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".required.error\")));\n \t\tdriver.findElement(By.cssSelector(\"input[name='name']\")).sendKeys(\"FilmNew\");\n \t\tdriver.findElement(By.cssSelector(\"input[name='year']\")).sendKeys(\"2010\");\n \t\tdriver.findElements(By.cssSelector(\"input[type='submit']\")).get(1).click();\n \t\tString elurl = \"movie_\" + driver.getCurrentUrl().substring(39);\n \t\tdriver.findElements(By.cssSelector(\".center>nav>ul>li>a\")).get(0).click();\n \t\t(new WebDriverWait(driver, 30, 1))\n \t\t\t\t.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".title\")));\n \t\tAssert.assertTrue(driver.findElement(By.id(elurl)).getAttribute(\"id\").equals(elurl), \"Нет такого идентифекатора фильма\");\n \n \t\tdriver.quit();\n \t}\n", "path": "src/test/java/LessonsSe/AddInSumFilm.java", "repo name": "Witch7/Se-Java-19_Voronina"}
{"repo_name": "errorInNestedFrame_534", "method name": "error In Nested Frame", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tfinal List<JavaScriptError> expectedErrors = Arrays.asList(errorWithNestedFrameHtml, errorSimpleHtml);\n \n \t\tfinal WebDriver driver = buildFFDriver();\n \t\tdriver.get(urlWithNestedFrameHtml);\n \t\t\n \t\tfinal List<JavaScriptError> jsErrors = JavaScriptError.readErrors(driver);\n \t\tassertEquals(expectedErrors.toString(), jsErrors.toString());\n \n \t\tdriver.quit();\n \t}\n", "path": "src/test/java/net/jsourcerer/webdriver/jserrorcollector/SimpleTest.java", "repo name": "atlassian/JSErrorCollector"}
{"repo_name": "errorInPopup_535", "method name": "error In Popup", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tfinal List<JavaScriptError> expectedErrors = Arrays.asList(errorPopupHtml);\n \n \t\tfinal WebDriver driver = buildFFDriver();\n \t\tdriver.get(urlWithPopupHtml);\n \t\tdriver.findElement(By.tagName(\"button\")).click();\n \n \t\tfinal List<JavaScriptError> jsErrors = JavaScriptError.readErrors(driver);\n \t\tassertEquals(expectedErrors.toString(), jsErrors.toString());\n \t\t\n \t\tdriver.quit();\n \t}\n", "path": "src/test/java/net/jsourcerer/webdriver/jserrorcollector/SimpleTest.java", "repo name": "atlassian/JSErrorCollector"}
{"repo_name": "errorInExternalJS_536", "method name": "error In External JS", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tfinal List<JavaScriptError> expectedErrors = Arrays.asList(errorExternalJs);\n \n \t\tfinal WebDriver driver = buildFFDriver();\n \t\tdriver.get(urlWithExternalJs);\n \n \t\tfinal List<JavaScriptError> jsErrors = JavaScriptError.readErrors(driver);\n \t\tassertEquals(expectedErrors.toString(), jsErrors.toString());\n \t\t\n \t\tdriver.quit();\n \t}\n", "path": "src/test/java/net/jsourcerer/webdriver/jserrorcollector/SimpleTest.java", "repo name": "atlassian/JSErrorCollector"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_537", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_538", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_539", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_540", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"Opera: failed\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_541", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_542", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_543", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "    public void function() {\n         String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n         driver.get(url);\n         WebElement button = driver.findElement(By.id(\"button\"));\n \n         try {\n             button.click();\n         } catch (MoveTargetOutOfBoundsException e) {\n             fail(\"Should not be out of bounds: \" + e.getMessage());\n         }\n     }\n", "path": "java/client/test/org/openqa/selenium/qtwebkit/hybridtests/EmbeddedWebViewTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_544", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String url = appServer.whereIs(\"click_too_big.html\");\n         driver.get(url);\n \n         WebElement element = driver.findElement(By.id(\"click\"));\n \n         element.click();\n \n         wait.until(titleIs(\"clicks\"));\n     }\n", "path": "java/client/test/org/openqa/selenium/qtwebkit/hybridtests/EmbeddedWebViewTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_545", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n         driver.get(url);\n \n         WebElement frame = driver.findElement(By.id(\"iframe1\"));\n         driver.switchTo().frame(frame);\n \n         WebElement element = driver.findElement(By.id(\"click\"));\n         element.click();\n \n         wait.until(titleIs(\"clicks\"));\n     }\n", "path": "java/client/test/org/openqa/selenium/qtwebkit/hybridtests/EmbeddedWebViewTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_546", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "handleFormWithJavascriptAction_547", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, HTMLUNIT, IPHONE, OPERA, PHANTOMJS, SAFARI, OPERA_MOBILE, MARIONETTE, QTWEBKIT},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_548", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "    public void function() {\n         String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n         driver.get(url);\n         WebElement button = driver.findElement(By.id(\"button\"));\n \n         try {\n             button.click();\n         } catch (MoveTargetOutOfBoundsException e) {\n             fail(\"Should not be out of bounds: \" + e.getMessage());\n         }\n     }\n", "path": "java/client/test/org/openqa/selenium/qtwebkit/GraphicsWebSanityTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_549", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String url = appServer.whereIs(\"click_too_big.html\");\n         driver.get(url);\n \n         WebElement element = driver.findElement(By.id(\"click\"));\n \n         element.click();\n \n         wait.until(titleIs(\"clicks\"));\n     }\n", "path": "java/client/test/org/openqa/selenium/qtwebkit/GraphicsWebSanityTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_550", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n         driver.get(url);\n \n         WebElement frame = driver.findElement(By.id(\"iframe1\"));\n         driver.switchTo().frame(frame);\n \n         WebElement element = driver.findElement(By.id(\"click\"));\n         element.click();\n \n         wait.until(titleIs(\"clicks\"));\n     }\n", "path": "java/client/test/org/openqa/selenium/qtwebkit/GraphicsWebSanityTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_551", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_552", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String url = \"qtwidget://TypingTestWidget\";\n         driver.get(url);\n \n         WebElement element = driver.findElement(By.id(\"result\"));\n         assertTrue(element.isDisplayed());\n     }\n", "path": "java/client/test/org/openqa/selenium/qtwebkit/nativetests/VisibilityTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_553", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test"], "url": true, "content": "    public void function() {\n         WebDriver.Window window = driver.manage().window();\n         Dimension originalSize = window.getSize();\n \n         try {\n             // Short in the Y dimension\n             window.setSize(new Dimension(1024, 500));\n \n             String url = \"qtwidget://TypingTestWidget\";\n             driver.get(url);\n \n             WebElement element = driver.findElement(By.id(\"result\"));\n             assertTrue(element.isDisplayed());\n         } finally {\n             window.setSize(originalSize);\n         }\n     }\n", "path": "java/client/test/org/openqa/selenium/qtwebkit/nativetests/VisibilityTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_554", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_555", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE, PHANTOMJS, SAFARI, MARIONETTE, QTWEBKIT})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "canBlockInvalidSslCertificates_556", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "denis-vilyuzhanin/selenium"}
{"repo_name": "RedMineGUI_557", "method name": "Red Mine GUI", "comments": [], "url": true, "content": "    public function(String redmineUrl) {\n \n         this.redmineURL = redmineUrl;\n \n         /*\n             I YAGNI'd and added GhostDriver into the mix but didn't need it.\n             I've subsequently deleted the tools folder, but svn now has some\n             additional binaries in it that it didn't need.\n          */\n         aDriver = new FirefoxDriver();\n         aDriver.get(redmineUrl);\n \n         wait = new WebDriverWait(aDriver, 10);\n     }\n", "path": "src/main/java/com/eviltester/redmine/RedMineGUI.java", "repo name": "eviltester/LTGBlackOps2013"}
{"repo_name": "allocateUserToProjectAndRoles_558", "method name": "allocate User To Project And Roles", "comments": [], "url": true, "content": "    public void function(User aUser, Project aProject, List<Role> roles) {\n \n         String urlForProjectMembership = redmineURL + String.format(\"/users/%d/edit?tab=memberships\", aUser.getId());\n \n         aDriver.get(urlForProjectMembership);\n \n         // div#tab-content-memberships form input[type='submit']\n         WebElement addButton = wait.until(\n                             ExpectedConditions.elementToBeClickable(By.cssSelector(\n                                     \"div#tab-content-memberships form input[type='submit']\")));\n \n         Select projects = new Select(aDriver.findElement(By.id(\"membership_project_id\")));\n         projects.selectByValue(String.valueOf(aProject.getId()));\n \n         for(Role aRole : roles){\n             WebElement roleCheckBox = aDriver.findElement(\n                                             By.cssSelector(\"input#membership_role_ids_[value='\" + aRole.getId() + \"']\"));\n \n             if(!roleCheckBox.isSelected()){\n                 roleCheckBox.click();\n             }\n         }\n \n         addButton.click();\n \n         // this might be brittle and might have to wait for AJAX action to complete\n         // probably OK because the server request will complete, we just may not\n         // hang around for the response before the page reloads with more test actions\n         // this is a potential source of tech debt\n \n \n     }\n", "path": "src/main/java/com/eviltester/redmine/RedMineGUI.java", "repo name": "eviltester/LTGBlackOps2013"}
{"repo_name": "goToMainPage_559", "method name": "go To Main Page", "comments": [], "url": true, "content": "private void function() {\n \t    driver.get(baseUrl + \"/php4dvd/\");\n \t    loginPage = PageFactory.initElements(driver, LoginPage.class);\n \t    somePage = PageFactory.initElements(driver, InternalPage.class);\n \t}\n", "path": "eclipse-selenium-test-fom/src/com/example/tests/LoginTest.java", "repo name": "fom-slav/selenium-test-fom"}
{"repo_name": "testRenameEmail_560", "method name": "test Rename Email", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n package com.example.tests;\n \n import java.util.regex.Pattern;\n import java.util.concurrent.TimeUnit;\n import org.junit.*;\n import static org.junit.Assert.*;\n import static org.hamcrest.CoreMatchers.*;\n import org.openqa.selenium.*;\n import org.openqa.selenium.firefox.FirefoxDriver;\n import org.openqa.selenium.support.ui.Select;\n \n public class RenameEmail {\n   private WebDriver driver;\n   private String baseUrl;\n   private boolean acceptNextAlert = true;\n   private StringBuffer verificationErrors = new StringBuffer();\n \n   @Before\n   public void setUp() throws Exception {\n     driver = new FirefoxDriver();\n     baseUrl = \"http://localhost/\";\n     driver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n   }\n \n   @Test\n   public void testUntitled2() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n     driver.findElement(By.name(\"submit\")).click();\n     driver.findElement(By.linkText(\"My profile\")).click();\n     driver.findElement(By.id(\"email\")).clear();\n     driver.findElement(By.id(\"email\")).sendKeys(\"admin@admin.ru\");\n     driver.findElement(By.name(\"submit\")).click();\n     driver.findElement(By.name(\"email\")).clear();\n     driver.findElement(By.name(\"email\")).sendKeys(\"admin\");\n     driver.findElement(By.id(\"password\")).clear();\n     driver.findElement(By.id(\"password\")).sendKeys(\"admin\");\n     driver.findElement(By.linkText(\"Log out\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to log out[\\\\s\\\\S]$\"));\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n   }\n \n   @After\n   public void tearDown() throws Exception {\n     driver.quit();\n     String verificationErrorString = verificationErrors.toString();\n     if (!\"\".equals(verificationErrorString)) {\n       fail(verificationErrorString);\n     }\n   }\n \n   private boolean isElementPresent(By by) {\n     try {\n       driver.findElement(by);\n       return true;\n     } catch (NoSuchElementException e) {\n       return false;\n     }\n   }\n \n   private boolean isAlertPresent() {\n     try {\n       driver.switchTo().alert();\n       return true;\n     } catch (NoAlertPresentException e) {\n       return false;\n     }\n   }\n \n   private String closeAlertAndGetItsText() {\n     try {\n       Alert alert = driver.switchTo().alert();\n       String alertText = alert.getText();\n       if (acceptNextAlert) {\n         alert.accept();\n       } else {\n         alert.dismiss();\n       }\n       return alertText;\n     } finally {\n       acceptNextAlert = true;\n     }\n   }\n }\n   }\n", "path": "SeleniumIDE_Autorecords/RenameEmail.java", "repo name": "fom-slav/selenium-test-fom"}
{"repo_name": "testLogInOut_561", "method name": "test Log In Out", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n     driver.findElement(By.name(\"submit\")).click();\n     driver.findElement(By.linkText(\"Log out\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to log out[\\\\s\\\\S]$\"));\n   }\n", "path": "SeleniumIDE_Autorecords/log in-out.java", "repo name": "fom-slav/selenium-test-fom"}
{"repo_name": "testLogInOut_562", "method name": "test Log In Out", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/php4dvd/\");\n         driver.findElement(By.name(\"password\")).clear();\n         driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n         driver.findElement(By.name(\"submit\")).click();\n         driver.findElement(By.linkText(\"Log out\")).click();\n         assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to log out[\\\\s\\\\S]$\"));\n     }\n", "path": "idea-selenium-test-fom/src/LogInOut.java", "repo name": "fom-slav/selenium-test-fom"}
{"repo_name": "goToMainPage_563", "method name": "go To Main Page", "comments": [], "url": true, "content": "  private void function() {\n \t\t// open main page\n \t    driver.get(baseUrl + \"/php4dvd/\");\n \t}\n", "path": "eclipse-selenium-test-fom/src/com/example/tests/CreateNewUserTest.java", "repo name": "fom-slav/selenium-test-fom"}
{"repo_name": "goToMainPage_564", "method name": "go To Main Page", "comments": [], "url": true, "content": "  private void function() {\n \t\t// open main page\n \t    driver.get(baseUrl + \"/php4dvd/\");\n   }\n", "path": "eclipse-selenium-test-fom/src/com/example/tests/ChangeEmailTest.java", "repo name": "fom-slav/selenium-test-fom"}
{"repo_name": "testCaptureTutorial13_565", "method name": "test Capture Tutorial13", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString url = \"conts/web/view/tutorial/interacting-with-controllers\";\n \t\tdriver.get(url);\n \n \t\t// 画面キャプチャ\n \t\tassertionView.assertView(\"tutorial13\", null, HIDE_ELEMENTS);\n \t}\n", "path": "pitalium-sample/src/main/java/com/htmlhifive/pitalium/sample/PtlSampleTest.java", "repo name": "hifive/hifive-test-library"}
{"repo_name": "testCaptureTutorialTop_566", "method name": "test Capture Tutorial Top", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString url = \"conts/web/view/tutorial/menu\";\n \t\tdriver.get(url);\n \n \t\tPtlWebElement e = (PtlWebElement) driver.findElement(By.cssSelector(\".wikimodel-freestanding\"));\n \n \t\tJavascriptExecutor jse = (JavascriptExecutor) driver;\n \t\tjse.executeScript(\"arguments[0].width=arguments[1]\", e, e.getRect().getWidth());\n \t\tjse.executeScript(\"arguments[0].height=arguments[1]\", e, e.getRect().getHeight());\n \t\tjse.executeScript(\"arguments[0].src=''\", e);\n \n \t\t// 画面キャプチャ\n \t\tassertionView.assertView(\"tutorial13\", null, HIDE_ELEMENTS);\n \t}\n", "path": "pitalium-sample/src/main/java/com/htmlhifive/pitalium/sample/PtlSampleTest.java", "repo name": "hifive/hifive-test-library"}
{"repo_name": "goToURL_567", "method name": "go To URL", "comments": [], "url": true, "content": "    private void function(String url) {\n         driver.navigate().to(url);\n     }\n", "path": "src/main/java/ui/PageTransporter.java", "repo name": "j4z31/QADEV04-Coursera-GUI"}
{"repo_name": "testOpenSite_568", "method name": "test Open Site", "comments": ["Test"], "url": true, "content": "    public void function(){\n         browser.open(sampleUrl);\n         verify(mocked_webDriver).get(sampleUrl);\n     }\n", "path": "src/test/java/org/mands/test/framework/BrowserTest.java", "repo name": "marcandreuf/ms_bdd_example"}
{"repo_name": "testCenarioUm_569", "method name": "test Cenario Um", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl);\n     assertTrue(isElementPresent(By.linkText(\"Conheça os Deputados\")));\n     \n     driver.findElement(By.linkText(\"Conheça os Deputados\")).click();\n     assertEquals(\"Pesquisa de Deputados\", driver.findElement(By.xpath(\"//div[@id='content']/div/div[2]/h6\")).getText());\n     assertEquals(\"Pesquisar\", driver.findElement(By.id(\"Pesquisa2\")).getAttribute(\"value\"));\n     \n     driver.findElement(By.id(\"nome\")).clear();\n     driver.findElement(By.id(\"nome\")).sendKeys(\"Tiririca\");\n     \n     new Select(driver.findElement(By.id(\"uf\"))).selectByVisibleText(\"SP\");\n     \n     driver.findElement(By.id(\"Pesquisa2\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome civil: FRANCISCO EVERARDO OLIVEIRA SILVA\".equals(driver.findElement(By.cssSelector(\"ul.visualNoMarker > li\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.linkText(\"Projetos de sua autoria\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60)\n     \t\tfail(\"timeout\");\n     \t\n     \ttry {\n     \t\tif (\"Data de apresentação: 7/6/2011\\nEmenta: Altera a Lei nº 10.753, de 30 de outubro de 2003, que institui a Política Nacional do Livro, para dispor sobre a criação do Vale-Livro.\".equals(driver.findElement(By.xpath(\"//form[@id='frmListaProp']/table/tbody[21]/tr[2]/td[2]/p[2]\")).getText()))\n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.linkText(\"próxima\")).click();\n     assertTrue(driver.getCurrentUrl().matches(\"^http://www\\\\.camara\\\\.gov\\\\.br/internet/sileg/Prop_lista\\\\.asp[\\\\s\\\\S]Pagina=2&Autor=530193&Limite=N$\"));\n     \n     driver.navigate().back();\n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome civil: FRANCISCO EVERARDO OLIVEIRA SILVA\".equals(driver.findElement(By.cssSelector(\"ul.visualNoMarker > li\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.linkText(\"Discursos em plenário\")).click();\n     \n     try {\n       assertEquals(\"Discursos e Notas Taquigráficas\", driver.getTitle());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     \n     driver.findElement(By.linkText(\"Retorna a pesquisa.\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome civil: FRANCISCO EVERARDO OLIVEIRA SILVA\".equals(driver.findElement(By.cssSelector(\"ul.visualNoMarker > li\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.linkText(\"Biografia\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60)\n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"SILVA, Francisco Everardo Oliveira (Co-autor). As Piadas fantárdigas do Tiririca. São Paulo: Matrix, 2006.\".equals(driver.findElement(By.xpath(\"//div[@id='bioDeputado']/div[9]/div[2]\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.cssSelector(\"a[title=\\\"Proposições Transformadas em Norma Jurídica\\\"] > b\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"PL 4682/2012\".equals(driver.findElement(By.cssSelector(\"span.nomeProposicao\")).getText())) break; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.xpath(\"(//a[contains(text(),'Atividade Legislativa')])[2]\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Agenda\".equals(driver.findElement(By.cssSelector(\"a[alt=\\\"Agenda\\\"]\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Comissões\".equals(driver.findElement(By.cssSelector(\"a[alt=\\\"Comissões\\\"]\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60)\n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Conheça o Processo Legislativo\".equals(driver.findElement(By.cssSelector(\"a[alt=\\\"Conheça o Processo Legislativo\\\"]\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n   }\n", "path": "ExercicioCinco/test/Cenarios.java", "repo name": "maxan/Testes_Automatizados"}
{"repo_name": "testCenarioDois_570", "method name": "test Cenario Dois", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl);\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Conheça os Deputados\".equals(driver.findElement(By.linkText(\"Conheça os Deputados\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.linkText(\"Conheça os Deputados\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"TIRIRICA\");\n     \n     driver.findElement(By.id(\"rbDeputado6\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: TIRIRICA - PR/SP\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"JEAN WYLLYS\");\n     \n     driver.findElement(By.id(\"rbDeputado6\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: JEAN WYLLYS - PSOL/RJ\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"JOÃO ARRUDA\");\n     \n     driver.findElement(By.id(\"rbDeputado6\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: JOÃO ARRUDA - PMDB/PR\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"ZOINHO\");\n     \n     driver.findElement(By.id(\"rbDeputado6\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: ZOINHO - PR/RJ\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"ANTHONY GAROTINHO\");\n     \n     driver.findElement(By.id(\"rbDeputado6\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: ANTHONY GAROTINHO - PR/RJ\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"ARIOSTO HOLANDA\");\n     \n     driver.findElement(By.id(\"rbDeputado6\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { if (\"Nome Parlamentar: ARIOSTO HOLANDA - PROS/CE\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\tbreak; \n     \t} catch (Exception e) {\n     \t\t//\n     \t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"ARTUR BRUNO\");\n     \n     driver.findElement(By.id(\"rbDeputado6\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: ARTUR BRUNO - PT/CE\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n   }\n", "path": "ExercicioCinco/test/Cenarios.java", "repo name": "maxan/Testes_Automatizados"}
{"repo_name": "testCenarioTres_571", "method name": "test Cenario Tres", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl);\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Conheça os Deputados\".equals(driver.findElement(By.linkText(\"Conheça os Deputados\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.findElement(By.linkText(\"Conheça os Deputados\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"TIRIRICA\");\n     \n     driver.findElement(By.id(\"rbDeputado5\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: TIRIRICA - PR/SP\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Relatório de Votações em Plenário\".equals(driver.getTitle())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"JEAN WYLLYS\");\n     \n     driver.findElement(By.id(\"rbDeputado5\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: JEAN WYLLYS - PSOL/RJ\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Relatório de Votações em Plenário\".equals(driver.getTitle())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"JOÃO ARRUDA\");\n     \n     driver.findElement(By.id(\"rbDeputado5\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: JOÃO ARRUDA - PMDB/PR\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"ZOINHO\");\n     \n     driver.findElement(By.id(\"rbDeputado5\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: ZOINHO - PR/RJ\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Relatório de Votações em Plenário\".equals(driver.getTitle())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"ANTHONY GAROTINHO\");\n     \n     driver.findElement(By.id(\"rbDeputado5\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: ANTHONY GAROTINHO - PR/RJ\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Relatório de Votações em Plenário\".equals(driver.getTitle())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"ARIOSTO HOLANDA\");\n     \n     driver.findElement(By.id(\"rbDeputado5\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"Nome Parlamentar: ARIOSTO HOLANDA - PROS/CE\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"Relatório de Votações em Plenário\".equals(driver.getTitle())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     driver.navigate().back();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Legislatura Atual - Deputados em exercício\".equals(driver.findElement(By.cssSelector(\"h6.header\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Pesquisar\".equals(driver.findElement(By.id(\"Pesquisa\")).getAttribute(\"value\"))) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     new Select(driver.findElement(By.id(\"deputado\"))).selectByVisibleText(\"ARTUR BRUNO\");\n     \n     driver.findElement(By.id(\"rbDeputado5\")).click();\n     driver.findElement(By.id(\"Pesquisa\")).click();\n     \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Nome Parlamentar: ARTUR BRUNO - PT/CE\".equals(driver.findElement(By.cssSelector(\"#content > h3\")).getText())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) \n     \t\tfail(\"timeout\");\n     \t\n     \ttry { \n     \t\tif (\"Relatório de Votações em Plenário\".equals(driver.getTitle())) \n     \t\t\tbreak; \n \t\t} catch (Exception e) {\n \t\t\t//\n \t\t}\n     \t\n     \tThread.sleep(1000);\n     }\n   }\n", "path": "ExercicioCinco/test/Cenarios.java", "repo name": "maxan/Testes_Automatizados"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_572", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "qamate/iOS-selenium-server"}
{"repo_name": "doFetchInvest_573", "method name": "do Fetch Invest", "comments": [" @params", " ", " By now, this function doesn't return anything, just prints in screen the", " invest name and the amount of money in it."], "url": true, "content": "\tpublic void function(){\n \t\tthis.driver.get(urlInvest);\n \t\tList<WebElement> totals = driver.findElements(By.xpath(tableInvestTotals));\n \n \t\tList<WebElement> names = driver.findElements(By.xpath(tableInvestNames));\n \t\tHashtable<String,String> finalList = new Hashtable<String,String>();\n \t\tfor ( WebElement total :  totals ){\n \t\t\tfor(WebElement name : names ) {\n \t\t\t\tfinalList.put(name.getText(),total.getText() );\n \t\t\t}\n \t\t}\n \t\t\n \t\tSystem.out.println(\"Now, the final act: \" + Arrays.toString(finalList.entrySet().toArray()));\n \t}\n", "path": "src/SRFetcher.java", "repo name": "bit-man/SantanderRioFetcher"}
{"repo_name": "getTitle_Time_Content_574", "method name": "getTitle Time Content", "comments": [" È¡µÃÐÂÎÅ±êÌâ_Ê±¼ä_ÕýÎÄµÄlist", " @param url ÐÂÎÅurl", " @return Ò»ÌõÐÂÎÅ±êÌâ_Ê±¼ä_ÕýÎÄµÄlist£¬0£º±êÌâ1£ºÊ±¼ä2£ºÕýÎÄ", " @throws Exception"], "url": true, "content": "\tpublic List<String> function(String url) throws Exception{\n \t\tList<String> news = new ArrayList<String>();\n \t\t\n \t\tthis.webDriver.get(url);\n \t\t// title\n \t\tList<WebElement> listTitle1 = this.webDriver.findElements(By.cssSelector(\"h1[id='title']\"));\n \t\tList<WebElement> listTitle2 = this.webDriver.findElements(By.cssSelector(\"span[id='title']\"));\n \t\tif(listTitle1.size() == 1){\n \t\t\tthis.title = listTitle1.get(0).getText().trim();\n \t\t}else if(listTitle2.size() == 1){\n \t\t\tthis.title = listTitle2.get(0).getText().trim();\n \t\t}else{\n \t\t\tthis.title = this.webDriver.getTitle();\n \t\t}\n \t\t\n \t\t// time\n \t\tList<WebElement> listTime1 = this.webDriver.findElements(By.cssSelector(\"span[id='pubtime']\"));\n \t\tList<WebElement> listTime2 = this.webDriver.findElements(By.cssSelector(\"span[class='time']\"));\n \t\tList<WebElement> listTime3 = this.webDriver.findElements(By.cssSelector(\"div[id='pubtimeandfrom']\"));\n \t\tList<WebElement> listTime4 = this.webDriver.findElements(By.cssSelector(\"td[class='gray fs12']\"));\n \t\tif(listTime1.size() == 1){\n \t\t\tthis.time = listTime1.get(0).getText().trim();\n \t\t}else if(listTime2.size() == 1){\n \t\t\tthis.time = listTime2.get(0).getText().trim();\n \t\t}else if(listTime3.size() == 1){\n \t\t\tthis.time = listTime3.get(0).getText().trim().substring(0, 19);\n \t\t}else if(listTime4.size() == 1){\n \t\t\tthis.time = listTime4.get(0).getText().trim().substring(0, 20);\n \t\t}else{\n \t\t\tthis.time = \"null\";\n \t\t}\n \t\t\n \t\t// content\n \t\tList<WebElement> list1 = this.webDriver.findElements(By.cssSelector(\"div[id='content']\"));\n \t\tList<WebElement> list2 = this.webDriver.findElements(By.cssSelector(\"div[id='Content']\"));\n \t\tList<WebElement> list3 = this.webDriver.findElements(By.cssSelector(\"div[id='contentblock']\"));\n \t\tList<WebElement> list4 = this.webDriver.findElements(By.cssSelector(\"div[class='article']\"));\n \t\tList<WebElement> list5 = this.webDriver.findElements(By.cssSelector(\"span[id='content']\"));\n \t\tList<WebElement> list6 = this.webDriver.findElements(By.cssSelector(\"div[class='bai14']\"));\n \t\tif(list1.size() == 1){\n \t\t\tthis.content = list1.get(0).getText().trim();\n \t\t}else if(list2.size() == 1){\n \t\t\tthis.content = list2.get(0).getText().trim();\n \t\t}else if(list3.size() == 1){\n \t\t\tthis.content = list3.get(0).getText().trim();\n \t\t}else if(list4.size() == 1){\n \t\t\tthis.content = list4.get(0).getText().trim();\n \t\t}else if(list5.size() == 1){\n \t\t\tthis.content = list5.get(0).getText().trim();\n \t\t}else if(list6.size() == 1){\n \t\t\tthis.content = list6.get(0).getText().trim();\n \t\t}else{\n \t\t\tthis.content = \"null\";\n \t\t}\n \t\n \t\tnews.add(this.title);\n \t\tnews.add(this.time);\n \t\tnews.add(this.content);\n \t\n \t\treturn news;\n \t}\n", "path": "src/cn/com/sina/crawler/search/XinhuaCrawlerWebdriver.java", "repo name": "hellobingbing/MySinaProject"}
{"repo_name": "getIfengText_575", "method name": "get Ifeng Text", "comments": [" ·ï»ËÏà¹ØÆµµÀµÄÐÂÎÅ±êÌâ¡¢Ê±¼ä¡¢ÆÀÂÛÊý", " @param source Ïà¹ØÆµµÀµØÖ·", " @return ·ï»ËÍø¼¸¸öÆµµÀÐÂÎÅµÄ¼¯ºÏ"], "url": true, "content": "\tpublic static List<List<String>> function(List<String> source){\n \t\tList<List<String>> listIfengText = null;\n \t\tlistIfengText = new ArrayList<List<String>>();\n \t\tString NBAUrl = \"http://3g.ifeng.com/sports/nba/nbai?vt=5&mid=8Z5kpx\";\n \t\tString zongheUrl = \"http://3g.ifeng.com/sports/zonghetiyu/dir?vt=5&cid=148&mid=8Z5kpx\";\n \t\tString pinglunUrl = \"http://3g.ifeng.com/sports/titanpinglun/dir?vt=5&cid=150&mid=8Z5kpx\";\n \t\t\n \t\tWebDriver webDriver = new FirefoxDriver();\n \t\tList<WebElement> ulList = null;\n \t\tList<WebElement> headline = null;\n \t\tList<WebElement> time = null;\n \t\tList<WebElement> comment = null;\n \t\tfor(int i = 0;i<source.size();i++){\n \t\t\tList<String> listUrls = null;\n \t\t\tList<String> listText = null;\n \t\t\tlistUrls = new ArrayList<String>();\n \t\t\tlistText = new ArrayList<String>();\n \t\t\t\n \t\t\tif(source.get(i).equals(NBAUrl)){\n \t\t\t\twebDriver.get(source.get(i));\n \t\t\t\tulList = webDriver.findElements(By.cssSelector(\"ul[class='slLis']\"));\n \t\t\t\tlistUrls.addAll(getPartUrls(ulList));\n \t\t\t\t\n \t\t\t\tfor(String url : listUrls){\n \t\t\t\t\tStringBuffer sb = null;\n \t\t\t\t\tsb = new StringBuffer();\n \t\t\t\t\twebDriver.get(url);\n \t\t\t\t\theadline = webDriver.findElements(By.cssSelector(\"div[class='acTxtTit']>h1\"));\n \t\t\t\t\ttime = webDriver.findElements(By.cssSelector(\"div[class='acTxtTit']>div>div\"));\n \t\t\t\t\tcomment = webDriver.findElements(By.cssSelector(\"div[class='acCmtAll']\"));\n \t\t\t\t\tif((headline.size() == 1) && (time.size() == 1) && (comment.size() == 1)){\n \t\t\t\t\t\tsb.append(headline.get(0).getText() + \"\\t\").append(time.get(0).getText() + \"\\t\").append(comment.get(0).getText());\n \t\t\t\t\t\tlistText.add(sb.toString());\n \t\t\t\t\t}\t\t\t\t\t\n \t\t\t\t}\n \t\t\t\tlistIfengText.add(listText);\n \t\t\t}else if(source.get(i).equals(pinglunUrl)){\n \t\t\t\twebDriver.get(source.get(i));\n \t\t\t\tList<WebElement> divList = webDriver.findElements(By.cssSelector(\"div[class='nlist']\"));\n \t\t\t\tfor(int j = 0;j<divList.size();j++){\n \t\t\t\t\tList<WebElement> list = divList.get(j).findElements(By.tagName(\"ul\")).get(0).findElements(By.tagName(\"li\"));\n \t\t\t\t\tfor(int k = 0;k<list.size();k++){\n \t\t\t\t\t\tlistUrls.add(list.get(k).findElements(By.tagName(\"a\")).get(0).getAttribute(\"href\"));\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t\n \t\t\t\tfor(String url : listUrls){\n \t\t\t\t\tStringBuffer sb = null;\n \t\t\t\t\tsb = new StringBuffer();\n \t\t\t\t\twebDriver.get(url);\n \t\t\t\t\theadline = webDriver.findElements(By.cssSelector(\"div[class='titpics']>p[class='titin']\"));\n \t\t\t\t\ttime = webDriver.findElements(By.cssSelector(\"div[class='titpics']>p[class='titcc']\"));\n \t\t\t\t\tcomment = webDriver.findElements(By.cssSelector(\"form[name='plForm']>div>a[href]\"));\n \t\t\t\t\tif((headline.size() == 1) && (time.size() == 1) && (comment.size() == 1)){\n \t\t\t\t\t\tsb.append(headline.get(0).getText() + \"\\t\").append(time.get(0).getText() + \"\\t\");\n \t\t\t\t\t\tcomment.get(0).click();\n \t\t\t\t\t\tList<WebElement> elements = webDriver.findElements(By.cssSelector(\"div[class='pnpage']>span[class='font1']\"));\n \t\t\t\t\t\tif(elements.size() == 1){\n \t\t\t\t\t\t\tsb.append(elements.get(0).getText());\n \t\t\t\t\t\t}\n \t\t\t\t\t\tlistText.add(sb.toString());\n \t\t\t\t\t}\t\t\n \t\t\t\t}\n \t\t\t\tlistIfengText.add(listText);\n \t\t\t}else if(source.get(i).equals(zongheUrl)){\n \t\t\t\twebDriver.get(source.get(i));\n \t\t\t\tList<WebElement> divList = webDriver.findElements(By.cssSelector(\"div[class='nlist']\"));\n \t\t\t\tfor(int j = 0;j<divList.size();j++){\n \t\t\t\t\tList<WebElement> list = divList.get(j).findElements(By.tagName(\"ul\")).get(0).findElements(By.tagName(\"li\"));\n \t\t\t\t\tfor(int k = 0;k<list.size();k++){\n \t\t\t\t\t\tlistUrls.add(list.get(k).findElements(By.tagName(\"a\")).get(0).getAttribute(\"href\"));\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t\n \t\t\t\tfor(String url : listUrls){\n \t\t\t\t\tStringBuffer sb = null;\n \t\t\t\t\tsb = new StringBuffer();\n \t\t\t\t\twebDriver.get(url);\n \t\t\t\t\theadline = webDriver.findElements(By.cssSelector(\"div[class='titpics']>p[class='titin']\"));\n \t\t\t\t\ttime = webDriver.findElements(By.cssSelector(\"div[class='titpics']>p[class='titcc']\"));\n \t\t\t\t\tcomment = webDriver.findElements(By.cssSelector(\"form[name='plForm']>div>a[href]\"));\n \t\t\t\t\tif((headline.size() == 1) && (time.size() == 1) && (comment.size() == 1)){\n \t\t\t\t\t\tsb.append(headline.get(0).getText() + \"\\t\").append(time.get(0).getText() + \"\\t\");\n \t\t\t\t\t\tcomment.get(0).click();\n \t\t\t\t\t\tList<WebElement> elements = webDriver.findElements(By.cssSelector(\"div[class='pnpage']>span[class='font1']\"));\n \t\t\t\t\t\tif(elements.size() == 1){\n \t\t\t\t\t\t\tsb.append(elements.get(0).getText());\n \t\t\t\t\t\t}\n \t\t\t\t\t\tlistText.add(sb.toString());\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\tlistIfengText.add(listText);\n \t\t\t}else{\n \t\t\t\t\n \t\t\t\twebDriver.get(source.get(i));\n \t\t\t\tulList = webDriver.findElements(By.cssSelector(\"ul[class='report_alive']>li>div\"));\n \t\t\t\tlistText = getPartText(ulList);\n \t\t\t\tlistIfengText.add(listText);\t\t\t\t\n \t\t\t}\t\t\n \t\t}\n \t\twebDriver.close();\n \t\treturn listIfengText;\n \t\t\n \t}\n", "path": "src/cn/com/sina/crawler/specificwebsite/IfengHtmlCrawler.java", "repo name": "hellobingbing/MySinaProject"}
{"repo_name": "testStudentListPage_576", "method name": "test Student List Page", "comments": ["Test"], "url": true, "content": "    public void function() {\n             try {\n             driver.get(studentListUrl + usernameParamPrefix + userA);\n             Select schoolSelect = new Select(driver.findElement(By.id(\"schoolSelect\")));\n             schoolSelect.selectByVisibleText(\"Illinois PS145\");\n             Select courseSelect = new Select(driver.findElement(By.id(\"courseSelect\")));\n             courseSelect.selectByVisibleText(\"Algebra\");\n             \n             // Verifying section 1 content\n             Select sectionSelect = new Select(driver.findElement(By.id(\"sectionSelect\")));\n             sectionSelect.selectByVisibleText(\"Section1\");\n                \n                 WebElement textDiv = driver.findElement(By.id(\"studentDiv\"));\n             String studentText = textDiv.getText();\n             \n             assertTrue(studentText.contains(\"Dawson Deborah\"));\n             assertFalse(studentText.contains(\"Random name\"));\n             \n             // Verifying section 2\n             sectionSelect = new Select(driver.findElement(By.id(\"sectionSelect\")));\n             sectionSelect.selectByVisibleText(\"Section2\");\n                \n                 WebElement temp = driver.findElement(By.id(\"studentDiv\"));\n             studentText = temp.getText();\n             \n             assertTrue(studentText.contains(\"Marks Hector\"));\n             assertFalse(studentText.contains(\"Dawson Deborah\"));\n         } catch (Exception e) {\n             System.err.println(e.getMessage());\n         } finally {\n             driver.close();\n         }\n     }   \n", "path": "sli/dashboard/src/integrationtest/java/org/slc/sli/selenium/controller/StudentListSeleniumITest.java", "repo name": "inbloom/secure-data-service"}
{"repo_name": "testUsersHaveDiffLists_577", "method name": "test Users Have Diff Lists", "comments": ["Test"], "url": true, "content": "    public void function() {\n         try {\n             driver.get(studentListUrl + usernameParamPrefix + userA);\n             Select userASchoolSelect = new Select(driver.findElement(By.id(\"schoolSelect\")));\n             String userASchoolItem = userASchoolSelect.getOptions().get(1).getText();\n             \n             driver.get(studentListUrl + usernameParamPrefix + userB);\n             Select userBSchoolSelect = new Select(driver.findElement(By.id(\"schoolSelect\")));\n             String userBSchoolItem = userBSchoolSelect.getOptions().get(1).getText();\n             \n             assertFalse(userBSchoolItem.equals(userASchoolItem));\n             } catch (Exception e) {\n                 System.err.println(e.getMessage());\n             } finally {\n                 driver.close();\n             }\n     }\n", "path": "sli/dashboard/src/integrationtest/java/org/slc/sli/selenium/controller/StudentListSeleniumITest.java", "repo name": "inbloom/secure-data-service"}
{"repo_name": "testLoginPage_578", "method name": "test Login Page", "comments": ["Test"], "url": true, "content": "    public void function() {\n         driver.get(loginUrl);\n         \n         /*\n          * Test for invalid username\n          */\n         WebElement username = driver.findElement(By.name(\"username\"));\n         username.sendKeys(testBadUser);\n         // Before submission - error message should not be displayed\n         WebElement errorMessage = driver.findElement(By.name(\"errorMessage\"));\n         assertTrue(errorMessage.getCssValue(\"display\").equalsIgnoreCase(\"none\"));\n \n         WebElement loginForm = driver.findElement(By.name(\"loginForm\"));\n         loginForm.submit();\n         // After submission - error message should be displayed\n         errorMessage = driver.findElement(By.name(\"errorMessage\"));\n         assertTrue(errorMessage.getCssValue(\"display\").equalsIgnoreCase(\"block\"));\n \n         /*\n          * Test for a valid username\n          */\n         username = driver.findElement(By.name(\"username\"));\n         username.sendKeys(testUser);\n         \n         loginForm = driver.findElement(By.name(\"loginForm\"));\n         loginForm.submit();\n         WebElement body = driver.findElement(By.tagName(\"body\"));\n         String bodyText = body.getText();\n         assertTrue(bodyText.contains(\"Select an application\"));\n         driver.close();\n     }\n", "path": "sli/dashboard/src/integrationtest/java/org/slc/sli/selenium/controller/LoginSeleniumITest.java", "repo name": "inbloom/secure-data-service"}
{"repo_name": "parseAllEmail_579", "method name": "parse All Email", "comments": [], "url": true, "content": "    private List<String> function(HashSet<String> midSet) {\n         ArrayList<String> mailList = new ArrayList<>();\n         for (String mid : midSet) {\n             String urlT = \"http://m0.mail.sina.com.cn/classic/readmail.php?webmail=1&fid=new&mid=\" + mid;\n             driver.get(urlT);\n             Document mailDoc = Jsoup.parseBodyFragment(driver.getPageSource());\n             Element mailBody = mailDoc.body();\n             String mailContent = mailBody.text();\n \n             if (filter == null || !filter.filter(mailContent)) {\n                 continue;\n             }\n             mailList.add(mailBody.text());\n         }\n         return mailList;\n     }\n", "path": "src/crawler/SinaMailCrawler.java", "repo name": "rockyzhengwu/sina-mail-tool"}
{"repo_name": "checkIfThereAreFields_580", "method name": "check If There Are Fields", "comments": ["Test"], "url": true, "content": "    public void function(){\n         FirefoxDriver driver = new FirefoxDriver();\n         driver.get(baseUrl);\n \n         int numberOfInputs = 2;\n \n         List<WebElement> inputs = driver.findElementsByCssSelector(\"input\");\n         WebElement button = driver.findElementByCssSelector(\"button\");\n \n         assertTrue(inputs.size() == numberOfInputs && button != null);\n         driver.quit();\n     }\n", "path": "test/LogInTest.java", "repo name": "rzymek01/ProjektGrupowy2015"}
{"repo_name": "testLoginAction_581", "method name": "test Login Action", "comments": ["Test"], "url": true, "content": "    public void function(){\n         FirefoxDriver driver = new FirefoxDriver();\n         driver.get(baseUrl);\n \n         List<WebElement> inputs = driver.findElementsByCssSelector(\"input\");\n \n         WebElement roomInput = inputs.get(0);\n         roomInput.sendKeys(\"13\");\n         WebElement loginInput = inputs.get(1);\n         loginInput.sendKeys(\"test\");\n \n         driver.findElementByCssSelector(\"button\").click();\n \n         String url = driver.getCurrentUrl();\n \n         assertTrue(url != baseUrl);\n         driver.quit();\n     }\n", "path": "test/LogInTest.java", "repo name": "rzymek01/ProjektGrupowy2015"}
{"repo_name": "createHiringPage_582", "method name": "create Hiring Page", "comments": [], "url": true, "content": "    public String function(HiringPageData hiringPageData) {\n         PhantomJSDriver driver = createConfiguredDriver();\n         loginToConfluence(driver);\n         driver.get(confluenceUrl + CREATE_HIRING_PAGE_FROM_TEMPLATE_URL);\n         logger.info(\"At page \" + driver.getCurrentUrl());\n         sleep(1000L); // ugly hack to wait until page loads\n         driver.findElement(By.name(\"title\")).sendKeys(hiringPageData.getFullName());\n         fillPageWithCandidateData(driver, hiringPageData);\n         driver.findElement(By.name(\"confirm\")).click();\n         String newPageUrl = driver.getCurrentUrl();\n         logger.info(\"New page created at \" + newPageUrl);\n         return newPageUrl;\n     }\n", "path": "src/main/java/com/softwaremill/janusz_backend/hiring/services/wiki_page/ConfluenceClicker.java", "repo name": "softwaremill/janusz-backend"}
{"repo_name": "getContactData_583", "method name": "get Contact Data", "comments": [], "url": true, "content": "    public List<ContactTableRow>  function() {\n         PhantomJSDriver driver = createConfiguredDriver();\n         loginToConfluence(driver);\n         driver.get(confluenceUrl + CONTACTS_PAGE_URL);\n         logger.info(\"Extracting contacts data from \" + driver.getCurrentUrl());\n         List<ContactTableRow> contacts = extractContactsData(driver);\n         return contacts;\n     }\n", "path": "src/main/java/com/softwaremill/janusz_backend/hiring/services/wiki_page/ConfluenceClicker.java", "repo name": "softwaremill/janusz-backend"}
{"repo_name": "openMainPage_584", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic1/NavigationHelper1.java", "repo name": "AlesiaIsachenko/test-lesson3"}
{"repo_name": "openRelativeUrl_585", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic1/NavigationHelper1.java", "repo name": "AlesiaIsachenko/test-lesson3"}
{"repo_name": "openMainPage_586", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "AlesiaIsachenko/test-lesson3"}
{"repo_name": "openRelativeUrl_587", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "AlesiaIsachenko/test-lesson3"}
{"repo_name": "testCreationFilmWithoutYear_588", "method name": "test Creation Film Without Year", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \tdriver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"submit\")).click();\n \tWebDriverWait wait=new WebDriverWait(driver, 10);\n \twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")));\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n     driver.findElement(By.name(\"imdbid\")).clear();\n     driver.findElement(By.name(\"imdbid\")).sendKeys(\"1\");\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"film\");\n     driver.findElement(By.id(\"submit\")).click();\n     wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"input[class=\\\"required digits error\\\"]\")));\n     driver.quit();\n   }\n", "path": "src/test/java/ru/stqa/selenium/CreationFilmWithoutYear.java", "repo name": "Olbar/java_selenium_training"}
{"repo_name": "testSearchFilmNotFound_589", "method name": "test Search Film Not Found", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \tdriver.findElement(By.id(\"username\")).clear();\n \tdriver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"password\")).clear();\n \tdriver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"submit\")).click();\n \tWebDriverWait wait=new WebDriverWait(driver, 10);\n \twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"div.movie_cover\")));\n \tdriver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n \twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"input#imdbsearch\")));\n     driver.findElement(By.id(\"imdbsearch\")).clear();\n     driver.findElement(By.id(\"imdbsearch\")).sendKeys(\"ertretretretersdfdsfdsfds\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"div.content\")));\n     int count1=driver.findElement(By.cssSelector(\"div.content > div\")).findElements(By.tagName(\"tr\")).size();\n     assertEquals(count1,0);\n     System.out.println(\"Íàéäåíî ôèëüìîâ -\"+ count1+\"øò\");\n     driver.findElement(By.id(\"imdbsearch\")).clear();\n     driver.findElement(By.id(\"imdbsearch\")).sendKeys(\"abfdgfddfgfdgdf\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"div.content\")));\n     int count2=driver.findElement(By.cssSelector(\"div.content > div\")).findElements(By.tagName(\"tr\")).size();\n     assertEquals(count2,0);\n     System.out.println(\"Íàéäåíî ôèëüìîâ -\"+ count2+\"øò\");\n     driver.quit();\n   }\n", "path": "src/test/java/ru/stqa/selenium/SearchFilmNotFound.java", "repo name": "Olbar/java_selenium_training"}
{"repo_name": "testCreationFilmSuccess_590", "method name": "test Creation Film Success", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \tdriver.findElement(By.id(\"username\")).clear();\n \tdriver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"password\")).clear();\n \tdriver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"submit\")).click();\n \tWebDriverWait wait=new WebDriverWait(driver, 30);\n \twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"div.movie_cover\")));\n \tint count1= driver.findElement(By.cssSelector(\"div#results\")).findElements(By.tagName(\"a\")).size();\n \tSystem.out.println(\"count1\"+- count1);\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n     driver.findElement(By.name(\"imdbid\")).clear();\n     driver.findElement(By.name(\"imdbid\")).sendKeys(\"1\");\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"film222\");\n     driver.findElement(By.name(\"year\")).clear();\n     driver.findElement(By.name(\"year\")).sendKeys(\"2015\");\n     driver.findElement(By.id(\"submit\")).click();\n     wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"img[alt=\\\"Edit\\\"]\")));\n     driver.findElement(By.linkText(\"Home\")).click();\n     wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"div.movie_cover\")));\n     int count2= driver.findElement(By.cssSelector(\"div#results\")).findElements(By.tagName(\"a\")).size();\n     System.out.println(\"count2\"+ -count2);\n     int res=count2-count1;\n     System.out.println(\"res\"+ -res);\n     assertEquals(res,1);\n     driver.quit();\n    \n \n \t\n }\n", "path": "src/test/java/ru/stqa/selenium/CreationFilmSuccess.java", "repo name": "Olbar/java_selenium_training"}
{"repo_name": "testSearchFilmFound_591", "method name": "test Search Film Found", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \tdriver.findElement(By.id(\"username\")).clear();\n \tdriver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"password\")).clear();\n \tdriver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"submit\")).click();\n \tWebDriverWait wait=new WebDriverWait(driver, 10);\n \twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"div.movie_cover\")));\n \tdriver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n \twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"input#imdbsearch\")));\n     driver.findElement(By.id(\"imdbsearch\")).clear();\n     driver.findElement(By.id(\"imdbsearch\")).sendKeys(\"a\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"table.imdbmovies\")));\n     int count1=driver.findElement(By.cssSelector(\"table.imdbmovies\")).findElements(By.tagName(\"tr\")).size();\n     assertNotEquals(count1,0);\n     System.out.println(\"Íàéäåíî ôèëüìîâ\"+ -count1+\"øò\");\n     driver.findElement(By.id(\"imdbsearch\")).clear();\n     driver.findElement(By.id(\"imdbsearch\")).sendKeys(\"ab\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"table.imdbmovies\")));\n     int count2=driver.findElement(By.cssSelector(\"table.imdbmovies\")).findElements(By.tagName(\"tr\")).size();\n     assertNotEquals(count2,0);\n     System.out.println(\"Íàéäåíî ôèëüìîâ\"+ -count2+\"øò\");\n     driver.quit();\n   }\n", "path": "src/test/java/ru/stqa/selenium/SearchFilmFound.java", "repo name": "Olbar/java_selenium_training"}
{"repo_name": "testDeleteFirstFilm_592", "method name": "test Delete First Film", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"password\")).clear();\n \tdriver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"submit\")).click();\n     driver.get(baseUrl + \"/php4dvd/?go=movie&id=40\");\n     WebDriverWait wait=new WebDriverWait(driver, 30);\n \twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"div.movie_cover\")));\n \tint count1= driver.findElement(By.cssSelector(\"div#results\")).findElements(By.tagName(\"a\")).size();\n \tSystem.out.println(\"count1\"+- count1);\n \tdriver.findElement((By.cssSelector(\"div.movie_cover\"))).click();\n \twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"img[alt=\\\"Remove\\\"]\")));\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Remove\\\"]\")).click();\n     Alert alert = driver.switchTo().alert();\n     alert.accept();\n     wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"div.movie_cover\")));\n \tint count2= driver.findElement(By.cssSelector(\"div#results\")).findElements(By.tagName(\"a\")).size();\n \tSystem.out.println(\"count2\"+- count2);\n \tint res=count1-count2;\n     System.out.println(\"res\"+- res);\n     assertEquals(res,1);\n     driver.quit();\n   \n \n \n \n   }\n", "path": "src/test/java/ru/stqa/selenium/DeleteFirstFilm.java", "repo name": "Olbar/java_selenium_training"}
{"repo_name": "testCreationFilmWithNotValidNumber_593", "method name": "test Creation Film With Not Valid Number", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \tdriver.findElement(By.id(\"username\")).clear();\n \tdriver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"password\")).clear();\n \tdriver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \tdriver.findElement(By.name(\"submit\")).click();\n     WebDriverWait wait=new WebDriverWait(driver, 10);\n \twait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")));\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"dfd\");\n     driver.findElement(By.name(\"year\")).clear();\n     driver.findElement(By.name(\"year\")).sendKeys(\"dfdf\");\n     driver.findElement(By.id(\"submit\")).click();\n     wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"input[class=\\\"required digits error\\\"]\")));\n     driver.quit();\n   }\n", "path": "src/test/java/ru/stqa/selenium/CreationFilmWithNotValidNumber.java", "repo name": "Olbar/java_selenium_training"}
{"repo_name": "openMainPage_594", "method name": "open Main Page", "comments": [], "url": true, "content": "  public void function() {\n     // open login page\n     driver.get(baseUrl);\n //    Alert alert = driver.switchTo().alert();\n //    alert.getText();\n //    alert.sendKeys(\"test\");\n //    alert.accept();\n   }\n", "path": "src/test/java/com/example/fw/WebMailManager.java", "repo name": "barancev/webmail-test-sample"}
{"repo_name": "goToUrl_595", "method name": "go To Url", "comments": [], "url": true, "content": "\tpublic static void function(String url) {\n \t\twebDriver.get(url);\n \t}\n", "path": "WebDriver/src/TestFramework/Browser.java", "repo name": "claude-lee/SeleniumWebDriver"}
{"repo_name": "whenEuAcessoAPaginaQueExibeInformacoesDoTestResult_596", "method name": "when Eu Acesso A Pagina Que Exibe Informacoes Do Test Result", "comments": ["When(\"eu acesso a pagina que exibe informacoes do test result\")"], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(url);\n \t}\n", "path": "src/test/java/stories/ResultaDosTestesSteps.java", "repo name": "luciano-sabenca/MC437_Grupo3"}
{"repo_name": "whenDesejoObterInformacoesSobreEsseTestResult_597", "method name": "when Desejo Obter Informacoes Sobre Esse Test Result", "comments": ["When(\"desejo obter informacoes sobre esse test result\")"], "url": true, "content": "\tpublic void function() {\n \n \t\tdriver.get(url);\n \t}\n", "path": "src/test/java/stories/ResultaDosTestesSteps.java", "repo name": "luciano-sabenca/MC437_Grupo3"}
{"repo_name": "whenEuEntroNaPaginaQueExibeInformacoesDoTestResult_598", "method name": "when Eu Entro Na Pagina Que Exibe Informacoes Do Test Result", "comments": ["When(\"eu entro na pagina que exibe informacoes do testResult    \")"], "url": true, "content": "\tpublic void function(){\n \t\tdriver.get(url);\t\n \t}\n", "path": "src/test/java/stories/consulta_de_resultados.java", "repo name": "luciano-sabenca/MC437_Grupo3"}
{"repo_name": "testHomePageHasAHeader_599", "method name": "test Home Page Has A Header", "comments": ["@Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n \n     //Explicit wait examples\n     WebDriverWait wait = new WebDriverWait(driver, 1);\n     wait.until(ExpectedConditions.presenceOfElementLocated(By.id(homepage.HEADER_LOCATOR)));\n     wait.until(ExpectedConditions.visibilityOf(homepage.header));\n     wait.until(ExpectedConditions.visibilityOfElementLocated(homepage.sameHeaderBy));\n     wait.until(ExpectedConditions.elementToBeClickable(homepage.sameHeader));\n     wait.until(ExpectedConditions.elementToBeSelected(homepage.sameHeaderBy));\n     wait.until(ExpectedConditions.elementToBeSelected(homepage.header));\n     wait.until(ExpectedConditions.textToBePresentInElement(homepage.header, \"Header\"));\n     wait.until(ExpectedConditions.stalenessOf(homepage.header));\n     //wait.until(ExpectedConditions.alertIsPresent(homepage.header));\n     wait.until(ExpectedConditions.titleContains(\"Header\"));\n \n \n     Assert.assertFalse(\"\".equals(homepage.header.getText()));\n \n   }\n", "path": "src/test/java/ua/oit/selenium2/ZSampleTest.java", "repo name": "olegeech/Selenim2JavaTestNg1"}
{"repo_name": "goToPage_600", "method name": "go To Page", "comments": [], "url": true, "content": "\tpublic String function(String url)  throws Exception{\n \t\tif(SessionContext.isAuthoizationFailed){\n \t\t\tthrow new AssertionError(\"*******AUTHORIZATION ISSUE *****DO NOT PROCEEED ***\");\n \t\t}\n \n \t\tString url_postProcessed = Lib_Utils.alterGotoUrl(url,user, password); \n \t\ttry{\n \n \t\t\tdriver.get(url_postProcessed);\n \t\t}catch(WebDriverException e){\n \t\t\tlog.error(\"Encountered WebDriver Exception while goto - relaunching\" + url);\t\t\t\n \t\t\tthrow new UnexpectedWebDriverException();\n \t\t}\n \t\tString title = driver.getTitle();\n \t\tlog.trace(url_postProcessed);\n \t\t//log.trace(driver.getTitle());\n \t\t//log.trace(driver.getPageSource());\n \t\tif(title.contains(\"not authorized\")){\n \t\t\tSessionContext.isAuthoizationFailed=true;\n \t\t}\n \t\treturn title;\n \t}\n", "path": "src/main/java/org/spo/fw/web/Lib_KeyWordsCore.java", "repo name": "premganz/SeleniumPageObjects"}
{"repo_name": "navigateAndLoad_601", "method name": "navigate And Load", "comments": [" 跳转到指定的URL并且返回是否跳转完整的结果。", " ", " @param url", "            想要打开的网址", " @param timeout", "            多少秒之后算超时", " @return 是否成功加载"], "url": true, "content": "\tprivate boolean function(String url, int timeout) {\n \t\ttry {\n \t\t\tdriver.manage().timeouts()\n \t\t\t\t\t.pageLoadTimeout(timeout, TimeUnit.SECONDS);\n \t\t\tdriver.get(url);\n \t\t\treturn true;// 跳转并且加载页面成功在返回true\n \t\t} catch (TimeoutException e) {\n \t\t\treturn false;// 超时的情况下返回false\n \t\t} catch (Exception e) {\n \t\t\tthrow new RuntimeException(e);// 抛出运行时异常，退出运行\n \t\t} finally {\n \t\t\tdriver.manage().timeouts()\n \t\t\t\t\t.pageLoadTimeout(maxLoadTime, TimeUnit.SECONDS);// 加载全局设置的最大尝试次数\n \t\t}\n \t}\n", "path": "src/spider/ReivewWebDriver.java", "repo name": "FannyChung/Sentiment-Analysis"}
{"repo_name": "getProductPage_602", "method name": "get Product Page", "comments": [" 获取网页中所有指向商品的超链接", " @param searchUrl", "            搜索后的网页", " @return 商品url的集合"], "url": true, "content": "\tpublic HashSet<ProductUrl> function(String searchUrl) {\n \t\tString productUrlReg = \"http://www.amazon.cn/.*/dp/.*\"; // 商品url对应的格式\n \n \t\tHashSet<ProductUrl> products = new HashSet<ProductUrl>();\n \t\tHtmlUnitDriver driver = new HtmlUnitDriver();\n \t\tdriver.get(searchUrl);\n \t\tList<WebElement> link = driver.findElements(By.cssSelector(\"[href]\"));// 获取带有超链接的元素\n \t\tfor (WebElement webElement : link) {\n \t\t\tString href = webElement.getAttribute(\"href\"); // 获取超链接对应的String\n \t\t\tif (href.matches(productUrlReg)\n \t\t\t\t\t&& products.add(new ProductUrl(href))) {// 获取商品url，加入集合中，同一个商品的多个url不重复添加\n \t\t\t\tSystem.out.println(webElement.getText() + '\\t' + href);\n \t\t\t}\n \t\t}\n \t\tSystem.out\n \t\t\t\t.println(\"get product url over=================================================================\");\n \t\tSystem.out.println(\"product size: \" + products.size());\n \t\tdriver.close();\n \t\treturn products;\n \t}\n", "path": "src/spider/ReivewWebDriver.java", "repo name": "FannyChung/Sentiment-Analysis"}
{"repo_name": "testPlayer1Win_603", "method name": "test Player1 Win", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl);\n     try {\n       assertEquals(\"Mylla\", driver.getTitle());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.id(\"start-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"2\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"3\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"4\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"5\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"6\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"8\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"7\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"9\");\n     driver.findElement(By.id(\"play-button\")).click();\n     try {\n       assertTrue(isElementPresent(By.id(\"replay-button\")));\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "src/selenium/java/tictactoe/NerdirWebTest.java", "repo name": "NerdirMedSkapgerdir/TicTacToe"}
{"repo_name": "testPlayer2Win_604", "method name": "test Player2 Win", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl);\n     try {\n       assertEquals(\"Mylla\", driver.getTitle());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.id(\"start-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"2\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"3\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"5\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"4\");\n     driver.findElement(By.id(\"play-button\")).click();\n     driver.findElement(By.id(\"move\")).clear();\n     driver.findElement(By.id(\"move\")).sendKeys(\"8\");\n     driver.findElement(By.id(\"play-button\")).click();\n     try {\n       assertTrue(isElementPresent(By.id(\"replay-button\")));\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "src/selenium/java/tictactoe/NerdirWebTest.java", "repo name": "NerdirMedSkapgerdir/TicTacToe"}
{"repo_name": "testSomeFunctions_605", "method name": "test Some Functions", "comments": [" Created by tuanlhd on 7/15/15.", "Test"], "url": true, "content": "    public void function() throws IOException {\n         String pathFirefoxDrive = \"firebug-1.8.1.xpi\";\n \n         File file = new File(pathFirefoxDrive);\n         file.deleteOnExit();\n         try (FileOutputStream o = new FileOutputStream(file)) {\n             ByteStreams.copy(this.getClass().getClassLoader().getResourceAsStream(pathFirefoxDrive), o);\n         }\n         FirefoxProfile firefoxProfile = new FirefoxProfile();\n         firefoxProfile.addExtension(file);\n         firefoxProfile.setPreference(\"extensions.firebug.currentVersion\", \"1.8.1\"); // Avoid startup screen\n \n         WebDriver driver = new FirefoxDriver(firefoxProfile);\n         String url = \"http://haiivl.com/video/176200\";\n         driver.get(url);\n \n         WebElement e = driver.findElement(By.xpath(\"//article//div[@class='video-frame mecloud']\"));\n         String source = driver.getPageSource();\n         Pattern pattern = Pattern.compile(\"<div class=\\\\\\\"video-frame\\\\b[^>]*>(.*?)<\\\\/div>\");\n         Matcher matcher = pattern.matcher(source);\n         if (matcher.find())\n         {\n             System.out.println(matcher.group(1));\n         }\n     }\n", "path": "some-tools/crawler/src/test/java/TestWebDriver.java", "repo name": "playernodie/java-desktop-apps"}
{"repo_name": "testChromeDriver_606", "method name": "test Chrome Driver", "comments": ["Test"], "url": true, "content": "    public void function() throws IOException {\n         // Optional, if not specified, WebDriver will search your path for chromedriver.\n         String pathChromeDrive = \"chromedriver\";\n         File file = new File(pathChromeDrive);\n         file.deleteOnExit();\n         try (FileOutputStream o = new FileOutputStream(file)) {\n             ByteStreams.copy(this.getClass().getClassLoader().getResourceAsStream(pathChromeDrive), o);\n         }\n         file.setExecutable(true);\n         System.setProperty(\"webdriver.chrome.driver\", pathChromeDrive);\n         WebDriver driver = new ChromeDriver();\n         String url = \"http://haiivl.com/video/176200\";\n         driver.get(url);\n \n         WebElement e = driver.findElement(By.xpath(\"//article\"));\n     }\n", "path": "some-tools/crawler/src/test/java/TestWebDriver.java", "repo name": "playernodie/java-desktop-apps"}
{"repo_name": "favMusicRun_607", "method name": "fav Music Run", "comments": [], "url": true, "content": "\tpublic void function(String userId, int userNum) {\n \t\tThread th = new Thread();\n \t\tString urlFirst = \"https://www.joysound.com/utasuki/userpage/mysong.htm?usr=\";\n \t\tStringBuilder urlBuilder = new StringBuilder();\n \t\turlBuilder.append(urlFirst);\n \t\turlBuilder.append(userId);\n \t\tString url = urlBuilder.toString();\n \n \t\tArrayList<WebElement> favMusicList;\n \t\tph.getDriver().get(url);\n \t\ttry {\n \t\t\tth.sleep(waitTime);\n \n \t\t\tString favMusicStr = ph.getDriver().findElementByTagName(\"em\")\n \t\t\t\t\t.getText();\n \t\t\tString favMusicNum = favMusicStr.substring(0,\n \t\t\t\t\tfavMusicStr.length() - 1);\n \t\t\tint favMusicInt = Integer.parseInt(favMusicNum);\n \n \t\t\tString songUrl, id, songwordstitle, name, artist, relation;\n \t\t\tVector<Music> v;\n \t\t\tArrayList<String> musicURL = new ArrayList<String>();\n \t\t\tMusic m;\n \t\t\tint j = 0;\n \t\t\tint p = 0;\n \n \t\t\tfavMusicList = (ArrayList<WebElement>) ph.getDriver()\n \t\t\t\t\t.findElementsByClassName(\"usk-block-link\");\n \t\t\tfor (WebElement e : favMusicList) {\n \t\t\t\tmusicURL.add(e.getAttribute(\"href\"));\n \t\t\t}\n \n \t\t\tfor (int i = 0; i < favMusicInt - 1; i++, j++) {\n \t\t\t\tif (i % 20 == 0 && i != 0) {\n \t\t\t\t\tp++;\n \t\t\t\t\tSystem.out.println(\"マイうた\" + p + \"ページ目読み込み終了\");\n \t\t\t\t\tph.getDriver().get(\n \t\t\t\t\t\t\turl + \"&startIndex=\" + (i + 1)\n \t\t\t\t\t\t\t\t\t+ \"&orderBy=0&sortOrder=desc\");\n \t\t\t\t\tth.sleep(waitTime);\n \n \t\t\t\t\tfavMusicList = (ArrayList<WebElement>) ph.getDriver()\n \t\t\t\t\t\t\t.findElementsByClassName(\"usk-block-link\");\n \t\t\t\t\tmusicURL.clear();\n \t\t\t\t\tfor (WebElement e : favMusicList) {\n \t\t\t\t\t\tmusicURL.add(e.getAttribute(\"href\"));\n \t\t\t\t\t}\n \t\t\t\t\tj = 0;\n \t\t\t\t\t// break;\n \t\t\t\t}\n \n \t\t\t\tsongUrl = musicURL.get(j);\n \t\t\t\tid = songUrl.substring(41, songUrl.indexOf(\"?\"));\n \t\t\t\tv = JoyDAO.getInstance().select(id);\n \t\t\t\tif (!v.isEmpty()) {\n \t\t\t\t\tm = v.get(0);\n \t\t\t\t\tif (userNum == 1) {\n \t\t\t\t\t\tnameSet.add(m.getName() + \" // \" + m.getArtist());\n \t\t\t\t\t\tartistSet.add(m.getArtist());\n \t\t\t\t\t\tif (!m.getRelation().equals(\"\")) {\n \t\t\t\t\t\t\trelationSet.add(m.getRelation());\n \t\t\t\t\t\t}\n \t\t\t\t\t} else {\n \t\t\t\t\t\tif (nameMap.containsKey(m.getName() + \" // \"\n \t\t\t\t\t\t\t\t+ m.getArtist())) {\n \t\t\t\t\t\t\tnameMap.put(\n \t\t\t\t\t\t\t\t\tm.getName() + \" // \" + m.getArtist(),\n \t\t\t\t\t\t\t\t\tnameMap.get(m.getName() + \" // \"\n \t\t\t\t\t\t\t\t\t\t\t+ m.getArtist()) + 5);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tnameMap.put(m.getName() + \" // \" + m.getArtist(), 5);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (artistMap.containsKey(m.getArtist())) {\n \t\t\t\t\t\t\tartistMap.put(m.getArtist(),\n \t\t\t\t\t\t\t\t\tartistMap.get(m.getArtist()) + 2);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tartistMap.put(m.getArtist(), 2);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!m.getRelation().equals(\"\")) {\n \t\t\t\t\t\t\tif (relationMap.containsKey(m.getRelation())) {\n \t\t\t\t\t\t\t\trelationMap.put(m.getRelation(),\n \t\t\t\t\t\t\t\t\t\trelationMap.get(m.getRelation()) + 3);\n \t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\trelationMap.put(m.getRelation(), 3);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\t// System.out.println(id + \",\" + m.getName() + \",\"\n \t\t\t\t\t// + m.getArtist() + \",\" + m.getRelation());\n \t\t\t\t} else {\n \t\t\t\t\tph.getDriver().get(songUrl);\n \t\t\t\t\tth.sleep(waitTime);\n \n \t\t\t\t\ttry {\n \t\t\t\t\t\tsongwordstitle = ph\n \t\t\t\t\t\t\t\t.getDriver()\n \t\t\t\t\t\t\t\t.findElementByXPath(\n \t\t\t\t\t\t\t\t\t\t\"//div[@class='jp-cmp-song-words-title ng-binding']\")\n \t\t\t\t\t\t\t\t.getText();\n \t\t\t\t\t} catch (Exception e) {\n \t\t\t\t\t\tph.getDriver().navigate().back();\n \t\t\t\t\t\tth.sleep(waitTime);\n \t\t\t\t\t\tcontinue;\n \t\t\t\t\t}\n \t\t\t\t\tname = songwordstitle.substring(0,\n \t\t\t\t\t\t\tsongwordstitle.length() - 3);\n \t\t\t\t\tname = name.substring(1, name.length() - 1);\n \t\t\t\t\tartist = ph.getDriver()\n \t\t\t\t\t\t\t.findElementByClassName(\"jp-cmp-table-column-001\")\n \t\t\t\t\t\t\t.getText();\n \t\t\t\t\ttry {\n \t\t\t\t\t\trelation = ph\n \t\t\t\t\t\t\t\t.getDriver()\n \t\t\t\t\t\t\t\t.findElementByXPath(\n \t\t\t\t\t\t\t\t\t\t\"//div[@data-ng-repeat='tieup in detail.tieupList']\")\n \t\t\t\t\t\t\t\t.getText();\n \t\t\t\t\t} catch (Exception e1) {\n \t\t\t\t\t\trelation = \"\";\n \t\t\t\t\t}\n \t\t\t\t\tJoyDAO.getInstance().insert(id, name, artist, relation);\n \t\t\t\t\tif (userNum == 1) {\n \t\t\t\t\t\tnameSet.add(name + \" // \" + artist);\n \t\t\t\t\t\tartistSet.add(artist);\n \t\t\t\t\t\tif (!relation.equals(\"\")) {\n \t\t\t\t\t\t\trelationSet.add(relation);\n \t\t\t\t\t\t}\n \t\t\t\t\t} else {\n \t\t\t\t\t\tif (nameMap.containsKey(name + \" // \" + artist)) {\n \t\t\t\t\t\t\tnameMap.put(name + \" // \" + artist,\n \t\t\t\t\t\t\t\t\tnameMap.get(name + \" // \" + artist) + 5);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tnameMap.put(name + \" // \" + artist, 5);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (artistMap.containsKey(artist)) {\n \t\t\t\t\t\t\tartistMap.put(artist, artistMap.get(artist) + 2);\n \t\t\t\t\t\t} else {\n \t\t\t\t\t\t\tartistMap.put(artist, 2);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tif (!relation.equals(\"\")) {\n \t\t\t\t\t\t\tif (relationMap.containsKey(relation)) {\n \t\t\t\t\t\t\t\trelationMap.put(relation,\n \t\t\t\t\t\t\t\t\t\trelationMap.get(relation) + 3);\n \t\t\t\t\t\t\t} else {\n \t\t\t\t\t\t\t\trelationMap.put(relation, 3);\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n \t\t\t\t\t// System.out.println(name + \",\" + artist + \",\" + relation);\n \t\t\t\t}\n \t\t\t\t// break;\n \t\t\t}\n \t\t\tSystem.out.println(\"マイうた読み込み完了\");\n \n \t\t} catch (InterruptedException e1) {\n \t\t\t// TODO 自動生成された catch ブロック\n \t\t\te1.printStackTrace();\n \t\t}\n \t}\n", "path": "src/joy/JoyMain.java", "repo name": "saikouranbu/JoyRecommendation"}
{"repo_name": "favArtistRun_608", "method name": "fav Artist Run", "comments": [], "url": true, "content": "\tpublic void function(String userId, int userNum) {\n \t\tThread th = new Thread();\n \t\tString urlFirst = \"https://www.joysound.com/utasuki/userpage/myartist.htm?usr=\";\n \t\tStringBuilder urlBuilder = new StringBuilder();\n \t\turlBuilder.append(urlFirst);\n \t\turlBuilder.append(userId);\n \t\tString url = urlBuilder.toString();\n \n \t\tArrayList<WebElement> favArtistList;\n \t\tph.getDriver().get(url);\n \t\ttry {\n \t\t\tth.sleep(waitTime);\n \n \t\t\tString favArtistStr = ph.getDriver().findElementByTagName(\"em\")\n \t\t\t\t\t.getText();\n \t\t\tString favArtistNum = favArtistStr.substring(0,\n \t\t\t\t\tfavArtistStr.length() - 1);\n \t\t\tint favArtistInt = Integer.parseInt(favArtistNum);\n \n \t\t\tString artist;\n \t\t\tWebElement ele;\n \t\t\tint j = 0;\n \t\t\tint p = 0;\n \t\t\tfor (int i = 0; i < favArtistInt - 1; i++, j++) {\n \t\t\t\tif (i % 20 == 0 && i != 0) {\n \t\t\t\t\tp++;\n \t\t\t\t\tSystem.out.println(\"マイアーティスト\" + p + \"ページ目読み込み終了\");\n \t\t\t\t\tph.getDriver().get(\n \t\t\t\t\t\t\turl + \"&startIndex=\" + (i + 1)\n \t\t\t\t\t\t\t\t\t+ \"&orderBy=0&sortOrder=desc\");\n \t\t\t\t\tth.sleep(waitTime);\n \t\t\t\t\tj = 0;\n \t\t\t\t\t// break;\n \t\t\t\t}\n \n \t\t\t\tfavArtistList = (ArrayList<WebElement>) ph\n \t\t\t\t\t\t.getDriver()\n \t\t\t\t\t\t.findElementsByXPath(\n \t\t\t\t\t\t\t\t\"//span[@class='usk-bold-txt usk-sbig-txt usk-break']\");\n \n \t\t\t\ttry {\n \t\t\t\t\tele = favArtistList.get(j);\n \t\t\t\t} catch (Exception e) {\n \t\t\t\t\tbreak;\n \t\t\t\t}\n \n \t\t\t\tartist = ele.getText();\n \t\t\t\t// System.out.println(artist);\n \n \t\t\t\tif (userNum == 1) {\n \t\t\t\t\tartistSet.add(artist);\n \t\t\t\t} else {\n \t\t\t\t\tif (artistMap.containsKey(artist)) {\n \t\t\t\t\t\tartistMap.put(artist, artistMap.get(artist) + 10);\n \t\t\t\t\t} else {\n \t\t\t\t\t\tartistMap.put(artist, 10);\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t\tSystem.out.println(\"マイアーティスト読み込み完了\");\n \n \t\t} catch (InterruptedException e1) {\n \t\t\t// TODO 自動生成された catch ブロック\n \t\t\te1.printStackTrace();\n \t\t}\n \t}\n", "path": "src/joy/JoyMain.java", "repo name": "saikouranbu/JoyRecommendation"}
{"repo_name": "loadBaseURL_609", "method name": "load Base URL", "comments": [], "url": true, "content": "\tpublic void function(String baseUrl) {\n \t\tdriver.manage().deleteAllCookies();\n \t\tdriver.get(baseUrl);\n \t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n \t\tdriver.manage().window().maximize();\n \t}\n", "path": "src/TestCaseBasis.java", "repo name": "Elichkoto/automation-eCommerce"}
{"repo_name": "openMainPage_610", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/kh/selenium/applogic1/NavigationHelper1.java", "repo name": "KatherineP/sel2.0_java_Group13"}
{"repo_name": "openRelativeUrl_611", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/kh/selenium/applogic1/NavigationHelper1.java", "repo name": "KatherineP/sel2.0_java_Group13"}
{"repo_name": "positiveAddGroup_612", "method name": "positive Add Group", "comments": ["Test(priority=1)"], "url": true, "content": "public void function() throws Exception {\n \t  \tdriver.get(baseUrl + \"/php4dvd/\");\n \t    driver.findElement(By.id(\"username\")).clear();\n \t    driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \t    driver.findElement(By.name(\"password\")).clear();\n \t    driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \t    driver.findElement(By.name(\"submit\")).click();\n \t    driver.get(baseUrl + \"/php4dvd/#!/sort/name%20asc/\");\n \t    driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n \t    WebElement dynamicElement = (new WebDriverWait(driver, 10))\n \t    .until(ExpectedConditions.presenceOfElementLocated(By.id(\"imdbsearch\")));\n \t    driver.findElement(By.id(\"imdbsearch\")).clear();\n \t    driver.findElement(By.id(\"imdbsearch\")).sendKeys(\"http://www.imdb.com/title/tt1403865/?ref_=fn_al_tt_1\");\n \t    driver.findElement(By.name(\"name\")).clear();\n \t    driver.findElement(By.name(\"name\")).sendKeys(\"True Grit\");\n \t    driver.findElement(By.name(\"year\")).clear();\n \t    driver.findElement(By.name(\"year1\")).sendKeys(\"2010\");\n \t    driver.findElement(By.id(\"submit\")).click(); \n \t    isTextMatch((By.xpath(\"//h2\")), (\"True Grit (2010)\"));\n \t    driver.findElement(By.cssSelector(\"img[alt=\\\"Remove\\\"]\")).click();\n \t    assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to remove this[\\\\s\\\\S]$\"));\n \t    driver.get(baseUrl + \"/php4dvd/\");\n \t    WebElement dynamicElement1 = (new WebDriverWait(driver, 10))\n \t    .until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@id='results']/a\")));\n \t    isTextMissing((By.id(\"results\")),(\"True Grit\")); \n \t    driver.findElement(By.linkText(\"Log out\")).click();\n \t    assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to log out[\\\\s\\\\S]$\"));\n   }\n", "path": "src/test/java/ru/stqa/selenium/AddMovie.java", "repo name": "PopkovS/java_selenium_training"}
{"repo_name": "emptyFieldsAddGroup_613", "method name": "empty Fields Add Group", "comments": ["Test(priority=2)"], "url": true, "content": "public void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tWebElement dynamicElement1 = (new WebDriverWait(driver, 10))\n \t    .until(ExpectedConditions.presenceOfElementLocated(By.id(\"username\")));\n \t    driver.findElement(By.id(\"username\")).clear();\n \t    driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \t    driver.findElement(By.name(\"password\")).clear();\n \t    driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \t    driver.findElement(By.name(\"submit\")).click();\n \t\tdriver.get(baseUrl + \"/php4dvd/#!/sort/name%20asc/\");\n \t    WebElement dynamicElement = (new WebDriverWait(driver, 10))\n \t    .until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")));\n \t    driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n \t    driver.findElement(By.id(\"submit\")).click();\n \t    isTextMatch((By.xpath(\"//label\")),(\"This field is required\"));\n \t    isTextMatch((By.xpath(\"//tr[4]/td[2]/label\")),(\"This field is required\"));\n \t    driver.findElement(By.cssSelector(\"h1\")).click();\n \t    driver.findElement(By.linkText(\"Log out\")).click();\n \t    assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to log out[\\\\s\\\\S]$\"));\n \t    \n }\t\n", "path": "src/test/java/ru/stqa/selenium/AddMovie.java", "repo name": "PopkovS/java_selenium_training"}
{"repo_name": "goToHomePage_614", "method name": "go To Home Page", "comments": [], "url": true, "content": "\tpublic void function(){\n \t\tdriver.get(baseUrl);\t\n \t }\n", "path": "src/testFramework/SeleniumBase.java", "repo name": "austinrr/CucumberSelenium-Demo"}
{"repo_name": "ApplyAsdaCC_615", "method name": "Apply Asda CC", "comments": ["Test", "Ignore"], "url": true, "content": "\tpublic void function() {\n \t\t\n \t\tWebDriver driver = null;\n \t\tString strUrl = \"https://credit-cardapply.asda.com/apply/applyjourney.html?promotionalCode=&brandCode=asda&responseCode=ASD030&empty_guid=true\";\n \t\tString strBrowserTitle = \"\";\n \t\ttry\n \t\t{\n \t\t\tdriver = new FirefoxDriver();\n \t\t\t\n \t\t\tdriver.get(strUrl);\n \t\t\t\n \t\t\tstrBrowserTitle = driver.getTitle();\n \t\t\t\n \t\t\tassertEquals(\"Title do not match with expected\", \"Asda Apply Journey-Invalid\", strBrowserTitle);\n \t\t\t\n \t\t\tThread.sleep(4000);\n \t\t\t\n \t\t\t\n \t\t}\n \t\tcatch(Exception ex)\n \t\t{\n \t\t\t\n \t\t\tSystem.out.println(\"Exception thrown:\" + ex.getMessage());\n \t\t}\n \t\tfinally\n \t\t{\n \t\t\tdriver.quit();\n \t\t}\n \t}\n", "path": "NikhilSelenium/src/com/SeleniumBasic/MyFirstTest.java", "repo name": "harishrenukunta/SeleniumNikhil"}
{"repo_name": "DriverMethodsExample_616", "method name": "Driver Methods Example", "comments": ["Test"], "url": true, "content": "\tpublic void function() {\n \t\t\n \t\tWebDriver driver = null;\n \t\tString strUrl = \"http://www.tesco.com/\";\n \t\ttry\n \t\t{\n \t\t\tdriver = new FirefoxDriver();\n \t\t\t\n \t\t\t//Implicit wait of 20 seconds. \n \t\t\tdriver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);\n \t\t\t//To maximize browser window\n \t\t\tdriver.manage().window().maximize();\n \t\t\t\n \t\t\t//Navigate to site\n \t\t\t//driver.get(strUrl);\n \t\t\tdriver.navigate().to(strUrl);\n \t\t\t\n \t\t\t(driver.findElement(By.cssSelector(\"#searchBox\"))).sendKeys(\"Flower\");\n \t\t\tThread.sleep(3000);\n \t\t\tdriver.navigate().refresh();\n \t\t\t\n \t\t\tString htmlSource = driver.getPageSource();\n \t\t\tSystem.out.println(\"Html : \" + htmlSource);\n \t\t\t\n \t\t\tSet<String> windowHandles = driver.getWindowHandles();\n \t\t\t\n \t\t\tSystem.out.println(\"Window Handles Before clicking twitter image:\" + windowHandles);\n \t\t\t\n \t\t\t//Click on twitter image on tesco home page\n \t\t\tWebElement imgTwitter = driver.findElement(By.cssSelector(\".twitter\"));\n \t\t\t\t\t\t\n \t\t\timgTwitter.click();\n \t\t\tThread.sleep(2000);\n \t\t\t\t\t\t\n \t\t\t//To retrieve handles of all browser instances\n \t\t\twindowHandles = driver.getWindowHandles();\n \t\t\t\n \t\t\tObject windowHandlesArray[] = windowHandles.toArray();\n \t\t\t\n \t\t\tString strPopUpWH = windowHandlesArray[windowHandlesArray.length - 1].toString();\n \t\t\t\n \t\t\t//To swith control from main browser window to pop up window\n \t\t\tdriver.switchTo().window(strPopUpWH);\n \t\t\t\n \t\t\tString strCurrentUrl = driver.getCurrentUrl();\n \t\t\tSystem.out.println(\"------------------------------------------\");\n \t\t\tSystem.out.println(\"Twitter window url:\" + strCurrentUrl);\n \t\t\t\t\t\t\t\t\t\n \t\t\tWebElement txtFullName = driver.findElement(By.cssSelector(\"input[name='user[name]']\"));//.js-initial-focus\"));\n \t\t\t/*\n \t\t\tActions actionBuilder = new Actions(driver);\n \t\t\tactionBuilder.click(txtFullName);\n \t\t\tactionBuilder.build();\n \t\t\tactionBuilder.perform();\n \t\t\t*/\n \t\t\t\n \t\t\tThread.sleep(2000);\n \t\t\ttxtFullName.sendKeys(\"Harish Renukunta\");\n \t\t\t\n \t\t\tThread.sleep(3000);\n \t\t\tSystem.out.println(\"Window Handles:\" + windowHandles);\n \t\t\tdriver.close();\n \t\t\t\n \t\t\tThread.sleep(3000);\n \t\t}\n \t\tcatch(Exception ex)\n \t\t{\n \t\t\tSystem.out.println(\"Exception thrown:\" + ex.getMessage());\n \t\t}\n \t\tfinally\n \t\t{\n \t\t\tdriver.quit();\n \t\t}\n \t\t\n \t}\n", "path": "NikhilSelenium/src/com/SeleniumBasic/DriverMethodsTest.java", "repo name": "harishrenukunta/SeleniumNikhil"}
{"repo_name": "verifyUIObjects_617", "method name": "verify UI Objects", "comments": ["Test"], "url": true, "content": "  public void function() {\n \t  \n \t  try\n \t  {  \n \t\t  \n \t\t  driver.navigate().to(\"http://www.google.com\");\n \t\t  driver.get(strUrl);\n \t\t  \n \t\t  WebElement txtItem = driver.findElement(By.cssSelector(\"input[data-bind*='value:itemToAdd']\"));\n \t\t  WebElement btnAdd = driver.findElement(By.xpath(\"//button[text()='Add']\"));\n \t\t  WebElement btnRemove = driver.findElement(By.xpath(\"//button[text()='Remove']\"));\n \t\t  WebElement btnSort = driver.findElement(By.xpath(\"//button[text()='Sort']\"));\n \t\t  WebElement lstItems = driver.findElement(By.cssSelector(\"select[multiple='multiple'][data-bind*='selectedOptions:selectedItems']\"));\n \t\t  \n \t\t  List<String> mismatches = new ArrayList<String>();\n \t\t  if(!txtItem.isDisplayed())\n \t\t  {\n \t\t\t  mismatches.add(\"Item textbox not displayed\");\n \t\t\t  \n \t\t  }\n \t\t  \n \t\t  if(!btnAdd.isDisplayed())\n \t\t  {\n \t\t\t  mismatches.add(\"Add button not displayed\");\n \t\t\t  \n \t\t  }\n \t\t  \n \t\t  if(!btnRemove.isDisplayed())\n \t\t  {\n \t\t\t  mismatches.add(\"Remove button not displayed\");\n \t\t\t  \n \t\t  }\n \t\t  \n \t\t  if(!btnSort.isDisplayed())\n \t\t  {\n \t\t\t  mismatches.add(\"Sort button not displayed\");\n \t\t\t  \n \t\t  }\n \t\t  \n \t\t  if(!lstItems.isDisplayed())\n \t\t  {\n \t\t\t  mismatches.add(\"Items listbox not displayed\");\n \t\t\t  \n \t\t  }\n \t\t  \n \t\t  assertTrue(mismatches.isEmpty(), \"Objects not displayed:\" + mismatches);\n \n \t  }\n \t  catch(Exception ex)\n \t  {\n \t\t  System.out.println(\"Exception: \" + ex.getMessage());\n \t\t  fail(\"Exception : \" + ex.getMessage());\n \t  }\n \t  \n   }\n", "path": "NikhilSeleniumMavenTestNG/src/test/java/NikhilSelenium/NikhilSeleniumMavenTestNG/BasicAnnotationsTest.java", "repo name": "harishrenukunta/SeleniumNikhil"}
{"repo_name": "doTestLoadingJQuery_618", "method name": "do Test Loading J Query", "comments": [], "url": true, "content": "    public void function(String jQueryVersion, String browserVersion) throws Exception {\n         String html\n                 = \"<!DOCTYPE HTML><html><head><title>foo</title>\" + getJqueryScript(jQueryVersion) + \"<script>\\n\"\n                 + \"alert(window.jQuery !== undefined);\\n\"\n                 + \"</script></head><body>\\n\"\n                 + \"</body></html>\";\n \n         String initialUrl = \"http://localhost:8080/myDummyApp/index.html\";\n         CollectingAlertHandler alertHandler = new CollectingAlertHandler();\n \n         HtmlUnitDriver driver = createDriver(alertHandler, browserVersion, new StringWebResponse(html, new URL(initialUrl)));\n \n         // load the mock html page\n         driver.get(initialUrl);\n         assertThat(\"jQuery did not load succesfully.\",\n                 alertHandler.getCollectedAlerts().get(0), containsString(\"true\"));\n     }\n", "path": "src/test/java/eu/tuxoo/test/JQueryLoadingTest.java", "repo name": "mpoehler/htmlunit-angular-test"}
{"repo_name": "testManagementChangePassword_619", "method name": "test Management Change Password", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.cssSelector(\"button.headerbutton\")).click();\n     driver.findElement(By.name(\"username\")).click();\n     driver.findElement(By.name(\"username\")).clear();\n     driver.findElement(By.name(\"username\")).sendKeys(\"hbakker\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"p@ssword\");\n     driver.findElement(By.id(\"login_button\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Management/Home\\\"']\")).click();\n     driver.findElement(By.linkText(\"Change Password\")).click();\n     driver.findElement(By.name(\"old_password\")).clear();\n     driver.findElement(By.name(\"old_password\")).sendKeys(\"p@ssword\");\n     driver.findElement(By.name(\"new_password\")).clear();\n     driver.findElement(By.name(\"new_password\")).sendKeys(\"password\");\n     driver.findElement(By.name(\"rep_new_password\")).clear();\n     driver.findElement(By.name(\"rep_new_password\")).sendKeys(\"password\");\n \n     WebElement dragElement = driver.findElement(By.className(\"clippy\"));\n     Actions builder = new Actions(driver);\n     builder.dragAndDropBy(dragElement, 100, 0).build().perform();\n \n     driver.findElement(By.id(\"management_save\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Account/Logout\\\"']\")).click();\n   }\n", "path": "tests/Selenium/Tests/ManagementChangePasswordResetTest.java", "repo name": "waaghals/Tainted-Aberrant-Lion"}
{"repo_name": "testManagementAcceptancePending_620", "method name": "test Management Acceptance Pending", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.cssSelector(\"button.headerbutton\")).click();\n     driver.findElement(By.name(\"username\")).clear();\n     driver.findElement(By.name(\"username\")).sendKeys(\"hbakker\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"p@ssword\");\n     driver.findElement(By.id(\"login_button\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Management/Home\\\"']\")).click();\n     driver.findElement(By.linkText(\"Locations\")).click();\n     driver.findElement(By.id(\"checkall\")).click();\n     new Select(driver.findElement(By.id(\"apply_to_all\"))).selectByVisibleText(\"With Selected:\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"status_pending\\\"]\")).click();\n     driver.findElement(By.cssSelector(\"#with_selected_confirm > p\")).click();\n     driver.findElement(By.linkText(\"Reviews\")).click();\n     driver.findElement(By.id(\"checkall\")).click();\n     new Select(driver.findElement(By.id(\"apply_to_all\"))).selectByVisibleText(\"With Selected:\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"status_pending\\\"]\")).click();\n     driver.findElement(By.xpath(\"//div[@id='with_selected_confirm']/img[2]\")).click();\n     driver.findElement(By.linkText(\"Projects\")).click();\n     driver.findElement(By.id(\"checkall\")).click();\n     new Select(driver.findElement(By.id(\"apply_to_all\"))).selectByVisibleText(\"With Selected:\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"status_pending\\\"]\")).click();\n     driver.findElement(By.id(\"with_selected_confirm\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Account/Logout\\\"']\")).click();\n   }\n", "path": "tests/Selenium/Tests/ManagementAcceptancePendingTest.java", "repo name": "waaghals/Tainted-Aberrant-Lion"}
{"repo_name": "testManagementEditAccount_621", "method name": "test Management Edit Account", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.cssSelector(\"button.headerbutton\")).click();\n     driver.findElement(By.name(\"username\")).click();\n     driver.findElement(By.name(\"username\")).clear();\n     driver.findElement(By.name(\"username\")).sendKeys(\"hbakker\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"p@ssword\");\n     driver.findElement(By.id(\"login_button\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Management/Home\\\"']\")).click();\n     driver.findElement(By.linkText(\"My Account\")).click();\n     driver.findElement(By.name(\"addition\")).clear();\n     driver.findElement(By.name(\"addition\")).sendKeys(\"a\");\n     \n     WebElement dragElement = driver.findElement(By.className(\"clippy\"));\n     Actions builder = new Actions(driver);\n     builder.dragAndDropBy(dragElement, 100, 0).build().perform();\n     \n     driver.findElement(By.id(\"management_save\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Account/Logout\\\"']\")).click();\n   }\n", "path": "tests/Selenium/Tests/ManagementEditAccountTest.java", "repo name": "waaghals/Tainted-Aberrant-Lion"}
{"repo_name": "testManagementAcceptanceDeclined_622", "method name": "test Management Acceptance Declined", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.cssSelector(\"button.headerbutton\")).click();\n     driver.findElement(By.name(\"username\")).clear();\n     driver.findElement(By.name(\"username\")).sendKeys(\"hbakker\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"p@ssword\");\n     driver.findElement(By.id(\"login_button\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Management/Home\\\"']\")).click();\n     driver.findElement(By.linkText(\"Locations\")).click();\n     driver.findElement(By.id(\"checkall\")).click();\n     new Select(driver.findElement(By.id(\"apply_to_all\"))).selectByVisibleText(\"With Selected:\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"status_declined\\\"]\")).click();\n     driver.findElement(By.cssSelector(\"#with_selected_confirm > p\")).click();\n     driver.findElement(By.linkText(\"Reviews\")).click();\n     driver.findElement(By.id(\"checkall\")).click();\n     new Select(driver.findElement(By.id(\"apply_to_all\"))).selectByVisibleText(\"With Selected:\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"status_declined\\\"]\")).click();\n     driver.findElement(By.xpath(\"//div[@id='with_selected_confirm']/img[2]\")).click();\n     driver.findElement(By.linkText(\"Projects\")).click();\n     driver.findElement(By.id(\"checkall\")).click();\n     new Select(driver.findElement(By.id(\"apply_to_all\"))).selectByVisibleText(\"With Selected:\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"status_declined\\\"]\")).click();\n     driver.findElement(By.cssSelector(\"#with_selected_confirm > p\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Account/Logout\\\"']\")).click();\n   }\n", "path": "tests/Selenium/Tests/ManagementAcceptanceDeclinedTest.java", "repo name": "waaghals/Tainted-Aberrant-Lion"}
{"repo_name": "testManagementChangePassword_623", "method name": "test Management Change Password", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.cssSelector(\"button.headerbutton\")).click();\n     driver.findElement(By.name(\"username\")).click();\n     driver.findElement(By.name(\"username\")).clear();\n     driver.findElement(By.name(\"username\")).sendKeys(\"hbakker\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"password\");\n     driver.findElement(By.id(\"login_button\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Management/Home\\\"']\")).click();\n     driver.findElement(By.linkText(\"Change Password\")).click();\n     driver.findElement(By.name(\"old_password\")).clear();\n     driver.findElement(By.name(\"old_password\")).sendKeys(\"password\");\n     driver.findElement(By.name(\"new_password\")).clear();\n     driver.findElement(By.name(\"new_password\")).sendKeys(\"p@ssword\");\n     driver.findElement(By.name(\"rep_new_password\")).clear();\n     driver.findElement(By.name(\"rep_new_password\")).sendKeys(\"p@ssword\");\n \n     WebElement dragElement = driver.findElement(By.className(\"clippy\"));\n     Actions builder = new Actions(driver);\n     builder.dragAndDropBy(dragElement, 100, 0).build().perform();\n \n     driver.findElement(By.id(\"management_save\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Account/Logout\\\"']\")).click();\n   }\n", "path": "tests/Selenium/Tests/ManagementChangePasswordTest.java", "repo name": "waaghals/Tainted-Aberrant-Lion"}
{"repo_name": "testManagementAcceptanceApproved_624", "method name": "test Management Acceptance Approved", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.cssSelector(\"button.headerbutton\")).click();\n     driver.findElement(By.name(\"username\")).clear();\n     driver.findElement(By.name(\"username\")).sendKeys(\"hbakker\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"p@ssword\");\n     driver.findElement(By.id(\"login_button\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Management/Home\\\"']\")).click();\n     driver.findElement(By.linkText(\"Locations\")).click();\n     driver.findElement(By.id(\"checkall\")).click();\n     new Select(driver.findElement(By.id(\"apply_to_all\"))).selectByVisibleText(\"With Selected:\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"status_approved\\\"]\")).click();\n     driver.findElement(By.cssSelector(\"#with_selected_confirm > p\")).click();\n     driver.findElement(By.linkText(\"Reviews\")).click();\n     driver.findElement(By.id(\"checkall\")).click();\n     new Select(driver.findElement(By.id(\"apply_to_all\"))).selectByVisibleText(\"With Selected:\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"status_approved\\\"]\")).click();\n     driver.findElement(By.xpath(\"//div[@id='with_selected_confirm']/img[2]\")).click();\n     driver.findElement(By.linkText(\"Projects\")).click();\n     driver.findElement(By.id(\"checkall\")).click();\n     new Select(driver.findElement(By.id(\"apply_to_all\"))).selectByVisibleText(\"With Selected:\");\n     driver.findElement(By.cssSelector(\"option[value=\\\"status_approved\\\"]\")).click();\n     driver.findElement(By.cssSelector(\"#with_selected_confirm > p\")).click();\n     driver.findElement(By.xpath(\"//button[@onclick='location.href = \\\"/Account/Logout\\\"']\")).click();\n   }\n", "path": "tests/Selenium/Tests/ManagementAcceptanceApprovedTest.java", "repo name": "waaghals/Tainted-Aberrant-Lion"}
{"repo_name": "openMainPage_625", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(baseUrl);\n \t}\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "zloyleshiy/Se-Java-17-TyurinOK"}
{"repo_name": "openRelativeUrl_626", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "\tpublic void function(String url) {\n \t\tdriver.get(baseUrl + url);\n \t}\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "zloyleshiy/Se-Java-17-TyurinOK"}
{"repo_name": "openMainPage_627", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic1/NavigationHelper1.java", "repo name": "zloyleshiy/Se-Java-17-TyurinOK"}
{"repo_name": "openRelativeUrl_628", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic1/NavigationHelper1.java", "repo name": "zloyleshiy/Se-Java-17-TyurinOK"}
{"repo_name": "stupidGameLogin_629", "method name": "stupid Game Login", "comments": [], "url": true, "content": "    private void function(WebDriver driver) throws Exception {\n         LOGGER.debug(\"Getting login URL ...\");\n         String loginUrl = STUPID_GAME_LOGIN_URL; //System.getProperty(\"test.google.url\");\n         LOGGER.debug(\"Login URL is: <\" + loginUrl + \">\");\n         driver.get(loginUrl);\n         LOGGER.debug(\"Login Page loaded, title is: \" + driver.getTitle());\n         // Effective login\n         WebElement loginElement = driver.findElement(By.name(\"username\"));\n         WebElement passwordElement = driver.findElement(By.name(\"password\"));\n         WebElement loginButton = driver.findElement(By.className(\"button-ok\"));\n         loginElement.sendKeys(LOGIN);\n         passwordElement.sendKeys(PASSWORD);\n         loginButton.click();\n         LOGGER.debug(\"Post Login Page loaded, title is: \" + driver.getTitle());\n         Utils.readRessource(\"/StupidGameHelpers.js\");\n         driver.get(STUPID_GAME_HARVEST_URL);\n     }\n", "path": "MavenSeleniumTest/src/test/java/org/krohm/test/selenium/StupidGameBotTest.java", "repo name": "ArnaudDemarcq/MavenSeleniumTest"}
{"repo_name": "openMultipleBrowserWindows_630", "method name": "open Multiple Browser Windows", "comments": ["Test"], "url": true, "content": "    public void function() {\n         DriverManager.INSTANCE.startDriver();\n         DriverManager.INSTANCE.get(testUrl);\n         Assertions.assertThat(DriverManager.INSTANCE.getTitle()).isEqualTo(\"Test\");\n         DriverManager.INSTANCE.get(GOOGLE_URL);\n         Assertions.assertThat(DriverManager.INSTANCE.getCurrentUrl()).contains(GOOGLE_URL);\n         Assertions.assertThat(DriverManager.INSTANCE.getNumberOfDrivers()).isEqualTo(2);\n         DriverManager.INSTANCE.stopDriver();\n         Assertions.assertThat(DriverManager.INSTANCE.getNumberOfDrivers()).isEqualTo(1);\n         Assertions.assertThat(DriverManager.INSTANCE.getCurrentUrl()).isEqualTo(testUrl);\n     }\n", "path": "src/test/java/com/lithium/mineraloil/selenium/elements/DriverManagerTest.java", "repo name": "lithiumtech/mineraloil-selenium"}
{"repo_name": "testDeletePlaylist_631", "method name": "test Delete Playlist", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.findElement(By.xpath(\"//a[@href='/library']/div[@class='nav-item']\")).click();\n \t\tdriver.findElement(By.cssSelector(\"i.icon-cog\")).click();\n \t\t\n \t\t// create playlist\n \t\tdriver.findElement(By.id(\"playlist-dropdown-button\")).click();\n \t\tdriver.findElement(By.id(\"create-set-item\")).click();\n \t\tdriver.findElement(By.id(\"set_name\")).clear();\n \t\tdriver.findElement(By.id(\"set_name\")).sendKeys(\"ashish\");\n \t\tdriver.findElement(By.id(\"save_playlist\")).click();\n \n \t\t// delete playlist\n \t\tdriver.findElement(By.cssSelector(\"i.icon-cog\")).click();\n \t\tdriver.findElement(By.id(\"delete-set\")).click();\n \n \t\t// driver.findElement(By.cssSelector(\"button.btn.btn-primary\")).click();\n \t\t// driver.get(baseUrl + \"/login\");\n \t\tdriver.findElement(By.xpath(\"//button//i[@class='icon-bars']\")).click();\n \n \t}\n", "path": "PicmonicAutomation/src/com/picmonic/selenium/tests/PlayList.java", "repo name": "prachi-kulkarni/AutomationSuite"}
{"repo_name": "testDragandDropplaylist_632", "method name": "test Dragand Dropplaylist", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.findElement(By.xpath(\"//a[@href='/library']/div[@class='nav-item']\")).click();\n \t\t// driver.get(baseUrl + \"/login\");\n \t\tdriver.findElement(By.xpath(\"//button//i[@class='icon-bars']\")).click();\n \n \t}\n", "path": "PicmonicAutomation/src/com/picmonic/selenium/tests/PlayList.java", "repo name": "prachi-kulkarni/AutomationSuite"}
{"repo_name": "testMySubscriptionForMCAT_633", "method name": "test My Subscription For MCAT", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.findElement(By.xpath(\"//button//i[@class='icon-bars']\")).click();\n \t\tdriver.findElement(By.xpath(\"//div[@class='nav-item'][contains(text(),'My Subscriptions')]\")).click();\n \t\tassertEquals(\"MCAT Biology\",\n \t\t\t\tdriver.findElement(By.xpath(\"//div[@id='purchase-container']//td[contains(text(),'MCAT Biology')]\"))\n \t\t\t\t\t\t.getText());\n \t\tassertEquals(\"INACTIVE\", driver.findElement(By.xpath(\"//descendant::span[@class = 'status'][2]\")).getText());\n \t\tassertTrue(isElementPresent(By.xpath(\"(//a[contains(text(),'SUBSCRIBE')])[2]\")));\n \t\tdriver.findElement(By.xpath(\"(//a[contains(text(),'SUBSCRIBE')])[2]\")).click();\n \t\t// driver.get(baseUrl + \"/login\");\n \t\t// driver.findElement(By.xpath(\"//button//i[@class='icon-bars']\")).click();\n \n \t}\n", "path": "PicmonicAutomation/src/com/picmonic/selenium/tests/MySubscription.java", "repo name": "prachi-kulkarni/AutomationSuite"}
{"repo_name": "testMySubscriptionForMedicine_634", "method name": "test My Subscription For Medicine", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tdriver.findElement(By.xpath(\"//button//i[@class='icon-bars']\")).click();\n \t\tdriver.findElement(By.xpath(\"//div[@class='nav-item'][contains(text(),'My Subscriptions')]\")).click();\n \t\ttry {\n \t\t\tassertEquals(\n \t\t\t\t\t\"Picmonic for Medicine\",\n \t\t\t\t\tdriver.findElement(\n \t\t\t\t\t\t\tBy.xpath(\"//div[@id='purchase-container']//td[contains(text(),'Picmonic for Medicine')]\"))\n \t\t\t\t\t\t\t.getText());\n \t\t} catch (Error e) {\n \t\t\tverificationErrors.append(e.toString());\n \t\t}\n \t\tdriver.findElement(By.xpath(\"(//a[contains(text(),'SUBSCRIBE')])[2]\")).click();\n \t\t// driver.get(baseUrl + \"/login\");\n \t\t// driver.findElement(By.xpath(\"//button//i[@class='icon-bars']\")).click();\n \n \t}\n", "path": "PicmonicAutomation/src/com/picmonic/selenium/tests/MySubscription.java", "repo name": "prachi-kulkarni/AutomationSuite"}
{"repo_name": "getBaseURL_635", "method name": "get Base URL", "comments": [], "url": true, "content": "\tpublic void function() {\n \t\ttry {\n \t\t\tdriver.get(baseUrl);\n \t\t} catch (UnreachableBrowserException e) {\n \t\t\tSystem.out.println(\"driver.get() threw an exception.\");\n \t\t\te.printStackTrace();\n \t\t}\n \t}\n", "path": "eGov/bolzano/src/eu/testingmachine/SeleniumTests.java", "repo name": "tis-innovation-park/tm-examples"}
{"repo_name": "itShouldReturnBusinesses_636", "method name": "it Should Return Businesses", "comments": ["Test"], "url": true, "content": "    public void function() {\n         webDriver.get(baseUrl + \"/businesses\");\n \n         final Optional<WebElement> correctRow = findRowInTableRowsWithField(BUSINESS_ROWS_LOCATOR, BUSINESS_ROW_NAME_LOCATOR, EXISTING_BUSINESS_NAME);\n \n         assertThat(\"There is a business named Business 1\",\n                 correctRow.isPresent(), is(true));\n \n         final List<String> businessNames = allFieldValuesInTable(BUSINESS_ROWS_LOCATOR, BUSINESS_ROW_NAME_LOCATOR);\n         checkIfNamesAreSorted(businessNames);\n     }\n", "path": "SeleniumTests/src/test/java/org/tomaszjaneczko/testpoc/selenium_tests/BusinessesTests.java", "repo name": "tomaszj/test-setup-full-of-java"}
{"repo_name": "itShouldOpenBusiness_637", "method name": "it Should Open Business", "comments": ["Test"], "url": true, "content": "    public void function() {\n         webDriver.get(baseUrl + \"/businesses\");\n \n         final Optional<WebElement> correctRow = findRowInTableRowsWithField(BUSINESS_ROWS_LOCATOR, BUSINESS_ROW_NAME_LOCATOR, EXISTING_BUSINESS_NAME);\n \n         if (correctRow.isPresent()) {\n             correctRow.get().findElement(By.className(\"business-show-link\")).click();\n \n             String fullBusinessId = findElementByLocator(By.className(\"business-id\")).getText();\n             assertThat(\"Business Id contains correct ID\", fullBusinessId.contains(\"#1\"), is(true));\n         } else {\n             fail(\"Business named Business 1 wasn't found\");\n         }\n     }\n", "path": "SeleniumTests/src/test/java/org/tomaszjaneczko/testpoc/selenium_tests/BusinessesTests.java", "repo name": "tomaszj/test-setup-full-of-java"}
{"repo_name": "itShouldAddBusiness_638", "method name": "it Should Add Business", "comments": ["Test"], "url": true, "content": "    public void function() {\n         webDriver.get(baseUrl + \"/businesses\");\n \n         findElementByLocator(By.className(\"business-name-field\")).sendKeys(\"New name\");\n         findElementByLocator(By.className(\"business-add-button\")).click();\n \n         WebElement alertElement = findElementByLocator(By.className(\"alert\"));\n         assertThat(\"Business Id contains correct ID\",\n                 alertElement.getText().contains(\"Business added successfully\"), is(true));\n \n     }\n", "path": "SeleniumTests/src/test/java/org/tomaszjaneczko/testpoc/selenium_tests/BusinessesTests.java", "repo name": "tomaszj/test-setup-full-of-java"}
{"repo_name": "itShouldNotAddExistingBusiness_639", "method name": "it Should Not Add Existing Business", "comments": ["Test"], "url": true, "content": "    public void function() {\n         webDriver.get(baseUrl + \"/businesses\");\n \n         findElementByLocator(By.className(\"business-name-field\")).sendKeys(\"Exists\");\n         findElementByLocator(By.className(\"business-add-button\")).click();\n \n         WebElement alertElement = findElementByLocator(By.className(\"alert\"));\n         assertThat(\"Validation problem alert is displayed\",\n                 alertElement.getText().contains(\"name already exists\"), is(true));\n \n     }\n", "path": "SeleniumTests/src/test/java/org/tomaszjaneczko/testpoc/selenium_tests/BusinessesTests.java", "repo name": "tomaszj/test-setup-full-of-java"}
{"repo_name": "itShouldRemoveBusiness_640", "method name": "it Should Remove Business", "comments": ["Test"], "url": true, "content": "    public void function() {\n         webDriver.get(baseUrl + \"/businesses/2\");\n \n         findElementByLocator(By.className(\"business-delete-button\")).click();\n \n         WebElement alertElement = findElementByLocator(By.className(\"alert\"));\n         assertThat(\"Business removed message present\",\n                 alertElement.getText().contains(\"removed\"), is(true));\n     }\n", "path": "SeleniumTests/src/test/java/org/tomaszjaneczko/testpoc/selenium_tests/BusinessesTests.java", "repo name": "tomaszj/test-setup-full-of-java"}
{"repo_name": "testPhastaPStampede_641", "method name": "test Phasta P Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"PhastaP-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Phasta_P\");\n       waitTime (200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Parasolid-Geometric-Model\")).sendKeys(ExpFileReadUtils.PHASTA_INPUT1);\n     driver.findElement(By.id(\"Problem-Definition\")).sendKeys(ExpFileReadUtils.PHASTA_INPUT2);\n     driver.findElement(By.id(\"Mesh-Description-File\")).sendKeys(ExpFileReadUtils.PHASTA_INPUT3);\n     driver.findElement(By.id(\"Solver-Input-Parameters\")).sendKeys(ExpFileReadUtils.PHASTA_INPUT4);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n     waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n     waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/PhastaPStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAutoDockBR2_642", "method name": "test Auto Dock BR2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n         authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"AutoDock-BR2\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"AutoDock\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Input-File-DPF\")).sendKeys(ExpFileReadUtils.AUTODOCK_INPUT1);\n     waitTime(200);\n     driver.findElement(By.id(\"Input-File-DAT\")).sendKeys(ExpFileReadUtils.AUTODOCK_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"HSG1-Maps-FLD\")).sendKeys(ExpFileReadUtils.AUTODOCK_INPUT3);\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bigred2.uits.iu.edu\");\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"cpu\");\n     waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AutoDockBR2.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGamessStampede_643", "method name": "test Gamess Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gamess-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gamess_Stampede\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAMESS_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Version\")).clear();\n     driver.findElement(By.id(\"Version\")).sendKeys(\"00\");\n       waitTime(200);\n     driver.findElement(By.id(\"PPN\")).clear();\n     driver.findElement(By.id(\"PPN\")).sendKeys(\"4\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"development\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n       driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GamessStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGamessKarst_644", "method name": "test Gamess Karst", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gamess-Karst\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gamess\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAMESS_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Version\")).clear();\n     driver.findElement(By.id(\"Version\")).sendKeys(\"01\");\n       /*waitTime(200);\n     driver.findElement(By.id(\"Processes-Per-Job\")).clear();\n     driver.findElement(By.id(\"Processes-Per-Job\")).sendKeys(\"16\"); //2*/\n       waitTime(200);\n     driver.findElement(By.id(\"PPN\")).clear();\n     driver.findElement(By.id(\"PPN\")).sendKeys(\"4\"); //2\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"karst.uits.iu.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"batch\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n       driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GamessKarst.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testDFTBStampede_645", "method name": "test DFTB Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"DFTB-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"DFTB+\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"DFTB-Input\")).sendKeys(ExpFileReadUtils.DFTB_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();//launch\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/DFTBStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testNwChemComet_646", "method name": "test Nw Chem Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"NwChem-Comet\");\n       waitTime (200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"NWChem\");\n       waitTime (200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime (200);\n     driver.findElement(By.id(\"Water-Molecule-Input\")).sendKeys(ExpFileReadUtils.NWCHEM_INPUT1);\n       waitTime (200);\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"shared\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/NwChemComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAutoDockVinaStampede_647", "method name": "test Auto Dock Vina Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"AutoDockVina-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"AutoDock_Vina\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Receptor-File\")).sendKeys(ExpFileReadUtils.AUTODOCKVINA_INPUT1);\n     waitTime(200);\n     driver.findElement(By.id(\"Ligand-File\")).sendKeys(ExpFileReadUtils.AUTODOCKVINA_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Config-File\")).sendKeys(ExpFileReadUtils.AUTODOCKVINA_INPUT3);\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n     waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AutoDockVinaStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGaussianKarst_648", "method name": "test Gaussian Karst", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gaussian-Karst\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText (ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gaussian\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAUSSIAN_INPUT3);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"karst.uits.iu.edu\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"batch\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GaussianKarst.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGromacsComet_649", "method name": "test Gromacs Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gromacs-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gromacs\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Portable-Input-Binary-File\")).sendKeys(ExpFileReadUtils.GROMACS_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Coordinate-File\")).sendKeys(ExpFileReadUtils.GROMACS_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"shared\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime(200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GromacsComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testLammpsBR2_650", "method name": "test Lammps BR2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Lammps-BR2\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Lammps_BR2\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Friction-Simulation-Input\")).sendKeys(ExpFileReadUtils.LAMMPS_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bigred2.uits.iu.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"gpu\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"4\"); //1\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"4\");//16\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\"); //30\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/LammpsBR2.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGaussianBridges_651", "method name": "test Gaussian Bridges", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gaussian-Bridges\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText (ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gaussian\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAUSSIAN_INPUT3);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bridges.psc.edu\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"RM\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GaussianBridges.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAbaqusComet_652", "method name": "test Abaqus Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Abacus-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Abaqus\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Abacus-INP-File\")).sendKeys(ExpFileReadUtils.ABAQUS_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"ABQ_JOB\")).clear();\n     driver.findElement(By.id(\"ABQ_JOB\")).sendKeys(\"$abq_job\");\n     waitTime(200);\n     driver.findElement(By.id(\"Scratch\")).clear();\n     driver.findElement(By.id(\"Scratch\")).sendKeys(\"$PWD\");\n     waitTime(200);\n     driver.findElement(By.id(\"CPUs\")).clear();\n     driver.findElement(By.id(\"CPUs\")).sendKeys(\"4\");\n     waitTime(200);\n     driver.findElement(By.id(\"Memory\")).clear();\n     driver.findElement(By.id(\"Memory\")).sendKeys(\"80%\");\n     waitTime(200);\n     driver.findElement(By.id(\"MP_MODE\")).clear();\n     driver.findElement(By.id(\"MP_MODE\")).sendKeys(\"threads\");\n     waitTime(200);\n     driver.findElement(By.id(\"Interactive\")).clear();\n     driver.findElement(By.id(\"Interactive\")).sendKeys(\"interactive\");\n     waitTime(200);\n     driver.findElement(By.id(\"User_Sub_Option\")).clear();\n     driver.findElement(By.id(\"User_Sub_Option\")).sendKeys(\"' '\");\n     waitTime(200);\n     driver.findElement(By.id(\"Restart_Option\")).clear();\n     driver.findElement(By.id(\"Restart_Option\")).sendKeys(\"' '\");\n     waitTime(200);\n     driver.findElement(By.id(\"Datach\")).clear();\n     driver.findElement(By.id(\"Datach\")).sendKeys(\"' '\");\n     waitTime(200);\n     driver.findElement(By.id(\"Double\")).clear();\n     driver.findElement(By.id(\"Double\")).sendKeys(\"double\");\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"shared\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"4\");//changed the default 16 as for Abaqus need to give 24\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();//launch or save\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AbaqusComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testCreateModifySearchProject_653", "method name": "test Create Modify Search Project", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Project\")).click();\n     driver.findElement(By.id(\"create\")).click();\n     driver.findElement(By.id(\"project-name\")).clear();\n     driver.findElement(By.id(\"project-name\")).sendKeys(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime (500);\n     driver.findElement(By.id(\"project-description\")).clear();\n     driver.findElement(By.id(\"project-description\")).sendKeys(projectDescription);\n       waitTime (500);\n     driver.findElement(By.name(\"save\")).click();\n       waitTime(750);\n     driver.findElement(By.cssSelector(\"span.glyphicon.glyphicon-pencil\")).click();\n     driver.findElement(By.id(\"project-description\")).clear();\n     driver.findElement(By.id(\"project-description\")).sendKeys(projectDescription + \"_MODIFIED_2016\");\n       waitTime(500);\n     driver.findElement(By.name(\"save\")).click();\n       waitTime(500);\n     driver.findElement(By.linkText(\"Project\")).click();\n     driver.findElement(By.id(\"browse\")).click();\n       waitTime(500);\n     driver.findElement(By.id(\"search-value\")).clear();\n     driver.findElement(By.id(\"search-value\")).sendKeys(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(500);\n     driver.findElement(By.name(\"search\")).click();\n     driver.findElement(By.linkText(\"View\")).click();\n       waitTime(500);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/CreateModifySearchProject.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testCP2KComet_654", "method name": "test CP2K Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"CP2K-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"CP2K\");//\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File-INP\")).sendKeys(ExpFileReadUtils.CP2K_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"compute\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/CP2KComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGamessGordon_655", "method name": "test Gamess Gordon", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gamess-Gordon\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gamess\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAMESS_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Version\")).clear();\n     driver.findElement(By.id(\"Version\")).sendKeys(\"00\");\n       waitTime(200);\n     driver.findElement(By.id(\"PPN\")).clear();\n     driver.findElement(By.id(\"PPN\")).sendKeys(\"4\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"gordon.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n       driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GamessGordon.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGaussianBR2_656", "method name": "test Gaussian BR2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gaussian-BR2\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText (ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gaussian\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAUSSIAN_INPUT3);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bigred2.uits.iu.edu\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"cpu\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GaussianBR2.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testQuantumEspressoBridges_657", "method name": "test Quantum Espresso Bridges", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime (200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"QEspresso-Bridges\");\n       waitTime (200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Quantum_Espresso\");\n       waitTime (200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime (200);\n     driver.findElement(By.id(\"AI-Pseudopotential-File\")).sendKeys(ExpFileReadUtils.ESPRESSO_INPUT2);\n       waitTime (200);\n     driver.findElement(By.id(\"AI-Primitive-Cell\")).sendKeys(ExpFileReadUtils.ESPRESSO_INPUT1);\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bridges.psc.edu\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"RM\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/QuantumEspressoBridges.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAmberSanderComet_658", "method name": "test Amber Sander Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"AmberSander-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Amber_Sander\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Heat-Restart-File\")).sendKeys(ExpFileReadUtils.AMBER_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Production-Control-File\")).sendKeys(ExpFileReadUtils.AMBER_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Parameter-Topology-File\")).sendKeys(ExpFileReadUtils.AMBER_INPUT3);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime (200);\n       waitTime(200);\n       driver.findElement(By.id(\"node-count\")).clear();\n       driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n       driver.findElement(By.id(\"cpu-count\")).clear();\n       driver.findElement(By.id(\"cpu-count\")).sendKeys(\"4\");//16 reduced the 24 to 4 when changed.\n       driver.findElement(By.id(\"wall-time\")).clear();\n       driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n       driver.findElement(By.id(\"memory-count\")).clear();\n       driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n       driver.findElement(By.id(\"enableEmail\")).click();\n       driver.findElement(By.id(\"emailAddresses\")).clear();\n       driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n       driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n       driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n       driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AmberSanderComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testQChemComet_659", "method name": "test Q Chem Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"QChem-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Qchem\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"IN-Input-File\")).sendKeys(ExpFileReadUtils.QCHEM_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"compute\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/QChemComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAmberSanderBR2_660", "method name": "test Amber Sander BR2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime (200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName +\"AmberSander-BR2\");\n       waitTime (200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Amber_Sander\");\n       waitTime (200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Heat-Restart-File\")).sendKeys(ExpFileReadUtils.AMBER_INPUT1);\n       waitTime (200);\n     driver.findElement(By.id(\"Production-Control-File\")).sendKeys(ExpFileReadUtils.AMBER_INPUT2);\n       waitTime (200);\n     driver.findElement(By.id(\"Parameter-Topology-File\")).sendKeys(ExpFileReadUtils.AMBER_INPUT3);\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bigred2.uits.iu.edu\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"cpu\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();//launch or save\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AmberSanderBR2.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGamessComet_661", "method name": "test Gamess Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gamess-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gamess\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAMESS_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Version\")).clear();\n     driver.findElement(By.id(\"Version\")).sendKeys(\"00\");\n       waitTime(200);\n     driver.findElement(By.id(\"PPN\")).clear();\n     driver.findElement(By.id(\"PPN\")).sendKeys(\"4\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"shared\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n       driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GamessComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGromacsBR2_662", "method name": "test Gromacs BR2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gromacs-BR2\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gromacs\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Portable-Input-Binary-File\")).sendKeys(ExpFileReadUtils.GROMACS_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Coordinate-File\")).sendKeys(ExpFileReadUtils.GROMACS_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bigred2.uits.iu.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"cpu\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime(200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GromacsBR2.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testLammpsKarst_663", "method name": "test Lammps Karst", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Lammps-Karst\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Lammps\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Friction-Simulation-Input\")).sendKeys(ExpFileReadUtils.LAMMPS_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"karst.uits.iu.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"batch\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\"); //1\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");//16\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\"); //30\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/LammpsKarst.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGaussianComet_664", "method name": "test Gaussian Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gaussian-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gaussian\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAUSSIAN_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"shared\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"60\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime(200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GaussianComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAbinitBR2_665", "method name": "test Abinit BR2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Abinit-BR2\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Abinit\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Tbase-Input-File-1\")).sendKeys(ExpFileReadUtils.ABINIT_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Tbase-Input-File-2\")).sendKeys(ExpFileReadUtils.ABINIT_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Pspgth-Input-File\")).sendKeys(ExpFileReadUtils.ABINIT_INPUT3);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bigred2.uits.iu.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"cpu\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();//launch or save\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AbinitBR2.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testLammpsGordon_666", "method name": "test Lammps Gordon", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Lammps-Gordon\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Lammps\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Friction-Simulation-Input\")).sendKeys(ExpFileReadUtils.LAMMPS_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"gordon.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/LammpsGordon.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testDDSCatComet_667", "method name": "test DDS Cat Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"DDSCat-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"DDSCat\");//\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"PAR-Input-File\")).sendKeys(ExpFileReadUtils.DDSCAT_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"TAB-Input-File\")).sendKeys(ExpFileReadUtils.DDSCAT_INPUT2);\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"compute\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"24\");//Sudhakar requested it to be 4 CPUs\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"180\");//60, 120 was not enough\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/DDSCatComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testQuantumEspressoStampede_668", "method name": "test Quantum Espresso Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"QEspresso-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Quantum_Espresso\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"AI-Pseudopotential-File\")).sendKeys(ExpFileReadUtils.ESPRESSO_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"AI-Primitive-Cell\")).sendKeys(ExpFileReadUtils.ESPRESSO_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/QuantumEspressoStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAutoDockKarst_669", "method name": "test Auto Dock Karst", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n         authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"AutoDock-Karst\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"AutoDock\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Input-File-DPF\")).sendKeys(ExpFileReadUtils.AUTODOCK_INPUT1);\n     waitTime(200);\n     driver.findElement(By.id(\"Input-File-DAT\")).sendKeys(ExpFileReadUtils.AUTODOCK_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"HSG1-Maps-FLD\")).sendKeys(ExpFileReadUtils.AUTODOCK_INPUT3);\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"karst.uits.iu.edu\");\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"batch\");\n     waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AutoDockKarst.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testMolcasStampede_670", "method name": "test Molcas Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Molcas-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Molcas\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Molcas-Input\")).sendKeys(ExpFileReadUtils.MOLCAS_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"development\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"4\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"10\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/MolcasStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testCP2KStampede_671", "method name": "test CP2K Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"CP2K-Stampede\");\n       waitTime (200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"CP2K\");\n       waitTime (200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime (200);\n     driver.findElement(By.id(\"Input-File-INP\")).sendKeys(ExpFileReadUtils.CP2K_INPUT1);\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/CP2KStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGamessBR2_672", "method name": "test Gamess BR2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gamess-BR2\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gamess_BR2\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAMESS_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Version\")).clear();\n     driver.findElement(By.id(\"Version\")).sendKeys(\"01\");\n       waitTime(200);\n     driver.findElement(By.id(\"Processes-Per-Job\")).clear();\n     driver.findElement(By.id(\"Processes-Per-Job\")).sendKeys(\"16\"); //2\n       waitTime(200);\n     driver.findElement(By.id(\"PPN\")).clear();\n     driver.findElement(By.id(\"PPN\")).sendKeys(\"16\"); //2\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bigred2.uits.iu.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"cpu\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n       driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GamessBR2.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGromacsStampede_673", "method name": "test Gromacs Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gromacs-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gromacs\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Portable-Input-Binary-File\")).sendKeys(ExpFileReadUtils.GROMACS_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Coordinate-File\")).sendKeys(ExpFileReadUtils.GROMACS_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GromacsStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAbinitBridges_674", "method name": "test Abinit Bridges", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Abinit-Bridges\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Abinit\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Tbase-Input-File-1\")).sendKeys(ExpFileReadUtils.ABINIT_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Tbase-Input-File-2\")).sendKeys(ExpFileReadUtils.ABINIT_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Pspgth-Input-File\")).sendKeys(ExpFileReadUtils.ABINIT_INPUT3);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"bridges.psc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"RM\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();//launch or save\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AbinitBridges.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testLammpsStampede_675", "method name": "test Lammps Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName +  \"Lammps-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Lammps\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Friction-Simulation-Input\")).sendKeys(ExpFileReadUtils.LAMMPS_INPUT1);\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/LammpsStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAmberSanderStampede_676", "method name": "test Amber Sander Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"AmberSander-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Amber_Sander\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Heat-Restart-File\")).sendKeys(ExpFileReadUtils.AMBER_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Production-Control-File\")).sendKeys(ExpFileReadUtils.AMBER_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Parameter-Topology-File\")).sendKeys(ExpFileReadUtils.AMBER_INPUT3);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();//launch\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AmberSanderStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testQuantumEspressoComet_677", "method name": "test Quantum Espresso Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime (200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"QEspresso-Comet\");\n       waitTime (200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Quantum_Espresso\");\n       waitTime (200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime (200);\n     driver.findElement(By.id(\"AI-Pseudopotential-File\")).sendKeys(ExpFileReadUtils.ESPRESSO_INPUT2);\n       waitTime (200);\n     driver.findElement(By.id(\"AI-Primitive-Cell\")).sendKeys(ExpFileReadUtils.ESPRESSO_INPUT1);\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"shared\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/QuantumEspressoComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGromacsKarst_678", "method name": "test Gromacs Karst", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gromacs-Karst\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gromacs\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Portable-Input-Binary-File\")).sendKeys(ExpFileReadUtils.GROMACS_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Coordinate-File\")).sendKeys(ExpFileReadUtils.GROMACS_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"karst.uits.iu.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"batch\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime(200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GromacsKarst.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testNwChemStampede_679", "method name": "test Nw Chem Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"NwChem-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"NWChem\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Water-Molecule-Input\")).sendKeys(ExpFileReadUtils.NWCHEM_INPUT1);\n       waitTime (200);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime(500);\n       new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime(200);\n       driver.findElement(By.id(\"node-count\")).clear();\n       driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n       driver.findElement(By.id(\"cpu-count\")).clear();\n       driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n       driver.findElement(By.id(\"wall-time\")).clear();\n       driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n       driver.findElement(By.id(\"memory-count\")).clear();\n       driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n       driver.findElement(By.id(\"enableEmail\")).click();\n       driver.findElement(By.id(\"emailAddresses\")).clear();\n       driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n       driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n       driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n       driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/NwChemStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testLammpsComet_680", "method name": "test Lammps Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Lammps-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Lammps\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Friction-Simulation-Input\")).sendKeys(ExpFileReadUtils.LAMMPS_INPUT1);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"shared\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/LammpsComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testTinkerMonteStampede_681", "method name": "test Tinker Monte Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"TinkerMonte-Stampede\");\n       waitTime (200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Tinker_Monte\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"xyzf\")).sendKeys(ExpFileReadUtils.TINKER_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"keyf\")).sendKeys(ExpFileReadUtils.TINKER_INPUT2);\n       waitTime (200);\n     driver.findElement(By.id(\"stps\")).clear();\n     driver.findElement(By.id(\"stps\")).sendKeys(\"20000\");\n       waitTime (200);\n     driver.findElement(By.id(\"Ctc\")).clear();\n     driver.findElement(By.id(\"Ctc\")).sendKeys(\"C\");\n       waitTime (200);\n     driver.findElement(By.id(\"stpsZ\")).clear();\n     driver.findElement(By.id(\"stpsZ\")).sendKeys(\"3.0\");\n       waitTime (200);\n     driver.findElement(By.id(\"temp\")).clear();\n     driver.findElement(By.id(\"temp\")).sendKeys(\"298\");\n       waitTime (200);\n     driver.findElement(By.id(\"Rconv\")).clear();\n     driver.findElement(By.id(\"Rconv\")).sendKeys(\"0.01\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n       waitTime (200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime (200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/TinkerMonteStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testCreateUserLogin_682", "method name": "test Create User Login", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \n       String username = null;\n       String password = null;\n       try {\n           username = ExpFileReadUtils.readProperty(\"new.pga.username\");\n           password = ExpFileReadUtils.readProperty(\"new.pga.password\");\n \n       } catch (Exception e) {\n           throw new RuntimeException(e);\n       }\n \n       if (username == null || username.trim().equals(\"\")\n               || password == null || password.trim().equals(\"\"))\n           throw new RuntimeException(\"PGS user name or password in exp.properties file is invalid !\");\n \n       username = username.trim();\n       password = password.trim();\n \n       driver.get(baseUrl);\n       driver.findElement(By.linkText(\"Create account\")).click();\n       driver.findElement(By.id(\"username\")).sendKeys(username);\n       waitTime(500);\n       driver.findElement(By.id(\"password\")).sendKeys(password);\n       waitTime(500);\n       driver.findElement(By.id(\"confirm_password\")).sendKeys(password);\n       waitTime(500);\n       driver.findElement(By.id(\"email\")).sendKeys(\"pgauser@gmail.com\");\n       waitTime(500);\n       driver.findElement(By.id(\"first_name\")).sendKeys(\"PGA\");\n       waitTime(500);\n       driver.findElement(By.id(\"last_name\")).sendKeys(\"User\");\n       waitTime(500);\n       driver.findElement(By.name(\"Submit\")).click();\n       waitTime(5000);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/CreateUserLogin.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testCPMDComet_683", "method name": "test CPMD Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"CPMD-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"CPMD\");//\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"INP-Input-File\")).sendKeys(ExpFileReadUtils.CPMD_INPUT1);\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"compute\");\n     waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/CPMDComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testVinaMultipleStampede_684", "method name": "test Vina Multiple Stampede", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"VinaMultiple-Stampede\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Vina_Multiple\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Receptor-File\")).sendKeys(ExpFileReadUtils.VINAMULTIPLE_INPUT1);\n     waitTime(200);\n     driver.findElement(By.id(\"Multi-Ligand-Zip-File\")).sendKeys(ExpFileReadUtils.VINAMULTIPLE_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Config-File\")).sendKeys(ExpFileReadUtils.VINAMULTIPLE_INPUT3);\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"stampede.tacc.xsede.org\");\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n     waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/VinaMultipleStampede.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testGaussianGordon_685", "method name": "test Gaussian Gordon", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Gaussian-Gordon\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).clear();\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Gaussian\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"Input-File\")).sendKeys(ExpFileReadUtils.GAUSSIAN_INPUT2);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"gordon.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"normal\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/GaussianGordon.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testVinaMultipleComet_686", "method name": "test Vina Multiple Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n     driver.findElement(By.id(\"experiment-name\")).clear();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"VinaMultiple-Comet\");\n     driver.findElement(By.id(\"experiment-description\")).clear();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Vina_Multiple\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Receptor-File\")).sendKeys(ExpFileReadUtils.VINAMULTIPLE_INPUT1);\n     waitTime(200);\n     driver.findElement(By.id(\"Multi-Ligand-Zip-File\")).sendKeys(ExpFileReadUtils.VINAMULTIPLE_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Config-File\")).sendKeys(ExpFileReadUtils.VINAMULTIPLE_INPUT3);\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n     waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"compute\");\n     waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime (200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n     waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/VinaMultipleComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testAbinitComet_687", "method name": "test Abinit Comet", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Experiment\")).click();\n     driver.findElement(By.cssSelector(\"li.dropdown.open > ul.dropdown-menu > li > #create\")).click();\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-name\")).sendKeys(expName + \"Abinit-Comet\");\n       waitTime(200);\n     driver.findElement(By.id(\"experiment-description\")).sendKeys(\"Test Experiment\");\n     new Select(driver.findElement(By.id(\"project\"))).selectByVisibleText(ExpFileReadUtils.readProperty(\"project.name\"));\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"application\"))).selectByVisibleText(\"Abinit\");\n       waitTime(200);\n     driver.findElement(By.name(\"continue\")).click();\n     driver.findElement(By.id(\"Tbase-Input-File-1\")).sendKeys(ExpFileReadUtils.ABINIT_INPUT1);\n       waitTime(200);\n     driver.findElement(By.id(\"Tbase-Input-File-2\")).sendKeys(ExpFileReadUtils.ABINIT_INPUT2);\n       waitTime(200);\n     driver.findElement(By.id(\"Pspgth-Input-File\")).sendKeys(ExpFileReadUtils.ABINIT_INPUT3);\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"compute-resource\"))).selectByVisibleText(\"comet.sdsc.edu\");\n       waitTime(200);\n     new Select(driver.findElement(By.id(\"select-queue\"))).selectByVisibleText(\"compute\");\n       waitTime(200);\n     driver.findElement(By.id(\"node-count\")).clear();\n     driver.findElement(By.id(\"node-count\")).sendKeys(\"1\");\n     driver.findElement(By.id(\"cpu-count\")).clear();\n     driver.findElement(By.id(\"cpu-count\")).sendKeys(\"16\");\n     driver.findElement(By.id(\"wall-time\")).clear();\n     driver.findElement(By.id(\"wall-time\")).sendKeys(\"30\");\n     driver.findElement(By.id(\"memory-count\")).clear();\n     driver.findElement(By.id(\"memory-count\")).sendKeys(\"0\");\n     driver.findElement(By.id(\"enableEmail\")).click();\n     driver.findElement(By.id(\"emailAddresses\")).clear();\n     driver.findElement(By.id(\"emailAddresses\")).sendKeys(ExpFileReadUtils.readProperty(\"email1\"));\n     driver.findElement(By.xpath(\"(//button[@type='button'])[3]\")).click();\n     driver.findElement(By.xpath(\"(//input[@name='emailAddresses[]'])[2]\")).sendKeys(ExpFileReadUtils.readProperty(\"email2\"));\n       waitTime(200);\n     driver.findElement(By.id(\"expLaunch\")).click();\n       waitTime (200);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/AbinitComet.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "buscaSimplesPorDarf_688", "method name": "busca Simples Por Darf", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl);\n         assertThat(driver.getTitle(), is(\"Portal de Serviços - Página Inicial\"));\n \n         driver.findElement(By.id(\"buscar\")).sendKeys(\"darf\");\n         driver.findElement(By.className(\"searchButton\")).click();\n \n         assertThat(driver.getTitle(), is(\"Portal de Serviços - Busca por darf\"));\n \n         assertThat(driver.findElements(By.cssSelector(\"#resultados-busca li\")).size(), is(20));\n         assertThat(driver.findElements(By.cssSelector(\"#resultados-busca li h3\")).get(0).getText(), is(\"Documento de Arrecadação de Receitas Federais (Darf)\"));\n \n         assertThat(driver.findElement(By.id(\"buscar\")).getAttribute(\"value\"), is(\"darf\"));\n \n         driver.findElement(By.id(\"buscar\")).clear();\n         driver.findElement(By.id(\"buscar\")).sendKeys(\"prouni\");\n         driver.findElement(By.className(\"searchButton\")).click();\n \n         assertThat(driver.getTitle(), is(\"Portal de Serviços - Busca por prouni\"));\n \n         assertThat(driver.findElements(By.cssSelector(\"#resultados-busca li\")).size(), is(20));\n         assertThat(driver.findElements(By.cssSelector(\"#resultados-busca li h3\")).get(0).getText(), is(\"ProUni — Programa Universidade para Todos\"));\n         driver.findElement(By.cssSelector(\"#resultados-busca li a\")).click();\n \n         assertThat(driver.getTitle(), is(\"Portal de Serviços - ProUni — Programa Universidade para Todos\"));\n     }\n", "path": "src/test/java/br/gov/servicos/frontend/BuscaUITest.java", "repo name": "servicosgoval/portal-de-servicos"}
{"repo_name": "goToUrl_689", "method name": "go To Url", "comments": [], "url": true, "content": "    private void function(String url){\n         driver.get(url);\n \n         seleniumInteractions.takeScreenshot();\n     }\n", "path": "src/main/java/com/byclosure/webcat/stepdefinitions/BrowsingSteps.java", "repo name": "Byclosure/webcat-testing-platform"}
{"repo_name": "getGoogleAccessToken_690", "method name": "get Google Access Token", "comments": [" This can get a single scope only.  Unable to automate requesting token for multiple scopes."], "url": true, "content": "    private String function(String email, String pw, String client_id, String redirect_uri, String scope) {\n         Property staticToken = property(\"authToken\");\n         if (staticToken.exists()) {\n             return staticToken.getPropertyValue();\n         }\n \n         // https://accounts.google.com/o/oauth2/auth?response_type=token&client_id=37298738223-o26xasxd7a217srs4t7ue1fudmt1ao1ge5.apps.googleusercontent.com&redirect_uri=https://[YOUR_TEST_APP].appspot.com/your_redirect_path&scope=https://www.googleapis.com/auth/userinfo.email\n \n         String requestTokenUrl = String.format(\"%s?response_type=token&client_id=%s&redirect_uri=%s&scope=%s\",\n             GOOGLE_OAUTH2_REQUEST_TOKEN_URL, client_id, redirect_uri, scope);\n \n         String cacheKey = email + \":\" + requestTokenUrl;\n         if (tokenCache.containsKey(cacheKey)) {\n             return tokenCache.get(cacheKey);\n         }\n         driver.manage().deleteAllCookies();\n         driver.get(requestTokenUrl);\n \n         try {\n             driver.findElement(By.id(\"Email\")).sendKeys(email);\n             driver.findElement(By.id(\"Passwd\")).sendKeys(pw);\n             driver.findElement(By.id(\"signIn\")).submit();\n         } catch (NoSuchElementException nsee) {\n             String errMsg = driver.getCurrentUrl() + \" ----- \" + driver.getPageSource();\n             throw new NoSuchElementException(nsee.toString() + \" ----- \" + errMsg);\n         }\n \n         try {\n             WebElement button = driver.findElement(By.id(\"submit_approve_access\"));\n             Graphene.waitModel(driver).withTimeout(5, TimeUnit.SECONDS).until().element(button).is().enabled();\n             button.click();\n         } catch (NoSuchElementException e) {\n             // Apparently access has already been approved and the user is not being asked to approve access.\n             // The approval page will only be displayed again after access is revoked through Google Accounts.\n         }\n \n         // The redirect looks like:\n         // https://[YOUR_TEST_APP.appspot.com/your_redirect_path#access_token=ee29.AHES6ZQPPOue4vgQhacbi__AN8Y0wLLt60sEchFaw&token_type=Bearer&expires_in=3600\n \n         // URLEncodedUtils unable to parse parameters after #\n         String redirectUrlWithToken = driver.getCurrentUrl().replace(\"#access_token=\", \"?access_token=\");\n \n         List<NameValuePair> params;\n         try {\n             params = URLEncodedUtils.parse(new URI(redirectUrlWithToken), \"UTF-8\");\n         } catch (URISyntaxException urise) {\n             throw new IllegalStateException(urise);\n         }\n \n         String accessToken = null;\n         for (NameValuePair param : params) {\n             if (param.getName().equals(\"access_token\")) {\n                 accessToken = param.getValue();\n             }\n         }\n         assertNotNull(\"Token is null:\" + driver.getCurrentUrl() + \" ----- \" + driver.getPageSource(), accessToken);\n \n         tokenCache.put(cacheKey, accessToken);\n         return accessToken;\n     }\n", "path": "tests/appengine-tck-oauth/src/test/java/com/google/appengine/tck/oauth/ClientSideWebAppFlowTest.java", "repo name": "GoogleCloudPlatform/appengine-tck"}
{"repo_name": "DoLoginTest_691", "method name": "Do Login Test", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tWebElement userNameElement = driver.findElement(By.id(\"username\"));\n \t\tuserNameElement.clear();\n \t\tuserNameElement.sendKeys(\"admin\");\n \n \t\tWebElement passwordElement = driver.findElement(By.name(\"password\"));\n \t\tpasswordElement.clear();\n \t\tpasswordElement.sendKeys(\"admin\");\n \t}\n", "path": "src/test/java/ru/greg3d/DoLogin.java", "repo name": "Greg3dot14D/JavaWebDriverTraining"}
{"repo_name": "transactionDetailHasLinksToLitle_692", "method name": "transaction Detail Has Links To Litle", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t    iAmDoingLitleAuth();\n \t    iAmLoggedInAsWithThePassword(\"abc@gmail.com\", \"password\");\n \t    iHaveInMyCart(\"vault\");\n \t    iCheckOutWith(\"Visa\", \"4100000000000001\");\n \t    iLogOutAsUser();\n \n \t    iAmLoggedInAsAnAdministrator();\n \n \t    iView(\"Sales\", \"Orders\");\n \t    iClickOnTheTopRowInOrders();\n \t    iPressInvoice();\n \t    iSelectNameFromSelect(\"Capture Online\", \"invoice[capture_case]\");\n \t    iPressSubmitInvoice(\"The invoice has been created.\", null);\n \n \t    iView(\"Sales\", \"Transactions\");\n \t    //There should be 2 rows\n \t    WebElement table = driver.findElement(By.id(\"order_transactions_table\"));\n \t    List<WebElement> rows = table.findElement(By.tagName(\"tbody\")).findElements(By.tagName(\"tr\"));\n \t    assertEquals(2, rows.size());\n \t    WebElement firstRow = rows.get(0);\n \t    firstRow.click();\n \t    //The first row is the capture\n \t    String parentUrl = verifyTransactionDetailTable(\"capture\");\n \t    driver.get(parentUrl);\n \t    verifyTransactionDetailTable(\"authorization\");\n \n \t    iLogOutAsAdministrator();\n \t}\n", "path": "test/selenium/com/litle/magento/selenium/TransactionDetailTests.java", "repo name": "LitleCo/litle-integration-magento"}
{"repo_name": "iClickOnTheCustomerWithEmail_693", "method name": "i Click On The Customer With Email", "comments": [], "url": true, "content": "    void function(String email) {\n         if(\"New Order / Orders / Sales / Magento Admin\".equals(driver.getTitle())) {\n             WebElement e = driver.findElement(By.id(\"sales_order_create_customer_grid_table\"));\n             e = e.findElement(By.tagName(\"tbody\"));\n             List<WebElement> rows = e.findElements(By.tagName(\"tr\"));\n             WebElement rowToClick = null;\n             for(WebElement row : rows) {\n                 WebElement emailCol = row.findElements(By.tagName(\"td\")).get(2);\n                 String colValue = emailCol.getText().trim();\n                 if(colValue.equals(email)) {\n                     rowToClick = row;\n                 }\n             }\n             assertNotNull(\"Couldn't find customer with email \" + email, rowToClick);\n             rowToClick.click();\n             waitFor(By.id(\"submit_order_top_button\"));\n         }\n         else {\n             WebElement e = driver.findElement(By.id(\"customerGrid_table\"));\n             e = e.findElement(By.tagName(\"tbody\"));\n             List<WebElement> rows = e.findElements(By.tagName(\"tr\"));\n             String url = null;\n             for(WebElement row : rows) {\n                 WebElement emailCol = row.findElements(By.tagName(\"td\")).get(3);\n                 String colName = emailCol.getText().trim();\n                 if(colName.equals(email)) {\n                     url = row.getAttribute(\"title\");\n                 }\n             }\n             assertNotNull(\"Couldn't find customer with email \" + email, url);\n             driver.get(url);\n             waitFor(By.id(\"customer_info_tabs\"));\n         }\n     }\n", "path": "test/selenium/com/litle/magento/selenium/BaseTestCase.java", "repo name": "LitleCo/litle-integration-magento"}
{"repo_name": "iClickOnTheTopRowInInvoices_694", "method name": "i Click On The Top Row In Invoices", "comments": [], "url": true, "content": "    void function() {\n         String url = driver.findElement(By.xpath(\"/html/body/div[2]/div[3]/div/div/div[2]/div/div[3]/div[2]/div/div/div/table/tbody/tr\")).getAttribute(\"title\");\n         driver.get(url);\n         waitFor(By.id(\"comments_block\"));\n     }\n", "path": "test/selenium/com/litle/magento/selenium/BaseTestCase.java", "repo name": "LitleCo/litle-integration-magento"}
{"repo_name": "the_User_navigates_to_695", "method name": "the User navigates to", "comments": ["When(\"^the User navigates to \\\"(.*?)\\\"$\")"], "url": true, "content": "  public void function(String url) throws Throwable {\n \n     webDriver.get(BASE_URL + url);\n \n     waitAndTakeScreenshot(10000);\n   }\n", "path": "src/test/java/com/andremanuelbarbosa/imageuploader/steps/ImageUploaderSteps.java", "repo name": "andremanuelbarbosa/image-uploader"}
{"repo_name": "que_el_usuario_ingreso_a_696", "method name": "que el usuario ingreso a", "comments": ["Dado(\"^que el usuario ingreso a \\\"([^\\\"]*)\\\"$\")"], "url": true, "content": "\tpublic void function(String url) throws Throwable {\n \t\tdriver = new FirefoxDriver();\n \t\tdriver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n \t\tdriver.get(url);\n \t}\n", "path": "src/test/java/ar/com/proautomation/specs/glue/GoogleSearchStepDefinition.java", "repo name": "MarceloCorpucci/java-proautomation"}
{"repo_name": "testDeleteLocations_697", "method name": "test Delete Locations", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"loginLink\")).click();\n     driver.findElement(By.id(\"UserName\")).clear();\n     driver.findElement(By.id(\"UserName\")).sendKeys(\"admin\");\n     driver.findElement(By.id(\"Password\")).clear();\n     driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Locations\")).click();\n     driver.findElement(By.name(\"searchString\")).clear();\n     driver.findElement(By.name(\"searchString\")).sendKeys(\"Grand Canyon National Park (Testing)\");\n     driver.findElement(By.id(\"btn\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.name(\"searchString\")).clear();\n     driver.findElement(By.name(\"searchString\")).sendKeys(\"Multnomah Falls (Testing)\");\n     driver.findElement(By.id(\"btn\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.name(\"searchString\")).clear();\n     driver.findElement(By.name(\"searchString\")).sendKeys(\"Santiam State Forest (Testing)\");\n     driver.findElement(By.id(\"btn\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.name(\"searchString\")).clear();\n     driver.findElement(By.name(\"searchString\")).sendKeys(\"Silver Falls State Park (Testing)\");\n     driver.findElement(By.id(\"btn\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.name(\"searchString\")).clear();\n     driver.findElement(By.name(\"searchString\")).sendKeys(\"Zion National Park (Testing)\");\n     driver.findElement(By.id(\"btn\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Log off\")).click();\n   }\n", "path": "TentsNTrailsTesting/src/com/tentsntrails/testing/sprint6/DeleteLocations.java", "repo name": "aaroncarsonart/TentsNTrailsTesting"}
{"repo_name": "testCreateLocations_698", "method name": "test Create Locations", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/\");\n \t\tdriver.findElement(By.id(\"loginLink\")).click();\n \t\tdriver.findElement(By.id(\"UserName\")).clear();\n \t\tdriver.findElement(By.id(\"UserName\")).sendKeys(\"admin\");\n \t\tdriver.findElement(By.id(\"Password\")).clear();\n \t\tdriver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Locations\")).click();\n \t\tdriver.findElement(By.linkText(\"Add New\")).click();\n \t\tdriver.findElement(By.id(\"Label\")).clear();\n \t\tdriver.findElement(By.id(\"Label\")).sendKeys(\n \t\t\t\t\"Grand Canyon National Park (Testing)\");\n \t\tdriver.findElement(By.id(\"Latitude\")).clear();\n \t\tdriver.findElement(By.id(\"Latitude\")).sendKeys(\"36.0553\");\n \t\tdriver.findElement(By.id(\"Longitude\")).clear();\n \t\tdriver.findElement(By.id(\"Longitude\")).sendKeys(\"-112.1218\");\n \t\tdriver.findElement(By.id(\"Description\")).clear();\n \t\tdriver.findElement(By.id(\"Description\"))\n \t\t\t\t.sendKeys(\n \t\t\t\t\t\t\"The Grand Canyon is a steep-sided canyon carved by the Colorado River in the state of Arizona in the United States.\");\n \t\tnew Select(driver.findElement(By.id(\"Difficulty\")))\n \t\t\t\t.selectByVisibleText(\"Easy\");\n \t\tdriver.findElement(By.id(\"RecOptions_0__IsChecked\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Add New\")).click();\n \t\tdriver.findElement(By.id(\"Label\")).clear();\n \t\tdriver.findElement(By.id(\"Label\"))\n \t\t\t\t.sendKeys(\"Multnomah Falls (Testing)\");\n \t\tdriver.findElement(By.id(\"Latitude\")).clear();\n \t\tdriver.findElement(By.id(\"Latitude\")).sendKeys(\"45.5760\");\n \t\tdriver.findElement(By.id(\"Longitude\")).clear();\n \t\tdriver.findElement(By.id(\"Longitude\")).sendKeys(\"-122.1154\");\n \t\tdriver.findElement(By.id(\"Description\")).clear();\n \t\tdriver.findElement(By.id(\"Description\"))\n \t\t\t\t.sendKeys(\n \t\t\t\t\t\t\"Multnomah Falls is a waterfall on the Oregon side of the Columbia River Gorge, located east of Troutdale, between Corbett and Dodson, along the Historic Columbia River Highway.\");\n \t\tdriver.findElement(By.id(\"RecOptions_0__IsChecked\")).click();\n \t\tnew Select(driver.findElement(By.id(\"Difficulty\")))\n \t\t\t\t.selectByVisibleText(\"Medium\");\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Add New\")).click();\n \t\tdriver.findElement(By.id(\"Label\")).clear();\n \t\tdriver.findElement(By.id(\"Label\")).sendKeys(\n \t\t\t\t\"Santiam State Forest (Testing)\");\n \t\tdriver.findElement(By.id(\"Latitude\")).clear();\n \t\tdriver.findElement(By.id(\"Latitude\")).sendKeys(\"44.7165\");\n \t\tdriver.findElement(By.id(\"Description\")).clear();\n \t\tdriver.findElement(By.id(\"Description\"))\n \t\t\t\t.sendKeys(\n \t\t\t\t\t\t\"Santiam State Forest is one of six state forests managed by the Oregon Department of Forestry. The forest is located approximately 25 miles (40 km) southeast of Salem, Oregon, and includes 47,871 acres (193.73 km2).\");\n \t\tnew Select(driver.findElement(By.id(\"Difficulty\")))\n \t\t\t\t.selectByVisibleText(\"Hard\");\n \t\tdriver.findElement(By.id(\"RecOptions_0__IsChecked\")).click();\n \t\tdriver.findElement(By.id(\"RecOptions_1__IsChecked\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Add New\")).click();\n \t\tdriver.findElement(By.id(\"Label\")).clear();\n \t\tdriver.findElement(By.id(\"Label\")).sendKeys(\n \t\t\t\t\"Silver Falls State Park (Testing)\");\n \t\tdriver.findElement(By.id(\"Latitude\")).clear();\n \t\tdriver.findElement(By.id(\"Latitude\")).sendKeys(\"44.8512\");\n \t\tdriver.findElement(By.id(\"Longitude\")).clear();\n \t\tdriver.findElement(By.id(\"Longitude\")).sendKeys(\"-122.6462\");\n \t\tdriver.findElement(By.id(\"Description\")).clear();\n \t\tdriver.findElement(By.id(\"Description\"))\n \t\t\t\t.sendKeys(\n \t\t\t\t\t\t\"Silver Falls State Park is a state park in the U.S. state of Oregon, located near Silverton, about 20 miles (32 km) east-southeast of Salem. It is the largest state park in Oregon with an area of more than 9,000 acres (36 km2).\");\n \t\tnew Select(driver.findElement(By.id(\"Difficulty\")))\n \t\t\t\t.selectByVisibleText(\"Varies\");\n \t\tdriver.findElement(By.id(\"RecOptions_1__IsChecked\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Add New\")).click();\n \t\tdriver.findElement(By.id(\"Label\")).clear();\n \t\tdriver.findElement(By.id(\"Label\")).sendKeys(\n \t\t\t\t\"Zion National Park (Testing)\");\n \t\tdriver.findElement(By.id(\"Latitude\")).clear();\n \t\tdriver.findElement(By.id(\"Latitude\")).sendKeys(\"37.2026\");\n \t\tdriver.findElement(By.id(\"Longitude\")).clear();\n \t\tdriver.findElement(By.id(\"Longitude\")).sendKeys(\"-112.9878\");\n \t\tdriver.findElement(By.id(\"Description\")).clear();\n \t\tdriver.findElement(By.id(\"Description\"))\n \t\t\t\t.sendKeys(\n \t\t\t\t\t\t\"Zion National Park is located in the Southwestern United States, near Springdale, Utah. A prominent feature of the 229-square-mile (590 km2) park is Zion Canyon, which is 15 miles (24 km) long and up to half a mile (800 m) deep.\");\n \t\tnew Select(driver.findElement(By.id(\"Difficulty\")))\n \t\t\t\t.selectByVisibleText(\"NA\");\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Log off\")).click();\n \t}\n", "path": "TentsNTrailsTesting/src/com/tentsntrails/testing/sprint6/CreateLocations.java", "repo name": "aaroncarsonart/TentsNTrailsTesting"}
{"repo_name": "testLoginAsAdmin_699", "method name": "test Login As Admin", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"loginLink\")).click();\n     driver.findElement(By.id(\"UserName\")).clear();\n     driver.findElement(By.id(\"UserName\")).sendKeys(\"Admin\");\n     driver.findElement(By.id(\"Password\")).clear();\n     driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Log off\")).click();\n   }\n", "path": "TentsNTrailsTesting/src/com/tentsntrails/testing/sprint5/LoginAsAdmin.java", "repo name": "aaroncarsonart/TentsNTrailsTesting"}
{"repo_name": "testCreateUsers_700", "method name": "test Create Users", "comments": [" Create some users.", " @throws Exception", "Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/\");\n \t\t\n \t\t// create: asenner\n \t\tdriver.findElement(By.id(\"registerLink\")).click();\n \t\tdriver.findElement(By.id(\"UserName\")).clear();\n \t\tdriver.findElement(By.id(\"UserName\")).sendKeys(\"asenner\");\n \t\tdriver.findElement(By.id(\"Email\")).clear();\n \t\tdriver.findElement(By.id(\"Email\")).sendKeys(\"asenner@fake.com\");\n \t\tdriver.findElement(By.id(\"FirstName\")).clear();\n \t\tdriver.findElement(By.id(\"FirstName\")).sendKeys(\"April\");\n \t\tdriver.findElement(By.id(\"LastName\")).clear();\n \t\tdriver.findElement(By.id(\"LastName\")).sendKeys(\"Senner\");\n \t\tdriver.findElement(By.id(\"Password\")).clear();\n \t\tdriver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).clear();\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.id(\"Private\")).click();\n \t\tdriver.findElement(By.id(\"RecOptions_0__IsChecked\")).click();\n \t\tdriver.findElement(By.id(\"RecOptions_1__IsChecked\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Log off\")).click();\n \n \t\t// create: acarson\n \t\tdriver.findElement(By.id(\"registerLink\")).click();\n \t\tdriver.findElement(By.id(\"UserName\")).clear();\n \t\tdriver.findElement(By.id(\"UserName\")).sendKeys(\"acarson\");\n \t\tdriver.findElement(By.id(\"Email\")).clear();\n \t\tdriver.findElement(By.id(\"Email\")).sendKeys(\"acarson@fake.com\");\n \t\tdriver.findElement(By.id(\"FirstName\")).clear();\n \t\tdriver.findElement(By.id(\"FirstName\")).sendKeys(\"Aaron\");\n \t\tdriver.findElement(By.id(\"LastName\")).clear();\n \t\tdriver.findElement(By.id(\"LastName\")).sendKeys(\"Carson\");\n \t\tdriver.findElement(By.id(\"Password\")).clear();\n \t\tdriver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).clear();\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.id(\"RecOptions_0__IsChecked\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Log off\")).click();\n \t\t\n \t\t// create: jpetersen\n \t\tdriver.findElement(By.id(\"registerLink\")).click();\n \t\tdriver.findElement(By.id(\"UserName\")).clear();\n \t\tdriver.findElement(By.id(\"UserName\")).sendKeys(\"jpetersen\");\n \t\tdriver.findElement(By.id(\"Email\")).clear();\n \t\tdriver.findElement(By.id(\"Email\")).sendKeys(\"jpetersen@fake.com\");\n \t\tdriver.findElement(By.id(\"FirstName\")).clear();\n \t\tdriver.findElement(By.id(\"FirstName\")).sendKeys(\"Jared\");\n \t\tdriver.findElement(By.id(\"LastName\")).clear();\n \t\tdriver.findElement(By.id(\"LastName\")).sendKeys(\"Petersen\");\n \t\tdriver.findElement(By.id(\"Password\")).clear();\n \t\tdriver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).clear();\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.id(\"RecOptions_1__IsChecked\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Log off\")).click();\n \t\t\n \t\t// create: jgarcia\n \t\tdriver.findElement(By.id(\"registerLink\")).click();\n \t\tdriver.findElement(By.id(\"UserName\")).clear();\n \t\tdriver.findElement(By.id(\"UserName\")).sendKeys(\"jgarcia\");\n \t\tdriver.findElement(By.id(\"Email\")).clear();\n \t\tdriver.findElement(By.id(\"Email\")).sendKeys(\"jgarcia@fake.com\");\n \t\tdriver.findElement(By.id(\"FirstName\")).clear();\n \t\tdriver.findElement(By.id(\"FirstName\")).sendKeys(\"J.J.\");\n \t\tdriver.findElement(By.id(\"LastName\")).clear();\n \t\tdriver.findElement(By.id(\"LastName\")).sendKeys(\"Garcia\");\n \t\tdriver.findElement(By.id(\"Password\")).clear();\n \t\tdriver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).clear();\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.id(\"Private\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.id(\"UserName\")).clear();\n \t\tdriver.findElement(By.id(\"UserName\")).sendKeys(\"jgarcia2\");\n \t\tdriver.findElement(By.id(\"Email\")).clear();\n \t\tdriver.findElement(By.id(\"Email\")).sendKeys(\"jgarcia2@fake.com\");\n \t\tdriver.findElement(By.id(\"Password\")).clear();\n \t\tdriver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).clear();\n \t\tdriver.findElement(By.id(\"ConfirmPassword\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Log off\")).click();\n \t}\n", "path": "TentsNTrailsTesting/src/com/tentsntrails/testing/sprint6/CreateUsers.java", "repo name": "aaroncarsonart/TentsNTrailsTesting"}
{"repo_name": "testAddReviews_701", "method name": "test Add Reviews", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t    driver.get(baseUrl + \"/\");\n \t    driver.findElement(By.id(\"loginLink\")).click();\n \t    driver.findElement(By.id(\"UserName\")).clear();\n \t    driver.findElement(By.id(\"UserName\")).sendKeys(\"asenner\");\n \t    driver.findElement(By.id(\"Password\")).clear();\n \t    driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t    driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t    driver.findElement(By.linkText(\"Locations\")).click();\n \t    driver.findElement(By.linkText(\"Grand Canyon National Park (Testing)\")).click();\n \t    driver.findElement(By.linkText(\"first\")).click();\n \t    driver.findElement(By.id(\"Rating\")).click();\n \t    driver.findElement(By.id(\"Comment\")).clear();\n \t    driver.findElement(By.id(\"Comment\")).sendKeys(\"This is a nice canyon.\");\n \t    driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t    driver.findElement(By.linkText(\"Log off\")).click();\n \t    driver.findElement(By.id(\"loginLink\")).click();\n \t    driver.findElement(By.id(\"UserName\")).clear();\n \t    driver.findElement(By.id(\"UserName\")).sendKeys(\"jgarcia2\");\n \t    driver.findElement(By.id(\"Password\")).clear();\n \t    driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t    driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t    driver.findElement(By.linkText(\"Locations\")).click();\n \t    driver.findElement(By.linkText(\"Grand Canyon National Park (Testing)\")).click();\n \t    driver.findElement(By.linkText(\"Write New Review\")).click();\n \t    driver.findElement(By.xpath(\"(//input[@id='Rating'])[2]\")).click();\n \t    driver.findElement(By.id(\"Comment\")).clear();\n \t    driver.findElement(By.id(\"Comment\")).sendKeys(\"I don't like canyons.\");\n \t    driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t    driver.findElement(By.linkText(\"Log off\")).click();\n \t    driver.findElement(By.id(\"loginLink\")).click();\n \t    driver.findElement(By.id(\"UserName\")).clear();\n \t    driver.findElement(By.id(\"UserName\")).sendKeys(\"acarson\");\n \t    driver.findElement(By.id(\"Password\")).clear();\n \t    driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t    driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t    driver.findElement(By.linkText(\"Locations\")).click();\n \t    driver.findElement(By.linkText(\"Grand Canyon National Park (Testing)\")).click();\n \t    driver.findElement(By.linkText(\"Write New Review\")).click();\n \t    driver.findElement(By.id(\"Rating\")).click();\n \t    driver.findElement(By.id(\"Comment\")).clear();\n \t    driver.findElement(By.id(\"Comment\")).sendKeys(\"I go here every year with my parents.\");\n \t    driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t    driver.findElement(By.linkText(\"Log off\")).click();\n \t    driver.findElement(By.id(\"loginLink\")).click();\n \t    driver.findElement(By.id(\"UserName\")).clear();\n \t    driver.findElement(By.id(\"UserName\")).sendKeys(\"jpetersen\");\n \t    driver.findElement(By.id(\"Password\")).clear();\n \t    driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t    driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t    driver.findElement(By.linkText(\"Locations\")).click();\n \t    driver.findElement(By.linkText(\"Grand Canyon National Park (Testing)\")).click();\n \t    driver.findElement(By.linkText(\"Write New Review\")).click();\n \t    driver.findElement(By.id(\"Rating\")).click();\n \t    driver.findElement(By.id(\"Comment\")).clear();\n \t    driver.findElement(By.id(\"Comment\")).sendKeys(\"Sometimes I wish we'd all just get along.\");\n \t    driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t    driver.findElement(By.linkText(\"Log off\")).click();\n \n \t}\n", "path": "TentsNTrailsTesting/src/com/tentsntrails/testing/sprint6/CreateReviews.java", "repo name": "aaroncarsonart/TentsNTrailsTesting"}
{"repo_name": "testRemoveReviews_702", "method name": "test Remove Reviews", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"loginLink\")).click();\n     driver.findElement(By.id(\"Password\")).clear();\n     driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n     driver.findElement(By.id(\"UserName\")).clear();\n     driver.findElement(By.id(\"UserName\")).sendKeys(\"asenner\");\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Hello asenner!\")).click();\n     driver.findElement(By.linkText(\"My Reviews\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Log off\")).click();\n     driver.findElement(By.id(\"loginLink\")).click();\n     driver.findElement(By.id(\"Password\")).clear();\n     driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n     driver.findElement(By.id(\"UserName\")).clear();\n     driver.findElement(By.id(\"UserName\")).sendKeys(\"jgarcia2\");\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Hello jgarcia2!\")).click();\n     \n     driver.findElement(By.linkText(\"My Reviews\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Log off\")).click();\n     driver.findElement(By.id(\"loginLink\")).click();\n     driver.findElement(By.id(\"Password\")).clear();\n     driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n     driver.findElement(By.id(\"UserName\")).clear();\n     driver.findElement(By.id(\"UserName\")).sendKeys(\"acarson\");\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Hello acarson!\")).click();\n     driver.findElement(By.linkText(\"My Reviews\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Log off\")).click();\n     driver.findElement(By.id(\"loginLink\")).click();\n     driver.findElement(By.id(\"Password\")).clear();\n     driver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n     driver.findElement(By.id(\"UserName\")).clear();\n     driver.findElement(By.id(\"UserName\")).sendKeys(\"jpetersen\");\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Hello jpetersen!\")).click();\n     driver.findElement(By.linkText(\"My Reviews\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     driver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n     driver.findElement(By.linkText(\"Log off\")).click();\n   }\n", "path": "TentsNTrailsTesting/src/com/tentsntrails/testing/sprint6/DeleteReviews.java", "repo name": "aaroncarsonart/TentsNTrailsTesting"}
{"repo_name": "assertPageTitleContainsSearchQuery_703", "method name": "assert Page Title Contains Search Query", "comments": [], "url": true, "content": "\tpublic void function(String title) {\n \t\tdriver.get(baseUrl + \"/Location\");\n \t\tdriver.findElement(By.linkText(\"Locations\")).click();\n \t\tdriver.findElement(By.id(\"dropdownMenu1\")).click();\n \t\tdriver.findElement(By.linkText(\"All\")).click();\n \t\tdriver.findElement(By.name(\"searchString\")).clear();\n \t\tdriver.findElement(By.name(\"searchString\")).sendKeys(title);\n \t\tdriver.findElement(By.id(\"btn\")).click();\n \t\tif (!driver.getTitle().contains(title)) {\n \t\t\tfail(\"title of page must contain \" + title);\n \t\t}\n \t}\n", "path": "TentsNTrailsTesting/src/com/tentsntrails/testing/sprint6/UserStory130.java", "repo name": "aaroncarsonart/TentsNTrailsTesting"}
{"repo_name": "testMergeLocations_704", "method name": "test Merge Locations", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/\");\n \t\tdriver.findElement(By.id(\"loginLink\")).click();\n \t\tdriver.findElement(By.id(\"UserName\")).clear();\n \t\tdriver.findElement(By.id(\"UserName\")).sendKeys(\"Admin\");\n \t\tdriver.findElement(By.id(\"Password\")).clear();\n \t\tdriver.findElement(By.id(\"Password\")).sendKeys(\"Password1!\");\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Locations\")).click();\n \t\tdriver.findElement(By.linkText(\"Add New\")).click();\n \t\tdriver.findElement(By.id(\"Label\")).clear();\n \t\tdriver.findElement(By.id(\"Label\")).sendKeys(\"TempLocation\");\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Add New\")).click();\n \t\tdriver.findElement(By.id(\"Label\")).clear();\n \t\tdriver.findElement(By.id(\"Label\")).sendKeys(\"MergedLocation\");\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t\tdriver.findElement(By.linkText(\"Hello Admin!\")).click();\n \t\tdriver.findElement(By.linkText(\"Join Locations\")).click();\n \t\tdriver.findElement(By.id(\"SearchStringA\")).clear();\n \t\tdriver.findElement(By.id(\"SearchStringA\")).sendKeys(\"TempLocation\");\n \t\tdriver.findElement(By.cssSelector(\"div > p > input[type=\\\"submit\\\"]\"))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.id(\"SearchStringB\")).clear();\n \t\tdriver.findElement(By.id(\"SearchStringB\")).sendKeys(\"MergedLocation\");\n \t\tdriver.findElement(By.xpath(\"//input[@value='Search Location B']\"))\n \t\t\t\t.click();\n \t\tassertEquals(\"TempLocation\", driver.findElement(By.xpath(\"//td[2]\"))\n \t\t\t\t.getText());\n \t\tassertEquals(\n \t\t\t\t\"MergedLocation\",\n \t\t\t\tdriver.findElement(By.xpath(\"//div[2]/table/tbody/tr[2]/td[2]\"))\n \t\t\t\t\t\t.getText());\n \t\tdriver.findElement(By.name(\"LocationA\")).click();\n \t\tdriver.findElement(By.name(\"LocationB\")).click();\n \t\tdriver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n \t\tassertEquals(\"MergedLocation - tents n trails\", driver.getTitle());\n \t\tassertEquals(\"Location A has been merged into Location B.\", driver\n \t\t\t\t.findElement(By.cssSelector(\"p\")).getText());\n \t\tdriver.findElement(By.linkText(\"Locations\")).click();\n \t\tdriver.findElement(By.xpath(\"(//a[contains(text(),'Delete')])[3]\"))\n \t\t\t\t.click();\n \t\tdriver.findElement(By.cssSelector(\"input.btn.btn-default\")).click();\n \t}\n", "path": "TentsNTrailsTesting/src/com/tentsntrails/testing/sprint5/MergeLocations.java", "repo name": "aaroncarsonart/TentsNTrailsTesting"}
{"repo_name": "fromWebDriver_705", "method name": "from Web Driver", "comments": [], "url": true, "content": "\tprivate String function(String nextUrl) {\n \t\tdriver.navigate().to(nextUrl);\n \t\ttry {\n \t\t\tThread.sleep(TimeUnit.SECONDS.toMillis(BROWSER_TIME_OUT));\n \t\t} catch (InterruptedException e) {\n \t\t\tlog.error(\"Interrupted while waiting for the browser to render\");\n \t\t\tThread.currentThread().interrupt();\n \t\t}\n \t\treturn driver.getPageSource();\n \t}\n", "path": "src/main/java/com/alexnederlof/rendered/FetchTask.java", "repo name": "alexnederlof/rendered-web-measurer"}
{"repo_name": "testHomePageHasAHeader_706", "method name": "test Home Page Has A Header", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     Assert.assertFalse(\"\".equals(homepage.header.getText()));\n   }\n", "path": "src/main/resources/archetype-resources/src/test/java/SampleJUnitTest.java", "repo name": "barancev/webdriver-junit-archetype"}
{"repo_name": "testDeleteFilm_707", "method name": "test Delete Film", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.id(\"q\")).clear();\n     driver.findElement(By.id(\"q\")).sendKeys(\"Sunshine\");\n     driver.findElement(By.cssSelector(\"input#q\")).sendKeys(Keys.ENTER);\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (isElementPresent(By.cssSelector(\"div#container a[href='./?go=movie&id=12']\"))) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     // ERROR: Caught exception [ERROR: Unsupported command [selectWindow | null | ]]\n     driver.findElement(By.cssSelector(\"div.title\")).click();\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Remove\\\"]\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to remove this[\\\\s\\\\S]$\"));\n     driver.findElement(By.id(\"q\")).clear();\n     driver.findElement(By.id(\"q\")).sendKeys(\"Sunshine\");\n     driver.findElement(By.cssSelector(\"input#q\")).sendKeys(Keys.ENTER);\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (isElementPresent(By.cssSelector(\"div#container a[href='./?go=movie&id=12']\"))) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n   }\n", "path": "src/test/java/ru/st/selenium/DeleteFilm.java", "repo name": "yuliya-pavlova/se-java-13-homework"}
{"repo_name": "mayBeLogin_708", "method name": "may Be Login", "comments": [], "url": true, "content": "    public static void function(WebDriver driver) throws Exception {\n         try {\n             driver.findElement(By.xpath(\"//nav\"));\n         } catch (Exception e) {\n             driver.get(baseUrl + \"/php4dvd/\");\n             driver.findElement(By.id(\"username\")).clear();\n             driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n             driver.findElement(By.name(\"password\")).clear();\n             driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n             driver.findElement(By.name(\"submit\")).click();\n         }\n     }\n", "path": "src/test/java/ru/stqa/selenium/Helpers/Helpers.java", "repo name": "Sergey310788/java_selenium_training"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_709", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "denis-vilyuzhanin/selenium-fastview"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_710", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, HTMLUNIT, IE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "denis-vilyuzhanin/selenium-fastview"}
{"repo_name": "testAddMovie_711", "method name": "test Add Movie", "comments": ["Test"], "url": true, "content": "public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n     driver.findElement(By.name(\"submit\")).click();\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"Le jouet\");\n     driver.findElement(By.name(\"year\")).clear();\n     driver.findElement(By.name(\"year\")).sendKeys(\"1976\");\n     driver.findElement(By.name(\"duration\")).clear();\n     driver.findElement(By.name(\"duration\")).sendKeys(\"120\");\n     driver.findElement(By.name(\"rating\")).clear();\n     driver.findElement(By.name(\"rating\")).sendKeys(\"5\");\n     driver.findElement(By.name(\"trailer\")).clear();\n     driver.findElement(By.name(\"trailer\")).sendKeys(\"http://www.kinopoisk.ru/film/57004/video/124770/\");\n     driver.findElement(By.name(\"notes\")).clear();\n     driver.findElement(By.name(\"notes\")).sendKeys(\"Pierre Richar\");\n     driver.findElement(By.name(\"plotoutline\")).clear();\n     driver.findElement(By.name(\"plotoutline\")).sendKeys(\"Comedy\");\n     driver.findElement(By.id(\"text_languages_0\")).clear();\n     driver.findElement(By.id(\"text_languages_0\")).sendKeys(\"French\");\n     driver.findElement(By.name(\"subtitles\")).clear();\n     driver.findElement(By.name(\"subtitles\")).sendKeys(\"NO\");\n     driver.findElement(By.name(\"country\")).clear();\n     driver.findElement(By.name(\"country\")).sendKeys(\"France\");\n     driver.findElement(By.id(\"submit\")).click();\n     driver.findElement(By.linkText(\"Home\")).click();\n     driver.get(baseUrl + \"/php4dvd/#!/sort/name%20asc/\");\n     driver.findElement(By.cssSelector(\"div.title\")).click();\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Remove\\\"]\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to remove this[\\\\s\\\\S]$\"));\n     driver.quit();\n }\n", "path": "src/test/java/ru/st/selenium/AddMovie.java", "repo name": "ezarubaeva/Selenium-Java-ezarubaeva"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_712", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_713", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_714", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     waitFor(WaitingConditions.pageTitleToBe(driver, \"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_715", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE}, reason"], "url": true, "content": "  public void function() {\n     assumeFalse(TestUtilities.isFirefox(driver) && TestUtilities.isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     waitFor(WaitingConditions.pageTitleToBe(driver, \"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_716", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"Opera: failed\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     waitFor(WaitingConditions.pageTitleToBe(driver, \"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_717", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "canBlockInvalidSslCertificates_718", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "handleFormWithJavascriptAction_719", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, CHROME, HTMLUNIT, IPHONE, OPERA, PHANTOMJS, SAFARI, OPERA_MOBILE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "openMainPage_720", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/selenium_cherkasov/applogic1/NavigationHelper1.java", "repo name": "DARTKolian/selenium-dataart-training"}
{"repo_name": "openRelativeUrl_721", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/selenium_cherkasov/applogic1/NavigationHelper1.java", "repo name": "DARTKolian/selenium-dataart-training"}
{"repo_name": "startAndStop_722", "method name": "start And Stop", "comments": ["Test"], "url": true, "content": "    public void function() throws IOException {\n         PhantomJSDriverService driverService = factory.createService();\n \n         driverService.start();\n         try {\n             WebDriver webDriver = factory.createWebDriver(driverService);\n             String url = \"http://localhost:\" + httpServer.getAddress().getPort() + \"/webdriverTest\";\n             webDriver.get(url);\n             String currentUrl = webDriver.getCurrentUrl();\n \n             assertThat(currentUrl).isEqualTo(url);\n         } finally {\n             driverService.stop();\n         }\n     }\n", "path": "src/test/java/de/lgohlke/selenium/webdriver/phantomjs/PhantomJSDriverServiceFactoryIT.java", "repo name": "lkwg82/de.lgohlke.selenium-webdriver"}
{"repo_name": "startAndStop_723", "method name": "start And Stop", "comments": ["Test"], "url": true, "content": "    public void function() throws IOException {\n         ChromeDriverService driverService = factory.createService();\n \n         driverService.start();\n \n         WebDriver webDriver = factory.createWebDriver(driverService);\n         String    url       = \"http://localhost:\" + httpServer.getAddress().getPort() + \"/webdriverTest\";\n         webDriver.get(url);\n         String currentUrl = webDriver.getCurrentUrl();\n \n         assertThat(currentUrl).isEqualTo(url);\n \n         driverService.stop();\n     }\n", "path": "src/test/java/de/lgohlke/selenium/webdriver/chrome/ChromeDriverServiceFactoryIT.java", "repo name": "lkwg82/de.lgohlke.selenium-webdriver"}
{"repo_name": "testUsingCustomUserprofile_724", "method name": "test Using Custom Userprofile", "comments": ["Test"], "url": true, "content": "    public void function() throws IOException {\n \n         ChromeDriverConfiguration  driverConfiguration = new ChromeDriverConfiguration();\n         ChromeDriverServiceFactory factory             = new ChromeDriverServiceFactory(driverConfiguration);\n \n         driverConfiguration.setUserDir(temporaryFolder.newFolder().getAbsolutePath());\n \n         driverService = factory.createService();\n         driverService.start();\n \n         String url      = \"chrome://version\";\n         By     selector = By.id(\"profile_path\");\n \n         WebDriver driver1 = factory.createWebDriver(driverService);\n         driver1.get(url);\n         String profilePath1 = driver1.findElement(selector).getText();\n         driverService.stop();\n \n         driverService.start();\n         WebDriver driver2 = factory.createWebDriver(driverService);\n         driver2.get(url);\n         String profilePath2 = driver2.findElement(selector).getText();\n \n         assertThat(profilePath1).isEqualTo(profilePath2);\n     }\n", "path": "src/test/java/de/lgohlke/selenium/webdriver/chrome/ChromeDriverServiceFactoryIT.java", "repo name": "lkwg82/de.lgohlke.selenium-webdriver"}
{"repo_name": "canAddProduct_725", "method name": "can Add Product", "comments": ["Test", "RunAsClient"], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(applicationUrl);\n \n \t\tdriver.findElement(By.partialLinkText(\"Product\")).click();\n \n \t\tdriver.findElement(By.partialLinkText(\"Create new product\")).click();\n \n \t\tdriver.findElement(By.id(\"name\")).sendKeys(\"JBoss Developer Studio\");\n \n \t\tdriver.findElement(By.cssSelector(\"input[value='Save']\")).click();\n \n \t\tassertTrue(\"Product should be created!\",\n \t\t\t\tdriver.findElement(By.className(\"alert_success\")) != null);\n \t}\n", "path": "src/test/java/org/jboss/community/trts/test/ui/ProductUITest.java", "repo name": "sbunciak/test-result-tracking-system"}
{"repo_name": "changeTemplateToArticleTest_726", "method name": "change Template To Article Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         login();\n         long time = System.currentTimeMillis();\n         String articleUrl = \"selenium\" + time;\n         String articleTitle = \"Selenium Article\" + time;\n         String articleContent = \"This is a testing article content. \" + time;\n         createArticle(articleTitle, articleContent, articleUrl);\n \n         logger.info(\"Wait for item to be deployed\");\n         Thread.sleep(1000 * TimeConstants.WAITING_SECONDS_DEPLOY);\n \n         String articleFilePath = seleniumProperties.getProperty(\"craftercms.preview.deployer.path\") + \"/site/website/\" + articleUrl + \"/index.xml\";\n \n         String contentTypeTag = \"<content-type>\" + seleniumProperties.getProperty(\"craftercms.page.content.type\") + \"</content-type>\";\n         assertTrue(CStudioSeleniumUtil.readFileContents(articleFilePath, contentTypeTag));\n         assertTrue(CStudioSeleniumUtil.readFileContents(articleFilePath, articleContent));\n \n         String newContentType = seleniumProperties.getProperty(\"craftercms.change.template.content.type\");\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Choose 'Change Template' in pages tree context menu\");\n         CStudioSeleniumUtil.ensurePagesTreeIsExpanded(driver);\n         WebElement articleElement = CStudioSeleniumUtil.findItemWithName(driver, articleTitle);\n         CStudioSeleniumUtil.contextMenuOption(driver, \"Change&nbsp;Template\", articleElement);\n \n         logger.info(\"Confirm change template\");\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"acceptCTChange\"));\n \n         logger.info(\"Choose '\" + newContentType + \"' as new content type\");\n         CStudioSeleniumUtil.clickOn(driver, By.cssSelector(\"option[value=\\\"\" + newContentType + \"\\\"]\"));\n \n         logger.info(\"Confirm operation\");\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"submitWCMPopup\"));\n \n         CStudioSeleniumUtil.switchToEditWindow(driver);\n         logger.info(\"Save and close\");\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"cstudioSaveAndClose\"));\n \n         CStudioSeleniumUtil.switchToMainWindow(driver);\n \n         logger.info(\"Wait for item to be deployed\");\n         Thread.sleep(1000 * TimeConstants.WAITING_SECONDS_DEPLOY);\n \n         String newContentTypeTag = \"<content-type>\" + newContentType + \"</content-type>\";\n \n         logger.info(\"Check item has been updated\");\n         assertTrue(CStudioSeleniumUtil.readFileContents(articleFilePath, articleTitle));\n         assertFalse(CStudioSeleniumUtil.readFileContents(articleFilePath, contentTypeTag));\n         assertTrue(CStudioSeleniumUtil.readFileContents(articleFilePath, newContentTypeTag));\n     }\n", "path": "src/test/java/org/craftercms/web/editing/ChangeTemplateTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "deletePageTest_727", "method name": "delete Page Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         logger.info(\"Login as admin\");\n         CStudioSeleniumUtil.tryLogin(driver,\n                 seleniumProperties.getProperty(\"craftercms.admin.username\"),\n                 seleniumProperties.getProperty(\"craftercms.admin.password\"),\n                 true);\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         long time = System.currentTimeMillis();\n         String url = \"selenium\" + time;\n         String content = \"Article main content \" + time;\n         String articlePath = \"/site/website/\" + url + \"/index.xml\";\n \n         logger.info(\"Create article\");\n         createArticle(url, content, url);\n \n         logger.info(\"Check content exists\");\n         assertTrue(CStudioSeleniumUtil.readFileContents(seleniumProperties.getProperty(\"craftercms.preview.deployer.path\") + articlePath, content));\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Select new article\");\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"MyRecentActivity-\" + articlePath));\n \n         logger.info(\"Click Delete option\");\n         CStudioSeleniumUtil.clickOn(driver, By.xpath(\"//a[text()='Delete']\"));\n \n         logger.info(\"Confirm deletion\");\n         CStudioSeleniumUtil.clickOn(driver, By.cssSelector(\"input.do-delete\"));\n         CStudioSeleniumUtil.clickOn(driver, By.cssSelector(\"#acnVersionWrapper input[value=\\\"OK\\\"]\"));\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Check content does not exist anymore\");\n         File contentFile = new File(seleniumProperties.getProperty(\"craftercms.preview.deployer.path\") + articlePath);\n \n         // wait for file to be deleted\n         new FluentWait<File>(contentFile).withTimeout(TimeConstants.WAITING_SECONDS_WEB_ELEMENT, TimeUnit.SECONDS).until(new Predicate<File>() {\n             @Override\n             public boolean apply(File file) {\n                 return !file.exists();\n             }\n         });\n     }\n", "path": "src/test/java/org/craftercms/web/editing/DeleteContentTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "acceptWorkflowTest_728", "method name": "accept Workflow Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         final String updatedTitle = schedulePage();\n \n         logout();\n         useAdminUser();\n         login();\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Check Go Live Queue widget\");\n         new WebDriverWait(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT).until(new ExpectedCondition<Boolean>() {\n             public Boolean apply(WebDriver d) {\n                 return d.findElement(By.id(\"GoLiveQueue-body\")).getText().contains(updatedTitle);\n             }\n         });\n \n         logger.info(\"Check item\");\n         By checkInputBy = By.xpath(\"//div[@id='GoLiveQueue']//input[@id='\" + seleniumProperties.getProperty(\"craftercms.page.to.edit\") + \"']\");\n         CStudioSeleniumUtil.clickOn(driver, checkInputBy);\n \n         logger.info(\"Select Go Live Now\");\n         CStudioSeleniumUtil.clickOn(driver, By.xpath(\"//a[text()='Go Live Now']\"));\n \n         By setToNowBy = By.id(\"globalSetToNow\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, 10, setToNowBy);\n         // Wait for item to be fully initialized\n         Thread.sleep(1000);\n         CStudioSeleniumUtil.clickOn(driver, setToNowBy);\n \n         logger.info(\"Confirm Go Live Now\");\n         By goLiveSubmitBy = By.id(\"golivesubmitButton\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, 10, goLiveSubmitBy);\n         // Wait for item to be fully initialized\n         Thread.sleep(1000);\n         CStudioSeleniumUtil.clickOn(driver, goLiveSubmitBy);\n \n         By okBy = By.id(\"acnOKButton\");\n         logger.info(\"Waiting for item to go-live...\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, 10, okBy);\n         Thread.sleep(1000);\n         CStudioSeleniumUtil.clickOn(driver, okBy);\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Waiting for item to deploy\");\n         Thread.sleep(1000 * TimeConstants.WAITING_SECONDS_DEPLOY);\n \n         logger.info(\"Open file in live folder and check content was updated\");\n         String filePath = seleniumProperties.getProperty(\"craftercms.live.deployer.path\") + seleniumProperties.getProperty(\"craftercms.page.to.edit\");\n         assertTrue(CStudioSeleniumUtil.readFileContents(filePath, updatedTitle));\n     }\n", "path": "src/test/java/org/craftercms/web/basic/WorkflowTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "rejectWorkflowTest_729", "method name": "reject Workflow Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         final String updatedTitle = schedulePage();\n \n         logout();\n         useAdminUser();\n         login();\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Check Go Live Queue widget\");\n         new WebDriverWait(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT).until(new ExpectedCondition<Boolean>() {\n             public Boolean apply(WebDriver d) {\n                 return d.findElement(By.id(\"GoLiveQueue-body\")).getText().contains(updatedTitle);\n             }\n         });\n \n         logger.info(\"Check item\");\n         By checkInputBy = By.xpath(\"//div[@id='GoLiveQueue']//input[@id='\" + seleniumProperties.getProperty(\"craftercms.page.to.edit\") + \"']\");\n         CStudioSeleniumUtil.clickOn(driver, checkInputBy);\n \n         logger.info(\"Select Reject\");\n         CStudioSeleniumUtil.clickOn(driver, By.xpath(\"//a[text()='Reject']\"));\n \n         logger.info(\"Confirm Rejection\");\n         By goLiveSubmitBy = By.id(\"golivesubmitButton\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, 10, goLiveSubmitBy);\n         // Wait for item to be fully initialized\n         Thread.sleep(1000);\n         CStudioSeleniumUtil.clickOn(driver, goLiveSubmitBy);\n \n         By okBy = By.id(\"acnOKButton\");\n         logger.info(\"Waiting for rejection to complete...\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, 10, okBy);\n         Thread.sleep(1000);\n         CStudioSeleniumUtil.clickOn(driver, okBy);\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n \n         Thread.sleep(1000 * TimeConstants.WAITING_SECONDS_DEPLOY);\n \n         logger.info(\"Open file in live folder and check content was not updated\");\n         String filePath = seleniumProperties.getProperty(\"craftercms.live.deployer.path\") + seleniumProperties.getProperty(\"craftercms.page.to.edit\");\n         assertFalse(CStudioSeleniumUtil.readFileContents(filePath, updatedTitle));\n     }\n", "path": "src/test/java/org/craftercms/web/basic/WorkflowTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "copyPastePageTest_730", "method name": "copy Paste Page Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         login();\n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Create article\");\n         long time = System.currentTimeMillis();\n         String articleTitle = \"Article to copy/paste \" + time;\n         String articleContent = \"This is the content of the article to be copied/pasted.\" + time;\n         String articleUrl = \"to_copy_paste_\" + time;\n         createArticle(articleTitle, articleContent, articleUrl);\n \n         logger.info(\"Copy and paste page\");\n         pageOptionAndPaste(articleTitle, articleUrl, articleContent, \"Copy\");\n \n         logger.info(\"Check original article still exists\");\n         checkPageFileExists(\"\", articleUrl, true);\n     }\n", "path": "src/test/java/org/craftercms/web/editing/CopyCutPasteTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "cutPastePageTest_731", "method name": "cut Paste Page Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         login();\n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Create article\");\n         long time = System.currentTimeMillis();\n         String articleTitle = \"Article to cut/paste \" + time;\n         String articleContent = \"This is the content of the article to be copied/pasted.\" + time;\n         String articleUrl = \"to_cut_paste_\" + time;\n         createArticle(articleTitle, articleContent, articleUrl);\n \n         logger.info(\"Cut and paste page\");\n         pageOptionAndPaste(articleTitle, articleUrl, articleContent, \"Cut\");\n \n         logger.info(\"Check original article no longer exists\");\n         checkPageFileExists(\"\", articleUrl, false);\n     }\n", "path": "src/test/java/org/craftercms/web/editing/CopyCutPasteTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "copyPasteComponentTest_732", "method name": "copy Paste Component Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         login();\n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Create Tout\");\n         long time = System.currentTimeMillis();\n         String toutName = \"seleniumTout\" + time;\n         String headline = \"Selenium tout headline \" + time;\n         String internalName = \"Selenium Tout \" + time;\n         createTout(toutName, headline, internalName);\n \n         logger.info(\"Copy and paste component\");\n         componentOptionAndPaste(internalName, toutName, headline, \"Copy\");\n \n         logger.info(\"Check original article still exists\");\n         checkComponentFileExists(\"touts\", toutName, true);\n     }\n", "path": "src/test/java/org/craftercms/web/editing/CopyCutPasteTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "cutPasteComponentTest_733", "method name": "cut Paste Component Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         login();\n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Create Tout\");\n         long time = System.currentTimeMillis();\n         String toutName = \"seleniumTout\" + time;\n         String headline = \"Selenium tout headline \" + time;\n         String internalName = \"Selenium Tout \" + time;\n         createTout(toutName, headline, internalName);\n \n         logger.info(\"Cut and paste component\");\n         componentOptionAndPaste(internalName, toutName, headline, \"Cut\");\n \n         logger.info(\"Check original article no longer exists\");\n         checkComponentFileExists(\"touts\", toutName, false);\n     }\n", "path": "src/test/java/org/craftercms/web/editing/CopyCutPasteTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "pageOptionAndPaste_734", "method name": "page Option And Paste", "comments": [], "url": true, "content": "    private void function(String itemTitle, String itemUrl, String itemContent, String option) throws InterruptedException {\n         logger.info(\"Create a folder to contain copy\");\n         String folderName = createPageFolder();\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Open context menu and click \" + option + \" for new article\");\n         CStudioSeleniumUtil.ensurePagesTreeIsExpanded(driver);\n         CStudioSeleniumUtil.contextMenuOption(driver, option, CStudioSeleniumUtil.findItemWithName(driver, itemTitle));\n \n         logger.info(\"Open context menu and click 'Paste' for new folder\");\n         CStudioSeleniumUtil.ensurePagesTreeIsExpanded(driver);\n         CStudioSeleniumUtil.contextMenuOption(driver, \"Paste\", CStudioSeleniumUtil.findItemWithName(driver, folderName));\n \n         checkPageFileExists(folderName, itemUrl, true);\n     }\n", "path": "src/test/java/org/craftercms/web/editing/CopyCutPasteTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "componentOptionAndPaste_735", "method name": "component Option And Paste", "comments": [], "url": true, "content": "    private void function(String itemTitle, String itemUrl, String itemContent, String option) throws InterruptedException {\n         logger.info(\"Create a folder to contain copy\");\n         String folderName = createComponentFolder();\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Open context menu and click \" + option + \" for new article\");\n         CStudioSeleniumUtil.ensureComponentsTreeIsExpanded(driver);\n         CStudioSeleniumUtil.contextMenuOption(driver, option, CStudioSeleniumUtil.findItemWithName(driver, itemTitle));\n         logger.info(\"Open context menu and click 'Paste' for new folder\");\n         CStudioSeleniumUtil.ensureComponentsTreeIsExpanded(driver);\n         CStudioSeleniumUtil.contextMenuOption(driver, \"Paste\", CStudioSeleniumUtil.findItemWithName(driver, folderName));\n         checkComponentFileExists(folderName, itemUrl, true);\n     }\n", "path": "src/test/java/org/craftercms/web/editing/CopyCutPasteTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "scheduleToBeDeletedTest_736", "method name": "schedule To Be Deleted Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         login();\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         String pageToUpdate = seleniumProperties.getProperty(\"craftercms.page.to.schedule.to.delete\");\n         String updateString = \"Resources \" + System.currentTimeMillis();\n \n         logger.info(\"Edit page\");\n         CStudioSeleniumUtil.editAndSavePage(driver, pageToUpdate, updateString);\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         CStudioSeleniumUtil.ensurePagesTreeIsExpanded(driver);\n         WebElement articleItem = CStudioSeleniumUtil.findItemWithName(driver, updateString);\n \n         logger.info(\"Choose delete in pages tree context menu\");\n         CStudioSeleniumUtil.contextMenuOption(driver, \"Delete\", articleItem);\n \n         logger.info(\"Schedule item and dependencies\");\n         By datepickerBy = By.cssSelector(\"#datepicker.date-picker\");\n         By timepickerBy = By.cssSelector(\"input.time-picker\");\n         By scheduleTimeLinksBy = By.cssSelector(\"#acnVersionWrapper a[checkid]\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, scheduleTimeLinksBy);\n         List<WebElement> scheduleTimeLinks = driver.findElements(scheduleTimeLinksBy);\n         for (WebElement scheduleTimeLink : scheduleTimeLinks) {\n             scheduleTimeLink.click();\n \n             CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, datepickerBy);\n \n             WebElement datepicker = driver.findElement(datepickerBy);\n             datepicker.clear();\n             datepicker.sendKeys(\"1/01/3001\");\n \n             CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, timepickerBy);\n \n             WebElement timepicker = driver.findElement(timepickerBy);\n             timepicker.sendKeys(\"12:00:01 a.m.\");\n \n             CStudioSeleniumUtil.clickOn(driver, By.xpath(\"//div[@id='acnVersionWrapper']//a[text()='Done']\"));\n         }\n \n         logger.info(\"Click 'Delete' button\");\n         CStudioSeleniumUtil.clickOn(driver, By.cssSelector(\"#acnVersionWrapper input.do-delete[type='submit']\"));\n \n         logger.info(\"Wait for item to be scheduled\");\n         Thread.sleep(2000);\n \n         String baseUrl = seleniumProperties.getProperty(\"craftercms.base.url\");\n         String pageToEditUrl = seleniumProperties.getProperty(\"craftercms.page.to.schedule.to.delete.url\");\n \n         logger.info(\"Navigate to '\" + pageToEditUrl + \"'\");\n         driver.navigate().to(baseUrl + pageToEditUrl);\n \n         logger.info(\"Check item was scheduled to be deleted\");\n         By statusIconBy = By.cssSelector(\"#acn-active-content div.status-icon.deleted\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, statusIconBy);\n         WebElement statusIcon = driver.findElement(statusIconBy);\n         assertTrue(statusIcon.getText().contains(\"Deleted\"));\n     }\n", "path": "src/test/java/org/craftercms/web/basic/ScheduleToBeDeletedTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "editAndScheduleItem_737", "method name": "edit And Schedule Item", "comments": [], "url": true, "content": "    private void function(String item, final String updateString) throws InterruptedException {\n     \tdriver.manage().timeouts().implicitlyWait(TimeConstants.WAITING_SECONDS_WEB_ELEMENT, TimeUnit.SECONDS);\n \n     \tlogger.info(\"Login using admin credentials\");\n         login();\n \n         logger.info(\"navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Edit page\");\n         CStudioSeleniumUtil.editAndSavePage(driver, item, updateString);\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Check my-recent activity widget\");\n         new WebDriverWait(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT).until(new ExpectedCondition<Boolean>() {\n             public Boolean apply(WebDriver d) {\n               return d.findElement(By.id(\"MyRecentActivity-body\")).getText().contains(updateString);\n             }\n         });\n \n         logger.info(\"Check item and push it to schedule\");\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"MyRecentActivity-\" + item));\n         Thread.sleep(1000);\n \n         logger.info(\"Select Schedule\");\n         driver.manage().window().maximize();\n         CStudioSeleniumUtil.clickOn(driver, By.xpath(\"//a[text()='Schedule']\"));\n         Thread.sleep(1000);\n \n         logger.info(\"Setting date and time fields\");\n         WebElement element = driver.findElement(By.id(\"schedulingSelectionDatepickerOverlay\"));\n         element.click();\n         Thread.sleep(1000);\n \n         By todayBy = By.cssSelector(\"#calendarWrapper .today a\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, todayBy);\n \n         WebElement today = driver.findElement(todayBy);\n         today.click();\n \n         element = driver.findElement(By.id(\"timepicker\"));\n         element.clear();\n \n         // Ensure time is after now.\n         element.sendKeys(\"11:59:59 p.m.\\n\");\n \n         Thread.sleep(1000);\n \n         logger.info(\"Confirm Schedule\");\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"golivesubmitButton\"));\n         Thread.sleep(1000);\n \n         CStudioSeleniumUtil.clickOn(driver, By.id(\"acnOKButton\"));\n         logger.info(\"Waiting for item to get scheduled...\");\n         Thread.sleep(1000 * TimeConstants.WAITING_SECONDS_DEPLOY);\n \n         logger.info(\"refresh dashboard\");\n         logout();\n         login();\n         driver.navigate().to(dashboardUrl);\n \n \n         logger.info(\"Check approvedScheduledItems activity widget\");\n         new WebDriverWait(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT).until(new ExpectedCondition<Boolean>() {\n             public Boolean apply(WebDriver d) {\n                 return d.findElement(By.id(\"approvedScheduledItems-body\")).getText().contains(updateString);\n             }\n         });\n     }\n", "path": "src/test/java/org/craftercms/web/basic/SchedulingTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "UploadJSFileTest_738", "method name": "Upload JS File Test", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         login();\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Get file local path\");\n         File file = new File(CStudioSeleniumUtil.class.getClassLoader().getResource(\"uploadFiles/javascript.js\").toURI());\n \n         CStudioSeleniumUtil.ensureStaticAssetsTreeIsExpanded(driver);\n         WebElement jsElement = CStudioSeleniumUtil.findItemWithName(driver, \"js\");\n         CStudioSeleniumUtil.uploadFile(driver, file, jsElement);\n \n         String deployedFilePath = seleniumProperties.getProperty(\"craftercms.preview.deployer.path\") + \"/static-assets/js/\" + file.getName();\n \n         logger.info(\"Check file contents in preview deployer path\");\n         String contentToCheck = \"/* This is an empty javascript file */\";\n         assertTrue(CStudioSeleniumUtil.readFileContents(deployedFilePath, contentToCheck));\n     }\n", "path": "src/test/java/org/craftercms/web/UploadFilesTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "inContextEditTemplateTest_739", "method name": "in Context Edit Template Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         login();\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         final String baseUrl = seleniumProperties.getProperty(\"craftercms.base.url\");\n         final String pageToEditUrl = seleniumProperties.getProperty(\"craftercms.page.to.edit.url\");\n \n         logger.info(\"Navigate to '\" + pageToEditUrl + \"'\");\n         driver.navigate().to(baseUrl + pageToEditUrl);\n \n         openTemplateEditor();\n \n         String pageTitle = driver.getTitle();\n \n         By titleBy = By.xpath(\"//div[@id='editor-container']//pre[text()='\" + pageTitle + \"'][1]\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, titleBy);\n         WebElement title = driver.findElement(titleBy);\n \n         String sequence = \"\";\n         // Get inside <title>...</title>\n         for (int i = 0; i < 8; i++) {\n             sequence += Keys.LEFT;\n         }\n         for (int i = 0; i < pageTitle.length(); i++) {\n             sequence += Keys.BACK_SPACE;\n         }\n \n         final String newTitle = \"Global Integrity \" + System.currentTimeMillis();\n         sequence += newTitle;\n \n         logger.info(\"Update page title\");\n         new Actions(driver).click(title).sendKeys(sequence).perform();\n \n         logger.info(\"Click 'Update' button\");\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"template-editor-update-button\"));\n \n         logger.info(\"Wait for title to update\");\n         new WebDriverWait(driver, TimeConstants.WAITING_SECONDS_DEPLOY).until(new ExpectedCondition<Boolean>() {\n             @Override\n             public Boolean apply(WebDriver driver) {\n                 driver.navigate().to(baseUrl + pageToEditUrl);\n                 return newTitle.equals(driver.getTitle());\n             }\n         });\n     }\n", "path": "src/test/java/org/craftercms/web/editing/ContextEditingTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "editPageIcePencilTest_740", "method name": "edit Page Ice Pencil Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         login();\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         final String baseUrl = seleniumProperties.getProperty(\"craftercms.base.url\");\n         final String pageToEditUrl = seleniumProperties.getProperty(\"craftercms.page.to.edit.url\");\n \n         logger.info(\"Navigate to '\" + pageToEditUrl + \"'\");\n         driver.navigate().to(baseUrl + pageToEditUrl);\n \n         openPreviewTools();\n \n         logger.info(\"Turn on In-Context Edit\");\n \n         By titlePencilBy = By.cssSelector(\"#title img\");\n         List<WebElement> titlePencilList = driver.findElements(titlePencilBy);\n         boolean pencilVisible = false;\n         if (titlePencilList.size() > 0) {\n             pencilVisible = titlePencilList.get(0).isDisplayed();\n         }\n         if (!pencilVisible) {\n             By toggleIceBy = By.xpath(\"//div[@id='preview-tools-panel-container']//span[contains(.,'In-Context Edit')]/preceding-sibling::*[1]\");\n             CStudioSeleniumUtil.clickOn(driver, toggleIceBy);\n         }\n \n         logger.info(\"Click on title ice pencil\");\n         CStudioSeleniumUtil.clickOn(driver, titlePencilBy);\n \n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, By.tagName(\"iframe\"));\n         Thread.sleep(1000);\n         driver.switchTo().frame(\"in-context-edit-editor\");\n \n         logger.info(\"Update title\");\n         String newTitle = \"Big Data for Risk Reduction \" + System.currentTimeMillis();\n \n         By titleInputBy = By.cssSelector(\"#title input.datum\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, titleInputBy);\n         CStudioSeleniumUtil.waitForItemToBeEnabled(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, titleInputBy);\n \n         WebElement titleInput = driver.findElement(titleInputBy);\n         titleInput.clear();\n         titleInput.sendKeys(newTitle);\n         Thread.sleep(1000);\n \n         logger.info(\"Save And Close\");\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"cstudioSaveAndClose\"));\n \n         logger.info(\"Check title has been updated\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, By.xpath(\"//*[contains(., '\" + newTitle + \"')]\"));\n     }\n", "path": "src/test/java/org/craftercms/web/editing/ContextEditingTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "viewPageTest_741", "method name": "view Page Test", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         login();\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         final String updatedTitle = \"About Page workflow \" + System.currentTimeMillis();\n         String pageToSchedule = seleniumProperties.getProperty(\"craftercms.page.to.edit\");\n \n         logger.info(\"Edit page, updating title to '\" + updatedTitle + \"'\");\n         CStudioSeleniumUtil.editAndSavePage(driver, pageToSchedule, updatedTitle);\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Selecting 'View' option in page tree under 'Site Content'\");\n         CStudioSeleniumUtil.ensurePagesTreeIsExpanded(driver);\n         WebElement pageElement = CStudioSeleniumUtil.findItemWithName(driver, updatedTitle);\n         CStudioSeleniumUtil.contextMenuOption(driver, \"View\", pageElement);\n \n         logger.info(\"Switch to 'View' window\");\n         CStudioSeleniumUtil.switchToEditWindow(driver);\n \n         logger.info(\"Checking item name has been updated\");\n         By internalNameBy = By.cssSelector(\"#internal-name input.datum\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, internalNameBy);\n         WebElement internalName = driver.findElement(internalNameBy);\n         assertTrue(internalName.getAttribute(\"value\").equals(updatedTitle));\n \n         logger.info(\"Check input elements are disabled\");\n         List<WebElement> inputs = driver.findElements(By.cssSelector(\"input\"));\n         for (WebElement input : inputs) {\n             if (input.isDisplayed() && !input.getAttribute(\"type\").equals(\"button\"))\n                 assertFalse(input.isEnabled());\n         }\n     }\n", "path": "src/test/java/org/craftercms/web/basic/ViewPageTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "testContextNav_742", "method name": "test Context Nav", "comments": [" Test Dashboard Page Context Nav Functionality", "Test"], "url": true, "content": "    public void function() {\n         driver.manage().timeouts().implicitlyWait(TimeConstants.WAITING_SECONDS_WEB_ELEMENT, TimeUnit.SECONDS);\n \n         login();\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Wait for context navigation header to show\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, By.id(\"authoringContextNavHeader\"));\n \n         logger.info(\"Wait for logo link to show\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, By.id(\"acn-wcm-logo-link\"));\n \n         logger.info(\"Wait for dropdown toggler to show\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, By.id(\"acn-dropdown-toggler\"));\n \n         WebElement element = driver.findElement(By.id(\"acn-dropdown-toggler\"));\n         assertTrue(element.getText().equals(\"Site Content\"));\n         element.click();\n \n         logger.info(\"Ensure dropdown displays when toggler is clicked\");\n         new WebDriverWait(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT).until(new ExpectedCondition<Boolean>() {\n             public Boolean apply(WebDriver d) {\n                 return d.findElement(By.id(\"acn-dropdown-menu-wrapper\")).isDisplayed();\n             }\n         });\n     }\n", "path": "src/test/java/org/craftercms/web/basic/DashboardTestsBase.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "testSiteDashboardTitle_743", "method name": "test Site Dashboard Title", "comments": [" Test Dashboard Page Title Functionality", "Test"], "url": true, "content": "    public void function() {\n         driver.manage().timeouts().implicitlyWait(TimeConstants.WAITING_SECONDS_WEB_ELEMENT, TimeUnit.SECONDS);\n \n         login();\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Check if title exists and match title with correct site value\");\n         WebElement element = driver.findElement(By.id(\"pageTitle\"));\n         assertTrue(element.getText().contains(seleniumProperties.getProperty(\"craftercms.sitetitle\")));\n         assertTrue(element.isDisplayed());\n     }\n", "path": "src/test/java/org/craftercms/web/basic/DashboardTestsBase.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "testMyRecentActivity_744", "method name": "test My Recent Activity", "comments": [" Test Dashboard Page My Recent Activity Functionality", " @throws InterruptedException", "Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         driver.manage().timeouts().implicitlyWait(TimeConstants.WAITING_SECONDS_WEB_ELEMENT, TimeUnit.SECONDS);\n \n         login();\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Edit and save page\");\n         CStudioSeleniumUtil.editAndSavePage(driver, seleniumProperties.getProperty(\"craftercms.page.to.edit\"), getUpdateString());\n \n         logger.info(\"Refresh dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Check my-recent-activity widget for edited page\");\n         new WebDriverWait(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT).until(new ExpectedCondition<Boolean>() {\n             public Boolean apply(WebDriver d) {\n                 return d.findElement(By.id(\"MyRecentActivity-body\")).getText().contains(getUpdateString());\n             }\n         });\n     }\n", "path": "src/test/java/org/craftercms/web/basic/DashboardTestsBase.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "testIconGuide_745", "method name": "test Icon Guide", "comments": [" Test Dashboard Page Icon Guide", "Test"], "url": true, "content": "    public void function() {\n         driver.manage().timeouts().implicitlyWait(TimeConstants.WAITING_SECONDS_WEB_ELEMENT, TimeUnit.SECONDS);\n \n         login();\n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         WebElement element = driver.findElement(By.id(\"icon-guide\"));\n         logger.info(\"Scroll down to reach icon-guide\");\n         driver.manage().window().setPosition(new Point(0, driver.manage().window().getSize().height));\n \n         logger.info(\"Check icon-guide is displayed\");\n         assertTrue(element.isDisplayed());\n \n         logger.info(\"Check icon-guide text\");\n         assertTrue(element.getText().contains(\"Icon Guide\"));\n     }\n", "path": "src/test/java/org/craftercms/web/basic/DashboardTestsBase.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "navigateToUrl_746", "method name": "navigate To Url", "comments": [" Try to access a page in Crafter Studio Site", " @param driver", " @param siteName"], "url": true, "content": "    public static void function(WebDriver driver, String siteName, String url) {\n         driver.navigate().to(url);\n         assertTrue(driver.getCurrentUrl().equals(String.format(seleniumProperties.getProperty(\"craftercms.site.dashboard.url\"), siteName)));\n     }\n", "path": "src/test/java/org/craftercms/web/util/CStudioSeleniumUtil.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "navigateToAndWaitForPageToLoad_747", "method name": "navigate To And Wait For Page To Load", "comments": [" Navigates to the given url and calls c", " @param webDriver", " @param url"], "url": true, "content": "    public static void function(WebDriver webDriver, String url) {\n         webDriver.navigate().to(url);\n         waitForCurrentPageToLoad(webDriver);\n     }\n", "path": "src/test/java/org/craftercms/web/util/CStudioSeleniumUtil.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "editContentTypeFieldTitle_748", "method name": "edit Content Type Field Title", "comments": ["Test"], "url": true, "content": "    public void function() {\n         login();\n         String contentType = \"/page/article\";\n \n         openContentType(contentType);\n \n         logger.info(\"Update content type title field\");\n         String newTitle = \"Title \" + System.currentTimeMillis();\n         By titleVariableBy = By.xpath(\"//div[@id='content-type-canvas']//div[contains(@class,'content-type-visual-field-container')]//span[contains(@class,'content-field-variable') and text()='title']\");\n         CStudioSeleniumUtil.clickOn(driver, titleVariableBy);\n \n         By titleBy = By.xpath(\"//div[@id='properties-container']//div[contains(@class, 'property-wrapper')]/div[@class='property-label' and text()='Title']/following-sibling::input\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, titleBy);\n         WebElement titleInput = driver.findElement(titleBy);\n         titleInput.clear();\n         titleInput.sendKeys(newTitle);\n \n         logger.info(\"Click 'Save'\");\n         CStudioSeleniumUtil.clickOn(driver, By.cssSelector(\"#cstudio-admin-console-command-bar input.cstudio-button[value='Save']\"));\n \n         logger.info(\"Wait for content type to be saved\");\n         new WebDriverWait(driver, TimeConstants.WAITING_SECONDS_SAVE).until(new ExpectedCondition<Boolean>() {\n             @Override\n             public Boolean apply(WebDriver webDriver) {\n                 try {\n                     Alert alert = driver.switchTo().alert();\n                     alert.accept();\n                     return true;\n                 } catch (Exception ex) {\n                     return false;\n                 }\n             }\n         });\n \n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         CStudioSeleniumUtil.createContentJS(driver, \"/site/website\", siteName);\n \n         CStudioSeleniumUtil.clickOn(driver, By.cssSelector(\"option[value=\\\"/page/article\\\"]\"));\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"submitWCMPopup\"));\n \n         CStudioSeleniumUtil.switchToEditWindow(driver);\n \n         By titleLabelBy = By.cssSelector(\"#title span.label.cstudio-form-field-title\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, titleLabelBy);\n         WebElement titleLabelElement = driver.findElement(titleLabelBy);\n         assertEquals(newTitle, titleLabelElement.getText());\n     }\n", "path": "src/test/java/org/craftercms/web/ContentTypeTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "createSeleniumContent_749", "method name": "create Selenium Content", "comments": [], "url": true, "content": "    private String function(String url) {\n         logger.info(\"Navigate to dashboard\");\n         driver.navigate().to(dashboardUrl);\n \n         CStudioSeleniumUtil.createContentJS(driver, \"/site/website\", siteName);\n \n         CStudioSeleniumUtil.clickOn(driver, By.cssSelector(\"option[value=\\\"/page/selenium\\\"]\"));\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"submitWCMPopup\"));\n \n         CStudioSeleniumUtil.switchToEditWindow(driver);\n \n         String contentText = \"Selenium content type article main content \" + url;\n \n         logger.info(\"Set values to fields\");\n         setField(\"div#file-name .datum\", url);\n         setField(\"div#internal-name .datum\", url);\n         setField(\"div#seleniumContent .datum\", contentText);\n \n         logger.info(\"Save & Close\");\n         driver.findElement(By.id(\"cstudioSaveAndClose\")).click();\n \n         CStudioSeleniumUtil.switchToMainWindow(driver);\n \n         CrafterContent content = new CrafterContent();\n         content.path = \"/site/website/\" + url;\n         content.uri = \"/site/website/\" + url + \"/index.xml\";\n         content.browserUri = \"/\" + url;\n \n         getCreatedContent().add(content);\n         return contentText;\n     }\n", "path": "src/test/java/org/craftercms/web/ContentTypeTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "openContentType_750", "method name": "open Content Type", "comments": [], "url": true, "content": "    private void function(String contentType) {\n         logger.info(\"Navigate to admin console\");\n         driver.navigate().to(adminConsoleUrl);\n \n         logger.info(\"Click 'Content Types'\");\n         By contentTypesBy = By.xpath(\"//div[contains(@class,'cstudio-admin-console-item') and text()='Content Types']\");\n         CStudioSeleniumUtil.clickOn(driver, contentTypesBy);\n \n         logger.info(\"Click 'Open Existing Type'\");\n         By openTypeBy = By.xpath(\"//div[@id='acn-bar']//div[@class='acn-link']/a[text()='Open Existing Type']\");\n         CStudioSeleniumUtil.clickOn(driver, openTypeBy);\n \n         logger.info(\"Choose article content type\");\n         By articleContentTypeBy = By.cssSelector(\"#wcm-content-types-dropdown option[value='\" + contentType + \"']\");\n         CStudioSeleniumUtil.clickOn(driver, articleContentTypeBy);\n \n         logger.info(\"Confirm\");\n         CStudioSeleniumUtil.clickOn(driver, By.id(\"submitWCMPopup\"));\n \n         logger.info(\"Wait for content type to load\");\n         By contentTypeContainerBy = By.cssSelector(\"#content-type-canvas .content-type-visual-container\");\n         CStudioSeleniumUtil.waitForItemToDisplay(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT, contentTypeContainerBy);\n     }\n", "path": "src/test/java/org/craftercms/web/ContentTypeTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "testPageEditSaveAndClose_751", "method name": "test Page Edit Save And Close", "comments": [" Test Page Save and Close Functionality", " @throws InterruptedException", "Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         driver.manage().timeouts().implicitlyWait(TimeConstants.WAITING_SECONDS_WEB_ELEMENT, TimeUnit.SECONDS);\n \n         logger.info(\"Login as admin\");\n         login();\n \n         logger.info(\"Navigate to Dashboard page\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Edit page\");\n         CStudioSeleniumUtil.editContentJS(driver, seleniumProperties.getProperty(\"craftercms.page.to.edit\"),\n                 seleniumProperties.getProperty(\"craftercms.page.content.type\"),\n                 siteName);\n \n         CStudioSeleniumUtil.switchToEditWindow(driver);\n \n         logger.info(\"Find internal-name field and edit\");\n         driver.findElement(By.cssSelector(\"#internal-name .datum\")).clear();\n         driver.findElement(By.cssSelector(\"#internal-name .datum\")).sendKeys(updateString);\n \n         logger.info(\"Click Save&Close button and wait for change to complete\");\n         driver.findElement(By.id(\"cstudioSaveAndClose\")).click();\n \n         CStudioSeleniumUtil.switchToMainWindow(driver);\n \n         logger.info(\"Navigate back to dashboard\");\n         driver.navigate().to(dashboardUrl);\n         assertTrue(driver.getTitle().equals(\"Crafter Studio\"));\n \n         logger.info(\"Check my-recent-activity widget\");\n         new WebDriverWait(driver, TimeConstants.WAITING_SECONDS_WEB_ELEMENT).until(new ExpectedCondition<Boolean>() {\n             public Boolean apply(WebDriver d) {\n                 return d.findElement(By.id(\"MyRecentActivity-body\")).getText().contains(updateString);\n             }\n         });\n     }\n", "path": "src/test/java/org/craftercms/web/basic/PageEditTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "testPageEditSaveAndPreview_752", "method name": "test Page Edit Save And Preview", "comments": [" Test Page Save and Preview Functionality", " @throws InterruptedException", "Test"], "url": true, "content": "    public void function() throws InterruptedException {\n         driver.manage().timeouts().implicitlyWait(TimeConstants.WAITING_SECONDS_WEB_ELEMENT, TimeUnit.SECONDS);\n \n         logger.info(\"Login as admin\");\n         login();\n \n         String mainWindowHandle = driver.getWindowHandle();\n \n         logger.info(\"Navigate to Dashboard page\");\n         driver.navigate().to(dashboardUrl);\n \n         logger.info(\"Edit page\");\n         CStudioSeleniumUtil.editContentJS(driver, seleniumProperties.getProperty(\"craftercms.page.to.edit\"),\n                 seleniumProperties.getProperty(\"craftercms.page.content.type\"),\n                 siteName);\n \n         CStudioSeleniumUtil.switchToEditWindow(driver);\n \n         String editWindowHandle = driver.getWindowHandle();\n \n         logger.info(\"Edit internal-name field\");\n         WebElement internalNameElement = driver.findElement(By.cssSelector(\"#internal-name .datum\"));\n         internalNameElement.clear();\n         internalNameElement.sendKeys(updateString);\n         Thread.sleep(1000);\n \n         logger.info(\"Click Save&Preview button and wait for change to complete\");\n         driver.findElement(By.id(\"cstudioSaveAndPreview\")).click();\n \n         logger.info(\"Switch back to first window\");\n         driver.switchTo().window(mainWindowHandle);\n \n         logger.info(\"Wait for preview to load\");\n         new WebDriverWait(driver, 30).until(new ExpectedCondition<Boolean>() {\n             @Override\n             public Boolean apply(WebDriver webDriver) {\n                 try {\n                     Alert alert = driver.switchTo().alert();\n                     alert.accept();\n                     return true;\n                 } catch (Exception ex) {\n                     return false;\n                 }\n             }\n         });\n \n         String pageUrl = seleniumProperties.getProperty(\"craftercms.base.url\") + seleniumProperties.getProperty(\"craftercms.page.to.edit.url\");\n \n         logger.info(\"Check url match edited page url\");\n         assertTrue(driver.getCurrentUrl().equals(pageUrl));\n         logger.info(\"Check item content has changed\");\n         assertTrue(CStudioSeleniumUtil.readFileContents(seleniumProperties.getProperty(\"craftercms.preview.deployer.path\") + seleniumProperties.getProperty(\"craftercms.page.to.edit\"), updateString));\n \n         logger.info(\"Go back and close edit window so item is not locked\");\n         driver.switchTo().window(editWindowHandle);\n         driver.findElement(By.cssSelector(\"input[value=\\\"Cancel\\\"]\")).click();\n         List<WebElement> buttonConfirm = driver.findElements(By.xpath(\"//button[text()='Yes']\"));\n         if (buttonConfirm.size() > 0)\n             buttonConfirm.get(0).click();\n     }\n", "path": "src/test/java/org/craftercms/web/basic/PageEditTests.java", "repo name": "craftercms/studio-integration-testing"}
{"repo_name": "verifyAllServices_753", "method name": "verify All Services", "comments": ["Test"], "url": true, "content": "public void function() {\n \n     driver.get(baseUrl);\n     String expectedTitle = \"Dienste A-Z | Südtiroler Bürgernetz\";\n     String actualTitle = driver.getTitle();\n     Assert.assertEquals(actualTitle, expectedTitle);\n     \n }\n", "path": "tm-example/eGov/ant-testng-selenium/src/eu/testingmachine/TMTest.java", "repo name": "julianharty/android-webdriver-vm-demo"}
{"repo_name": "itShouldNotBePossibleToSigninWithAnInvalidEmail_754", "method name": "it Should Not Be Possible To Signin With An Invalid Email", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       HomePage homePage = new HomePage(driver);\n       homePage.typeEmailAddress(\"this is not a valid email address\");\n       homePage.typePassword(\"any password\");\n       homePage.submitFormExpectingFailure();\n    }\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToAccessToOtherPagesWithoutSignin_755", "method name": "it Should Not Be Possible To Access To Other Pages Without Signin", "comments": [" This test have no more reason to exist due to the restructuration of the interface", "@Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       HomePage homePage = new HomePage(driver);\n       try{\n          homePage.goToAccountPageViaMenu().goToAppPageViaMenu();\n          Assert.fail();\n       } catch(IllegalStateException ex){}\n    }*/\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAnAccountWithoutFillForm_756", "method name": "it Should Not Be Possible To Create An Account Without Fill Form", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       HomePage homePage = new HomePage(driver);\n       NewAccountPage newAccountPage = homePage.accessToNewAccount();\n       Assert.assertTrue(newAccountPage.submitForm().containError());      \n    }\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAnAcocuntWithWeakPassword_757", "method name": "it Should Not Be Possible To Create An Acocunt With Weak Password", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       \n       Random rand = new Random();\n       \n       HomePage homePage = new HomePage(driver);\n       NewAccountPage newAccountPage = homePage.accessToNewAccount();\n       newAccountPage.typeEmailAddress(\"john\" + rand.nextInt() + \"@test.com\");\n       newAccountPage.typeFirstName(\"John\");\n       newAccountPage.typeLastName(\"Doe\");\n       newAccountPage.typePassword(\"pass\");\n       newAccountPage.typePasswordConfirmation(\"pass\");\n       Assert.assertTrue(newAccountPage.submitForm().containError());\n    }\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAnAcocuntWithDifferentPassword_758", "method name": "it Should Not Be Possible To Create An Acocunt With Different Password", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       \n       Random localrand = new Random();\n       \n       HomePage homePage = new HomePage(driver);\n       NewAccountPage newAccountPage = homePage.accessToNewAccount();\n       newAccountPage.typeEmailAddress(\"john\" + localrand.nextInt() + \"@test.com\");\n       newAccountPage.typeFirstName(\"John\");\n       newAccountPage.typeLastName(\"Doe\");\n       newAccountPage.typePassword(\"P4ssw0rd\");\n       newAccountPage.typePasswordConfirmation(\"D1ff3r3n7\");\n       Assert.assertTrue(newAccountPage.submitForm().containError());\n    }\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "successfulSigninShouldBringUserToHomePage_759", "method name": "successful Signin Should Bring User To Home Page", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       HomePage homePage = new HomePage(driver);\n       homePage.typeEmailAddress(email);\n       homePage.typePassword(password);\n       AppsPage firstPage = (AppsPage) homePage.submitForm(AppsPage.class);\n    }\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldBePossibleToRegisterANewApp_760", "method name": "it Should Be Possible To Register A New App", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       HomePage homePage = new HomePage(driver);\n       homePage.typeEmailAddress(email);\n       homePage.typePassword(password);\n       AppsPage firstPage = (AppsPage) homePage.submitForm(AppsPage.class);\n       \n       RegisterNewAppPage newAppPage = firstPage.goToNewAppPage();\n       \n       newAppPage.typeAppName(\"RandomName\");\n       newAppPage.typeAppDescription(\"app description\");\n       Assert.assertFalse(newAppPage.submitForm().containError());\n    }\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToRegisterANewAppWithoutSpecifiedAName_761", "method name": "it Should Not Be Possible To Register A New App Without Specified A Name", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       HomePage homePage = new HomePage(driver);\n       homePage.typeEmailAddress(email);\n       homePage.typePassword(password);\n       AppsPage firstPage = (AppsPage) homePage.submitForm(AppsPage.class);\n       \n       RegisterNewAppPage newAppPage = firstPage.goToNewAppPage();\n       \n       newAppPage.typeAppName(\"\");\n       newAppPage.typeAppDescription(\"app description\");\n       Assert.assertTrue(newAppPage.submitForm().containError());\n    }\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldBePossibleToLogout_762", "method name": "it Should Be Possible To Logout", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       HomePage homePage = new HomePage(driver);\n       homePage.typeEmailAddress(email);\n       homePage.typePassword(password);\n       AppsPage firstPage = (AppsPage) homePage.submitForm(AppsPage.class);\n       \n       firstPage.logout();\n    }\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "editAccountWithoutSpecifyNewPasswordShouldNotChangePassword_763", "method name": "edit Account Without Specify New Password Should Not Change Password", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "   public void function() {\n       driver.get(baseUrl);\n       HomePage homePage = new HomePage(driver);\n       homePage.typeEmailAddress(email);\n       homePage.typePassword(password);\n       AppsPage firstPage = (AppsPage) homePage.submitForm(AppsPage.class);\n       \n       AccountPage accountPage = firstPage.goToAccountPageViaMenu();\n       \n       accountPage.submitForm();\n       \n       homePage = accountPage.goToAppPageViaMenu().logout();\n       \n       homePage.typeEmailAddress(email);\n       homePage.typePassword(password);\n       firstPage = (AppsPage) homePage.submitForm(AppsPage.class);    \n       \n    }\n", "path": "implementation/gamificationtests/gamificationtests/src/test/java/ch/heigvd/gamificationtests/selenium/GamificationTest.java", "repo name": "msaw/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "goToUrl_764", "method name": "go To Url", "comments": [" @param url", "            The URL.", "Override"], "url": true, "content": "\tpublic void function(URL url) {\n \t\ttry {\n \t\t\tbrowser.navigate().to(url);\n \t\t\tThread.sleep(this.crawlWaitReload);\n \t\t\thandlePopups();\n \t\t} catch (WebDriverException e) {\n \t\t\tthrowIfConnectionException(e);\n \t\t\treturn;\n \t\t} catch (InterruptedException e) {\n \t\t\tLOGGER.error(\"goToUrl got interrupted while waiting for the page to be loaded\", e);\n \t\t\treturn;\n \t\t}\n \t}\n", "path": "core/src/main/java/com/crawljax/browser/WebDriverBackedEmbeddedBrowser.java", "repo name": "texasinstrument/temporaryjaxrepodiana"}
{"repo_name": "testParameterizedPath_765", "method name": "test Parameterized Path", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tAllTests.driver.get(baseUrl + \"/\");\n \t\tfor (int second = 0;; second++) {\n \t\t\tif (second >= 60)\n \t\t\t\tfail(\"timeout\");\n \t\t\ttry {\n \t\t\t\tif (\"\".equals(AllTests.driver.findElement(By.id(\"foot\")).getText()))\n \t\t\t\t\tbreak;\n \t\t\t} catch (Exception e) {\n \t\t\t}\n \t\t\tThread.sleep(1000);\n \t\t}\n \n \t\tfor (int second = 0;; second++) {\n \t\t\tif (second >= 60)\n \t\t\t\tfail(\"timeout\");\n \t\t\ttry {\n \t\t\t\tif (\"Least Noisy\".equals(AllTests.driver.findElement(\n \t\t\t\t\t\tBy.cssSelector(\"option[value=\\\"least_noisy\\\"]\"))\n \t\t\t\t\t\t.getText()))\n \t\t\t\t\tbreak;\n \t\t\t} catch (Exception e) {\n \t\t\t}\n \t\t\tThread.sleep(1000);\n \t\t}\n \n \t\tnew Select(AllTests.driver.findElement(By.id(\"weightingSelect\")))\n \t\t\t\t.selectByVisibleText(pathType);\n \t\tAllTests.driver.findElement(By.id(vehicle)).click();\n \t\tAllTests.driver.findElement(By.id(\"fromInput\")).click();\n \t\tAllTests.driver.findElement(By.id(\"fromInput\")).clear();\n \t\tAllTests.driver.findElement(By.id(\"fromInput\")).sendKeys(from);\n \t\tAllTests.driver.findElement(By.id(\"toInput\")).clear();\n \t\tAllTests.driver.findElement(By.id(\"toInput\")).sendKeys(to);\n \t\tAllTests.driver.findElement(By.id(\"searchButton\")).click();\n \t\tfor (int second = 0;; second++) {\n \t\t\tif (second >= 60)\n \t\t\t\tfail(\"timeout\");\n \t\t\ttry {\n \t\t\t\tif (!\"Search Route ...\".equals(AllTests.driver.findElement(\n \t\t\t\t\t\tBy.cssSelector(\"#info > div\")).getText()))\n \t\t\t\t\tbreak;\n \t\t\t} catch (Exception e) {\n \t\t\t}\n \t\t\tThread.sleep(1000);\n \t\t}\n \t\tdouble distance = new Double(AllTests.driver\n \t\t\t\t.findElement(By.cssSelector(\"#info > div\")).getText()\n \t\t\t\t.split(\"km\")[0]);\n \t\tdouble minDistance = expectedDistance\n \t\t\t\t- (expectedDistance * AllTests.distanceTolerance);\n \t\tdouble maxDistance = expectedDistance\n \t\t\t\t+ (expectedDistance * AllTests.distanceTolerance);\n \t\tAssert.assertTrue(\"Distance check between \" + minDistance + \" and \" + maxDistance,\n \t\t\t\t(minDistance <= distance && distance <= maxDistance));\n \n \t\t// do we need to check the checkpoint?\n \t\tif (AllTests.checkPathChackpoint) {\n \t\t\tboolean foundIntermediatePoint = false;\n \t\t\tfor (WebElement we : AllTests.driver.findElements(By.className(\"instr_title\"))) {\n \t\t\t\tif (we.getText().contains(expectedIntermediatePoint)){\n \t\t\t\t\tfoundIntermediatePoint = true;\n \t\t\t\t\tbreak;\n \t\t\t\t}\n \t\t\t}\n \t\t\tAssert.assertTrue(\"Intermediate path checkpoint to \" + expectedIntermediatePoint,\n \t\t\t\t\tfoundIntermediatePoint);\n \t\t}\n \n \t}\n", "path": "src/test/java/org/diversify/sgh/test/TestParameterizedPath.java", "repo name": "DIVERSIFY-project/SmartGHSeleniumTests"}
{"repo_name": "testDataSetGenerator_766", "method name": "test Data Set Generator", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tSystem.out.println(\"Test\");\n \t\tDataSetGeneration.driver.get(baseUrl + \"/\");\n \t\tfor (int second = 0;; second++) {\n \t\t\tif (second >= 60)\n \t\t\t\tfail(\"timeout\");\n \t\t\ttry {\n \t\t\t\tif (\"\".equals(DataSetGeneration.driver.findElement(By.id(\"foot\")).getText()))\n \t\t\t\t\tbreak;\n \t\t\t} catch (Exception e) {\n \t\t\t}\n \t\t\tThread.sleep(1000);\n \t\t}\n \n \t\tfor (int second = 0;; second++) {\n \t\t\tif (second >= 60)\n \t\t\t\tfail(\"timeout\");\n \t\t\ttry {\n \t\t\t\tif (\"Least Noisy\".equals(DataSetGeneration.driver.findElement(\n \t\t\t\t\t\tBy.cssSelector(\"option[value=\\\"least_noisy\\\"]\"))\n \t\t\t\t\t\t.getText()))\n \t\t\t\t\tbreak;\n \t\t\t} catch (Exception e) {\n \t\t\t}\n \t\t\tThread.sleep(1000);\n \t\t}\n \n \t\tnew Select(DataSetGeneration.driver.findElement(By.id(\"weightingSelect\")))\n \t\t\t\t.selectByVisibleText(pathType);\n \t\tDataSetGeneration.driver.findElement(By.id(vehicle)).click();\n \t\tDataSetGeneration.driver.findElement(By.id(\"fromInput\")).click();\n \t\tDataSetGeneration.driver.findElement(By.id(\"fromInput\")).clear();\n \t\tDataSetGeneration.driver.findElement(By.id(\"fromInput\")).sendKeys(from);\n \t\tDataSetGeneration.driver.findElement(By.id(\"toInput\")).clear();\n \t\tDataSetGeneration.driver.findElement(By.id(\"toInput\")).sendKeys(to);\n \t\tDataSetGeneration.driver.findElement(By.id(\"searchButton\")).click();\n \t\tfor (int second = 0;; second++) {\n \t\t\tif (second >= 60)\n \t\t\t\tfail(\"timeout\");\n \t\t\ttry {\n //\t\t\t\tSystem.out.println(\"----\"\n //\t\t\t\t\t\t+ driver.findElement(By.cssSelector(\"#info > div\"))\n //\t\t\t\t\t\t\t\t.getText());\n \t\t\t\tif (!\"Search Route ...\".equals(DataSetGeneration.driver.findElement(\n \t\t\t\t\t\tBy.cssSelector(\"#info > div\")).getText()))\n \t\t\t\t\tbreak;\n \t\t\t} catch (Exception e) {\n \t\t\t}\n \t\t\tThread.sleep(1000);\n \t\t}\n \t\tdouble distance = new Double(DataSetGeneration.driver\n \t\t\t\t.findElement(By.cssSelector(\"#info > div\")).getText()\n \t\t\t\t.split(\"km\")[0]);\n //\t\tdouble minDistance = expectedDistance\n //\t\t\t\t- (expectedDistance * DataSetGeneration.distanceTolerance);\n //\t\tdouble maxDistance = expectedDistance\n //\t\t\t\t+ (expectedDistance * DataSetGeneration.distanceTolerance);\n //\t\tAssert.assertTrue(\"Distance check between \" + minDistance + \" and \" + maxDistance,\n //\t\t\t\t(minDistance <= distance && distance <= maxDistance));\n \n \t\tCollection<WebElement> webElements = DataSetGeneration.driver.findElements(By.className(\"instr_title\"));\n \t\tRandom rand = new Random();\n \t    int randomNum = rand.nextInt(webElements.size());\n \t    int i=0; \n \t    String intermediatePoint=\"\";\n \t\tfor (WebElement we : webElements) {\n \t\t\tif(i == randomNum){\n \t\t\t\tintermediatePoint = we.getText();\n \t\t\t}\n \t\t\ti++;\n \t\t}\n \t\t\n \t\t\n \t\t\n \t\tDataSetGeneration.appendToOutput(from + \"; \" + to + \"; \" + distance  + \"; \" + intermediatePoint + \"; \" + vehicle + \"; \" + pathType + \"\\n\");\n \t\t\n \t}\n", "path": "src/test/java/org/diversify/sgh/test/TestDataSetGenerator.java", "repo name": "DIVERSIFY-project/SmartGHSeleniumTests"}
{"repo_name": "Film_is_not_found_767", "method name": "Film is not found", "comments": ["@Test"], "url": true, "content": "\t  public void function() throws Exception {\n \t\t\n \t    driver.get(baseUrl + \"/php4dvd/\");\n \t    WebElement userNameField = driver.findElement(By.id(\"username\"));\n \t\tuserNameField.clear();\n \t    userNameField.sendKeys(\"admin\");\n \t    WebElement passwordField = driver.findElement(By.name(\"password\"));\n \t\tpasswordField.clear();\n \t    passwordField.sendKeys(\"admin\");\n \t    driver.findElement(By.name(\"submit\")).click();\n \t    WebDriverWait wait = new WebDriverWait(driver,10);\n \t   wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"q\")));\n \t   WebElement search_field = driver.findElement(By.id(\"q\"));\n \t   search_field.sendKeys(Keys.CONTROL + \"a\");\n \t   Thread.sleep(200);\n \t   search_field.sendKeys(Keys.DELETE);\n \n \t   search_field.sendKeys(\"Rob\");\n \t   search_field.sendKeys(Keys.ENTER);\n \t   wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"results\")));\n \t   String  title = driver.findElement(By.className(\"content\")).getText();\n        Assert.assertEquals(title, \"No movies where found.\"); \n        driver.findElement(By.linkText(\"Log out\")).click();\n        Alert alert = driver.switchTo().alert();\n        alert.accept();\n \n \t   \n \t}\n", "path": "src/test/java/ru/st/selenium/FindFilmTest.java", "repo name": "TatyanaVoitenko/selenium-java-training"}
{"repo_name": "testRemoveFilm_768", "method name": "test Remove Film", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tWebDriverWait wait = new WebDriverWait(driver, 10);\n \n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tWebElement userNameField = driver.findElement(By.id(\"username\"));\n \t\tuserNameField.clear();\n \t\tuserNameField.sendKeys(\"admin\");\n \t\tWebElement passwordField = driver.findElement(By.name(\"password\"));\n \t\tpasswordField.clear();\n \t\tpasswordField.sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"submit\")).click();\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//a[4]/div/div[2]\")));\n \t\tdriver.findElement(By.xpath(\"//a[4]/div/div[2]\")).click();\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//img[contains(@src,'delete.png')]\")));\n \t\tdriver.findElement(By.xpath(\"//img[contains(@src,'delete.png')]\")).click();\n \t\tAlert alert = driver.switchTo().alert();\n \t\talert.accept();\n \t    wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//div[@id='results']\")));\n \t    \n \t    \n \t    driver.findElement(By.linkText(\"Log out\")).click();\n \t\talert = driver.switchTo().alert();\n \t\talert.accept();\n \t\t}\n", "path": "src/test/java/ru/st/selenium/RemoveFilm.java", "repo name": "TatyanaVoitenko/selenium-java-training"}
{"repo_name": "testAddFilm_769", "method name": "test Add Film", "comments": [], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tWebDriverWait wait = new WebDriverWait(driver, 10);\n \t\t\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tWebElement userNameField = driver.findElement(By.id(\"username\"));\n \t\tuserNameField.clear();\n \t\tuserNameField.sendKeys(\"admin\");\n \t\tWebElement passwordField = driver.findElement(By.name(\"password\"));\n \t\tpasswordField.clear();\n \t\tpasswordField.sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"submit\")).click();\n \t\t\n \t\tdriver.findElement(By.xpath(\"//a[contains(@href,\\\"./?go=add\\\")]\")).click();\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.name(\"name\")));\n \t\tdriver.findElement(By.name(\"name\")).sendKeys(\"My First Film\");\n \t\tdriver.findElement(By.name(\"aka\")).sendKeys(\"hfffg\");\n \t\tdriver.findElement(By.name(\"year\")).sendKeys(\"2015\");\n \t\tdriver.findElement(By.name(\"duration\")).sendKeys(\"1000\");\n \t\tdriver.findElement(By.name(\"rating\")).sendKeys(\"10\");\n \t\tdriver.findElement(By.id(\"own_no\")).click();\n \t\tdriver.findElement(By.id(\"seen_no\")).click();\n \t\tdriver.findElement(By.id(\"loaned_no\")).click();\n \t\tdriver.findElement(By.id(\"submit\")).click();\n \t\twait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"movie\")));\n \n \t\tdriver.findElement(By.linkText(\"Log out\")).click();\n \t\tAlert alert = driver.switchTo().alert();\n \t\talert.accept();\n \t}\n", "path": "src/test/java/ru/st/selenium/AddFilm.java", "repo name": "TatyanaVoitenko/selenium-java-training"}
{"repo_name": "openMainPage_770", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/kugushina/applogic2/NavigationHelper2.java", "repo name": "gkugushina/study-project-Java-Selenium"}
{"repo_name": "openRelativeUrl_771", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/kugushina/applogic2/NavigationHelper2.java", "repo name": "gkugushina/study-project-Java-Selenium"}
{"repo_name": "openMainPage_772", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/kugushina/applogic1/NavigationHelper1.java", "repo name": "gkugushina/study-project-Java-Selenium"}
{"repo_name": "openRelativeUrl_773", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/kugushina/applogic1/NavigationHelper1.java", "repo name": "gkugushina/study-project-Java-Selenium"}
{"repo_name": "duplicateUsernameTest_774", "method name": "duplicate Username Test", "comments": ["Test", "InSequence(2)"], "url": true, "content": "\tpublic void function() {\n \t\tsubmitRegistrationForm(\"johny\", \"John Doe\", \"secretPassword\");\n \t\tbrowser.navigate().to(deploymentUrl);\n \t\tsubmitRegistrationForm(\"johny\", \"John Doe\t\", \"secretPassword\");\n \n \t\tassertEquals(\"Register New User\", browser.getTitle());\n \t\tassertTrue(\"Error message did not appear\", browser.getPageSource()\n \t\t\t\t.contains(\"messages\"));\n \t}\n", "path": "registration/src/test/java/org/jboss/migration/registration/test/RegistrationFunctionalTest.java", "repo name": "seam2/seam-examples-migrated-off-seam2"}
{"repo_name": "Login_Test_1_775", "method name": "Login Test 1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.id(\"username\")).clear();\n     driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n     driver.findElement(By.name(\"password\")).clear();\n     driver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n     driver.findElement(By.name(\"submit\")).click();\n   }\n", "path": "src/test/java/alesia/isachenko/Login_Test_1.java", "repo name": "AlesiaIsachenko/test-Selenium-Isachenko"}
{"repo_name": "testDosMasDosGoogle_776", "method name": "test Dos Mas Dos Google", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"gbqfq\")).clear();\n     driver.findElement(By.id(\"gbqfq\")).sendKeys(\"2+2\");\n     //  selenium.typeKeys(\"id=gbqfq\", \"\\n\");\n \n     //  driver.findElement(By.id(\"gbqfq\")).sendKeys(\"2+2\");\n     try {\n       assertEquals(\"2+2\", driver.findElement(By.id(\"gbqfq\")).getAttribute(\"value\"));\n       driver.findElement(By.id(\"gbqfq\")).submit();\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.id(\"gbqfq\")).sendKeys(\"\");\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"2 + 2 =\".equals(driver.findElement(By.id(\"cwles\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"4\".equals(driver.findElement(By.id(\"cwos\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n   }\n", "path": "src/test/java/ejemplo/SumaEnGoogleWebDriver.java", "repo name": "soluciones3f/nac-testing-3-autoasistido"}
{"repo_name": "test22EnGoogle_777", "method name": "test22 En Google", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"gbqfq\")).clear();\n     driver.findElement(By.id(\"gbqfq\")).sendKeys(\"2+2\");\n     Thread.sleep(1000);\n     driver.findElement(By.id(\"gbqfq\")).sendKeys(\"\\n\");\n     for (int second = 0;; second++) {\n     \tif (second >= 60) fail(\"timeout\");\n     \ttry { if (\"4\".equals(driver.findElement(By.id(\"cwos\")).getText())) break; } catch (Exception e) {}\n     \tThread.sleep(1000);\n     }\n \n   }\n", "path": "src/test/java/ejemplo/SumaEnGoogleRemoteControl2.java", "repo name": "soluciones3f/nac-testing-3-autoasistido"}
{"repo_name": "canNotLogInWithInvalidEmail_778", "method name": "can Not Log In With Invalid Email", "comments": ["Test", "@ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeName(\"this is not a valid email address\");\n         loginPage.typePwd(\"any password\");\n         loginPage.submitFormExpectingFailure();\n     }\n", "path": "ProjetTests/AMT_Tests_Untitled/src/test/java/ch/heigvd/amt/selenium/AMT_Projet_Test.java", "repo name": "xajkep/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "aUserCanLoginWithValidEmail_779", "method name": "a User Can Login With Valid Email", "comments": ["Test"], "url": true, "content": "    public void  function(){\n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeName(\"toto@contoso.com\");\n         loginPage.typePwd(\"12345\");\n         HomePage homePage = (HomePage)loginPage.submitForm(HomePage.class);\n     }\n", "path": "ProjetTests/AMT_Tests_Untitled/src/test/java/ch/heigvd/amt/selenium/AMT_Projet_Test.java", "repo name": "xajkep/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "aUserShouldBeAbleToVisitAllPagesAfterLogin_780", "method name": "a User Should Be Able To Visit All Pages After Login", "comments": ["Test"], "url": true, "content": "    public void function() throws InterruptedException{\n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeName(\"toto@contoso.com\");\n         loginPage.typePwd(\"12345\");\n         HomePage homePage = (HomePage)loginPage.submitForm(HomePage.class);\n         homePage.goToAccountViaMenu()\n                 .goToAppPageViaMenu();\n                 //.clickOnFirstAppLinkInAppsTable();\n         Thread.sleep(2000); // voir app_edit page : http://www.seleniumhq.org/docs/04_webdriver_advanced.jsp\n         \n     }\n", "path": "ProjetTests/AMT_Tests_Untitled/src/test/java/ch/heigvd/amt/selenium/AMT_Projet_Test.java", "repo name": "xajkep/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "DoLoginTest_781", "method name": "Do Login Test", "comments": ["BeforeClass"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString startUrl = baseUrl + \"/php4dvd/\";\n \t\tdriver.get(startUrl);\n \n \t\tWebElement userNameElement = driver.findElement(By.id(\"username\"));\n \t\tuserNameElement.sendKeys(Keys.CONTROL + \"a\");\n \t\tThread.sleep(200);\n \t\tuserNameElement.sendKeys(Keys.DELETE);\n \t\tuserNameElement.sendKeys(\"admin\");\n \n \t\tWebElement passwordElement = driver.findElement(By.name(\"password\"));\n \t\tpasswordElement.sendKeys(Keys.CONTROL + \"a\");\n \t\tThread.sleep(200);\n \t\tpasswordElement.sendKeys(Keys.DELETE);\n \t\tpasswordElement.sendKeys(\"admin\");\n \n \t\tWebElement submitElement = driver.findElement(By.name(\"submit\"));\n \t\tsubmitElement.click();\n \t\t\n \t\tAssert.assertTrue(driver.getCurrentUrl().contains(startUrl+\"#!\"), \"Login wasn't\");\n \t\t\n \t\tinitFilmFields();\n \t}\n", "path": "src/test/java/ru/greg3d/Lesson2TestComplect.java", "repo name": "Greg3dot14D/JavaWebDriverTrainingLesson2"}
{"repo_name": "openMainPage_782", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "\tpublic void function() {\n \t\tdriver.get(baseUrl);\n \t}\n", "path": "src/main/java/ru/st/selenium/applogic1/NavigationHelper1.java", "repo name": "Greg3dot14D/JavaWebDriverTrainingLesson3"}
{"repo_name": "openRelativeUrl_783", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "\tpublic void function(String url) {\n \t\tdriver.get(baseUrl + url);\n \t}\n", "path": "src/main/java/ru/st/selenium/applogic1/NavigationHelper1.java", "repo name": "Greg3dot14D/JavaWebDriverTrainingLesson3"}
{"repo_name": "DoLoginTest_784", "method name": "Do Login Test", "comments": ["BeforeClass"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString startUrl = baseUrl + \"/php4dvd/\";\n \t\tdriver.get(startUrl);\n \n \t\tWebElement userNameElement = driver.findElement(By.id(\"username\"));\n \t\t\n \t\tuserNameElement.sendKeys(Keys.CONTROL + \"a\");\n \t\tThread.sleep(200);\n \t\tuserNameElement.sendKeys(Keys.DELETE);\n \t\tuserNameElement.sendKeys(\"admin\");\n \n \t\tWebElement passwordElement = driver.findElement(By.name(\"password\"));\n \t\tpasswordElement.sendKeys(Keys.CONTROL + \"a\");\n \t\tThread.sleep(200);\n \t\tpasswordElement.sendKeys(Keys.DELETE);\n \t\tpasswordElement.sendKeys(\"admin\");\n \n \t\tWebElement submitElement = driver.findElement(By.name(\"submit\"));\n \t\tsubmitElement.click();\n \t\t\n \t\tAssert.assertTrue(driver.getCurrentUrl().contains(startUrl+\"#!\"), \"Login wasn't\");\n \t\t\n \t\tinitFilmFields();\n \t}\n", "path": "src/test/java/ru/greg3d/Lesson2TestComplect.java", "repo name": "Greg3dot14D/JavaWebDriverTrainingLesson3"}
{"repo_name": "openHomePage_785", "method name": "open Home Page", "comments": ["BeforeClass"], "url": true, "content": "\tpublic void function() {\n \t\twait = new WebDriverWait(driver, 10);\n \t\tdriver.get(baseUrl + \"/php4dvd/\");\n \t\tdriver.findElement(By.id(\"username\")).clear();\n \t\tdriver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"password\")).clear();\n \t\tdriver.findElement(By.name(\"password\")).sendKeys(\"admin\");\n \t\tdriver.findElement(By.name(\"submit\")).click();\n \t}\n", "path": "src/test/java/ru/st/selenium/SmokeTest.java", "repo name": "MazurK239/selenium-java-training-mazurin"}
{"repo_name": "testAnzeigenAnlegen_786", "method name": "test Anzeigen Anlegen", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\t//Auslesen der Adressen und Ports für Seleniumserver und Webseite\n \t\tString host = System.getProperty(\"seleniumhost\");\n \t\tString port = System.getProperty(\"seleniumport\");\n \t\tString webserverHost = System.getProperty(\"wildfly.http.host\");\n \t\tString webserverPort = System.getProperty(\"wildfly.http.port\");\n \n \t\tif(host == null || host.trim().isEmpty() || port == null || port.trim().isEmpty()){\n \t\t\tfail(\"Property not set: seleniumhost: \" + host + \", seleniumport: \" + port);\n \t\t}\n \n \t\t//Verbindung zum Seleniumserver aufbauen\n \t\tfinal String hub = \"http://\"+host+\":\"+port+\"/wd/hub\";\n \t\tlog.info(\"Selenium connect to: \" + hub);\n \t\tWebDriver driver = new RemoteWebDriver(\n \t\t\t\tnew URL(hub),  \n \t\t\t\tDesiredCapabilities.firefox());\n \n \t\tfinal String url = \"http://\" + webserverHost + \":\" + webserverPort + \"/BeispielDocker-web/index.jsf\";\n \t\tlog.info(\"GET \" + url);\n \t\t//Webseite ueber Selenium im Firefox aufrufen\n \t\tdriver.get(url);\n \n \t\tval headline = driver.findElement(By.id(\"headline\"));\n \t\tassertEquals(\"\\u00dcberschrift 'Kleinanzeigen' nicht gefunden \", \"Kleinanzeigen\", headline.getText());\n \n \t\tList<WebElement> anzeigen = driver.findElements(By.id(\"anzeige0\"));\n \t\tassertTrue(\"anzeige0 bereits vorhanden\", anzeigen.isEmpty());\n \n \t\tdriver.findElement(By.className(\"titelinput\")).sendKeys(\"Sony Bravia 50 Zoll\");\n \t\tdriver.findElement(By.className(\"beschreibunginput\")).sendKeys(\"Sony TV, sehr gut erhalten\");\n \t\tdriver.findElement(By.className(\"preisinput\")).sendKeys(\"20000\");//Preis in Cent\n \t\tdriver.findElement(By.className(\"nameinput\")).sendKeys(\"Max Mustermann\");\n \t\tdriver.findElement(By.className(\"emailinput\")).sendKeys(\"max@mustermann.net\");\n \t\tdriver.findElement(By.className(\"passwortinput\")).sendKeys(\"geheim\");\n \t\tdriver.findElement(By.className(\"sendbutton\")).click();\n \n \t\tWebDriverWait wait = new WebDriverWait(driver, 15);\n \t\twait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"anzeige0\")));\n \n \t\tlog.info(\"GET \" + url);\n \t\tdriver.get(url);\n \n \t\tanzeigen = driver.findElements(By.id(\"anzeige0\"));\n \t\tassertEquals(\"anzeige0 wurde nicht gespeichert oder zu viele\", 1, anzeigen.size());\n \n \t\tWebElement anzeige = anzeigen.get(0);\n \t\tassertEquals(\"Sony Bravia 50 Zoll\", anzeige.findElement(By.className(\"titelanzeige\")).getText());\n \t\tassertEquals(\"Sony TV, sehr gut erhalten\", anzeige.findElement(By.className(\"textanzeige\")).getText());\n \t\tassertEquals(\"Preis: 200.0\\u20AC\", anzeige.findElement(By.className(\"preisanzeige\")).getText());\n \t\tassertEquals(\"Verk\\u00e4ufer: Max Mustermann\", anzeige.findElement(By.className(\"verkaeuferanzeige\")).getText());\n \n \t}\n", "path": "BeispielDocker-IntegrationTest/src/test/java/de/fh_dortmund/kekru001/projektarbeit/beispieldocker_web/jsf/AddAnzeigeSeleniumIntegrationTest.java", "repo name": "kekru/testdependencies-in-docker-example"}
{"repo_name": "itShouldCorrectlyCreateAccount_787", "method name": "it Should Correctly Create Account", "comments": ["--------------------------------------------------------------------------", " Registration page", "Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"thibaud.duchoud@heig-vd.ch\");\n         registrationPage.typeFName(\"Thibaud\");\n         registrationPage.typeLName(\"Duchoud\");\n         registrationPage.typeRPassword(\"4321\");\n         registrationPage.typePassword(\"4321\");\n         LoginPage loginPage = (LoginPage) registrationPage.submitForm(LoginPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAccountWithoutFName_788", "method name": "it Should Not Be Possible To Create Account Without F Name", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"thibaud.duchoud1@heig-vd.ch\");\n         registrationPage.typeLName(\"Duchoud\");\n         registrationPage.typeRPassword(\"4321\");\n         registrationPage.typePassword(\"4321\");\n         RegistrationPage registrationPageF = (RegistrationPage) registrationPage.submitForm(RegistrationPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAccountWithoutLName_789", "method name": "it Should Not Be Possible To Create Account Without L Name", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"thibaud.duchoud2@heig-vd.ch\");\n         registrationPage.typeFName(\"Thibaud\");\n         registrationPage.typeRPassword(\"4321\");\n         registrationPage.typePassword(\"4321\");\n         RegistrationPage registrationPageF = (RegistrationPage) registrationPage.submitForm(RegistrationPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAccountWithoutEmail_790", "method name": "it Should Not Be Possible To Create Account Without Email", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeFName(\"Thibaud\");\n         registrationPage.typeLName(\"Duchoud\");\n         registrationPage.typeRPassword(\"4321\");\n         registrationPage.typePassword(\"4321\");\n         RegistrationPage registrationPageF = (RegistrationPage) registrationPage.submitForm(RegistrationPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAccount2DifferentPasswords_791", "method name": "it Should Not Be Possible To Create Account2 Different Passwords", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"thibaud.duchoud3@heig-vd.ch\");\n         registrationPage.typeFName(\"Thibaud\");\n         registrationPage.typeLName(\"Duchoud\");\n         registrationPage.typeRPassword(\"4321\");\n         registrationPage.typePassword(\"1234\");\n         RegistrationPage registrationPageF = (RegistrationPage) registrationPage.submitForm(RegistrationPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAccountWithoutPassword_792", "method name": "it Should Not Be Possible To Create Account Without Password", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"thibaud.duchoud4@heig-vd.ch\");\n         registrationPage.typeFName(\"Thibaud\");\n         registrationPage.typeLName(\"Duchoud\");\n         RegistrationPage registrationPageF = (RegistrationPage) registrationPage.submitForm(RegistrationPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAccountWithExistantEmail_793", "method name": "it Should Not Be Possible To Create Account With Existant Email", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPageTmp = new RegistrationPage(driver);\n         registrationPageTmp.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPageTmp.typeFName(\"Mario\");\n         registrationPageTmp.typeLName(\"Ferreira\");\n         registrationPageTmp.typeRPassword(\"1234\");\n         registrationPageTmp.typePassword(\"1234\");\n \n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n         RegistrationPage registrationPageF = (RegistrationPage) registrationPage.submitForm(RegistrationPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToSigninWithAnInvalidEmail_794", "method name": "it Should Not Be Possible To Signin With An Invalid Email", "comments": [" -------------------------------------------------------------------------", " Login Page", "Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"this is not a valid email address\");\n         loginPage.typePassword(\"any password\");\n         loginPage.submitFormExpectingFailure();\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "successfulSigninShouldBringUserToHomePage_795", "method name": "successful Signin Should Bring User To Home Page", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         HomePage homePage = (HomePage) loginPage.submitForm(HomePage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldModifyProfile_796", "method name": "it Should Modify Profile", "comments": [" -------------------------------------------------------------------------", " Edit profile page", "Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"editProfile\");\n         EditProfilePage editProfilePage = new EditProfilePage(driver);\n         editProfilePage.typeFName(\"Mario\");\n         editProfilePage.typeLName(\"Ferreira\");\n         editProfilePage.typeRPassword(\"5678\");\n         editProfilePage.typePassword(\"5678\");\n         HomePage homePage = (HomePage) editProfilePage.submitForm(HomePage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToModifyAccount2DifferentPasswords_797", "method name": "it Should Not Be Possible To Modify Account2 Different Passwords", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"editProfile\");\n         EditProfilePage editProfilePage = new EditProfilePage(driver);\n         editProfilePage.typeFName(\"Mario\");\n         editProfilePage.typeLName(\"Ferreira\");\n         editProfilePage.typeRPassword(\"5678\");\n         editProfilePage.typePassword(\"8765\");\n         EditProfilePage editProfilePageF = (EditProfilePage) editProfilePage.submitForm(EditProfilePage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToModifyAccountWithoutFName_798", "method name": "it Should Not Be Possible To Modify Account Without F Name", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"editProfile\");\n         EditProfilePage editProfilePage = new EditProfilePage(driver);\n         editProfilePage.typeLName(\"Ferreira\");\n         editProfilePage.typeRPassword(\"5678\");\n         editProfilePage.typePassword(\"5678\");\n         EditProfilePage editProfilePageF = (EditProfilePage) editProfilePage.submitForm(EditProfilePage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToModifyAccountWithoutLName_799", "method name": "it Should Not Be Possible To Modify Account Without L Name", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"editProfile\");\n         EditProfilePage editProfilePage = new EditProfilePage(driver);\n         editProfilePage.typeFName(\"Mario\");\n         editProfilePage.typeRPassword(\"5678\");\n         editProfilePage.typePassword(\"5678\");\n         EditProfilePage editProfilePageF = (EditProfilePage) editProfilePage.submitForm(EditProfilePage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToModifyAccountWithoutPassword_800", "method name": "it Should Not Be Possible To Modify Account Without Password", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"editProfile\");\n         EditProfilePage editProfilePage = new EditProfilePage(driver);\n         editProfilePage.typeFName(\"Mario\");\n         editProfilePage.typeLName(\"Ferreira\");\n         EditProfilePage editProfilePageF = (EditProfilePage) editProfilePage.submitForm(EditProfilePage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldCreateApp_801", "method name": "it Should Create App", "comments": ["----------------------------------------------------------------------------", " Create App", "Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"addApp\");\n         CreateAppPage createAppPage = new CreateAppPage(driver);\n         createAppPage.typeDescription(\"Test Description\");\n         createAppPage.typeName(\"Test Name\");\n         HomePage homePage = (HomePage) createAppPage.submitForm(HomePage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToCreateAppWithoutName_802", "method name": "it Should Not Be Possible To Create App Without Name", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"addApp\");\n         CreateAppPage createAppPage = new CreateAppPage(driver);\n         createAppPage.typeDescription(\"Test Description\");\n         CreateAppPage createAppPageF = (CreateAppPage) createAppPage.submitForm(CreateAppPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldModifyApp_803", "method name": "it Should Modify App", "comments": ["--------------------------------------------------------------------------", " Edit App", "Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"editApp\");\n         EditAppPage editAppPage = new EditAppPage(driver);\n         editAppPage.typeDescription(\"Test Description\");\n         editAppPage.typeName(\"Test Name\");\n         HomePage homePage = (HomePage) editAppPage.submitForm(HomePage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldNotBePossibleToModifyAppWithoutName_804", "method name": "it Should Not Be Possible To Modify App Without Name", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"addApp\");\n         EditAppPage editAppPage = new EditAppPage(driver);\n         editAppPage.typeDescription(\"Test Description\");\n         EditAppPage editAppPageF = (EditAppPage) editAppPage.submitForm(EditAppPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldLogout_805", "method name": "it Should Logout", "comments": ["--------------------------------------------------------------------------", " Logout", "Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"home\");\n         HomePage homePage = new HomePage(driver);\n         LoginPage loginPageC = (LoginPage) homePage.submitLogout(LoginPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "itShouldDisplayListUsers_806", "method name": "it Should Display List Users", "comments": ["--------------------------------------------------------------------------", " Users List", "Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "    public void function() {\n         // Create account\n         driver.get(baseUrl + \"registrationPage\");\n         RegistrationPage registrationPage = new RegistrationPage(driver);\n         registrationPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         registrationPage.typeFName(\"Mario\");\n         registrationPage.typeLName(\"Ferreira\");\n         registrationPage.typeRPassword(\"1234\");\n         registrationPage.typePassword(\"1234\");\n \n         driver.get(baseUrl);\n         LoginPage loginPage = new LoginPage(driver);\n         loginPage.typeEmailAddress(\"mario.ferreira@heig-vd.ch\");\n         loginPage.typePassword(\"1234\");\n         loginPage.submitForm(HomePage.class);\n \n         driver.get(baseUrl + \"home\");\n         HomePage homePage = new HomePage(driver);\n         ListUsersPage listUsersPage = (ListUsersPage) homePage.submitListUsers(ListUsersPage.class);\n     }\n", "path": "projet/MoussaRaserTest/MoussaRaserTests/src/test/java/ch/heigvd/amt/selenium/MoussaRaserTest.java", "repo name": "Kjnokeer/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "the_client_navigates_to_807", "method name": "the client navigates to", "comments": ["When(\"^the client navigates to \\\"(.*?)\\\"$\")"], "url": true, "content": "  public void function(String url) throws Throwable {\n \n     webDriver.get(BASE_URL + url);\n \n     waitAndTakeScreenshot(10000);\n   }\n", "path": "src/test/java/com/andremanuelbarbosa/euromillions/predictor/steps/EuroMillionsPredictorSteps.java", "repo name": "andremanuelbarbosa/euromillions-predictor"}
{"repo_name": "testEmptyPath_808", "method name": "test Empty Path", "comments": [" tests if the servlet returns a 400er if only opened directly", " @throws Exception", " ", " DISABLED: Redirect to Index instead!"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\t\n \t\n \t /*   \n \t\tdriver.get(baseUrl);\n \t\tassertEquals(\"Error 400: Error reported: 400\", driver.findElement(By.tagName(\"body\")).getText());*/\n \t}\n", "path": "test/ch/hasselba/servlet/DominoStatelessTokenServletTest.java", "repo name": "hasselbach/domino-stateless-token-servlet"}
{"repo_name": "testCreateNoParams_809", "method name": "test Create No Params", "comments": ["Test", " test if servlet response is 400 if parameters are missing", " @throws Exception"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tdriver.get(baseUrl + \"/create/\");\n \t\tassertEquals(\"Error 400: Error reported: 400\", driver.findElement(By.tagName(\"body\")).getText());\n \t}\n", "path": "test/ch/hasselba/servlet/DominoStatelessTokenServletTest.java", "repo name": "hasselbach/domino-stateless-token-servlet"}
{"repo_name": "DoLoginTest_810", "method name": "Do Login Test", "comments": ["BeforeClass"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString startUrl = baseUrl + \"/php4dvd/\";\n \t\tdriver.get(startUrl);\n \n \t\tWebElement userNameElement = driver.findElement(By.id(\"username\"));\n \t\t\n \t\tuserNameElement.sendKeys(Keys.CONTROL + \"a\");\n \t\tThread.sleep(200);\n \t\tuserNameElement.sendKeys(Keys.DELETE);\n \t\tuserNameElement.sendKeys(\"admin\");\n \n \t\tWebElement passwordElement = driver.findElement(By.name(\"password\"));\n \t\tpasswordElement.sendKeys(Keys.CONTROL + \"a\");\n \t\tThread.sleep(200);\n \t\tpasswordElement.sendKeys(Keys.DELETE);\n \t\tpasswordElement.sendKeys(\"admin\");\n \n \t\tWebElement submitElement = driver.findElement(By.name(\"submit\"));\n \t\tsubmitElement.click();\n \t\t\n \t\tAssert.assertTrue(driver.getCurrentUrl().contains(startUrl+\"#!\"), \"Login wasn't\");\n \t\t\n \t\tinitFilmFields();\n \t}\n", "path": "src/test/java/ru/greg3d/Lesson2TestComplect.java", "repo name": "Greg3dot14D/PageObjectWithLocatorCorrector"}
{"repo_name": "testKerevalPresentation_811", "method name": "test Kereval Presentation", "comments": [], "url": true, "content": "\tpublic void function(String test, Check check) throws Exception {\n \t\t\n \t\tdriver.get(baseUrl + \"/\");\n \t\ttry {\n \t\t\tcheck.check(test, isElementPresent(By.xpath(\"//img[@alt='pictogramme_automobile_200x181']\")));\n \t\t} catch (Error e) {\n \t\t\tverificationErrors.append(e.toString());\n \t\t}\n \t}\n", "path": "TLS_XmlRpc_server--test_misc/tests/TestJeuDeDonnees.java", "repo name": "X3N0-Life-Form/TestLink-Selenium_RPCServer"}
{"repo_name": "getInitialJavascriptLinksAddToPageQueue_812", "method name": "get Initial Javascript Links Add To Page Queue", "comments": [" work in progress, meant to be called just after configure", " @param intialPageUrl", " @return"], "url": true, "content": "    public Queue function(String intialPageUrl, String javascriptLinkIdentifier, String customAttributeLabel) {\n         driver.get(intialPageUrl);\n \n         List<WebElement> links;\n         List<String[]> initialUrls = new ArrayList<String[]>();\n         List<String> urls = new ArrayList<String>();\n \n         links = driver.findElements(By.tagName(\"a\"));\n \n         Queue<String[]> queue = new ConcurrentLinkedQueue<String[]>();\n \n         for (WebElement link : links) {\n             String customAttribute = null;\n             try {\n                 customAttribute = link.getAttribute(customAttributeLabel);\n                 if (customAttribute.contains(javascriptLinkIdentifier)) {\n                     customAttribute = customLogic(customAttribute);\n                     String[] testEntry = new String[sizeOfStringArrayEnum];\n                     testEntry[ThreadCommunicationBase.PageQueueEntries.BASE_URL.ordinal()] = intialPageUrl;\n                     testEntry[ThreadCommunicationBase.PageQueueEntries.CUSTOM_PARAM.ordinal()] = customAttribute;\n                     queue.add(testEntry);\n                 }\n             } catch (Exception e) {\n             }\n         }\n         return queue;\n     }\n", "path": "src/main/java/org/Webgatherer/ExperimentalLabs/Scraper/Core/PageRetrieverThreadManagerScraper.java", "repo name": "rickdane/WebGatherer---Scraper-and-Analyzer"}
{"repo_name": "getLinkFromOnclickElement_813", "method name": "get Link From Onclick Element", "comments": [], "url": true, "content": "    private static void function(WebDriver driver, String searchUrl, String baseUrl, String key) {\n \n         String url = searchUrl + pageNum;\n         driver.get(url);\n \n         List<WebElement> links;\n         List<String[]> initialUrls = new ArrayList<String[]>();\n         List<String> urls = new ArrayList<String>();\n \n         links = driver.findElements(By.tagName(\"a\"));\n \n         for (WebElement link : links) {\n             String onclick = null;\n             try {\n                 onclick = link.getAttribute(\"onclick\");\n                 if (onclick.startsWith(\"snap_to_marker\")) {\n                     String title = link.getAttribute(\"title\");\n                     sleep();\n                     link.click();\n                     String[] tmpArray = {convertToUrl(baseUrl, title).toLowerCase(), title.toLowerCase()};\n                     initialUrls.add(tmpArray);\n                 }\n             } catch (Exception e) {\n                 //e.printStackTrace();\n             }\n         }\n \n         for (String[] curEntry : initialUrls) {\n \n             String pulledUrl = pullCompanyUrl(driver, curEntry, key);\n             if (pulledUrl != null) {\n                 urls.add(pulledUrl);\n                 System.out.println(pulledUrl);\n                 //PersistenceImpl_WriteToFile.appendToFile(fileOutput, pulledUrl + \"\\n\");\n                 persistEntry(pulledUrl);\n             }\n         }\n     }\n", "path": "src/main/java/org/Webgatherer/ExperimentalLabs/Scraper/Deprecated/Entry_Scraper2.java", "repo name": "rickdane/WebGatherer---Scraper-and-Analyzer"}
{"repo_name": "getLinksFromOnclick_814", "method name": "get Links From Onclick", "comments": [], "url": true, "content": "    public void function(String searchUrl, String baseUrl, String key) {\n         String url = searchUrl + pageNum;\n         driver.get(url);\n \n         List<WebElement> links;\n         List<String[]> initialUrls = new ArrayList<String[]>();\n         List<String> urls = new ArrayList<String>();\n \n         links = driver.findElements(By.tagName(\"a\"));\n \n         for (WebElement link : links) {\n             getLinkFromOnclickElementInner_One(link, baseUrl, initialUrls);\n         }\n \n         for (String[] curEntry : initialUrls) {\n \n             String pulledUrl = pullCompanyUrl(curEntry, key);\n             if (pulledUrl != null) {\n                 urls.add(pulledUrl);\n                 System.out.println(pulledUrl);\n                 PersistenceImpl_WriteToFile.appendToFile(fileOutput, pulledUrl + \"\\n\");\n             }\n         }\n     }\n", "path": "src/main/java/org/Webgatherer/ExperimentalLabs/Scraper/Object/ScraperBaseJavascript.java", "repo name": "rickdane/WebGatherer---Scraper-and-Analyzer"}
{"repo_name": "openMainPage_815", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "dartland/Selenium-Java-Training-Chernyshov-PO"}
{"repo_name": "openRelativeUrl_816", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "src/main/java/ru/st/selenium/applogic2/NavigationHelper2.java", "repo name": "dartland/Selenium-Java-Training-Chernyshov-PO"}
{"repo_name": "itShouldNotBePossibleToSigninWithAnInvalidEmail_817", "method name": "it Should Not Be Possible To Signin With An Invalid Email", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     LoginPage loginPage = new LoginPage(driver);\n     loginPage.typeEmailAddress(\"this is not a valid email address\");\n     loginPage.typePassword(\"any password\");\n     loginPage.submitFormExpectingFailure();\n   }\n", "path": "MVCDemoUserAcceptanceTests/src/test/java/ch/heigvd/amt/uat/selenium/MVCDemoTest.java", "repo name": "SoftEng-HEIGVD/Teaching-HEIGVD-AMT-Example-MVC"}
{"repo_name": "successfulSigninShouldBringUserToHomePage_818", "method name": "successful Signin Should Bring User To Home Page", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     LoginPage loginPage = new LoginPage(driver);\n     loginPage.typeEmailAddress(\"a@a.com\");\n     loginPage.typePassword(\"any password\");\n     HomePage homePage = (HomePage)loginPage.submitForm(HomePage.class);\n   }\n", "path": "MVCDemoUserAcceptanceTests/src/test/java/ch/heigvd/amt/uat/selenium/MVCDemoTest.java", "repo name": "SoftEng-HEIGVD/Teaching-HEIGVD-AMT-Example-MVC"}
{"repo_name": "aUserTryingToGetToAboutPageShouldBeRedirectedThereAfterSignin_819", "method name": "a User Trying To Get To About Page Should Be Redirected There After Signin", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl + \"/pages/about\");\n     LoginPage loginPage = new LoginPage(driver);\n     loginPage.typeEmailAddress(\"a@a.com\");\n     loginPage.typePassword(\"any password\");\n     AboutPage aboutPage = (AboutPage)loginPage.submitForm(AboutPage.class);\n   }\n", "path": "MVCDemoUserAcceptanceTests/src/test/java/ch/heigvd/amt/uat/selenium/MVCDemoTest.java", "repo name": "SoftEng-HEIGVD/Teaching-HEIGVD-AMT-Example-MVC"}
{"repo_name": "aUserShouldBeAbleToVisitAllPagesAfterSignin_820", "method name": "a User Should Be Able To Visit All Pages After Signin", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     LoginPage loginPage = new LoginPage(driver);\n     loginPage.typeEmailAddress(\"a@a.com\");\n     loginPage.typePassword(\"any password\");\n     HomePage homePage = (HomePage)loginPage.submitForm(HomePage.class);\n     homePage.goToBeersPageViaMenu()\n       .goToBeersPageViaMenu()\n       .goToAJAXPageViaMenu()\n       .goToGenerateTestDataPageViaMenu()\n       .goToCorporateInformationPageViaMenu();\n   }\n", "path": "MVCDemoUserAcceptanceTests/src/test/java/ch/heigvd/amt/uat/selenium/MVCDemoTest.java", "repo name": "SoftEng-HEIGVD/Teaching-HEIGVD-AMT-Example-MVC"}
{"repo_name": "aUserShouldBeAbleToGetDetailsInformationAboutACompany_821", "method name": "a User Should Be Able To Get Details Information About A Company", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     LoginPage loginPage = new LoginPage(driver);\n     loginPage.typeEmailAddress(\"a@a.com\");\n     loginPage.typePassword(\"any password\");\n     HomePage homePage = (HomePage)loginPage.submitForm(HomePage.class);\n     homePage.goToCorporateInformationPageViaMenu()\n       .clickOnFirstCompanyLinkInCompaniesTable();\n   }\n", "path": "MVCDemoUserAcceptanceTests/src/test/java/ch/heigvd/amt/uat/selenium/MVCDemoTest.java", "repo name": "SoftEng-HEIGVD/Teaching-HEIGVD-AMT-Example-MVC"}
{"repo_name": "checkIfSendsData_822", "method name": "check If Sends Data", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t\tString authUrl = UrlUtils.getAuthUrl(url, \"GET\").toExternalForm();\n \n \t\tDimension innerSize = new Dimension(800, 600);\n \t\tSeleniumUtils.setInnerSize(driver, innerSize);\n \t\tdriver.get(authUrl);\n \n \t\tDoclogRecordBuilder builder = new DoclogRecordBuilder().setUrl(authUrl)\n \t\t\t\t.setBounds(\n \t\t\t\t\t\tnew Rectangle(0, 0, innerSize.width, innerSize.height));\n \n \t\tFingerprint newFingerprint = waitForFingerprint();\n \n \t\t/*\n \t\t * READY\n \t\t */\n \t\ttestReadyLog(newFingerprint, builder);\n \n \t\t/*\n \t\t * SCROLL VERTICALLY\n \t\t */\n \t\ttestScrollVertically(newFingerprint, builder);\n \n \t\t/*\n \t\t * RESIZE\n \t\t */\n \t\ttestResize(newFingerprint, builder);\n \n \t\t/*\n \t\t * SCROLL HORIZONTALLY\n \t\t */\n \t\t// TODO SeleniumUtils.scrollTo(driver, 50, 200);\n \n \t\t/*\n \t\t * TYPING IN ALL INPUTs\n \t\t */\n \t\tfor (WebElement input : driver.findElements(By.tagName(\"input\"))) {\n \t\t\tif (!Arrays.asList(\"text\", \"search\").contains(\n \t\t\t\t\tinput.getAttribute(\"type\")))\n \t\t\t\tcontinue;\n \t\t\ttestTyping(newFingerprint, builder, input, \"a€\");\n \t\t}\n \n \t\t/*\n \t\t * TYPING IN ALL TEXTAREAs\n \t\t */\n \t\tfor (WebElement input : driver.findElements(By.tagName(\"textarea\"))) {\n \t\t\ttestTyping(newFingerprint, builder, input, \"a€ \\nABC\");\n \t\t}\n \n \t\t/*\n \t\t * BLUR\n \t\t */\n \t\ttestBlur(newFingerprint, builder);\n \n \t\t/*\n \t\t * FOCUS\n \t\t */\n \t\t// TODO\n \t\t// testFocus(newFingerprint, builder);\n \n \t\t// TODO zumindest in Firefox\n \t\t// TODO server leeren\n \t\t// TODO Fingerprint-Wechsel\n \n \t\t/*\n \t\t * LINK / UNLOAD / READY\n \t\t */\n \t\tList<WebElement> links = driver.findElements(By.tagName(\"a\"));\n \t\tassertTrue(\n \t\t\t\t\"The page does not contain any links. At least one link is needed to test the \"\n \t\t\t\t\t\t+ DoclogAction.LINK + \" event\", links.size() > 0);\n \t\tWebElement randomLink = links\n \t\t\t\t.get((int) (Math.random() * (links.size())));\n \t\tLOGGER.info(\"Following link \" + randomLink.getAttribute(\"href\"));\n \t\ttestLink(newFingerprint, builder, randomLink);\n \n \t\t/*\n \t\t * UNKNOWN\n \t\t */\n \t\ttestUnknown(newFingerprint, builder);\n \t}\n", "path": "src/test/java/de/fu_berlin/imp/apiua/server/java_ee/integration/APIUAclt/web/WebDataCollectionTest.java", "repo name": "bkahlert/api-usability-analyzer-server-java-ee"}
{"repo_name": "itShouldNotBePossibleToSigninWithAnInvalidEmail_823", "method name": "it Should Not Be Possible To Signin With An Invalid Email", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     LoginPage loginPage = new LoginPage(driver);\n     loginPage.typeEmailAddress(\"this is not a valid email address\");\n     loginPage.typePassword(\"any password\");\n     loginPage.submitFormExpectingFailure();\n   }\n", "path": "GamificationProjectTest/src/test/java/ch/heigvd/amt/uat/selenium/GamificationProjectTest.java", "repo name": "raphaelracine/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "successfulSigninShouldBringUserToHomePage_824", "method name": "successful Signin Should Bring User To Home Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     LoginPage loginPage = new LoginPage(driver);\n     loginPage.typeEmailAddress(\"a@a.com\");\n     loginPage.typePassword(\"any password\");\n    YourAppPage yourapppage = (YourAppPage)loginPage.submitForm(YourAppPage.class);\n   }\n", "path": "GamificationProjectTest/src/test/java/ch/heigvd/amt/uat/selenium/GamificationProjectTest.java", "repo name": "raphaelracine/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "ClickCreateAccountButtonShouldBringUserToAccountRegistrationPage_825", "method name": "Click Create Account Button Should Bring User To Account Registration Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     LoginPage loginPage = new LoginPage(driver);\n     \n    AccountRegistrationPage accountregistrationpage = (AccountRegistrationPage)loginPage.submitForm(AccountRegistrationPage.class);\n   }\n", "path": "GamificationProjectTest/src/test/java/ch/heigvd/amt/uat/selenium/GamificationProjectTest.java", "repo name": "raphaelracine/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "successfulCreatAccountShouldBringUserToyourAppPage_826", "method name": "successful Creat Account Should Bring User Toyour App Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl + \"/pages/yourApps\");\n     AccountRegistrationPage creatAccountPage = new AccountRegistrationPage(driver);\n     creatAccountPage.typeEmailAddress(\"a@a.com\");\n     creatAccountPage.typeFirstname(\"any firstname\");\n     creatAccountPage.typeLastname(\"any lastname\");\n     creatAccountPage.typeLastname(\"any lastname\");\n     creatAccountPage.typePassword(\"any password\");\n     creatAccountPage.typeConfirmPassword(\"any password\");\n     YourAppPage yourapppage = (YourAppPage)creatAccountPage.submitForm(YourAppPage.class);\n   }\n", "path": "GamificationProjectTest/src/test/java/ch/heigvd/amt/uat/selenium/GamificationProjectTest.java", "repo name": "raphaelracine/Teaching-HEIGVD-AMT-2015-Project"}
{"repo_name": "gotoSubPage_827", "method name": "goto Sub Page", "comments": [" Load the page relative to the base ur.", " @param subURL"], "url": true, "content": "    public static void function(String subURL) {\n         checkInitialization();\n         TestEventManager.getInstance().addStimuli(\"Loading \" + subURL);\n         driver.get(baseUrl + \"/\" + subURL);\n     }\n", "path": "netarchivesuite-integration-test/src/test/java/dk/netarkivet/systemtest/page/PageHelper.java", "repo name": "netarchivesuite/netarchivesuite-svngit-migration"}
{"repo_name": "reloadSubPage_828", "method name": "reload Sub Page", "comments": [" Load the page relative to the base url. Doesn't log the page reload", " @param subURL"], "url": true, "content": "    public static void function(String subURL) {\n         checkInitialization();\n         driver.get(baseUrl + \"/\" + subURL);\n     }\n", "path": "netarchivesuite-integration-test/src/test/java/dk/netarkivet/systemtest/page/PageHelper.java", "repo name": "netarchivesuite/netarchivesuite-svngit-migration"}
{"repo_name": "testDeleteMovie_829", "method name": "test Delete Movie", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.cssSelector(\"div[class=\\\"title\\\"]\")).click();\n     // Warning: verifyTextPresent may require manual changes\n     try {\n       assertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"Comedy\"));\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.linkText(\"Remove\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to remove this[\\\\s\\\\S]$\"));\n   }\n", "path": "src/test/java/slenium_java_training_ymbelyakova/DeleteMovie.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testFindAndAdd2_830", "method name": "test Find And Add2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     try {\n       assertTrue(driver.findElement(By.cssSelector(\"label[for=\\\"imdbsearch\\\"][class=\\\"error\\\"]\")).isDisplayed());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.id(\"imdbsearch\")).clear();\n     driver.findElement(By.id(\"imdbsearch\")).sendKeys(\"<script>alert(\\\"hi\\\");</script>\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     WebElement note = driver.findElement(By.cssSelector(\"div.content\"));\n     //note.getAttribute(\"innerText\");\n     //WebElement note = driver.findElement(By.cssSelector(\"div.content/div.content/div\"));\n     try {\n         assertTrue(note.getAttribute(\"innerText\").matches(\"No movies where found.\"));\n       } catch (Error e) {\n         verificationErrors.append(e.toString());\n       }\n     Thread.sleep(500);\n     driver.findElement(By.id(\"imdbsearch\")).clear();\n     driver.findElement(By.id(\"imdbsearch\")).sendKeys(\"test\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     driver.findElement(By.linkText(\"American Crime Story\")).click();\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"\");\n     driver.findElement(By.name(\"year\")).clear();\n     driver.findElement(By.name(\"year\")).sendKeys(\"\");\n     driver.findElement(By.id(\"cover\")).clear();\n     driver.findElement(By.id(\"cover\")).sendKeys(\"C:\\\\GitHub\\\\images\\\\american_crime_story.jpg\");\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Save\\\"]\")).click();\n     //driver.findElement(By.id(\"submit\")).click();\n     try {\n       assertTrue(driver.findElement(By.cssSelector(\"label[for=\\\"name\\\"][class=\\\"error\\\"]\")).isDisplayed());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     try {\n       assertTrue(driver.findElement(By.cssSelector(\"label[for=\\\"year\\\"][class=\\\"error\\\"]\")).isDisplayed());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"American Crime Story\");\n     driver.findElement(By.name(\"aka\")).clear();\n     driver.findElement(By.name(\"aka\")).sendKeys(\"American Crime Story\");\n     try {\n       assertFalse(driver.findElement(By.cssSelector(\"label[for=\\\"name\\\"][class=\\\"error\\\"]\")).isDisplayed());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.name(\"year\")).clear();\n     driver.findElement(By.name(\"year\")).sendKeys(\"2016\");\n     try {\n       assertFalse(driver.findElement(By.cssSelector(\"label[for=\\\"year\\\"][class=\\\"error\\\"]\")).isDisplayed());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Save\\\"]\")).click();\n     //driver.findElement(By.id(\"submit\")).click();\n   }\n", "path": "src/test/java/slenium_java_training_ymbelyakova/FindAndAdd2.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testComplexSearch_831", "method name": "test Complex Search", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \tdriver.get(baseUrl + \"/php4dvd/\");\n \t// ïðîâåðÿåì, ÷òî íåò ôèëüìà somenotfoundmovie\n \tWebDriverWait wait =\n     \t\tnew WebDriverWait(driver, 30);\n \twait.until(ExpectedConditions.elementToBeClickable(By.id(\"q\")));\n \tWebElement search = driver.findElement(By.id(\"q\"));\n \tsearch.clear();\n \tsearch.sendKeys(\"somenotfoundmovie\" + Keys.RETURN);\n \twait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector(\"div.title\")));\n     wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"div.content\")));\n     wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"div.content\"), \"No movies where found.\"));\n \ttry {\n \t      assertEquals(\"No movies where found.\", driver.findElement(By.cssSelector(\"div.content\")).getText());\n \t    } catch (Error e) {\n \t      verificationErrors.append(e.toString());\n \t    }\n \t// ïðîâåðÿåì, ÷òî åñòü ôèëüì test\n \twait.until(ExpectedConditions.elementToBeClickable(By.id(\"q\")));\n \tsearch.clear();\n \tWebElement nftd=driver.findElement(By.cssSelector(\"div.content\"));\n     search.sendKeys(\"test\" + Keys.RETURN);\n     wait.until(ExpectedConditions.stalenessOf(nftd));\n    // wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector(\"div.content\")));\n     wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"div.title\")));\n     WebElement title = driver.findElement(By.cssSelector(\"div.title\"));\n     try {\n         assertTrue(title.getAttribute(\"innerText\").matches(\"Test\"));\n       } catch (Error e) {\n         verificationErrors.append(e.toString());\n       }\n     //Thread.sleep(500);\n     //âûáèðàåì êàòåãîðèþ Animation è ïðîâåðÿåì, ÷òî â íåé íåò test\n     driver.findElement(By.id(\"category-button\")).click();\n     driver.findElement(By.id(\"category-menu\")).findElement(By.linkText(\"Animation\")).click();\n     wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector(\"div.title\")));\n     wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"div.content\")));\n     wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"div.content\"), \"No movies where found.\"));\n     try {\n \t      assertEquals(\"No movies where found.\", driver.findElement(By.cssSelector(\"div.content\")).getText());\n \t    } catch (Error e) {\n \t      verificationErrors.append(e.toString());\n \t    }\n     //âûáèðàåì êàòåãîðèþ Comedy è ïðîâåðÿåì, ÷òî â íåé åñòü test\n     driver.findElement(By.id(\"category-button\")).click();\n     driver.findElement(By.id(\"category-menu\")).findElement(By.linkText(\"Comedy\")).click();\n     wait.until(ExpectedConditions.stalenessOf(nftd));\n     //wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector(\"div.content\")));\n     wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"div.title\")));\n     try {\n         assertTrue(driver.findElement(By.cssSelector(\"div.title\")).getAttribute(\"innerText\").matches(\"Test\"));\n       } catch (Error e) {\n         verificationErrors.append(e.toString());\n       }\n     \n     Thread.sleep(500);\n     \n   }\n", "path": "src/test/java/slenium_java_training_ymbelyakova/ComplexSearch.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testDeleteMovie_832", "method name": "test Delete Movie", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     WebDriverWait wait =\n     \t\tnew WebDriverWait(driver, 30);\n     wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"div.title\")));\n     int countorig=driver.findElements(By.cssSelector(\"div.title\")).size();\n     driver.findElement(By.cssSelector(\"div[class=\\\"title\\\"]\")).click();\n     wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"img[alt=\\\"Remove\\\"]\")));\n     acceptNextAlert = false;\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Remove\\\"]\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to remove this[\\\\s\\\\S]$\"));\n     Thread.sleep(500);\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Remove\\\"]\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure you want to remove this[\\\\s\\\\S]$\"));\n     wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"div.title\")));\n     int countres=driver.findElements(By.cssSelector(\"div.title\")).size();\n     System.out.println(countorig);\n     System.out.println(countres);\n     if (countres != countorig - 1) System.out.println(\"Something is wrong\");\n     else System.out.println(\"All is OK\");\n     \n   }\n", "path": "src/test/java/slenium_java_training_ymbelyakova/DeleteMovie2.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testNewMovie_833", "method name": "test New Movie", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     WebDriverWait wait =\n     \t\tnew WebDriverWait(driver, 30);\n     wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"div.title\")));\n     int countorig=driver.findElements(By.cssSelector(\"div.title\")).size();\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n     driver.findElement(By.name(\"imdbid\")).clear();\n     driver.findElement(By.name(\"imdbid\")).sendKeys(\"9999999\");\n     driver.findElement(By.name(\"name\")).click();\n     wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"label[for=\\\"name\\\"]\")));\n     try {\n       assertTrue(driver.findElement(By.cssSelector(\"label[for=\\\"name\\\"]\")).isDisplayed());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     // Warning: verifyTextPresent may require manual changes\n     try {\n       assertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"This field is required\"));\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"New Movie\");\n     driver.findElement(By.name(\"aka\")).clear();\n     driver.findElement(By.name(\"aka\")).sendKeys(\"New Movie by Yulia Belyakova\");\n     driver.findElement(By.id(\"submit\")).click();\n     //Thread.sleep(500);\n     wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector(\"label[for=\\\"name\\\"]\")));\n     try {\n       assertFalse(driver.findElement(By.cssSelector(\"label[for=\\\"name\\\"]\")).isDisplayed());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"label[for=\\\"year\\\"]\")));\n     try {\n       assertTrue(driver.findElement(By.cssSelector(\"label[for=\\\"year\\\"]\")).isDisplayed());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     // Warning: verifyTextPresent may require manual changes\n     try {\n       assertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"This field is required\"));\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.name(\"year\")).clear();\n     driver.findElement(By.name(\"year\")).sendKeys(\"2016\");\n     driver.findElement(By.name(\"duration\")).clear();\n     driver.findElement(By.name(\"duration\")).sendKeys(\"20\");\n     driver.findElement(By.name(\"rating\")).clear();\n     driver.findElement(By.name(\"rating\")).sendKeys(\"10\");\n     driver.findElement(By.id(\"own_no\")).click();\n     driver.findElement(By.id(\"seen_no\")).click();\n     driver.findElement(By.id(\"loaned_yes\")).click();\n     driver.findElement(By.name(\"loanname\")).clear();\n     driver.findElement(By.name(\"loanname\")).sendKeys(\"2016-03-29\");\n     driver.findElement(By.id(\"cover\")).clear();\n     File file = new File(\"src/test/resource/images/new_movie.jpg\");\n     driver.findElement(By.id(\"cover\")).sendKeys(file.getAbsolutePath());\n     //driver.findElement(By.id(\"cover\")).sendKeys(path);\n     //driver.findElement(By.id(\"cover\")).sendKeys(\"C:\\\\GitHub\\\\images\\\\new_movie.jpg\");\n     driver.findElement(By.name(\"trailer\")).clear();\n     driver.findElement(By.name(\"trailer\")).sendKeys(\"https://www.youtube.com/watch?v=ap_avaJApm8\");\n     driver.findElement(By.name(\"notes\")).clear();\n     driver.findElement(By.name(\"notes\")).sendKeys(\"Personal notes test\");\n     driver.findElement(By.name(\"taglines\")).clear();\n     driver.findElement(By.name(\"taglines\")).sendKeys(\"Taglines test\");\n     driver.findElement(By.name(\"plotoutline\")).clear();\n     driver.findElement(By.name(\"plotoutline\")).sendKeys(\"Plot outline test\");\n     driver.findElement(By.name(\"plots\")).clear();\n     driver.findElement(By.name(\"plots\")).sendKeys(\"Plots test\");\n     driver.findElement(By.id(\"text_languages_0\")).clear();\n     driver.findElement(By.id(\"text_languages_0\")).sendKeys(\"EN, RU\");\n     driver.findElement(By.name(\"subtitles\")).clear();\n     driver.findElement(By.name(\"subtitles\")).sendKeys(\"Subtitles test\");\n     driver.findElement(By.name(\"audio\")).clear();\n     driver.findElement(By.name(\"audio\")).sendKeys(\"Audio test\");\n     driver.findElement(By.name(\"video\")).clear();\n     driver.findElement(By.name(\"video\")).sendKeys(\"Video test\");\n     driver.findElement(By.name(\"country\")).clear();\n     driver.findElement(By.name(\"country\")).sendKeys(\"RU\");\n     driver.findElement(By.name(\"genres\")).clear();\n     driver.findElement(By.name(\"genres\")).sendKeys(\"Comedy\");\n     driver.findElement(By.name(\"director\")).clear();\n     driver.findElement(By.name(\"director\")).sendKeys(\"Director test\");\n     driver.findElement(By.name(\"writer\")).clear();\n     driver.findElement(By.name(\"writer\")).sendKeys(\"Writer test\");\n     driver.findElement(By.name(\"producer\")).clear();\n     driver.findElement(By.name(\"producer\")).sendKeys(\"Producer test\");\n     driver.findElement(By.name(\"music\")).clear();\n     driver.findElement(By.name(\"music\")).sendKeys(\"Music test\");\n     driver.findElement(By.name(\"cast\")).clear();\n     driver.findElement(By.name(\"cast\")).sendKeys(\"Cast test\");\n     wait.until(ExpectedConditions.elementToBeClickable(By.id(\"submit\")));\n     driver.findElement(By.id(\"submit\")).click();\n     wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"h2\")));\n     wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"h1\")));\n     driver.findElement(By.cssSelector(\"h1\")).click();\n     wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"div.title\")));\n     int countres=driver.findElements(By.cssSelector(\"div.title\")).size();\n     System.out.println(countorig);\n     System.out.println(countres);\n     if (countres != countorig + 1) System.out.println(\"Something is wrong\");\n     else System.out.println(\"All is OK\");\n     \n   }\n", "path": "src/test/java/slenium_java_training_ymbelyakova/NewMovie.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testPositiveSearch_834", "method name": "test Positive Search", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     WebDriverWait wait =\n     \t\tnew WebDriverWait(driver, 30);\n     wait.until(ExpectedConditions.elementToBeClickable(By.id(\"q\")));\n     driver.findElement(By.id(\"q\")).clear();\n     wait.until(ExpectedConditions.elementToBeClickable(By.id(\"q\")));\n     WebElement nftd=driver.findElement(By.cssSelector(\"div.content\"));\n     driver.findElement(By.id(\"q\")).sendKeys(\"test\" + Keys.RETURN);\n     wait.until(ExpectedConditions.stalenessOf(nftd));\n     //wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector(\"div.content\")));\n     wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"div.title\")));\n     WebElement note = driver.findElement(By.cssSelector(\"div.title\"));\n     Thread.sleep(500);\n     try {\n         assertTrue(note.getAttribute(\"innerText\").matches(\"Test\"));\n       } catch (Error e) {\n         verificationErrors.append(e.toString());\n       }\n   }\n", "path": "src/test/java/slenium_java_training_ymbelyakova/PositiveSearch.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testLoginTestHTML_835", "method name": "test Login Test HTML", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     WebElement userField = driver.findElement(By.id(\"username\"));\n \tuserField.clear();\n     userField.sendKeys(\"admin\");\n     WebElement passwordField = driver.findElement(By.name(\"password\"));\n \tpasswordField.clear();\n     passwordField.sendKeys(\"admin\");\n     driver.findElement(By.name(\"submit\")).click();\n   }\n", "path": "src/test/java/slenium_java_training_ymbelyakova/LoginTest.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testLoginTestHTML_836", "method name": "test Login Test HTML", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     WebElement userField = driver.findElement(By.id(\"username\"));\n \tuserField.clear();\n     userField.sendKeys(\"admin\");\n     WebElement passwordField = driver.findElement(By.name(\"password\"));\n \tpasswordField.clear();\n     passwordField.sendKeys(\"admin\");\n     driver.findElement(By.name(\"submit\")).click();\n   }\n", "path": "src/test/java/selenium_java_training/LoginTest.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testNegativeSearch_837", "method name": "test Negative Search", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     WebDriverWait wait =\n     \t\tnew WebDriverWait(driver, 30);\n     wait.until(ExpectedConditions.elementToBeClickable(By.id(\"q\")));\n     driver.findElement(By.id(\"q\")).clear();\n     driver.findElement(By.id(\"q\")).sendKeys(\"somenotfoundmovie\" + Keys.RETURN);\n     \n     wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector(\"div.title\")));\n     wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"div.content\")));\n     wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"div.content\"), \"No movies where found.\"));\n     try {\n       assertEquals(\"No movies where found.\", driver.findElement(By.cssSelector(\"div.content\")).getText());\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n   }\n", "path": "src/test/java/slenium_java_training_ymbelyakova/NegativeSearch.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testFindAndAdd_838", "method name": "test Find And Add", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/php4dvd/\");\n     WebDriverWait wait =\n     \t\tnew WebDriverWait(driver, 30);\n     wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"div.title\")));\n     int countorig=driver.findElements(By.cssSelector(\"div.title\")).size();\n     driver.findElement(By.cssSelector(\"img[alt=\\\"Add movie\\\"]\")).click();\n     wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"input[type=\\\"submit\\\"]\")));\n     driver.findElement(By.id(\"imdbsearch\")).clear();\n     driver.findElement(By.id(\"imdbsearch\")).sendKeys(\"test\");\n     driver.findElement(By.cssSelector(\"input[type=\\\"submit\\\"]\")).click();\n     wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.className(\"title\")));\n     wait.until(ExpectedConditions.elementToBeClickable(By.linkText(\"Test\")));\n     //driver.findElement(By.linkText(\"Test\")).click();\n     driver.get(baseUrl + \"/php4dvd/?go=add&imdbid=2407380\");\n     wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.name(\"name\")));\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"Test ymbelyakova\");\n     driver.findElement(By.name(\"aka\")).clear();\n     driver.findElement(By.name(\"aka\")).sendKeys(\"Test ymbelyakova\");\n     driver.findElement(By.name(\"name\")).clear();\n     driver.findElement(By.name(\"name\")).sendKeys(\"Test\");\n     driver.findElement(By.id(\"cover\")).clear();\n     File file = new File(\"src/test/resource/images/test_cover.jpg\");\n     driver.findElement(By.id(\"cover\")).sendKeys(file.getAbsolutePath());\n     /*driver.findElement(By.id(\"cover\")).sendKeys(\"C:\\\\GitHub\\\\images\\\\test_cover.png\");\n     // Warning: verifyTextPresent may require manual changes\n     try {\n       assertTrue(driver.findElement(By.cssSelector(\"BODY\")).getText().matches(\"^[\\\\s\\\\S]*$\"));\n     } catch (Error e) {\n       verificationErrors.append(e.toString());\n     }\n     driver.findElement(By.id(\"cover\")).clear();\n     driver.findElement(By.id(\"cover\")).sendKeys(\"C:\\\\GitHub\\\\images\\\\test_cover.jpg\");*/\n     driver.findElement(By.name(\"notes\")).clear();\n     driver.findElement(By.name(\"notes\")).sendKeys(\"Personal notes test\");\n     driver.findElement(By.name(\"taglines\")).clear();\n     driver.findElement(By.name(\"taglines\")).sendKeys(\"Taglines test\");\n     driver.findElement(By.name(\"subtitles\")).clear();\n     driver.findElement(By.name(\"subtitles\")).sendKeys(\"Subtitles test\");\n     driver.findElement(By.name(\"country\")).clear();\n     driver.findElement(By.name(\"country\")).sendKeys(\"UK\");\n     driver.findElement(By.name(\"genres\")).clear();\n     driver.findElement(By.name(\"genres\")).sendKeys(\"Comedy\");\n     driver.findElement(By.name(\"director\")).clear();\n     driver.findElement(By.name(\"director\")).sendKeys(\"Director test\");\n     driver.findElement(By.name(\"writer\")).clear();\n     driver.findElement(By.name(\"writer\")).sendKeys(\"Writer test\");\n     wait.until(ExpectedConditions.elementToBeClickable(By.id(\"submit\")));\n     driver.findElement(By.id(\"submit\")).click();\n     \n     wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"h1\")));\n     driver.findElement(By.cssSelector(\"h1\")).click();\n     wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"div.title\")));\n     int countres=driver.findElements(By.cssSelector(\"div.title\")).size();\n     System.out.println(countorig);\n     System.out.println(countres);\n     if (countres != countorig + 1) System.out.println(\"Something is wrong\");\n     else System.out.println(\"All is OK\");\n   }\n", "path": "src/test/java/slenium_java_training_ymbelyakova/FindAndAdd.java", "repo name": "ymbelyakova/selenium_java_training_ymbelyakova_lesson1"}
{"repo_name": "testDelTopicTc1_839", "method name": "test Del Topic Tc1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"admin\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     driver.findElement(By.linkText(\"Categorie1\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure[\\\\s\\\\S]$\"));\n     assertTrue(driver.findElements(By.linkText(\"DelTopic\")).isEmpty());\n   }\n", "path": "test/DelTopicTc1Test.java", "repo name": "awph/jeef"}
{"repo_name": "testCreateTopicTC1_840", "method name": "test Create Topic TC1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"user1\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     driver.findElement(By.linkText(\"Categorie1\")).click();\n     driver.findElement(By.id(\"formNewTopic:createNewTopic\")).click();\n     driver.findElement(By.id(\"CreateTopic:Title\")).clear();\n     driver.findElement(By.id(\"CreateTopic:Title\")).sendKeys(\"MyTopic\");\n     driver.findElement(By.id(\"CreateTopic:Content\")).clear();\n     driver.findElement(By.id(\"CreateTopic:Content\")).sendKeys(\"MyContent\");\n     driver.findElement(By.id(\"CreateTopic:Create\")).click();\n     assertTrue(driver.findElements(By.linkText(\"user1\")).size() > 0);\n   }\n", "path": "test/CreateTopicTc1Test.java", "repo name": "awph/jeef"}
{"repo_name": "testSignUpTc2_841", "method name": "test Sign Up Tc2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"user3\");\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     driver.findElement(By.id(\"signup:username\")).clear();\n     driver.findElement(By.id(\"signup:username\")).sendKeys(\"user3\");\n   }\n", "path": "test/SignUpTc2Test.java", "repo name": "awph/jeef"}
{"repo_name": "testSignInTc3_842", "method name": "test Sign In Tc3", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     assertTrue(\"The Username field is required.\".equals(driver.findElement(By.id(\"secondMessagePanel\")).findElement(By.tagName(\"td\")).getText().trim()));\n   }\n", "path": "test/SignInTc3Test.java", "repo name": "awph/jeef"}
{"repo_name": "testAddPostTc1_843", "method name": "test Add Post Tc1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"user1\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     driver.findElement(By.linkText(\"Categorie1\")).click();\n     driver.findElement(By.linkText(\"TestAddTopic1\")).click();\n     driver.findElement(By.id(\"formPost:content\")).clear();\n     driver.findElement(By.id(\"formPost:content\")).sendKeys(\"Message1\");\n     assertTrue(driver.findElements(By.linkText(\"Post\")).size() > 0);\n   }\n", "path": "test/AddPostTc1Test.java", "repo name": "awph/jeef"}
{"repo_name": "testCreateTopicTc2_844", "method name": "test Create Topic Tc2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"user1\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     driver.findElement(By.linkText(\"Categorie1\")).click();\n     driver.findElement(By.id(\"formNewTopic:createNewTopic\")).click();\n     driver.findElement(By.id(\"CreateTopic:Content\")).clear();\n     driver.findElement(By.id(\"CreateTopic:Content\")).sendKeys(\"Test\");\n     driver.findElement(By.id(\"CreateTopic:Create\")).click();\n     assertTrue(\"The Title field is required.\".equals(driver.findElement(By.id(\"secondMessagePanel\")).findElement(By.tagName(\"td\")).getText().trim()));\n   }\n", "path": "test/CreateTopicTc2Test.java", "repo name": "awph/jeef"}
{"repo_name": "testSignUpTc3_845", "method name": "test Sign Up Tc3", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     driver.findElement(By.id(\"signup:email\")).clear();\n     driver.findElement(By.id(\"signup:email\")).sendKeys(\"user4@user4.com\");\n     driver.findElement(By.id(\"signup:username\")).clear();\n     driver.findElement(By.id(\"signup:username\")).sendKeys(\"user4\");\n     driver.findElement(By.id(\"signup:btnSignup\")).click();\n     \n     WebElement web = driver.findElement(By.id(\"signup:messageUsername\"));\n     String t = web.getText();\n   }\n", "path": "test/SignUpTc3Test.java", "repo name": "awph/jeef"}
{"repo_name": "aWrongLoginStaysToHomePage_846", "method name": "a Wrong Login Stays To Home Page", "comments": ["Test", "ProbeTest(tags = \"WebUI\")"], "url": true, "content": "  public void function() throws InterruptedException {\n     Thread.sleep(2000);\n     driver.get(baseUrl);\n     HomePage homePage = new HomePage(driver);\n     Thread.sleep(2000);\n     homePage.typeIncorrectCreditentials();   \n     Thread.sleep(5000);\n       if (!\"GoomY\".equals(driver.getTitle())) {\n       throw new IllegalStateException(\"This is not the correct page\");\n     }\n     \n   }\n", "path": "project/GoomY/src/test/java/ch/heigvd/amt/goomy/selenium/GOOMYTest.java", "repo name": "yibnl/GoomY"}
{"repo_name": "gotoTestCourse_847", "method name": "goto Test Course", "comments": ["Override"], "url": true, "content": "\tpublic ICoursePage function() {\n     \tdriver.get(baseUrl);\n     \ttry {\n     \t\ttestCourseLink.click();\n         \treturn PageFactory.initElements(driver, CoursePage.class);\n     \t} catch(NoSuchElementException e) {\n     \t\treturn createTestCourse();\n     \t}\n     }\n", "path": "opaque-api/src/test/java/com/googlecode/ounit/test/moodle19/HomePage.java", "repo name": "anttix/ounit"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_848", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "dbo/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_849", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({MARIONETTE})"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "dbo/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_850", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "dbo/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_851", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "dbo/selenium"}
{"repo_name": "gotoTestCourse_852", "method name": "goto Test Course", "comments": ["Override"], "url": true, "content": "\tpublic ICoursePage function() {\n     \tdriver.get(baseUrl);\n     \ttry {\n     \t\ttestCourseLink.click();\n         \treturn PageFactory.initElements(driver, CoursePage.class);\n     \t} catch(NoSuchElementException e) {\n     \t\treturn createTestCourse();\n     \t}\n     }\n", "path": "opaque-api/src/test/java/com/googlecode/ounit/test/moodle21/HomePage.java", "repo name": "stafot/ounit"}
{"repo_name": "testCanBlockInvalidSslCertificates_853", "method name": "test Can Block Invalid Ssl Certificates", "comments": [], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = new FirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "firefox/test/java/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "hugs/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_854", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["Ignore(value = {IE, SELENESE})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")) .getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "common/test/java/org/openqa/selenium/I18nTest.java", "repo name": "hugs/selenium"}
{"repo_name": "openTestURL_855", "method name": "open Test URL", "comments": [], "url": true, "content": "    private void function(Class<?> uiClass, Set<String> parameters) {\n         String url = getTestURL(uiClass);\n \n         if (isDebug()) {\n             parameters.add(\"debug\");\n         }\n \n         if (LegacyApplication.class.isAssignableFrom(uiClass)) {\n             parameters.add(\"restartApplication\");\n         }\n \n         if (parameters.size() > 0) {\n             url += \"?\" + Joiner.on(\"&\").join(parameters);\n         }\n \n         driver.get(url);\n     }\n", "path": "uitest/src/com/vaadin/tests/tb3/AbstractTB3Test.java", "repo name": "sammso/vaadin"}
{"repo_name": "testWSO2FormatTestCase_856", "method name": "test WSO2 Format Test Case", "comments": ["Test(groups = \"\", description = \"\")"], "url": true, "content": "    public void function() throws Exception {\n         //METHOD:testLoginTestCase:start\n         //WINDOW:apimng.login\n         driver.get(baseUrl + \"/publisher/design\");\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(\"admin\");\n         driver.findElement(By.id(\"pass\")).clear();\n         driver.findElement(By.id(\"pass\")).sendKeys(\"admin\");\n         driver.findElement(By.id(\"loginButton\")).click();\n         //METHOD:testLoginTestCase:end\n         //METHOD:testMainWindowTestCase:start\n         //WINDOW:apimng.main\n         for (int second = 0; ; second++) {\n             if (second >= 60) {\n                 fail(\"timeout\");\n             }\n             try {\n                 if (isElementPresent(By.linkText(\"All Statistics\"))) {\n                     break;\n                 }\n             } catch (Exception e) {\n             }\n             Thread.sleep(1000);\n         }\n \n         driver.findElement(By.linkText(\"All Statistics\")).click();\n         for (int second = 0; ; second++) {\n             if (second >= 60) {\n                 fail(\"timeout\");\n             }\n             try {\n                 if (isElementPresent(By.linkText(\"API Response Times\"))) {\n                     break;\n                 }\n             } catch (Exception e) {\n             }\n             Thread.sleep(1000);\n         }\n \n         driver.findElement(By.linkText(\"API Response Times\")).click();\n         driver.findElement(By.linkText(\"API Usage by Resource Path\")).click();\n         driver.findElement(By.linkText(\"API Usage by User\")).click();\n         driver.findElement(By.linkText(\"Browse\")).click();\n         driver.findElement(By.linkText(\"Subscriptions\")).click();\n         driver.findElement(By.linkText(\"Statistics\")).click();\n         driver.findElement(By.linkText(\"API Subscriptions\")).click();\n         driver.findElement(By.linkText(\"API Usage\")).click();\n         driver.findElement(By.linkText(\"API Response Times\")).click();\n         driver.findElement(By.linkText(\"API Last Access Times\")).click();\n         driver.findElement(By.linkText(\"Browse\")).click();\n         driver.findElement(By.linkText(\"Browse\")).click();\n         driver.findElement(By.linkText(\"Add\")).click();\n         //METHOD:testMainWindowTestCase:end\n     }\n", "path": "src/main/resources/WSO2FormatTestCase.java", "repo name": "sanethd/tweak"}
{"repo_name": "testCanBlockInvalidSslCertificates_857", "method name": "test Can Block Invalid Ssl Certificates", "comments": [], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = new FirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "firefox/test/java/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "epall/selenium"}
{"repo_name": "loginLoginHint_858", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "iCarros/keycloak"}
{"repo_name": "canAuthenticateUsingBasicAuthentication_859", "method name": "can Authenticate Using Basic Authentication", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"basicAuth\");\n     driver.get(url);\n \n     Alert alert = wait.until(alertIsPresent());\n \n     UsernamePasswordCredentials user = new UsernamePasswordCredentials(\"test\", \"test\");\n \n     alert.authenticateUsing(user);\n \n     assertEquals(\"authorized\", driver.findElement(By.tagName(\"h1\")).getText());\n   }\n", "path": "java/client/test/org/openqa/selenium/AuthenticatedPageLoadingTest.java", "repo name": "tbeadle/selenium"}
{"repo_name": "writeLogFile_860", "method name": "write Log File", "comments": [], "url": true, "content": "  private void function(String url, int sleepTime) {\n     driver.get(url);\n     sleep(sleepTime);\n     writeLogFile();\n   }\n", "path": "src/test/java/com/github/exkazuu/diff_based_web_tester/diff_generator/WebScraper.java", "repo name": "tokichie/xmldiff"}
{"repo_name": "logoutFromAdminConsole_861", "method name": "logout From Admin Console", "comments": [" To logout from admin console dashboard server", " @param driver WebDriver instance", " @param url    base url of the server"], "url": true, "content": "    public static void function(UESWebDriver driver, String url) {\n         driver.get(url + ADMIN_CONSOLE_SUFFIX);\n         driver.findElement(By.cssSelector(\".right > a\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/ues/ui/integration/util/UESUIIntegrationTest.java", "repo name": "wso2/product-ues"}
{"repo_name": "openTestURL_862", "method name": "open Test URL", "comments": [], "url": true, "content": "    private void function(Class<?> uiClass, Set<String> parameters) {\n         String url = getTestURL(uiClass);\n \n         if (isDebug()) {\n             parameters.add(\"debug\");\n         }\n \n         if (LegacyApplication.class.isAssignableFrom(uiClass)) {\n             parameters.add(\"restartApplication\");\n         }\n \n         if (parameters.size() > 0) {\n             url += \"?\" + Joiner.on(\"&\").join(parameters);\n         }\n \n         driver.get(url);\n     }\n", "path": "uitest/src/com/vaadin/tests/tb3/AbstractTB3Test.java", "repo name": "Scarlethue/vaadin"}
{"repo_name": "loginLoginHint_863", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "joelbars/keycloak"}
{"repo_name": "testGetAndCheckText_864", "method name": "test Get And Check Text", "comments": [" 入門課題その7:「表示された値のチェックをしてみよう」", " 解答例", "Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"introwork/introWork7.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n         \n         WebElement total = driver.findElement(By.id(\"total\"));\n         assertThat(total.getText(), is(\"9000\"));\n     }\n", "path": "answer/test/java/introwork/IntroWork7Test.java", "repo name": "ootaken/STARHotel"}
{"repo_name": "testClickOKButton_865", "method name": "test Click OK Button", "comments": [" 入門課題その2:「クリックしてみよう」", " 解答例", "Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"introwork/introWork2.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n         \n         WebElement okButton = driver.findElement(By.id(\"ok_button\"));\n         okButton.click();\n     }\n", "path": "answer/test/java/introwork/IntroWork2Test.java", "repo name": "ootaken/STARHotel"}
{"repo_name": "testClickOKButton_866", "method name": "test Click OK Button", "comments": [" 入門課題その2:「クリックしてみよう」", "Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"introwork/introWork8.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n \n         Actions actions = new Actions(driver);\n         WebElement lastButton = driver.findElement(By.id(\"last_button\"));\n         actions.moveToElement(lastButton);\n         actions.perform();\n     }\n", "path": "answer/test/java/introwork/IntroWork8Test.java", "repo name": "ootaken/STARHotel"}
{"repo_name": "testClickOKButton_867", "method name": "test Click OK Button", "comments": [" 入門課題その9:「テキストが表示されるまで待機してみよう」", "Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"introwork/introWork9.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n \n         WebElement okButton = driver.findElement(By.id(\"ok_button\"));\n         okButton.click();\n \n         Wait<WebDriver> wait = new WebDriverWait(driver, 10);\n         WebElement clickedText = driver.findElement(By.id(\"clicked_text\"));\n         try {\n             wait.until(ExpectedConditions.visibilityOf(clickedText));\n         } finally {\n             assertThat(clickedText.getText(), is(\"「OK」ボタンがクリックされました!\"));\n         }\n     }\n", "path": "answer/test/java/introwork/IntroWork9Test.java", "repo name": "ootaken/STARHotel"}
{"repo_name": "testClickCheckbox_868", "method name": "test Click Checkbox", "comments": [" 入門課題その5:「チェックボックスを選択してみよう」", " 解答例", "Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"introwork/introWork5.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n         \n         WebElement allowedCheck = driver.findElement(By.id(\"allowed_check\"));\n         if (!allowedCheck.isSelected()) {\n             allowedCheck.click();\n         }\n     }\n", "path": "answer/test/java/introwork/IntroWork5Test.java", "repo name": "ootaken/STARHotel"}
{"repo_name": "handleFormWithJavascriptAction_869", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, SAFARI, SELENESE, OPERA_MOBILE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "virajs/selenium-1"}
{"repo_name": "testAnElementFoundInADifferentFrameViaJsShouldHaveSameId_870", "method name": "test An Element Found In A Different Frame Via Js Should Have Same Id", "comments": ["JavascriptEnabled", "Ignore(value = {ANDROID, IPHONE, SELENESE, OPERA, OPERA_MOBILE},", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"missedJsReference.html\");\n     driver.get(url);\n \n     driver.switchTo().frame(\"inner\");\n     WebElement first = driver.findElement(By.id(\"oneline\"));\n \n     driver.switchTo().defaultContent();\n     WebElement element = (WebElement) ((JavascriptExecutor) driver).executeScript(\n         \"return frames[0].document.getElementById('oneline');\");\n \n     driver.switchTo().frame(\"inner\");\n \n     WebElement second = driver.findElement(By.id(\"oneline\"));\n \n     checkIdEqualityIfRemote(first, element);\n     checkIdEqualityIfRemote(second, element);\n   }\n", "path": "java/client/test/org/openqa/selenium/ElementEqualityTest.java", "repo name": "virajs/selenium-1"}
{"repo_name": "testAnElementFoundInADifferentFrameViaJsCanBeUsed_871", "method name": "test An Element Found In A Different Frame Via Js Can Be Used", "comments": ["JavascriptEnabled", "Ignore({ANDROID, IPHONE, OPERA, SELENESE, OPERA_MOBILE})", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"missedJsReference.html\");\n     driver.get(url);\n \n     try {\n       driver.switchTo().frame(\"inner\");\n       WebElement first = driver.findElement(By.id(\"oneline\"));\n \n       driver.switchTo().defaultContent();\n       WebElement element = (WebElement) ((JavascriptExecutor) driver).executeScript(\n           \"return frames[0].document.getElementById('oneline');\");\n \n \n       driver.switchTo().frame(\"inner\");\n \n       WebElement second = driver.findElement(By.id(\"oneline\"));\n \n       assertEquals(first, element);\n       assertEquals(second, element);\n     } finally {\n       driver.switchTo().defaultContent();\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ElementFindingTest.java", "repo name": "virajs/selenium-1"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_872", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["Ignore(value = {IE, SELENESE})", "Test"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "winhamwr/selenium"}
{"repo_name": "canAuthenticateUsingBasicAuthentication_873", "method name": "can Authenticate Using Basic Authentication", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"basicAuth\");\n     driver.get(url);\n \n     Alert alert = waitFor(alertToBePresent(driver));\n \n     UserAndPassword user = new UserAndPassword(\"test\", \"test\");\n \n     alert.authenticateUsing(user);\n \n     assertEquals(\"authorized\", driver.findElement(By.tagName(\"h1\")).getText());\n   }\n", "path": "java/client/test/org/openqa/selenium/AuthenticatedPageLoadingTest.java", "repo name": "winhamwr/selenium"}
{"repo_name": "testESStoreBookmarkTestCase_874", "method name": "test ES Store Bookmark Test Case", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Bookmarking\")"], "url": true, "content": "    public void function() throws Exception {\n \n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //get the first element from the gadget list\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector\n                 (\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")));\n         String bookmarkedAsset = driver.findElement(By.cssSelector\n                 (\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")).getText();\n         driver.findElement(By.cssSelector(\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")).click();\n \n         //bookmark the asset\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"btn-add-gadget\")));\n         driver.findElement(By.id(\"btn-add-gadget\")).click();\n \n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"btn-add-gadget\"), \"Bookmarked\"));\n         assertEquals(\"Bookmarked\", driver.findElement(By.id(\"btn-add-gadget\")).getText(), \"Bookmarking failed\");\n \n         //check if shown in My Items page\n /*\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"div.ast-title a.ast-name\")));\n         assertEquals(bookmarkedAsset, driver.findElement(By.cssSelector(\"div.ast-title a.ast-name\")).getText(),\n                 \"Bookmarked asset not shown in My Items page\");\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\".bookmark-link\")));\n         driver.findElement(By.cssSelector(\".bookmark-link\")).click();\n         */\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreBookmarkTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testUpdateNotification_875", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update event\","], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         AssetUtil.updateAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_DESCRIPTION);\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         //read email using smtp\n         boolean hasMail = ESUtil.containsEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, updateNotificationSubject);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherNotificationTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testGadgetPage_876", "method name": "test Gadget Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Gadgets Page\")"], "url": true, "content": "    public void function() throws Exception {\n         //test appearance of gadget page\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         assertEquals(\"Gadget\", driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a/li\"))\n                 .getText(), \"Gadget Menu missing\");\n         assertEquals(LINE_PLUS_BAR_CHART, driver.findElement(By.xpath(\"//a[contains(text(),\" +\n                 \"'Line Plus Bar Chart')]\")).getText(), \"Gadgets missing\");\n         firstAsset = driver.findElement(By.cssSelector(\"h4\")).getText();\n         assertEquals(\"Recently Added\", driver.findElement(By.xpath\n                 (\"//div[@id='container-assets']/div/div[2]/div[1]/div/h4\")).getText(),\n                 \"Recently Added section missing\");\n         assertEquals(LINE_PLUS_BAR_CHART, driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\"))\n                 .getText(), \"Recently added Gadgets missing\");\n         assertEquals(\"Tags\", driver.findElement(By.xpath(\"//div[@id='container-assets']/div/div[2]/div[2]/div/h4\"))\n                 .getText(), \"Tags section missing\");\n         assertTrue(isElementPresent(driver, By.linkText(\"charts\")), \"Tags missing (charts tag)\");\n         assertEquals(\"All Categories\", driver.findElement(By.cssSelector(\"div.breadcrumb-head\")).getText(),\n                 \"Category drop down missing\");\n         assertTrue(isElementPresent(driver, By.cssSelector(\"i.icon-star\")), \"Popularity sort missing\");\n         assertTrue(isElementPresent(driver, By.cssSelector(\"i.icon-sort-alphabetical\")), \"Alphabetical sort missing\");\n         assertTrue(isElementPresent(driver, By.cssSelector(\"i.icon-calendar\")), \"Recent sort missing\");\n         assertTrue(isElementPresent(driver, By.id(\"search\")), \"Search tray missing\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreGadgetPageTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testLinksFromPage_877", "method name": "test Links From Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Gadgets Page Links\","], "url": true, "content": "    public void function() throws Exception {\n         //test links\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         assertEquals(firstAsset, driver.findElement(By.cssSelector(\"h4\")).getText(),\n                 \"Cannot view selected Gadget's page through Gadget list\");\n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a/li\")).click();\n         driver.findElement(By.xpath(\"//a[contains(text(),'Line Chart')]\")).click();\n         assertEquals(LINE_CHART, driver.findElement(By.cssSelector(\"h3\")).getText(),\n                 \"Cannot view selected Gadget's page through Recently added list\");\n \n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a/li\"))\n                 .click();\n         WebElement element = driver.findElement(By.xpath(\"//h4[contains(.,'Line Plus Bar Chart')]\"));\n         driver.findElement(By.linkText(\"pie\")).click();\n         wait.until(ExpectedConditions.stalenessOf(element));\n         assertEquals(1, driver.findElements(By.cssSelector(\"div.span3.asset\")).size(),\n                 \"Tags not working\");\n         assertEquals(\"Pie Chart\", driver.findElement(By.xpath(\"//h4[contains(.,'Pie Chart')]\")).getText(), \"Tags are not working\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreGadgetPageTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "addNewAsset_878", "method name": "add New Asset", "comments": [" Add a new asset", " @param driver      WebDriver instance", " @param baseUrl     base url of the server", " @param assetType   asset type", " @param assetName   asset name", " @param version     version"], "url": true, "content": "    public static void function(WebDriver driver, String baseUrl, String assetType, String assetName, String version, String category, String url, String description) {\n         driver.get(baseUrl + \"/publisher/assets/\" + assetType + \"/list\");\n         WebDriverWait wait = new WebDriverWait(driver, MAX_POLL_COUNT);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Add\"+assetType)));\n         driver.findElement(By.id(\"Add\"+assetType)).click();\n         //driver.get(baseUrl+PUBLISHER_GADGET_CREATE_PAGE);\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(version);\n         if(!category.equals(\"\")){\n             new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(category);\n         }\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(url);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(description);\n         driver.findElement(By.name(\"images_thumbnail\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                                  +\"/../src/test/resources/images/thumbnail.jpg\");\n         driver.findElement(By.name(\"images_banner\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                               +\"/../src/test/resources/images/banner.jpg\");\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Add\"+assetType)));\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/es/ui/integration/util/AssetUtil.java", "repo name": "rushmin/product-es"}
{"repo_name": "shouldHaveTokenAssociatedAfterOAuth_879", "method name": "should Have Token Associated After O Auth", "comments": ["Test"], "url": true, "content": "    public void function() throws IOException {\n         // Let's try to auth, redirecting back to the verification page when done\n         final String authUrl = deploymentUrl.toExternalForm() + PATH_AUTHORIZE_WITH_REDIRECT;\n         log.info(\"Starting URL: \" + authUrl);\n \n         driver.navigate().to(authUrl);\n         performGitHubOAuth(driver);\n \n         // Validate that we landed on the verification page, and that we've got a\n         // GitHub access token in session\n         final String finalContent = driver.getPageSource();\n         String expected = \"{\\\"session_has_github_access_token\\\":true}\";\n         log.info(\"Response from verification after OAuth: \" + finalContent);\n         // Assert on contains because phantomjs will wrap in HTML tags\n         Assert.assertTrue(finalContent.contains(expected));\n     }\n", "path": "tests/src/test/java/org/kontinuity/catapult/test/GitHubResourceIT.java", "repo name": "ALRubinger/catapult"}
{"repo_name": "testClearAndSendKeys_880", "method name": "test Clear And Send Keys", "comments": [" 入門課題その3:「文字列を入力してみよう」", " 解答例", "Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"introwork/introWork3.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n         \n         WebElement subject = driver.findElement(By.id(\"subject\"));\n         subject.clear();\n         subject.sendKeys(\"Selenium\");\n     }\n", "path": "answer/test/java/introwork/IntroWork3Test.java", "repo name": "aion-sm7/shift-work"}
{"repo_name": "testReserveWith9Members_881", "method name": "test Reserve With9 Members", "comments": ["Test"], "url": true, "content": "    public void function() {\n         File html = new File(\"reserveApp/index.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n         \n         // 1ページ目入力画面\n         driver.findElement(By.id(\"reserve_year\")).clear();\n         driver.findElement(By.id(\"reserve_year\")).sendKeys(\"2013\"); // TODO 明日以降直近の土曜日に変更\n         driver.findElement(By.id(\"reserve_month\")).clear();\n         driver.findElement(By.id(\"reserve_month\")).sendKeys(\"12\"); // TODO 明日以降直近の土曜日に変更\n         driver.findElement(By.id(\"reserve_day\")).clear();\n         driver.findElement(By.id(\"reserve_day\")).sendKeys(\"7\"); // TODO 明日以降直近の土曜日に変更\n         driver.findElement(By.id(\"reserve_term\")).clear();\n         driver.findElement(By.id(\"reserve_term\")).sendKeys(\"1\");\n         driver.findElement(By.id(\"headcount\")).clear();\n         driver.findElement(By.id(\"headcount\")).sendKeys(\"9\");\n         driver.findElement(By.id(\"breakfast_on\")).click();\n         WebElement planA = driver.findElement(By.id(\"plan_a\"));\n         if (!planA.isSelected()) {\n             planA.click();\n         }\n         WebElement planB = driver.findElement(By.id(\"plan_b\"));\n         if (!planB.isSelected()) {\n             planB.click();\n         }\n         driver.findElement(By.id(\"guestname\")).clear();\n         driver.findElement(By.id(\"guestname\")).sendKeys(\"a\");\n         driver.findElement(By.id(\"goto_next\")).click();\n         \n         // 2ページ目入力画面\n         assertThat(driver.findElement(By.id(\"price\")).getText(), is(\"105750\"));\n         assertThat(driver.findElement(By.id(\"datefrom\")).getText(), is(\"2013年12月7日\")); // TODO 変更\n         assertThat(driver.findElement(By.id(\"dateto\")).getText(), is(\"2013年12月8日\")); // TODO 変更\n         assertThat(driver.findElement(By.id(\"dayscount\")).getText(), is(\"1\"));\n         assertThat(driver.findElement(By.id(\"hc\")).getText(), is(\"9\"));\n         assertThat(driver.findElement(By.id(\"bf_order\")).getText(), is(\"あり\"));\n         assertThat(driver.findElement(By.id(\"plan_a_order\")).getText(), is(\"昼からチェックインプラン\"));\n         assertThat(driver.findElement(By.id(\"plan_b_order\")).getText(), is(\"お得な観光プラン\"));\n         assertThat(driver.findElement(By.id(\"gname\")).getText(), is(\"a\"));\n         driver.findElement(By.id(\"commit\")).click();\n     }\n", "path": "answer/test/java/practicework/work1/PracticeWork1Test.java", "repo name": "aion-sm7/shift-work"}
{"repo_name": "testReserveWith9MembersUsingCalendarUtility_882", "method name": "test Reserve With9 Members Using Calendar Utility", "comments": ["Test"], "url": true, "content": "    public void function() {\n         File html = new File(\"reserveApp/index.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n \n         // 現在のシステム日付を起点に明日以降の直近の土曜日を取得します\n         Calendar immediateSaturday = CalendarUtility.getImmediateDayOfWeek(Calendar.getInstance(), Calendar.SATURDAY);\n         int reserveYear = immediateSaturday.get(Calendar.YEAR);\n         int reserveMonth = immediateSaturday.get(Calendar.MONTH) + 1;\n         int reserveDay = immediateSaturday.get(Calendar.DAY_OF_MONTH);\n \n         // 上記で取得した直近の土曜日を使用します\n         driver.findElement(By.id(\"reserve_year\")).clear();\n         driver.findElement(By.id(\"reserve_year\")).sendKeys(Integer.toString(reserveYear));\n         driver.findElement(By.id(\"reserve_month\")).clear();\n         driver.findElement(By.id(\"reserve_month\")).sendKeys(Integer.toString(reserveMonth));\n         driver.findElement(By.id(\"reserve_day\")).clear();\n         driver.findElement(By.id(\"reserve_day\")).sendKeys(Integer.toString(reserveDay));\n         driver.findElement(By.id(\"reserve_term\")).clear();\n         driver.findElement(By.id(\"reserve_term\")).sendKeys(\"1\");\n         driver.findElement(By.id(\"headcount\")).clear();\n         driver.findElement(By.id(\"headcount\")).sendKeys(\"9\");\n         driver.findElement(By.id(\"breakfast_on\")).click();\n         WebElement planA = driver.findElement(By.id(\"plan_a\"));\n         if (!planA.isSelected()) {\n             planA.click();\n         }\n         WebElement planB = driver.findElement(By.id(\"plan_b\"));\n         if (!planB.isSelected()) {\n             planB.click();\n         }\n         driver.findElement(By.id(\"guestname\")).clear();\n         driver.findElement(By.id(\"guestname\")).sendKeys(\"a\");\n         driver.findElement(By.id(\"goto_next\")).click();\n \n         // 2ページ目入力画面\n         Calendar checkoutSunday = (Calendar) immediateSaturday.clone();\n         checkoutSunday.add(Calendar.DAY_OF_MONTH, 1);\n         int checkoutYear = checkoutSunday.get(Calendar.YEAR);\n         int checkoutMonth = checkoutSunday.get(Calendar.MONTH) + 1;\n         int checkoutDay = checkoutSunday.get(Calendar.DAY_OF_MONTH);\n         assertThat(driver.findElement(By.id(\"price\")).getText(), is(\"105750\"));\n         assertThat(driver.findElement(By.id(\"datefrom\")).getText(), is(reserveYear + \"年\" + reserveMonth + \"月\" + reserveDay + \"日\"));\n         assertThat(driver.findElement(By.id(\"dateto\")).getText(), is(checkoutYear + \"年\" + checkoutMonth + \"月\" + checkoutDay + \"日\"));\n         assertThat(driver.findElement(By.id(\"dayscount\")).getText(), is(\"1\"));\n         assertThat(driver.findElement(By.id(\"hc\")).getText(), is(\"9\"));\n         assertThat(driver.findElement(By.id(\"bf_order\")).getText(), is(\"あり\"));\n         assertThat(driver.findElement(By.id(\"plan_a_order\")).getText(), is(\"昼からチェックインプラン\"));\n         assertThat(driver.findElement(By.id(\"plan_b_order\")).getText(), is(\"お得な観光プラン\"));\n         assertThat(driver.findElement(By.id(\"gname\")).getText(), is(\"a\"));\n         driver.findElement(By.id(\"commit\")).click();\n     }\n", "path": "answer/test/java/practicework/work1/PracticeWork1Test.java", "repo name": "aion-sm7/shift-work"}
{"repo_name": "testClickRadioButton_883", "method name": "test Click Radio Button", "comments": [" 入門課題その4:「ラジオボタンを選択してみよう」", " 解答例", "Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"introwork/introWork4.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n \n         WebElement onRadio = driver.findElement(By.id(\"on_radio\"));\n         onRadio.click();\n     }\n", "path": "answer/test/java/introwork/IntroWork4Test.java", "repo name": "aion-sm7/shift-work"}
{"repo_name": "testSelectOptionByValue_884", "method name": "test Select Option By Value", "comments": [" 入門課題その6:「プルダウンを選択してみよう」", "Test"], "url": true, "content": "    public void function() throws Exception {\n         File html = new File(\"introwork/introWork6.html\");\n         String url = html.toURI().toString();\n         driver.get(url);\n         \n         WebElement headCount = driver.findElement(By.id(\"head_count\"));\n         Select select = new Select(headCount);\n         select.selectByValue(\"5\");\n     }\n", "path": "answer/test/java/introwork/IntroWork6Test.java", "repo name": "aion-sm7/shift-work"}
{"repo_name": "testPostConnectivityDataTenTimes_885", "method name": "test Post Connectivity Data Ten Times", "comments": [" Navigates to the \"Large Scale Connectivity\" page ten times.", " @throws Exception if something goes wrong"], "url": true, "content": "    public void function() throws Exception {\n         loginAdmin();\n \n         for (int i = 0; i < 10; i++) {\n             postConnectivityData();\n             webDriver.get(baseUrl + USER_PROFILE_URL_SUFFIX);\n             WebElement logout = findElement(By.name(\"logout\"));\n             assertEquals(\"button\", logout.getTagName());\n             assertEquals(\"submit\", logout.getAttribute(\"type\"));\n         }\n \n         logout();\n     }\n", "path": "tvb/tests/ui_tests/functional_tests/src/main/java/org/tvb/tests/ConnectivityTest.java", "repo name": "rajul/tvb-framework"}
{"repo_name": "testESPublishToStore_886", "method name": "test ES Publish To Store", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing Publishing an asset to store\")"], "url": true, "content": "    public void function() throws Exception {\n         //Add a new gadget with info\n         driver.findElement(By.linkText(\"Add\")).click();\n         driver.findElement(By.name(\"overview_provider\")).clear();\n         driver.findElement(By.name(\"overview_provider\")).sendKeys(userInfo.getUserName());\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(ASSET_NAME);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION);\n         driver.findElement(By.name(\"overview_createdtime\")).clear();\n         driver.findElement(By.name(\"overview_createdtime\")).sendKeys(ASSET_CREATED_TIME);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION);\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n         if (isAlertPresent()) {\n             closeAlertAndGetItsText();\n         }\n         //publish the gadget to store\n         driver.findElement(By.cssSelector(\"a.btn\")).click();\n         driver.findElementPoll(By.linkText(ASSET_NAME), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(ASSET_NAME)).click();\n         driver.findElement(By.linkText(\"Life Cycle\")).click();\n \n         driver.findElement(By.id(\"In-Review\")).click();\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(LC_COMMENT);\n         driver.findElement(By.id(\"commentModalSave\")).click();\n \n         driver.get(driver.getCurrentUrl());\n         driver.findElement(By.id(\"Published\")).click();\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(LC_COMMENT);\n         driver.findElement(By.id(\"commentModalSave\")).click();\n         //navigate to store to check the published gadget\n         driver.get(baseUrl + STORE_URL);\n         driver.findElementPoll(By.xpath(\"//a[contains(.,'\" + ASSET_NAME + \"')]\"), 5);\n         assertEquals(ASSET_NAME, driver.findElement(By.cssSelector(\"h4\")).getText());\n         driver.findElement(By.cssSelector(\"div.asset-author-category > ul > li\")).click();\n         assertEquals(ASSET_NAME, driver.findElement(By.cssSelector(\"h3\")).getText());\n         assertEquals(ASSET_DESCRIPTION, driver.findElement(By.cssSelector(\"p\")).getText());\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESPublishToStore.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testUpdateNotification_887", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update event\","], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         AssetUtil.updateAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_DESCRIPTION);\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         //read email using smtp\n         boolean hasMail = ESUtil.containsEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, updateNotificationSubject);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherNotificationTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESPublisherAssetNewPageTestCase_888", "method name": "test ES Publisher Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test adding a new asset page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/asts/servicex/new_page\");\n         assertTrue(isElementPresent(By.id(\"assetNewPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetNewPageTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESStoreLogin_889", "method name": "test ES Store Login", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Store Login\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.linkText(\"Sign in\")).click();\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(currentUserName);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(currentUserPwd);\n         driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n         assertTrue(isElementPresent(By.linkText(\"My Items\")), \"My Items link missing\");\n         assertTrue(isElementPresent(By.linkText(currentUserName)), \"Logged in user not shown\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreLoginLogoutTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESStoreLogout_890", "method name": "test ES Store Logout", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Store Logout\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.linkText(currentUserName)).click();\n         driver.findElement(By.linkText(\"Sign out\")).click();\n         assertTrue(isElementPresent(By.linkText(\"Sign in\")), \"Sign in link missing\");\n         assertEquals(\"Register\", driver.findElement(By.id(\"btn-register\")).getText(), \"Register button missing\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreLoginLogoutTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESPublisherAddedAssetTestCase_891", "method name": "test ES Publisher Added Asset Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Testing adding a new asset type in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_URL);\n         assertTrue(isElementPresent(By.cssSelector(\"button.btn.dropdown-toggle\")));\n         driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.findElement(By.linkText(\"Service\")).click();\n         assertTrue(isElementPresent(By.cssSelector(\"span.publisherTitle\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAddedAssetTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testStoreSortOnPopularity_892", "method name": "test Store Sort On Popularity", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing sorting on popularity\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //sort by popularity\n         driver.findElement(By.cssSelector(\"i.icon-star\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"h4\"), popularAsset1));\n         assertEquals(driver.findElement(By.cssSelector(\"h4\")).getText(), popularAsset1, \"Popularity Sort failed\");\n         assertEquals(driver.findElement(By.xpath\n                 (\"//div[@id='assets-container']/div/div[2]/div/div/a/h4\")).getText(), popularAsset2,\n                 \"Popularity Sort failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testStoreSortOnAlphabeticalOrder_893", "method name": "test Store Sort On Alphabetical Order", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing sorting on alphabetical order\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //sort by alphabetical order\n         driver.findElement(By.cssSelector(\"i.icon-sort-alphabetical\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.xpath\n                 (\"//div[@id='assets-container']/div/div[3]/div/div/a/h4\"), BUBBLE_CHART));\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h4\")).getText(), \"Alphabetical Sort failed\");\n         assertEquals(BAR_CHART, driver.findElement(By.xpath\n                 (\"//div[@id='assets-container']/div/div[2]/div/div/a/h4\")).getText(), \"Alphabetical Sort failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testStoreSortOnCreatedTime_894", "method name": "test Store Sort On Created Time", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing sorting on created time\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //sort by created time\n         driver.findElement(By.cssSelector(\"i.icon-calendar\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"h4\"), assetName));\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h4\")).getText(), \"Recent Sort failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testCategoryGoogle_895", "method name": "test Category Google", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category Google\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //google category\n         driver.findElement(By.cssSelector(\"i.icon-caret-down\")).click();\n         driver.findElement(By.linkText(\"Google\")).click();\n         assertEquals(GOOGLE_COUNT, driver.findElements(By.cssSelector(\"div.asset-details\")).size(), \"Google Category wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testCategoryWSO2_896", "method name": "test Category WSO2", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category WSO2\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         driver.findElement(By.cssSelector(\"i.icon-caret-down\")).click();\n         driver.findElement(By.linkText(\"WSO2\")).click();\n         assertEquals(WSO2_COUNT, driver.findElements(By.cssSelector(\"div.asset-details\")).size(), \"WSO2 Category wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testCategoryTemplate_897", "method name": "test Category Template", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category template\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         driver.findElement(By.cssSelector(\"i.icon-caret-down\")).click();\n         driver.findElement(By.linkText(\"Templates\")).click();\n         assertEquals(TEMPLATE_COUNT, driver.findElements(By.cssSelector(\"div.span3.asset\")).size(),\n                 \"Templates Category wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testCategoryMenu_898", "method name": "test Category Menu", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category drop down\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         driver.findElement(By.cssSelector(\"i.icon-caret-down\")).click();\n         driver.findElement(By.linkText(\"Templates\")).click();\n         assertEquals(\"Templates\", driver.findElement(By.cssSelector(\"div.breadcrumb-head\")).getText(),\n                 \"Category drop down not showing selected category \");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testLoginToPublisher_899", "method name": "test Login To Publisher", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"verify login to ES Publisher\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(currentUserName);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(currentUserPwd);\n         driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n         assertEquals(\"Asset | WSO2 Enterprise Store back-office\", driver.getTitle());\n         assertTrue(isElementPresent(By.linkText(currentUserName)), \"Logged in user not shown\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherLoginLogoutTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESPublisherAssetOverrideRendererTestCase_900", "method name": "test ES Publisher Asset Override Renderer Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding a renderer in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(lifecycleUrl);\n         assertTrue(isElementPresent(By.id(\"assetLifecyclePartial\")));\n         assertEquals(driver.findElement(By.id(\"assetLifecyclePartial\")).getText(), \"Asset Overridden Lifecycle through renderer\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverrideRendererTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESPublisherAssetCaramelPageTestCase_901", "method name": "test ES Publisher Asset Caramel Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Testing adding a new caramel page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/asts/servicex/new_caramel_page\");\n         assertTrue(isElementPresent(By.linkText(\"Overview\")));\n         assertTrue(isElementPresent(By.linkText(\"Edit\")));\n         assertTrue(isElementPresent(By.linkText(\"Life Cycle\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetCaramelPageTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testStoreBeforeAddRatings_902", "method name": "test Store Before Add Ratings", "comments": ["Test(groups = \"wso2.es.store.ratings\", description = \"Test Start Add Rating\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"i.icon-cog\")).click();\n         driver.findElement(By.cssSelector(\"h4\")).click();\n         driver.findElement(By.linkText(\"User Reviews\")).click();\n         driver.switchTo().frame(driver.findElement(By.id(\"socialIfr\")));\n         assertEquals(\"Please Sign in to add a Review\",\n                 driver.findElement(By.cssSelector(\"div.com-guest\")).getText());\n         assertEquals(\"Be the first one to review!\",\n                 driver.findElement(By.cssSelector(\"p.com-first-review\")).getText());\n         driver.switchTo().defaultContent();\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreRatingsTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "logoutFromAdminConsole_903", "method name": "logout From Admin Console", "comments": [" To logout from admin console", " @param driver WebDriver instance", " @param url    base url of the server"], "url": true, "content": "    public static void function(ESWebDriver driver, String url) {\n         driver.get(url + ADMIN_CONSOLE_SUFFIX);\n         driver.findElement(By.linkText(\"Sign-out\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/es/ui/integration/util/ESUtil.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testListPageSortByName_904", "method name": "test List Page Sort By Name", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Test sort by name\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_URL);\n         driver.findElementPoll(By.linkText(ASSET_NAME), MAX_POLL_COUNT);\n         driver.findElement(By.partialLinkText(\"NAME\")).click();\n         assertEquals(NAME_SORT_ASSET_1, driver.findElement(By.xpath(\"//tbody[@id='list-asset-table-body']/tr[1]/td[2]\"))\n                 .getText(), \"Sort on name failed\");\n         assertEquals(NAME_SORT_ASSET_2, driver.findElement(By.xpath(\"//tbody[@id='list-asset-table-body']/tr[14]/td[2]\"))\n                 .getText(), \"Sort on name failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherListPageSortTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testAddAsset_905", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.store\", description = \"Add asset\")//,", "dependsOnMethods = \"testESStoreSearchAssetsByName\")"], "url": true, "content": "    public void function() throws Exception {\n         ESUtil.login(driver, baseUrl, \"publisher\", userInfo.getUserName(),\n                 userInfo.getPassword());\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.linkText(\"Add\")).click();\n //        wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"h4\"), \"Overview\"));\n         driver.findElement(By.name(\"overview_provider\")).clear();\n         driver.findElement(By.name(\"overview_provider\")).sendKeys(assetAuthor);\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(assetVersion);\n         driver.findElement(By.name(\"overview_createdtime\")).clear();\n         driver.findElement(By.name(\"overview_createdtime\")).sendKeys(assetCreatedTime);\n         new Select(driver.findElement(By.name(\"overview_category\")))\n                 .selectByVisibleText(assetCategory);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(assetURL);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(assetDescription);\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n         if (isAlertPresent()) {\n             String alert = closeAlertAndGetItsText();\n             log.warn(alert + \": modal box appeared\");\n         }\n         driver.findElementPoll(By.linkText(assetName), 10);\n         driver.findElement(By.cssSelector(\"a.btn\")).click();\n         driver.findElement(By.linkText(assetName)).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"h4\"),\n                 assetName));\n         driver.findElement(By.linkText(\"Life Cycle\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"div.pull-left\"),\n                 \"Lifecycle - \" + assetName));\n         driver.findElement(By.id(\"In-Review\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"commentModalLabel\"),\n                 \"Add a comment\"));\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(\"ok\");\n         driver.findElement(By.id(\"commentModalSave\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"state\"), \"IN-REVIEW\"));\n         assertEquals(driver.findElement(By.id(\"state\")).getText(), \"IN-REVIEW\",\n                 \"Not Promoted to In-Review\");\n         driver.get(driver.getCurrentUrl());\n         driver.findElement(By.id(\"Published\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"commentModalLabel\"),\n                 \"Add a comment\"));\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(\"ok\");\n         driver.findElement(By.id(\"commentModalSave\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"state\"), \"PUBLISHED\"));\n         assertEquals(driver.findElement(By.id(\"state\")).getText(), \"PUBLISHED\",\n                 \"Not Promoted to Published\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSearchGadgetListTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testWithWebDriver_906", "method name": "test With Web Driver", "comments": [" @Test"], "url": true, "content": "    public void function() throws Exception {\n         int port = 9090;\n         HttpProxyServer proxyServer = DefaultHttpProxyServer.bootstrap()\n                 .withPort(port)\n                 .start();\n \n         Proxy proxy = new Proxy();\n         proxy.setProxyType(Proxy.ProxyType.MANUAL);\n         String proxyStr = String.format(\"localhost:%d\", port);\n         proxy.setHttpProxy(proxyStr);\n         proxy.setSslProxy(proxyStr);\n \n         DesiredCapabilities capability = DesiredCapabilities.firefox();\n         capability.setCapability(CapabilityType.PROXY, proxy);\n \n         final String urlString = \"http://www.yahoo.com/\";\n \n         // Note this will actually launch a browser!!\n         final WebDriver driver = new FirefoxDriver(capability);\n         driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);\n \n         driver.get(urlString);\n         final String source = driver.getPageSource();\n \n         // Just make sure it got something within reason.\n         assertTrue(source.length() > 100);\n         driver.close();\n \n         proxyServer.stop();\n     }\n", "path": "src/test/java/org/littleshoot/proxy/EndToEndStoppingTest.java", "repo name": "Elitward/LittleProxy"}
{"repo_name": "loginLoginHint_907", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "dylanplecki/keycloak"}
{"repo_name": "loginLoginHint_908", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "gregjones60/keycloak"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_909", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "manuelpirez/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_910", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, HTMLUNIT, IE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "manuelpirez/selenium"}
{"repo_name": "goToHome_911", "method name": "go To Home", "comments": [], "url": true, "content": "    public HomePage function() {\n         return WebDriverFactory.INSTANCE.ignoringDswid(() -> {\n             driver.get(hostUrl);\n             new BasePage(driver).waitForAMoment().until(\n                     (Predicate<WebDriver>) input ->\n                             new HomePage(driver).isPageValid());\n             return new HomePage(driver);\n         });\n     }\n", "path": "functional-test/src/main/java/org/zanata/workflow/AbstractWebWorkFlow.java", "repo name": "mvehar/zanata-server"}
{"repo_name": "goToDashboard_912", "method name": "go To Dashboard", "comments": [], "url": true, "content": "    public DashboardBasePage function() {\n         return WebDriverFactory.INSTANCE.ignoringDswid(() -> {\n             driver.get(hostUrl + \"dashboard\");\n             return new DashboardBasePage(driver);\n         });\n     }\n", "path": "functional-test/src/main/java/org/zanata/workflow/AbstractWebWorkFlow.java", "repo name": "mvehar/zanata-server"}
{"repo_name": "testJsonDataLoaded_913", "method name": "test Json Data Loaded", "comments": [" confirm an option for each currency in data file"], "url": true, "content": "    public void function() throws Exception {\n         String jsonUrl = baseUrl + jsonDataPath;\n         Map<String, Map<String, String>> membershipData = mapper.readValue(new URL(jsonUrl), Map.class);\n         assertTrue(membershipData.keySet().containsAll(currencies));\n         \n         String pageUrl = baseUrl + paymentPage;\n         driver.get(pageUrl);\n         waitOnXpathsPresent(Arrays.asList(\"//select[@id='displayed-currency']/option[@value='\" + defaultCurrency + \"']\"));\n         List<WebElement> options = driver.findElements(By.xpath(\"//select[@id='displayed-currency']/option\"));\n         assertTrue(options.size() == currencies.size());\n         driver.close();\n     }\n", "path": "selenium/src/test/java/PagesPaymentTest.java", "repo name": "ojacobson/dryad-repo"}
{"repo_name": "testChangeCurrency_914", "method name": "test Change Currency", "comments": [" click on the \"Show all amounts in\" options and confirm updates on page"], "url": true, "content": "    public void function() throws Exception {\n         String jsonUrl = baseUrl + jsonDataPath;\n         Map<String, Map<String, String>> membershipData = mapper.readValue(new URL(jsonUrl), Map.class);\n         assertTrue(membershipData.keySet().containsAll(currencies));\n         \n         String pageUrl = baseUrl + paymentPage;\n         driver.get(pageUrl);\n         waitOnXpathsPresent(Arrays.asList(\"//select[@id='displayed-currency']/option[@value='\" + defaultCurrency + \"']\"));\n \n         for (Entry<String, Map<String, String>> entry : membershipData.entrySet()) {\n             String currency = entry.getKey();\n             Map<String, String> values = entry.getValue();\n             WebElement elt = driver.findElement(By.xpath(\"//select[@id='displayed-currency']/option[@value='\" + currency + \"']\"));\n             elt.click();\n             for (Entry<String,String> value: values.entrySet()) {\n                 String klass = \"msg-\" + value.getKey();\n                 if (displayClasses.contains(klass)) {\n                     String amount = value.getValue();\n                     WebElement span = driver.findElement(By.className(klass));\n                     assertTrue(span.getText().equals(amount));\n                 }\n             }\n         }\n         driver.close();\n     }\n", "path": "selenium/src/test/java/PagesPaymentTest.java", "repo name": "ojacobson/dryad-repo"}
{"repo_name": "testESStoreNewGlobalPageTestCase_915", "method name": "test ES Store New Global Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Add new Global page via extension test case\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/pages/servicex_global\");\n         assertTrue(isElementPresent(By.id(\"assetNewGlobalPage\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreNewGlobalPageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testSubscriptionCreation_916", "method name": "test Subscription Creation", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Check if subscriptions are created\")"], "url": true, "content": "    public void function() throws Exception {\n         //add new gadget\n         AssetUtil.addNewAsset(driver, baseUrl, ASSET_TYPE, providerName, assetName, ASSET_VERSION, CREATED_TIME);\n         if (isAlertPresent()) {\n             closeAlertAndGetItsText();\n         }\n         //navigate to admin console\n         driver.get(baseUrl + MANAGEMENT_CONSOLE_URL);\n         driver.findElement(By.linkText(\"Gadgets\")).click();\n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(assetName)).click();\n         //check two subscriptions\n         String subscription1 = driver.findElement(By.cssSelector(\"#subscriptionsTable > tbody > tr.tableOddRow > td\"))\n                 .getText();\n         String subscription2 = driver.findElement(By.xpath(\"//table[@id='subscriptionsTable']/tbody/tr[3]/td\"))\n                 .getText();\n         String subscription1Name;\n         String subscription2Name;\n         //used to make the test independent of the subscription creation order\n         if (LC_SUBSCRIPTION.equalsIgnoreCase(subscription1)) {\n             subscription1Name = LC_SUBSCRIPTION;\n             subscription2Name = UPDATE_SUBSCRIPTION;\n         } else {\n             subscription1Name = UPDATE_SUBSCRIPTION;\n             subscription2Name = LC_SUBSCRIPTION;\n         }\n         assertEquals(subscription1Name, subscription1);\n         assertEquals(subscription2Name, subscription2);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherTenantSubscriptionTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testESPublisherAssetOverrideExistingPageTestCase_917", "method name": "test ES Publisher Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding existing page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/asts/gadget/list\");\n         driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/asts/servicex/details\");\n         assertTrue(isElementPresent(By.id(\"assetOveriddenDetailsPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverrideExistingPageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testGadgetPage_918", "method name": "test Gadget Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Gadgets Page\")"], "url": true, "content": "    public void function() throws Exception {\n         //test appearance of gadget page\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         assertEquals(\"Gadget\", driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a/li\"))\n                 .getText(), \"Gadget Menu missing\");\n         assertEquals(LINE_PLUS_BAR_CHART, driver.findElement(By.xpath(\"//a[contains(text(),\" +\n                 \"'Line Plus Bar Chart')]\")).getText(), \"Gadgets missing\");\n         firstAsset = driver.findElement(By.cssSelector(\"h4\")).getText();\n         assertEquals(\"Recently Added\", driver.findElement(By.xpath\n                 (\"//div[@id='container-assets']/div/div[2]/div[1]/div/h4\")).getText(),\n                 \"Recently Added section missing\");\n         assertEquals(LINE_PLUS_BAR_CHART, driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\"))\n                 .getText(), \"Recently added Gadgets missing\");\n         assertEquals(\"Tags\", driver.findElement(By.xpath(\"//div[@id='container-assets']/div/div[2]/div[2]/div/h4\"))\n                 .getText(), \"Tags section missing\");\n         assertTrue(isElementPresent(By.linkText(\"charts\")), \"Tags missing (charts tag)\");\n         assertEquals(\"All Categories\", driver.findElement(By.cssSelector(\"div.breadcrumb-head\")).getText(),\n                 \"Category drop down missing\");\n         assertTrue(isElementPresent(By.cssSelector(\"i.icon-star\")), \"Popularity sort missing\");\n         assertTrue(isElementPresent(By.cssSelector(\"i.icon-sort-alphabetical\")), \"Alphabetical sort missing\");\n         assertTrue(isElementPresent(By.cssSelector(\"i.icon-calendar\")), \"Recent sort missing\");\n         assertTrue(isElementPresent(By.id(\"search\")), \"Search tray missing\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreGadgetPageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testLinksFromPage_919", "method name": "test Links From Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Gadgets Page Links\","], "url": true, "content": "    public void function() throws Exception {\n         //test links\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         assertEquals(firstAsset, driver.findElement(By.cssSelector(\"h4\")).getText(),\n                 \"Cannot view selected Gadget's page through Gadget list\");\n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a/li\")).click();\n         driver.findElement(By.xpath(\"//a[contains(text(),'Line Chart')]\")).click();\n         assertEquals(LINE_CHART, driver.findElement(By.cssSelector(\"h3\")).getText(),\n                 \"Cannot view selected Gadget's page through Recently added list\");\n \n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a/li\"))\n                 .click();\n         driver.findElement(By.linkText(\"pie\")).click();\n         assertEquals(1, driver.findElements(By.cssSelector(\"div.span3.asset\")).size(),\n                 \"Tags not working\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreGadgetPageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testAddAsset_920", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing adding a new asset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         driver.findElement(By.linkText(\"Add\")).click();\n         driver.findElement(By.name(\"overview_provider\")).clear();\n         driver.findElement(By.name(\"overview_provider\")).sendKeys(providerName);\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION);\n         driver.findElement(By.name(\"overview_createdtime\")).clear();\n         driver.findElement(By.name(\"overview_createdtime\")).sendKeys(ASSET_CREATED_TIME);\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(ASSET_CATEGORY_1);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_1);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_1);\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n \n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         //check if the created gadget is shown\n         assertTrue(isElementPresent(By.linkText(assetName)), \"Adding an asset failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherTenantAddEditAssetTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testEditAsset_921", "method name": "test Edit Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing editing an asset\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         driver.findElement(By.linkText(assetName)).click();\n         driver.findElement(By.linkText(\"Edit\")).click();\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(ASSET_CATEGORY_2);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_2);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_2);\n         driver.findElement(By.id(\"editAssetButton\")).click();\n         closeAlertAndGetItsText();\n \n         //check updated info\n         driver.findElement(By.linkText(\"Overview\")).click();\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h4\")).getText());\n         assertEquals(driver.findElement(By.xpath(\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr/td[2]\"))\n                 .getText(), providerName, \"Incorrect provider\");\n         assertEquals(driver.findElement(By.xpath(\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[2]/td[2]\"))\n                 .getText(), assetName, \"Incorrect asset name\");\n         assertEquals(driver.findElement(By.xpath(\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[3]/td[2]\"))\n                 .getText(), ASSET_VERSION, \"Incorrect version\");\n         assertEquals(driver.findElement(By.xpath(\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[5]/td[2]\"))\n                 .getText(), \"WSO2\", \"Incorrect Category\");\n         assertEquals(driver.findElement(By.xpath(\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[6]/td[2]\"))\n                 .getText(), ASSET_URL_2, \"Incorrect URL\");\n         assertEquals(driver.findElement(By.xpath(\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[7]/td[2]\"))\n                 .getText(), ASSET_DESCRIPTION_2, \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherTenantAddEditAssetTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testESPublisherAssetOverridePartialTestCase_922", "method name": "test ES Publisher Asset Override Partial Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding a partial in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(updateUrl);\n         assertTrue(isElementPresent(By.id(\"assetOverriddenListingH1\")));\n         assertEquals(driver.findElement(By.id(\"assetOverriddenListingH1\")).getText(), \"New Asset Update Partial of Publisher\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverridePartialTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testESStoreBookmarkTestCase_923", "method name": "test ES Store Bookmark Test Case", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Bookmarking\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_TOP_ASSETS_PAGE);\n         driver.findElement(By.xpath(\"//i[@class='icon-cog']\")).click();\n         //select an asset to bookmark and open it\n         String bookmarkedAsset = driver.findElement(By.xpath(\"//div[@id='assets-container']/div/div[1]/div/div/a/h4\"))\n                 .getText();\n         driver.findElement(By.xpath(\"//div[@id='assets-container']/div/div[1]/div/div/a/h4\")).click();\n         if (isElementPresent(By.linkText(\"Sign in\"))) {\n             driver.findElement(By.linkText(\"Sign in\")).click();\n         }\n         //bookmark the asset\n         driver.findElement(By.id(\"btn-add-gadget\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"btn-add-gadget\"), \"Bookmarked\"));\n         assertEquals(\"Bookmarked\", driver.findElement(By.id(\"btn-add-gadget\")).getText(), \"Bookmarking failed\");\n \n         //check if shown in My Items page\n         driver.findElement(By.linkText(\"My Items\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"strong\")));\n         assertEquals(bookmarkedAsset, driver.findElement(By.cssSelector(\"strong\")).getText(),\n                 \"Bookmarked asset not shown in My Items page\");\n \n         //check if shown in My assets section\n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a/li\")).click();\n         assertTrue(isElementPresent(By.linkText(\"My Assets\")), \"My Assets section missing\");\n         driver.findElement(By.cssSelector(\"i.icon-angle-down.pull-right\")).click();\n         assertEquals(bookmarkedAsset, driver.findElement(By.cssSelector(\"strong > a\")).getText(),\n                 \"Bookmarked asset not shown in My Assets section\");\n \n         driver.findElement(By.linkText(\"View all\")).click();\n         assertEquals(\"My Assets\", driver.findElement(By.cssSelector(\"h3.asset-title-separator.asset-type-gadget\"))\n                 .getText(), \"View all not directing to My Items page\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreBookmarkTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testESStoreAssetOverrideExistingPageTestCase_924", "method name": "test ES Store Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Overriding list page via extensions test case\")"], "url": true, "content": "    public void function() throws Exception {\n \n         driver.get(baseUrl + \"/store/asts/servicex/list\");\n         assertTrue(isElementPresent(By.id(\"assetListingPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreAssetOverrideExistingPageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testESStoreAddedAssetTestCase_925", "method name": "test ES Store Added Asset Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"The new asset type list page extension in store Test Case\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/gadget/list\");\n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[3]/li\")).click();\n         driver.findElementPoll(By.id(\"assetListingPageH1\"),POLL_COUNT);\n         assertTrue(isElementPresent(By.id(\"assetListingPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreAddedAssetTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testESRegisterUserTestCase_926", "method name": "test ES Register User Test Case", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing user registration\")"], "url": true, "content": "    public void function() throws Exception {\n         //Register new user\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.id(\"btn-register\")).click();\n         driver.findElement(By.id(\"reg-username\")).clear();\n         driver.findElement(By.id(\"reg-username\")).sendKeys(NEW_USER_NAME);\n         driver.findElement(By.id(\"reg-password\")).clear();\n         driver.findElement(By.id(\"reg-password\")).sendKeys(NEW_USER_PWD);\n         driver.findElement(By.id(\"reg-password2\")).clear();\n         driver.findElement(By.id(\"reg-password2\")).sendKeys(NEW_USER_PWD);\n         driver.findElement(By.id(\"registrationSubmit\")).click();\n         //check login for store\n         assertTrue(isElementPresent(By.linkText(\"My Items\")), \"Login failed for Store\");\n         assertTrue(isElementPresent(By.linkText(NEW_USER_NAME)), \"Login failed for Store\");\n         //check login for publisher\n         driver.get(baseUrl + PUBLISHER_URL);\n         assertTrue(isElementPresent(By.linkText(NEW_USER_NAME)), \"Login failed for Publisher\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRegisterUserTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testAnonHomePage_927", "method name": "test Anon Home Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Anonymous User Home Page\")"], "url": true, "content": "    public void function() throws Exception {\n         //test appearance\n         driver.get(baseUrl + STORE_URL);\n         assertTrue(isElementPresent(By.cssSelector(\"a.brand\")), \"Home Page error: Logo missing\");\n         assertEquals(\"Sign in\", driver.findElement(By.linkText(\"Sign in\")).getText(),\n                 \"Home Page error: Sign in button missing\");\n         assertTrue(isElementPresent(By.id(\"btn-register\")), \"Home Page error: Register button missing\");\n         assertEquals(\"Gadget\", driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[1]/li\"))\n                 .getText(), \"Home Page error: Gadget menu missing\");\n         assertEquals(\"Site\", driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[2]/li\"))\n                 .getText(), \"Home Page error: Site menu missing\");\n         assertEquals(\"Recent Gadgets\", driver.findElement(By.linkText(\"Recent Gadgets\")).getText(),\n                 \"Home Page error: Recent Gadgets links missing\");\n         assertEquals(\"Recent Sites\", driver.findElement(By.linkText(\"Recent Sites\")).getText(),\n                 \"Home Page error: Recent Sites links missing\");\n         assertTrue(isElementPresent(By.id(\"search\")), \"Home Page error: Search missing\");\n         assertTrue(isElementPresent(By.cssSelector(\"div.span3.store-right > div.row > div.span3\")),\n                 \"Home Page error: Recent Added side list missing\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonHomePageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testAnonNavigationTop_928", "method name": "test Anon Navigation Top", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Anonymous Navigation from top menu\")"], "url": true, "content": "    public void function() throws Exception {\n         //test menu navigation\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[1]/li\")).click();\n         assertEquals(LINE_PLUS_BAR_CHART, driver.findElement(By.xpath(\"//h4[contains(.,\" + LINE_PLUS_BAR_CHART + \"')]\"))\n                 .getText(), \"Gadgets Menu not working\");\n         driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[2]/li\")).click();\n         assertEquals(AMAZON, driver.findElement(By.xpath(\"//h4[contains(.,\" + AMAZON + \"')]\")).getText(),\n                 \"Sites Menu not working\");\n         driver.findElement(By.cssSelector(\"a.brand\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonHomePageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testAnonNavigationLinks_929", "method name": "test Anon Navigation Links", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Anonymous Navigation page links\")"], "url": true, "content": "    public void function() throws Exception {\n         //test link navigation\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.cssSelector(\"a.brand\")).click();\n         driver.findElement(By.linkText(\"Recent Gadgets\")).click();\n         assertEquals(LINE_CHART, driver.findElement(By.xpath(\"//h4[contains(.,'\" + LINE_CHART + \"')]\")).getText(),\n                 \"Recent Gadgets link not working\");\n         driver.findElement(By.cssSelector(\"a.brand\")).click();\n         driver.findElement(By.linkText(\"Recent Sites\")).click();\n         assertEquals(AMAZON, driver.findElement(By.xpath(\"//h4[contains(.,'\" + AMAZON + \"')]\")).getText(),\n                 \"Recent Sites link not working\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonHomePageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testAddAsset_930", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing adding a new asset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         driver.findElement(By.linkText(\"Add\")).click();\n         driver.findElement(By.name(\"overview_provider\")).clear();\n         driver.findElement(By.name(\"overview_provider\")).sendKeys(currentUserName);\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION);\n         driver.findElement(By.name(\"overview_createdtime\")).clear();\n         driver.findElement(By.name(\"overview_createdtime\")).sendKeys(ASSET_CREATED_TIME);\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(ASSET_CATEGORY_1);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_1);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_1);\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n \n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         //check if the created gadget is shown\n         assertTrue(isElementPresent(By.linkText(assetName)), \"Adding an asset failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherAddEditAssetTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testEditAsset_931", "method name": "test Edit Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing editing an asset\", dependsOnMethods = \"testAddAsset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         driver.findElement(By.linkText(assetName)).click();\n         driver.findElement(By.linkText(\"Edit\")).click();\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(ASSET_CATEGORY_2);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_2);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_2);\n         driver.findElement(By.id(\"editAssetButton\")).click();\n         closeAlertAndGetItsText();\n \n         //check updated info\n         driver.findElement(By.linkText(\"Overview\")).click();\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"h4\")).getText());\n         assertEquals(currentUserName, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr/td[2]\")).getText(),\n                 \"Incorrect provider\");\n         assertEquals(assetName, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[2]/td[2]\")).getText(),\n                 \"Incorrect asset name\");\n         assertEquals(ASSET_VERSION, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[3]/td[2]\")).getText(),\n                 \"Incorrect version\");\n         assertEquals(ASSET_CATEGORY_2, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[5]/td[2]\")).getText(),\n                 \"Incorrect Category\");\n         assertEquals(ASSET_URL_2, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[6]/td[2]\")).getText(),\n                 \"Incorrect URL\");\n         assertEquals(ASSET_DESCRIPTION_2, driver.findElement(By.xpath\n                 (\"//div[@id='view']/div[2]/div/div/div[2]/table[2]/tbody/tr[7]/td[2]\")).getText(),\n                 \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherAddEditAssetTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testESPublisherNewGlobalPageTestCase_932", "method name": "test ES Publisher New Global Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test adding a new global page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/pages/servicex_global\");\n         assertTrue(isElementPresent(By.id(\"assetNewGlobalPage\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherNewGlobalPageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testESPublisherOverridenGlobalPageTestCase_933", "method name": "test ES Publisher Overriden Global Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding a global page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/pages/splash\");\n         assertTrue(isElementPresent(By.id(\"assetOverridenGlobalPage\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherOverridenGlobalPageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testSubscriptionCreation_934", "method name": "test Subscription Creation", "comments": ["Test(groups = \"wso2.es\", description = \"Check if subscriptions are created\", enabled = true)"], "url": true, "content": "    public void function() throws Exception {\n         //add new gadget\n         AssetUtil.addNewAsset(driver, baseUrl, ASSET_TYPE, currentUserName, assetName,\n                 ASSET_VERSION, CREATED_TIME);\n         if (isAlertPresent()) {\n             closeAlertAndGetItsText();\n         }\n         //navigate to admin console\n         driver.get(baseUrl + \"/carbon/\");\n         driver.findElement(By.linkText(\"Gadgets\")).click();\n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(assetName)).click();\n         //check two subscriptions\n         String subscription1 = driver.findElement(By.cssSelector(\"#subscriptionsTable > tbody > \" +\n                 \"tr.tableOddRow > td\")).getText();\n         String subscription2 = driver.findElement(By.xpath\n                 (\"//table[@id='subscriptionsTable']/tbody/tr[3]/td\")).getText();\n         String subscription1Name;\n         String subscription2Name;\n         //used to make the test independent of the subscription creation order\n         if (LC_SUBSCRIPTION.equalsIgnoreCase(subscription1)) {\n             subscription1Name = LC_SUBSCRIPTION;\n             subscription2Name = UPDATE_SUBSCRIPTION;\n         } else {\n             subscription1Name = UPDATE_SUBSCRIPTION;\n             subscription2Name = LC_SUBSCRIPTION;\n         }\n         assertEquals(subscription1Name, subscription1);\n         assertEquals(subscription2Name, subscription2);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherSubscriptionTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testUpdateNotification_935", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update event\","], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         AssetUtil.updateAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_DESCRIPTION);\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         //read email using smtp\n         boolean hasMail = ESUtil.containsEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, updateNotificationSubject);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherTenantNotificationTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testESStoreAssetNewPageTestCase_936", "method name": "test ES Store Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"New page added via extensions test case\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/asts/servicex/new_page\");\n         assertTrue(isElementPresent(By.id(\"assetNewPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreAssetNewPageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testAddPostTc2_937", "method name": "test Add Post Tc2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"user1\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     driver.findElement(By.linkText(\"Categorie1\")).click();\n     driver.findElement(By.linkText(\"TestAddTopic1\")).click();\n     driver.findElement(By.linkText(\"Post\")).click();\n     assertTrue(\"The Content field is required.\".equals(driver.findElement(By.id(\"secondMessagePanel\")).findElement(By.tagName(\"td\")).getText().trim()));\n   }\n", "path": "test/AddPostTc2Test.java", "repo name": "thedarkmammouth/jeef"}
{"repo_name": "testDelPostTc1_938", "method name": "test Del Post Tc1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"admin\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     driver.findElement(By.linkText(\"Categorie1\")).click();\n     driver.findElement(By.linkText(\"TestDelPost\")).click();\n     driver.findElement(By.linkText(\"Delete\")).click();\n     assertTrue(closeAlertAndGetItsText().matches(\"^Are you sure[\\\\s\\\\S]$\"));\n     assertTrue(driver.findElements(By.linkText(\"Delete\")).isEmpty());\n   }\n", "path": "test/DelPostTc1Test.java", "repo name": "thedarkmammouth/jeef"}
{"repo_name": "testEditPostTc1_939", "method name": "test Edit Post Tc1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"moderator\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     driver.findElement(By.linkText(\"Categorie1\")).click();\n     driver.findElement(By.linkText(\"TestEditPost\")).click();\n     driver.findElement(By.linkText(\"Edit\")).click();\n     driver.findElement(By.id(\"form:btnEdit\")).clear();\n     driver.findElement(By.id(\"form:btnEdit\")).sendKeys(\"PostChanged\");\n     driver.findElement(By.linkText(\"Save\")).click();\n     driver.findElement(By.linkText(\"Edit\")).click();\n     assertTrue(\"PostChanged\".equals(driver.findElement(By.id(\"form:btnEdit\")).getText().trim()));\n   }\n", "path": "test/EditPostTc1Test.java", "repo name": "thedarkmammouth/jeef"}
{"repo_name": "testSignInTc1_940", "method name": "test Sign In Tc1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"user1\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     assertTrue(driver.findElement(By.id(\"currentUsername\")).getText().trim().equals(\"USER1\"));\n   }\n", "path": "test/SignInTc1Test.java", "repo name": "thedarkmammouth/jeef"}
{"repo_name": "testSignInTc2_941", "method name": "test Sign In Tc2", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"user1\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n \n     assertTrue(\"The Password field is required.\".equals(driver.findElement(By.id(\"secondMessagePanel\")).findElement(By.tagName(\"td\")).getText().trim()));\n   }\n", "path": "test/SignInTc2Test.java", "repo name": "thedarkmammouth/jeef"}
{"repo_name": "testSignUpTc1_942", "method name": "test Sign Up Tc1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n     driver.findElement(By.id(\"signup:username\")).clear();\n     driver.findElement(By.id(\"signup:username\")).sendKeys(\"user2\");\n     driver.findElement(By.id(\"signup:email\")).clear();\n     driver.findElement(By.id(\"signup:email\")).sendKeys(\"user2@user2.com\");\n     driver.findElement(By.id(\"signup:password\")).clear();\n     driver.findElement(By.id(\"signup:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signup:confirm\")).clear();\n     driver.findElement(By.id(\"signup:confirm\")).sendKeys(\"123456\");\n     //Thread.sleep(1000);\n     \n     driver.findElement(By.name(\"signup:btnSignup\")).click();\n     driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);\n     assertTrue(\"User was successfully created.\".equals(driver.findElement(By.id(\"messagePanel\")).findElement(By.tagName(\"td\")).getText().trim()));\n     \n   }\n", "path": "test/SignUpTc1Test.java", "repo name": "thedarkmammouth/jeef"}
{"repo_name": "testPinTopicTc1_943", "method name": "test Pin Topic Tc1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"moderator\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     driver.findElement(By.linkText(\"Categorie1\")).click();\n     driver.findElement(By.linkText(\"Pin\")).click();\n     driver.findElement(By.linkText(\"Unpin\")).click();\n     driver.findElement(By.linkText(\"Pin\")).click();\n   }\n", "path": "test/PinTopicTc1Test.java", "repo name": "thedarkmammouth/jeef"}
{"repo_name": "testPinTopicTc1_944", "method name": "test Pin Topic Tc1", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"Login\")).click();\n     driver.findElement(By.id(\"signin:username\")).clear();\n     driver.findElement(By.id(\"signin:username\")).sendKeys(\"moderator\");\n     driver.findElement(By.id(\"signin:password\")).clear();\n     driver.findElement(By.id(\"signin:password\")).sendKeys(\"123456\");\n     driver.findElement(By.id(\"signin:btnSignin\")).click();\n     driver.findElement(By.linkText(\"Categorie1\")).click();\n     driver.findElement(By.linkText(\"Unpin\")).click();\n   }\n", "path": "test/UnPinTopicTc1Test.java", "repo name": "thedarkmammouth/jeef"}
{"repo_name": "OpenTargetURL_945", "method name": "Open Target URL", "comments": [], "url": true, "content": "    public void function(WebDriver driver, String url) {\n         driver.get(url);\n         System.out.println(\"Start to open the url : \" + url);\n     }\n", "path": "UPT_AUTO/src/test/java/com/jd/libra/BPT_Auto/PageFactory/CommonPageModel.java", "repo name": "MarcusChang/Repo-JETS"}
{"repo_name": "handleFormWithJavascriptAction_946", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, SAFARI, SELENESE, OPERA_MOBILE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "bwp/SeleniumWebDriver"}
{"repo_name": "testInitialLogin_947", "method name": "test Initial Login", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         // create new user and first blog\n         driver.get(baseUrl);\n         final SetupPage setup = new SetupPage(driver);\n         setup.initStep1();\n         setup.initStep2();\n         setup.initStep3();\n         setup.initStep4(\"test_user\", \"demo@encuestame.org\", \"demo@encuestame.org\", \"12345678\", \"12345678\");\n         setup.initStep5();\n         setup.initStep6();\n         assertEquals(true, true);\n     }\n", "path": "enme-war/web-app/selenium-test/src/test/java/org/encuestame/selenium/InitialHomeTestIT.java", "repo name": "encuestame/encuestame"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_948", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": ["Ignore({IE, CHROME, SELENESE, IPHONE})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     driver.get(url);\n \n     // This should work\n     assertThat(driver.getTitle(), equalTo(\"Hello WebDriver\"));\n   }\n", "path": "common/test/java/org/openqa/selenium/PageLoadingTest.java", "repo name": "mfazekas/safaridriver"}
{"repo_name": "testShouldNotBeAbleToSetDomainToSomethingThatIsUnrelatedToTheCurrentDomain_949", "method name": "test Should Not Be Able To Set Domain To Something That Is Unrelated To The Current Domain", "comments": ["Ignore(SELENESE)"], "url": true, "content": "  public void function() {\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\");\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"simpleTest.html\");\n     driver.get(url);\n \n     Cookie cookie = options.getCookieNamed(\"fish\");\n     assertNull(String.valueOf(cookie), cookie);\n   }\n", "path": "common/test/java/org/openqa/selenium/CookieImplementationTest.java", "repo name": "mfazekas/safaridriver"}
{"repo_name": "testGetCookieDoesNotRetriveBeyondCurrentDomain_950", "method name": "test Get Cookie Does Not Retrive Beyond Current Domain", "comments": ["Ignore(SELENESE)"], "url": true, "content": "  public void function() {\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\");\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"\");\n     driver.get(url);\n \n     Set<Cookie> cookies = options.getCookies();\n     assertFalse(cookies.contains(cookie1));\n   }\n", "path": "common/test/java/org/openqa/selenium/CookieImplementationTest.java", "repo name": "mfazekas/safaridriver"}
{"repo_name": "testCookieIntegrity_951", "method name": "test Cookie Integrity", "comments": ["Ignore({SELENESE, IE})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"animals\");\n \n     driver.get(url);\n     driver.manage().deleteAllCookies();\n \n     long time = System.currentTimeMillis() + (60 * 60 * 24);\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\", \"/common/animals\", new Date(time));\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     Set<Cookie> cookies = options.getCookies();\n     Iterator<Cookie> iter = cookies.iterator();\n     Cookie retrievedCookie = null;\n     while (iter.hasNext()) {\n       Cookie temp = iter.next();\n \n       if (cookie1.equals(temp)) {\n         retrievedCookie = temp;\n         break;\n       }\n     }\n \n     assertNotNull(retrievedCookie);\n     //Cookie.equals only compares name, domain and path\n     assertEquals(cookie1, retrievedCookie);\n   }\n", "path": "common/test/java/org/openqa/selenium/CookieImplementationTest.java", "repo name": "mfazekas/safaridriver"}
{"repo_name": "the_home_page_url_952", "method name": "the home page url", "comments": ["Given(\"^The home page url$\")"], "url": true, "content": "    public void function() {\n         driver = new HtmlUnitDriver();\n         driver.get(baseUrl);\n  \n     }\n", "path": "taskstrategy/task-cucumber/src/test/java/com/taskstrategy/WebSteps.java", "repo name": "abenzzine/taskstrategy"}
{"repo_name": "testForSignin1_953", "method name": "test For Signin1", "comments": ["Given(\"^testSign$\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/\");\n         driver.findElement(By.id(\"email\")).clear();\n         driver.findElement(By.id(\"email\")).sendKeys(\"admin\");\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(\"admin\");\n         driver.findElement(By.id(\"signin\")).click();\n     }\n", "path": "taskstrategy/task-cucumber/src/test/java/com/taskstrategy/WebSteps.java", "repo name": "abenzzine/taskstrategy"}
{"repo_name": "handleFormWithJavascriptAction_954", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, PHANTOMJS, SAFARI, OPERA_MOBILE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "lummyare/lummyare-test"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_955", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "lummyare/lummyare-test"}
{"repo_name": "testSubscriptionCreation_956", "method name": "test Subscription Creation", "comments": ["Test(groups = \"wso2.es\", description = \"Check if subscriptions are created\", enabled = true)"], "url": true, "content": "    public void function() throws Exception {\n         //add new gadget\n         AssetUtil.addNewAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_VERSION, \"\", \"\", \"\");\n         if (isAlertPresent(driver)) {\n             closeAlertAndGetItsText(driver, true);\n         }\n         //navigate to admin console\n         driver.get(baseUrl + \"/carbon/\");\n         driver.findElement(By.linkText(\"Gadgets\")).click();\n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(assetName)).click();\n         //check two subscriptions\n         String subscription1 = driver.findElement(By.cssSelector(\"#subscriptionsTable > tbody > \" +\n                 \"tr.tableOddRow > td\")).getText();\n         String subscription2 = driver.findElement(By.xpath\n                 (\"//table[@id='subscriptionsTable']/tbody/tr[3]/td\")).getText();\n         String subscription1Name;\n         String subscription2Name;\n         //used to make the test independent of the subscription creation order\n         if (LC_SUBSCRIPTION.equalsIgnoreCase(subscription1)) {\n             subscription1Name = LC_SUBSCRIPTION;\n             subscription2Name = UPDATE_SUBSCRIPTION;\n         } else {\n             subscription1Name = UPDATE_SUBSCRIPTION;\n             subscription2Name = LC_SUBSCRIPTION;\n         }\n         assertEquals(subscription1Name, subscription1);\n         assertEquals(subscription2Name, subscription2);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherSubscriptionTestCase.java", "repo name": "rajeenthini/product-es"}
{"repo_name": "testUpdateNotification_957", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update event\","], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         AssetUtil.updateAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_DESCRIPTION);\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         //read email using smtp\n         boolean hasMail = ESUtil.containsEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, updateNotificationSubject);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherTenantNotificationTestCase.java", "repo name": "rajeenthini/product-es"}
{"repo_name": "testESPublishToStore_958", "method name": "test ES Publish To Store", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing Publishing an asset to store\")"], "url": true, "content": "    public void function() throws Exception {\n         //Add a new gadget with info\n         driver.findElement(By.linkText(\"Add \" + ASSET_TYPE)).click();\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(ASSET_NAME);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION);\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n         if (isAlertPresent(driver)) {\n             closeAlertAndGetItsText(driver, true);\n         }\n         //publish the gadget to store\n         driver.findElementPoll(By.linkText(ASSET_NAME), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(ASSET_NAME)).click();\n         driver.findElement(By.linkText(\"Life Cycle\")).click();\n \n         driver.findElement(By.id(\"In-Review\")).click();\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(LC_COMMENT);\n         driver.findElement(By.id(\"commentModalSave\")).click();\n \n         driver.get(driver.getCurrentUrl());\n         driver.findElement(By.id(\"Published\")).click();\n         driver.findElement(By.id(\"commentModalText\")).clear();\n         driver.findElement(By.id(\"commentModalText\")).sendKeys(LC_COMMENT);\n         driver.findElement(By.id(\"commentModalSave\")).click();\n         //navigate to store to check the published gadget\n         driver.get(baseUrl + STORE_URL);\n         driver.findElementPoll(By.xpath(\"//a[contains(.,'\" + ASSET_NAME + \"')]\"), 5);\n         assertEquals(ASSET_NAME, driver.findElement(By.cssSelector(\"h4\")).getText());\n         driver.findElement(By.cssSelector(\"div.asset-author-category > ul > li\")).click();\n         assertEquals(ASSET_NAME, driver.findElement(By.cssSelector(\"h3\")).getText());\n         assertEquals(ASSET_DESCRIPTION, driver.findElement(By.cssSelector(\"p\")).getText());\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESPublishToStore.java", "repo name": "rajeenthini/product-es"}
{"repo_name": "testBaseURLExternalLinks_959", "method name": "test Base URL External Links", "comments": ["Test //testBaseURLExternalLinks"], "url": true, "content": "    public void function() throws Exception {\n \t\ttry {\n \t\t\tdriver.get(baseUrl);\n \t\t\tjava.util.List<WebElement> links = driver.findElements(By.tagName(\"a\"));\n \t\t\tHashSet hset = new HashSet();\n \t\t\tint lcv = 0;\n \t\t\tfor (int i=0; i<links.size(); i++) {\n \t\t\t\tString href = links.get(i).getAttribute(\"href\");\n \t\t\t\tif (href != null && href.length()>0) {\n \t\t\t\t\tif (!hset.contains(href)) {\n \t\t\t\t\t\thset.add(href);\n \t\t\t\t\t}\n \t\t\t    }\n \t\t\t}\n \t\t\tIterator it = hset.iterator();\n \t\t\twhile (it.hasNext()) {\n \t\t\t\tString href = (String) it.next();\n \t\t\t\tif (!href.startsWith(baseUrl)) {\n \t\t\t\t\tlcv++;\n \t\t\t\t\tint responseCode = getHTTPResponseCode(href);\n \t\t\t\t\tSystem.out.println(\"(\" + lcv + \") \" + href + \" (response code: \" + responseCode + \")\");\n \t\t\t\t\tassertTrue(responseCode == 200);\n \t\t\t\t}\n \t\t\t}\n \t    } catch (Exception ex) {\n             ex.printStackTrace();\n             assertTrue(false);\n \t\t}\n \t\tassertTrue(true);\n \t}\n", "path": "software/junit-test/output/TestTermBrowserTestCase.java", "repo name": "NCIEVS/nci-term-browser"}
{"repo_name": "testNCIHomeFooter_960", "method name": "test NCI Home Footer", "comments": ["Test // (testNCIHomeFooter)"], "url": true, "content": "    public void function() throws Exception {\n \t\tString bodyText = null;\n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(1000);\n \t\ttry {\n \t\t    popUpWindow(\"NCI Home\");\n \t\t    assertTrue(true);\n \t\t} catch (Exception ex) {\n \t\t    assertTrue(false);\n         }\n     }\n", "path": "software/junit-test/output/TestTermBrowserTestCase.java", "repo name": "NCIEVS/nci-term-browser"}
{"repo_name": "testPoliciesFooter_961", "method name": "test Policies Footer", "comments": ["Test // (testPoliciesFooter)"], "url": true, "content": "    public void function() throws Exception {\n \t\tString bodyText = null;\n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(1000);\n \t\ttry {\n \t\t    popUpWindow(\"Policies\");\n \t\t    assertTrue(true);\n \t\t} catch (Exception ex) {\n \t\t    assertTrue(false);\n         }\n     }\n", "path": "software/junit-test/output/TestTermBrowserTestCase.java", "repo name": "NCIEVS/nci-term-browser"}
{"repo_name": "testAccessibilityFooter_962", "method name": "test Accessibility Footer", "comments": ["Test // (testAccessibilityFooter)"], "url": true, "content": "    public void function() throws Exception {\n \t\tString bodyText = null;\n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(1000);\n \t\ttry {\n \t\t    popUpWindow(\"Accessibility\");\n \t\t    assertTrue(true);\n \t\t} catch (Exception ex) {\n \t\t    assertTrue(false);\n         }\n     }\n", "path": "software/junit-test/output/TestTermBrowserTestCase.java", "repo name": "NCIEVS/nci-term-browser"}
{"repo_name": "testFOIAFooter_963", "method name": "test FOIA Footer", "comments": ["Test // (testFOIAFooter)"], "url": true, "content": "    public void function() throws Exception {\n \t\tString bodyText = null;\n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(1000);\n \t\ttry {\n \t\t    popUpWindow(\"FOIA\");\n \t\t    assertTrue(true);\n \t\t} catch (Exception ex) {\n \t\t    assertTrue(false);\n         }\n     }\n", "path": "software/junit-test/output/TestTermBrowserTestCase.java", "repo name": "NCIEVS/nci-term-browser"}
{"repo_name": "testContactUsFooter_964", "method name": "test Contact Us Footer", "comments": ["Test // (testContactUsFooter)"], "url": true, "content": "    public void function() throws Exception {\n \t\tString bodyText = null;\n \t\tdriver.get(baseUrl);\n \t\tThread.sleep(1000);\n \t\ttry {\n \t\t    popUpWindow(\"Contact Us\");\n \t\t    assertTrue(true);\n \t\t} catch (Exception ex) {\n \t\t    assertTrue(false);\n         }\n     }\n", "path": "software/junit-test/output/TestTermBrowserTestCase.java", "repo name": "NCIEVS/nci-term-browser"}
{"repo_name": "printWindowUtils_965", "method name": "print Window Utils", "comments": [], "url": true, "content": "   public static void function(PrintWriter out) {\n \t  out.println(\"\\n\");\n       out.println(\"\tpublic void popUpWindow(String wndLabel) throws Exception {\");\n       out.println(\"\t\tdriver.findElement(By.linkText(wndLabel)).click();\");\n       out.println(\"\t\tThread.sleep(8000);\");\n       out.println(\"\t\tString windowTitle= getCurrentWindowTitle();\");\n       out.println(\"\t\tThread.sleep(1000);\");\n       out.println(\"\t\tString mainWindow = getMainWindowHandle(driver);\");\n       out.println(\"\t\tThread.sleep(1000);\");\n       out.println(\"\t\tcloseAllOtherWindows(mainWindow);\");\n       out.println(\"\t}\");\n       out.println(\"\");\n       out.println(\"\tpublic String getMainWindowHandle(WebDriver driver) {\");\n       out.println(\"\t\treturn driver.getWindowHandle();\");\n       out.println(\"\t}\");\n       out.println(\"\");\n       out.println(\"\tpublic String getCurrentWindowTitle() {\");\n       out.println(\"\t\tString windowTitle = driver.getTitle();\");\n       out.println(\"\t\treturn windowTitle;\");\n       out.println(\"\t}\");\n       out.println(\"\");\n       out.println(\"\tpublic boolean closeAllOtherWindows(String openWindowHandle) {\");\n       out.println(\"\t\tSet<String> allWindowHandles = driver.getWindowHandles();\");\n       out.println(\"\t\tfor (String currentWindowHandle : allWindowHandles) {\");\n       out.println(\"\t\t\tif (!currentWindowHandle.equals(openWindowHandle)) {\");\n       out.println(\"\t\t\t\tdriver.switchTo().window(currentWindowHandle);\");\n       out.println(\"\t\t\t\tdriver.close();\");\n       out.println(\"\t\t\t}\");\n       out.println(\"\t\t}\");\n       out.println(\"\");\n       out.println(\"\t\tdriver.switchTo().window(openWindowHandle);\");\n       out.println(\"\t\tif (driver.getWindowHandles().size() == 1)\");\n       out.println(\"\t\t\treturn true;\");\n       out.println(\"\t\telse\");\n       out.println(\"\t\t\treturn false;\");\n       out.println(\"\t}\");\n       out.println(\"\");\n \n       out.println(\"    public String getPopupWindowBodyText(WebDriver driver) {\");\n       out.println(\"\t\tString parentWindowHandler = driver.getWindowHandle();\");\n       out.println(\"\t\tString subWindowHandler = null;\");\n       out.println(\"\t\tSet<String> handles = driver.getWindowHandles();\");\n       out.println(\"\t\tIterator<String> iterator = handles.iterator();\");\n       out.println(\"\t\twhile (iterator.hasNext()){\");\n       out.println(\"\t\t\tsubWindowHandler = iterator.next();\");\n       out.println(\"\t\t}\");\n       out.println(\"\t\tdriver.switchTo().window(subWindowHandler);\");\n       out.println(\"\t\tString bodyText = driver.findElement(By.tagName(\\\"body\\\")).getText();\");\n       out.println(\"\t\tdriver.switchTo().window(parentWindowHandler);\");\n       out.println(\"\t\treturn bodyText;\");\n       out.println(\"\t}\");\n       out.println(\"\");\n \n \t   out.println(\"\tpublic boolean containsText(String text) {\");\n \t   out.println(\"\t    try {\");\n \t   out.println(\"\t\t    if (driver.findElement(By.xpath(\\\"//*[contains(.,'\\\" + text + \\\"')]\\\")) != null) {\");\n \t   out.println(\"\t\t        return true;\");\n \t   out.println(\"\t\t    }\");\n \t   out.println(\"\t\t} catch (Exception e) {\");\n \t   out.println(\"\t\t    return false;\");\n \t   out.println(\"\t    }\");\n \t   out.println(\"\t    return false;\");\n \t   out.println(\"\t}\");\n \t   out.println(\"\");\n \n \t   out.println(\"    public void goBack() {\");\n \t   out.println(\"\t\tdriver.navigate().back();\");\n \t   out.println(\"\t}\");\n \t   out.println(\"\");\n \n \t   out.println(\"\tpublic void navigateTo(String url) {\");\n \t   out.println(\"\t\tdriver.get(url);\");\n \t   out.println(\"\t}\");\n \t   out.println(\"\");\n \t   out.println(\"\");\n \t   out.println(\"    public void maximizeWindow() {\");\n \t   out.println(\"\t\tdriver.manage().window().maximize();\");\n \t   out.println(\"\t}\");\n \t   out.println(\"\");\n    }\n", "path": "software/junit-test/src/gov/nih/nci/evs/testUtil/BaseUITestGenerator.java", "repo name": "NCIEVS/nci-term-browser"}
{"repo_name": "getWebDriver_966", "method name": "get Web Driver", "comments": [], "url": true, "content": "  static WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n           // run with DISPLAY 99\n         }\n         int firefoxVersion = WebDriverManager.getFirefoxVersion();\n         LOG.info(\"Firefox version \" + firefoxVersion + \" detected\");\n \n         downLoadsDir = FileUtils.getTempDirectory().toString();\n \n         String tempPath = downLoadsDir + \"/firebug/\";\n \n         downloadFireBug(firefoxVersion, tempPath);\n \n         final String firebugPath = tempPath + \"firebug.xpi\";\n         final String firepathPath = tempPath + \"firepath.xpi\";\n \n         FirefoxProfile profile = new FirefoxProfile();\n         profile.setPreference(\"browser.download.folderList\", 2);\n         profile.setPreference(\"browser.download.dir\", downLoadsDir);\n         profile.setPreference(\"browser.helperApps.alwaysAsk.force\", false);\n         profile.setPreference(\"browser.download.manager.showWhenStarting\", false);\n         profile.setPreference(\"browser.download.manager.showAlertOnComplete\", false);\n         profile.setPreference(\"browser.download.manager.closeWhenDone\", true);\n         profile.setPreference(\"app.update.auto\", false);\n         profile.setPreference(\"app.update.enabled\", false);\n         profile.setPreference(\"dom.max_script_run_time\", 0);\n         profile.setPreference(\"dom.max_chrome_script_run_time\", 0);\n         profile.setPreference(\"browser.helperApps.neverAsk.saveToDisk\", \"application/x-ustar,application/octet-stream,application/zip,text/csv,text/plain\");\n         profile.setPreference(\"network.proxy.type\", 0);\n \n         profile.addExtension(new File(firebugPath));\n         profile.addExtension(new File(firepathPath));\n \n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/WebDriverManager.java", "repo name": "elbamos/Zeppelin-With-R"}
{"repo_name": "getHtmlPage_967", "method name": "get Html Page", "comments": [], "url": true, "content": "  public static String function(String url, Configuration conf) {\n     WebDriver driver = null;\n \n     try {\n       driver = new FirefoxDriver();\n       //} WebDriver driver = threadWebDriver.get();\n       //  if (driver == null) {\n       //    driver = new FirefoxDriver();\n       //  }\n \n       driver.get(url);\n \n       // Wait for the page to load, timeout after 3 seconds\n       new WebDriverWait(driver, 3);\n \n       String innerHtml = driver.findElement(By.tagName(\"body\")).getAttribute(\"innerHTML\");\n \n       return innerHtml;\n \n       // I'm sure this catch statement is a code smell ; borrowing it from lib-htmlunit\n     } catch (Exception e) {\n       throw new RuntimeException(e);\n     } finally {\n       if (driver != null) try { driver.quit(); } catch (Exception e) { throw new RuntimeException(e); }\n     }\n", "path": "src/plugin/lib-selenium/src/java/org/apache/nutch/protocol/selenium/HttpWebClient.java", "repo name": "gitriver/nutch-learning"}
{"repo_name": "openTestURL_968", "method name": "open Test URL", "comments": [], "url": true, "content": "    private void function(Class<?> uiClass, Set<String> parameters) {\n         String url = getTestURL(uiClass);\n \n         if (isDebug()) {\n             parameters.add(\"debug\");\n         }\n \n         if (LegacyApplication.class.isAssignableFrom(uiClass)) {\n             parameters.add(\"restartApplication\");\n         }\n \n         if (parameters.size() > 0) {\n             url += \"?\" + StringUtils.join(parameters, \"&\");\n         }\n \n         driver.get(url);\n     }\n", "path": "uitest/src/test/java/com/vaadin/tests/tb3/AbstractTB3Test.java", "repo name": "jdahlstrom/vaadin.react"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_969", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "lummyare/lummyare-lummy"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_970", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lummyare/lummyare-lummy"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_971", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     waitFor(WaitingConditions.pageTitleToBe(driver, \"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lummyare/lummyare-lummy"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_972", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, FIREFOX, HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     waitFor(WaitingConditions.pageTitleToBe(driver, \"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lummyare/lummyare-lummy"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_973", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     waitFor(WaitingConditions.pageTitleToBe(driver, \"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "lummyare/lummyare-lummy"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_974", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "bootstraponline/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_975", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, IE, PHANTOMJS, SAFARI, MARIONETTE})", "NotYetImplemented(HTMLUNIT)", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "bootstraponline/selenium"}
{"repo_name": "getPageSource_976", "method name": "get Page Source", "comments": [], "url": true, "content": "    public String function(final String url) throws TimeoutException {\n \n         // Make the Selenium WebDriver logs be quiet\n         phantomJsLogger.setLevel(Level.OFF);\n \n         DesiredCapabilities desiredCapabilities = DesiredCapabilities.phantomjs();\n         // What other CLI args there are: http://phantomjs.org/api/command-line.html\n         // Where the cache goes on Mac OS X: ~/Library/Application\\ Support/Ofi\\ Labs/PhantomJS/\n         // Other cache locations: https://groups.google.com/forum/#!topic/phantomjs/8GYaXKmowj0\n         desiredCapabilities.setCapability(\n             PhantomJSDriverService.PHANTOMJS_CLI_ARGS,\n             new String[] {\"--ignore-ssl-errors=yes\", \"--load-images=no\",\n                           \"--disk-cache=true\", \"--max-disk-cache-size=size=51200\"\n                          });\n         final WebDriver driver = new PhantomJSDriver(desiredCapabilities);\n \n         // doesn't work, keep as reference.\n         //driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         try {\n             Thread t = new Thread(new Runnable() {\n                 @Override\n                 public void run() {\n                     driver.get(url);\n                 }\n             });\n             t.start();\n             try {\n                 t.join(timeoutMillis);\n             } catch (InterruptedException e) {\n             }\n             if (t.isAlive()) {\n                 System.out.println(\"Timeout for HTTP GET to: \" + url);\n                 t.interrupt();\n                 throw new TimeoutException();\n             }\n             String pageSource = driver.getPageSource();\n             return pageSource;\n         } finally {\n             driver.quit();\n         }\n     }\n", "path": "src/main/java/com/asimihsan/handytrowel/network/HTMLFetcher.java", "repo name": "gangadhar001/handytrowel"}
{"repo_name": "handleFormWithJavascriptAction_977", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, HTMLUNIT, IPHONE, OPERA, PHANTOMJS, SAFARI, OPERA_MOBILE, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "pilwon/selenium-webdriver"}
{"repo_name": "testFirstDemo_978", "method name": "test First Demo", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"kw\")).click();\n     driver.findElement(By.id(\"kw\")).clear();\n     driver.findElement(By.id(\"kw\")).sendKeys(\"selenium\");\n     driver.findElement(By.id(\"su\")).click();\n   }\n", "path": "chapter8/SeleniumDesktop/src/FirstDemo.java", "repo name": "shiyimin/androidtestdebug"}
{"repo_name": "testFirstDemo_979", "method name": "test First Demo", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"kw\")).click();\n     driver.findElement(By.id(\"kw\")).clear();\n     driver.findElement(By.id(\"kw\")).sendKeys(\"selenium\");\n     driver.findElement(By.id(\"su\")).click();\n   }\n", "path": "chapter8/FirstDemo.java", "repo name": "shiyimin/androidtestdebug"}
{"repo_name": "testFirstDemo_980", "method name": "test First Demo", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.id(\"kw\")).click();\n     driver.findElement(By.id(\"kw\")).clear();\n     driver.findElement(By.id(\"kw\")).sendKeys(\"selenium\");\n     driver.findElement(By.id(\"su\")).click();\n   }\n", "path": "chapter8/SeleniumAndroid/src/FirstDemo.java", "repo name": "zbjumper/androidtestdebug"}
{"repo_name": "goToMainPage_981", "method name": "go To Main Page", "comments": [], "url": true, "content": "\tprivate void function() {\n \t\t// open main page\n \t\tdriver.get(baseUrl + \"/WebTours/\");\n \t}\n", "path": "workshop-selenium-project/src/com/lohika/example/tests/BookFlightTest.java", "repo name": "almyazin/selenium-junit-lr"}
{"repo_name": "shouldFlingViaCatapultConsoleButton_982", "method name": "should Fling Via Catapult Console Button", "comments": [" Ensures that a fling operation initiated from the HTML console", " is working as contracted", " @throws IOException", "Test", "RunAsClient", "InSequence(1)", "OperateOnDeployment(\"real\")"], "url": true, "content": "   public void function() throws IOException {\n \n       // Define the request URL\n       final String consoleUrl = this.getDeploymentUrl().toExternalForm();\n       log.info(\"Request URL: \" + consoleUrl);\n \n       // Execute the Fling URL which should perform all actions\n       driver.navigate().to(consoleUrl);\n \n       final File scrFile1 = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);\n       FileUtils.copyFile(scrFile1,\n               new File(\n                       \"target/\" +\n                               this.getClass().getSimpleName() +\n                               \"-1-consoleBeforeSubmission.png\"));\n \n       // Fill out the form and submit\n       final WebElement select = driver.findElement(By.id(\"flingSourceRepo\"));\n       final List<WebElement> options = select.findElements(By.tagName(\"option\"));\n       for(final WebElement option : options){\n          if(option.getAttribute(\"value\").equals(this.getSourceRepo())){\n             option.click();\n             break;\n          }\n       }\n       final WebElement submit = driver.findElement(By.id(\"flingSubmitButton\"));\n       submit.click();\n \n       // Do OAuth\n       GitHubResourceIT.performGitHubOAuth(\n               driver);\n \n       // Ensure we end up in the right place\n       final File scrFile2 = ((TakesScreenshot)driver).getScreenshotAs(OutputType.FILE);\n       FileUtils.copyFile(scrFile2,\n               new File(\n                       \"target/\" +\n                               this.getClass().getSimpleName() +\n                               \"-2-consoleAfterSubmission.png\"));\n       this.assertLanding(driver);\n    }\n", "path": "tests/src/test/java/org/kontinuity/catapult/test/CatapultConsoleIT.java", "repo name": "redhat-kontinuity/catapult"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_983", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["Ignore(IE)"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")) .getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "common/test/java/org/openqa/selenium/I18nTest.java", "repo name": "brownman/selenium-webdriver"}
{"repo_name": "testCreateEventJUnit4_984", "method name": "test Create Event J Unit4", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/\");\n     driver.findElement(By.linkText(\"inputLogin using your gmail account\")).click();\n     driver.findElement(By.id(\"Email\")).clear();\n     driver.findElement(By.id(\"Email\")).sendKeys(\"harshithachidanand\");\n     driver.findElement(By.id(\"next\")).click();\n     driver.findElement(By.id(\"Passwd\")).clear();\n     driver.findElement(By.id(\"Passwd\")).sendKeys(\"\");\n     driver.findElement(By.id(\"next\")).click();\n     driver.findElement(By.id(\"eventName\")).clear();\n     driver.findElement(By.id(\"eventName\")).sendKeys(\"New events\");\n     driver.findElement(By.id(\"eventTagline\")).clear();\n     driver.findElement(By.id(\"eventTagline\")).sendKeys(\"New is awesome\");\n     driver.findElement(By.xpath(\"//table[@id='eventDate_table']/tbody/tr[3]/td[6]/div\")).click();\n     driver.findElement(By.cssSelector(\"button.btn-flat.picker__close\")).click();\n     driver.findElement(By.id(\"eventTime\")).clear();\n     driver.findElement(By.id(\"eventTime\")).sendKeys(\"9:00AM\");\n     driver.findElement(By.id(\"duration\")).clear();\n     driver.findElement(By.id(\"duration\")).sendKeys(\"2 hours\");\n     driver.findElement(By.cssSelector(\"input.select-dropdown.active\")).click();\n     driver.findElement(By.cssSelector(\"li.active > span\")).click();\n     driver.findElement(By.cssSelector(\"input.select-dropdown.active\")).click();\n     driver.findElement(By.cssSelector(\"#select-options-815bcc23-dabb-d8e7-0c54-cc604715e2d4 > li.active > span\")).click();\n     driver.findElement(By.cssSelector(\"input.select-dropdown.active\")).click();\n     driver.findElement(By.cssSelector(\"#select-options-091efa9b-6d5f-ef96-ae17-69722f5ba9b7 > li.active > span\")).click();\n     driver.findElement(By.cssSelector(\"input.select-dropdown.active\")).click();\n     driver.findElement(By.cssSelector(\"#select-options-7ed503fc-e8cb-c3b8-0752-c157b27088ea > li.active > span\")).click();\n     driver.findElement(By.id(\"capacity\")).clear();\n     driver.findElement(By.id(\"capacity\")).sendKeys(\"90\");\n     driver.findElement(By.id(\"location\")).clear();\n     driver.findElement(By.id(\"location\")).sendKeys(\"HFH\");\n     driver.findElement(By.id(\"description\")).clear();\n     driver.findElement(By.id(\"description\")).sendKeys(\"yep! come n see what new\");\n     driver.findElement(By.id(\"createrName\")).clear();\n     driver.findElement(By.id(\"createrName\")).sendKeys(\"Harshitha\");\n     driver.findElement(By.id(\"createrEmail\")).clear();\n     driver.findElement(By.id(\"createrEmail\")).sendKeys(\"har@gmail.com\");\n     driver.findElement(By.name(\"action\")).click();\n     driver.findElement(By.xpath(\"//ul[@id='nav-mobile']/li[3]/a\")).click();\n     driver.findElement(By.linkText(\"call_madeSignout\")).click();\n   }\n", "path": "eventize/src/test/TestCreateEvent_JUnit4.java", "repo name": "harshithachidanand/cs263w16"}
{"repo_name": "testInitialEnme_985", "method name": "test Initial Enme", "comments": [" Initial", "Test"], "url": true, "content": "    public void function(){\n         System.out.println(\" ******  GETTING BASE URL ******\");\n         driver.get(baseUrl);\n         /**  -------  Test Home Page  ------ **/\n         HomePage enmeHomePage= new HomePage(driver);\n \n         // Test Home Menu navigations Links\n         enmeHomePage.navHomeMenuLinks();\n         System.out.println(\" ******  Navigation Home Links ******\");\n \n         // Test Home page Encuestame Logo link\n         enmeHomePage.verifyEnmeLogoLink();\n         System.out.println(\" ******  Enme Logo Link ******\");\n \n         // Test each Elements on Items\n         enmeHomePage.VerifiyElementsOnHomeItems();\n         System.out.println(\" ******  Verify Elements on Home Items ******\");\n \n         // Test Home page quick Search\n         enmeHomePage.homeQuickSearch();\n         System.out.println(\" ******  Home Quick Search ******\");\n \n         // Test Elements on Popular hashtags Block.\n         enmeHomePage.verifyElementsOnPopularHashtagsBlock();\n         System.out.println(\" ******  Verify Elements on Popular Hashtag Block ******\");\n \n         // Test Elements on Rated users Block.\n         enmeHomePage.verifiyElementsOnRatedUsersBlock();\n         System.out.println(\" ******  Verify Elements on Rated Users Block ******\");\n \n \n         /**  -------  Test Login Page  ------ **/\n         System.out.println(\" ******  GETTING BASE URL ******\");\n         driver.get(baseUrl);\n \n         LoginPage enmeLoginPage = new LoginPage(driver);\n         enmeLoginPage.recoverPassword();\n         System.out.println(\" ******  Recovering Password  ******\");\n \n         System.out.println(\" ******  GETTING BASE URL ******\");\n         driver.get(baseUrl);\n \n         enmeLoginPage.createAccount();\n         System.out.println(\" ****** Sign-up Create Account ******\");\n \n         enmeLoginPage.loginToEncuestame();\n         System.out.println(\" ****** Login To Encuestame ******\");\n \n \n         /**  -------  Test Team Page  ------ **/\n         TeamPage enmeTeamPage = new TeamPage(driver);\n \n         enmeTeamPage.membersAdministrator();\n         System.out.println(\" ******  Verify Members Administration Menu ******\");\n \n         enmeTeamPage.addUserDirectly();\n         System.out.println(\" ******  Add New User by Send Request  ******\");\n \n         enmeTeamPage.inviteUser();\n         System.out.println(\" ******  Add new User by Invitation email ******\");\n \n         enmeTeamPage.membersTablePagination();\n         System.out.println(\" ******  Verify Members table Pagination ******\");\n \n         enmeTeamPage.editUserPermissions();\n         System.out.println(\" ******  Edit User Permissions ******\");\n \n         enmeTeamPage.editUserPictureProfile();\n         System.out.println(\" ******  Edit User Picture profile ******\");\n \n         /**  -------  Test Dashboard Page  ------ **/\n         DashboardPage boardPage = new DashboardPage(driver);\n \n         boardPage.addGadgetToDashboard();\n         System.out.println(\" ******  Add Gadget to Dashboard ******\");\n \n         boardPage.changeToLayoutA();\n         System.out.println(\" ******  Change Dashboard Layout to Layout A ******\");\n \n         boardPage.changeToLayoutAA();\n         System.out.println(\" ******  Change Dashboard Layout to Layout AA ******\");\n \n         boardPage.changeToLayoutAB();\n         System.out.println(\" ******  Change Dashboard Layout to Layout AB ******\");\n \n         boardPage.changeToLayoutBA();\n         System.out.println(\" ******  Change Dashboard Layout to Layout BA ******\");\n \n         boardPage.createDashboard();\n         System.out.println(\" ******  Create new Dashboard  ******\");\n \n         boardPage.notification();\n         System.out.println(\" ******  Edit User Picture profile ******\");\n \n         /**  -------  Test Profile Page  ------ **/\n         Profile profilePage = new Profile(driver);\n         profilePage.settingsAccountConfiguration();\n         System.out.println(\" ******  Profile Settings Configuration ******\");\n \n         profilePage.uploadGravatarImage();\n         System.out.println(\" ******  Upload profile gravatar Image ******\");\n \n         profilePage.uploadImage();\n         System.out.println(\" ******  Upload Profile image ******\");\n     }\n", "path": "src/test/java/org/encuestame/selenium/EnmeInitialPageTestIT.java", "repo name": "adini121/encuestame-selenium"}
{"repo_name": "goToURL_986", "method name": "go To URL", "comments": [], "url": true, "content": "    private void function(String url) {\n         driver.navigate().to(url);\n     }\n", "path": "src/main/java/ui/PageTransporter.java", "repo name": "PenielDVP/RoomManagerAutomation"}
{"repo_name": "buscaSimplesPorDarf_987", "method name": "busca Simples Por Darf", "comments": ["Test", "Ignore(\"Não está claro porque as vezes funciona, as vezes não, tem cara de ser relacionado ao WebDriver\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl);\n         assertThat(driver.getTitle(), is(\"Portal de Serviços - Página Inicial\"));\n \n         driver.findElement(By.id(\"buscar\")).sendKeys(\"darf\");\n         driver.findElement(By.className(\"searchButton\")).click();\n \n         assertThat(driver.getTitle(), is(\"Portal de Serviços - Busca por darf\"));\n \n         assertThat(driver.findElements(By.cssSelector(\"#resultados-busca li\")).size(), is(20));\n         assertThat(driver.findElements(By.cssSelector(\"#resultados-busca li h3\")).get(0).getText(), is(\"Departamento de Polícia Rodoviária Federal (DPRF)\"));\n \n         assertThat(driver.findElement(By.id(\"buscar\")).getAttribute(\"value\"), is(\"darf\"));\n \n         driver.findElement(By.id(\"buscar\")).clear();\n         driver.findElement(By.id(\"buscar\")).sendKeys(\"prouni\");\n         driver.findElement(By.className(\"searchButton\")).click();\n \n         assertThat(driver.getTitle(), is(\"Portal de Serviços - Busca por prouni\"));\n \n         assertThat(driver.findElements(By.cssSelector(\"#resultados-busca li\")).size(), is(10));\n         assertThat(driver.findElements(By.cssSelector(\"#resultados-busca li h3\")).get(0).getText(), is(\"Unidade de Pronto Atendimento (UPA 24h)\"));\n         driver.findElement(By.cssSelector(\"#resultados-busca li a\")).click();\n \n         assertThat(driver.getTitle(), is(\"Portal de Serviços - Unidade de Pronto Atendimento (UPA 24h)\"));\n     }\n", "path": "src/test/java/br/gov/servicos/frontend/BuscaUITest.java", "repo name": "claytonsilva/portal-de-servicos"}
{"repo_name": "printWindowUtils_988", "method name": "print Window Utils", "comments": [], "url": true, "content": "   public static void function(PrintWriter out) {\n \t  out.println(\"\\n\");\n       out.println(\"\tpublic void popUpWindow(String wndLabel) throws Exception {\");\n       out.println(\"\t\tdriver.findElement(By.linkText(wndLabel)).click();\");\n       out.println(\"\t\tThread.sleep(8000);\");\n       out.println(\"\t\tString windowTitle= getCurrentWindowTitle();\");\n       out.println(\"\t\tThread.sleep(1000);\");\n       out.println(\"\t\tString mainWindow = getMainWindowHandle(driver);\");\n       out.println(\"\t\tThread.sleep(1000);\");\n       out.println(\"\t\tcloseAllOtherWindows(mainWindow);\");\n       out.println(\"\t}\");\n       out.println(\"\");\n \n       out.println(\"    public String getPopupWindowBodyText(WebDriver driver) {\");\n       out.println(\"\t\tString parentWindowHandler = driver.getWindowHandle();\");\n       out.println(\"\t\tString subWindowHandler = null;\");\n       out.println(\"\t\tSet<String> handles = driver.getWindowHandles();\");\n       out.println(\"\t\tIterator<String> iterator = handles.iterator();\");\n       out.println(\"\t\twhile (iterator.hasNext()){\");\n       out.println(\"\t\t\tsubWindowHandler = iterator.next();\");\n       out.println(\"\t\t}\");\n       out.println(\"\t\tdriver.switchTo().window(subWindowHandler);\");\n       out.println(\"\t\tThread.sleep(4000);\");\n       out.println(\"\t\tString bodyText = driver.findElement(By.tagName(\\\"body\\\")).getText();\");\n       out.println(\"\t\tdriver.switchTo().window(parentWindowHandler);\");\n       out.println(\"\t\treturn bodyText;\");\n       out.println(\"\t}\");\n       out.println(\"\");\n \n       out.println(\"\tpublic String getMainWindowHandle(WebDriver driver) {\");\n       out.println(\"\t\treturn driver.getWindowHandle();\");\n       out.println(\"\t}\");\n       out.println(\"\");\n       out.println(\"\tpublic String getCurrentWindowTitle() {\");\n       out.println(\"\t\tString windowTitle = driver.getTitle();\");\n       out.println(\"\t\treturn windowTitle;\");\n       out.println(\"\t}\");\n       out.println(\"\");\n       out.println(\"\tpublic boolean closeAllOtherWindows(String openWindowHandle) {\");\n       out.println(\"\t\tSet<String> allWindowHandles = driver.getWindowHandles();\");\n       out.println(\"\t\tfor (String currentWindowHandle : allWindowHandles) {\");\n       out.println(\"\t\t\tif (!currentWindowHandle.equals(openWindowHandle)) {\");\n       out.println(\"\t\t\t\tdriver.switchTo().window(currentWindowHandle);\");\n       out.println(\"\t\t\t\tdriver.close();\");\n       out.println(\"\t\t\t}\");\n       out.println(\"\t\t}\");\n       out.println(\"\");\n       out.println(\"\t\tdriver.switchTo().window(openWindowHandle);\");\n       out.println(\"\t\tif (driver.getWindowHandles().size() == 1)\");\n       out.println(\"\t\t\treturn true;\");\n       out.println(\"\t\telse\");\n       out.println(\"\t\t\treturn false;\");\n       out.println(\"\t}\");\n       out.println(\"\");\n \n \n \n \t   out.println(\"\tpublic boolean containsText(String text) {\");\n \t   out.println(\"\t    try {\");\n \t   out.println(\"\t\t    if (driver.findElement(By.xpath(\\\"//*[contains(.,'\\\" + text + \\\"')]\\\")) != null) {\");\n \t   out.println(\"\t\t        return true;\");\n \t   out.println(\"\t\t    }\");\n \t   out.println(\"\t\t} catch (Exception e) {\");\n \t   out.println(\"\t\t    return false;\");\n \t   out.println(\"\t    }\");\n \t   out.println(\"\t    return false;\");\n \t   out.println(\"\t}\");\n \t   out.println(\"\");\n \n \t   out.println(\"    public void goBack() {\");\n \t   out.println(\"\t\tdriver.navigate().back();\");\n \t   out.println(\"\t}\");\n \t   out.println(\"\");\n \n \t   out.println(\"\tpublic void navigateTo(String url) {\");\n \t   out.println(\"\t\tdriver.get(url);\");\n \t   out.println(\"\t}\");\n \t   out.println(\"\");\n \t   out.println(\"\");\n \t   out.println(\"    public void maximizeWindow() {\");\n \t   out.println(\"\t\tdriver.manage().window().maximize();\");\n \t   out.println(\"\t}\");\n \t   out.println(\"\");\n    }\n", "path": "software/junit-test/src/gov/nih/nci/evs/testUtil/BaseUITestGenerator.java", "repo name": "NCIEVS/nci-metathesaurus-browser"}
{"repo_name": "testUserLogout_989", "method name": "test User Logout", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Log out\")).click();\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/UserLogout.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testSearchProjectExp_990", "method name": "test Search Project Exp", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + subUrl);\n       authenticate(driver);\n     driver.findElement(By.linkText(\"Project\")).click();\n     driver.findElement(By.id(\"browse\")).click();\n     new Select(driver.findElement(By.id(\"search-key\"))).selectByVisibleText(\"Project Name\");\n       driver.findElement(By.id(\"search-value\")).clear();\n       driver.findElement(By.id(\"search-value\")).sendKeys(projectName);\n       driver.findElement(By.name(\"search\")).click();\n       try {\n           assertTrue(isElementPresent(By.cssSelector(\"td\")));\n       } catch (Error e) {\n           verificationErrors.append(e.toString());\n       }\n       try {\n           assertEquals(projectName, driver.findElement(By.cssSelector(\"td\")).getText());\n       } catch (Error e) {\n           verificationErrors.append(e.toString());\n       }\n       driver.findElement(By.linkText(\"View\")).click();\n       waitTime (30000);\n   }\n", "path": "src/test/java/org/apache/airavata/pga/tests/SearchProjectExp.java", "repo name": "SciGaP/pga-selenium-test-project"}
{"repo_name": "testRootPage_991", "method name": "test Root Page", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/\");\n     }\n", "path": "src/test/java/example/selenium/SimpleTest.java", "repo name": "maestrodev/eval-demo-maven-webapp"}
{"repo_name": "testHomePageHasAHeader_992", "method name": "test Home Page Has A Header", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     Assert.assertFalse(\"\".equals(homepage.header.getText()));\n   }\n", "path": "src/main/resources/archetype-resources/src/test/java/SampleTestNgTest.java", "repo name": "barancev/webdriver-testng-archetype"}
{"repo_name": "testUploadReview_993", "method name": "test Upload Review", "comments": ["Test"], "url": true, "content": "\tpublic void function() throws Exception {\n \t    int successCounter = 0;\n     \t    try {\n     \t\tdriver.get(baseUrl + \"/\");\n     \t\tsuccessCounter++;\n     \t    driver.findElement(By.id(\"login\")).click();\n     \t    driver.findElement(By.id(\"login_field\")).clear();\n     \t    driver.findElement(By.id(\"login_field\")).sendKeys(testUserName);\n     \t    driver.findElement(By.id(\"password\")).clear();\n     \t    driver.findElement(By.id(\"password\")).sendKeys(testUserPass);\n     \t    driver.findElement(By.name(\"commit\")).click();\n     \t    successCounter++;\n     \t    driver.findElement(By.id(\"showWriterBtn\")).click();\n     \t    driver.findElement(By.linkText(\"pdf-reviewer\")).click();\n     \t    driver.findElement(By.linkText(\"testing-review-pdf\")).click();\n     \t    driver.findElement(By.linkText(\"test.pdf\")).click();\n     \t    driver.findElement(By.linkText(\"(Myself) - pdf-reviewer\")).click();\n     \t    driver.findElement(By.id(\"customTags\")).clear();\n     \t    driver.findElement(By.id(\"customTags\")).sendKeys(\"[Selenium]\");\n     \t    driver.findElement(By.id(\"submitReview\")).click();\n     \t    successCounter++;\n     \t    driver.findElement(By.cssSelector(\"button.close\")).click();\n     \t    driver.findElement(By.id(\"showStatusBtn\")).click();\n     \t    successCounter++;\n     \t    driver.findElement(By.linkText(\"Review Now\")).click();\n     \t    File file = new File(\"strangeAnnotations.pdf\");\t    \n     \t    driver.findElement(By.id(\"pdf-file\")).sendKeys(file.getAbsolutePath());\n     \t    driver.findElement(By.id(\"upload\")).click();\n     \t    driver.findElement(By.linkText(\"here\")).click();\n     \t    successCounter++;\n     \t    driver.findElement(By.cssSelector(\"a.js-selected-navigation-item.sunken-menu-item > span.octicon.octicon-issue-opened\")).click();\n     \t    driver.findElement(By.linkText(\"Selenium\")).click();\n     \t    driver.findElement(By.cssSelector(\"input.js-check-all\")).click();\n     \t    successCounter++;\n     \t} catch (Exception e) {\n     \t    e.printStackTrace();\n     \t}\n \n \t    reportSuccesses(successCounter);\n \t}\n", "path": "src/test/java/browserTest/BrowserTest.java", "repo name": "DeveloperLiberationFront/Pdf-Reviewer"}
{"repo_name": "getWebDriver_994", "method name": "get Web Driver", "comments": [], "url": true, "content": "  private WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n                                                          // run with DISPLAY 99\n         }\n         FirefoxProfile profile = new FirefoxProfile();\n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/ZeppelinIT.java", "repo name": "omegapointresearch/incubator-zeppelin"}
{"repo_name": "getWebDriver_995", "method name": "get Web Driver", "comments": [], "url": true, "content": "  private WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n                                                          // run with DISPLAY 99\n         }\n         FirefoxProfile profile = new FirefoxProfile();\n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/ZeppelinIT.java", "repo name": "TelekomAustriaGroup/incubator-zeppelin"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_996", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "krosenvold/selenium-git-release-candidate"}
{"repo_name": "testInitialLogin_997", "method name": "test Initial Login", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         // create new user and first blog\n         driver.get(baseUrl);\n         SetupPage sp = new SetupPage(driver);\n         RegisterPage rp = sp.createNewUser();\n         WelcomePage wp = rp.submitUserRegistration(\"bsmith\", \"Bob Smith\", \"bsmith@email.com\", \"roller123\");\n         LoginPage lp = wp.doRollerLogin();\n         MainMenuPage mmp = lp.loginToRoller(\"bsmith\", \"roller123\");\n         CreateWeblogPage cwp = mmp.createWeblog();\n         mmp = cwp.createWeblog(\"Bob's Blog\", \"bobsblog\", \"bsmith@email.com\");\n \n         // set bobsblog as the front page blog\n         driver.get(baseUrl);\n         BlogHomePage bhp = sp.chooseFrontPageBlog();\n \n         // create and read first blog entry\n         String blogEntryTitle = \"My First Blog Entry\";\n         String blogEntryContent = \"Welcome to my blog!\";\n         EntryAddPage eap = bhp.createNewBlogEntry();\n         eap.setTitle(blogEntryTitle);\n         eap.setText(blogEntryContent);\n         EntryEditPage eep = eap.postBlogEntry();\n         SingleBlogEntryPage sbep = eep.viewBlogEntry();\n         System.out.println(\"title/text: \" + sbep.getBlogTitle() + \" / \" + sbep.getBlogText());\n         assertEquals(blogEntryTitle, sbep.getBlogTitle());\n         assertEquals(blogEntryContent, sbep.getBlogText());\n     }\n", "path": "it-selenium/src/test/java/org/apache/roller/selenium/InitialLoginTestIT.java", "repo name": "zepouet/rollerblog_with_crash_integration"}
{"repo_name": "openMainPage_998", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "Homework #5/src/main/java/selenium_training/applogic1/NavigationHelper1.java", "repo name": "DARTKolian/Selenium-Java-Training-Cherkasov"}
{"repo_name": "openRelativeUrl_999", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "Homework #5/src/main/java/selenium_training/applogic1/NavigationHelper1.java", "repo name": "DARTKolian/Selenium-Java-Training-Cherkasov"}
{"repo_name": "openMainPage_1000", "method name": "open Main Page", "comments": ["Override"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n   }\n", "path": "Homework 5_1/src/main/java/selenium_training/applogic2/NavigationHelper2.java", "repo name": "DARTKolian/Selenium-Java-Training-Cherkasov"}
{"repo_name": "openRelativeUrl_1001", "method name": "open Relative Url", "comments": ["Override"], "url": true, "content": "  public void function(String url) {\n     driver.get(baseUrl + url);\n   }\n", "path": "Homework 5_1/src/main/java/selenium_training/applogic2/NavigationHelper2.java", "repo name": "DARTKolian/Selenium-Java-Training-Cherkasov"}
{"repo_name": "testShouldNotBeAbleToSetDomainToSomethingThatIsUnrelatedToTheCurrentDomain_1002", "method name": "test Should Not Be Able To Set Domain To Something That Is Unrelated To The Current Domain", "comments": ["Ignore(SELENESE)"], "url": true, "content": "  public void function() {\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\");\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"simpleTest.html\");\n     driver.get(url);\n \n     Cookie cookie = options.getCookieNamed(\"fish\");\n     assertNull(String.valueOf(cookie), cookie);\n   }\n", "path": "common/test/java/org/openqa/selenium/CookieImplementationTest.java", "repo name": "epall/selenium"}
{"repo_name": "testGetCookieDoesNotRetriveBeyondCurrentDomain_1003", "method name": "test Get Cookie Does Not Retrive Beyond Current Domain", "comments": ["Ignore(SELENESE)"], "url": true, "content": "  public void function() {\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\");\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"\");\n     driver.get(url);\n \n     Set<Cookie> cookies = options.getCookies();\n     assertFalse(cookies.contains(cookie1));\n   }\n", "path": "common/test/java/org/openqa/selenium/CookieImplementationTest.java", "repo name": "epall/selenium"}
{"repo_name": "testCookieIntegrity_1004", "method name": "test Cookie Integrity", "comments": ["Ignore({SELENESE, IE})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereElseIs(\"animals\");\n \n     driver.get(url);\n     driver.manage().deleteAllCookies();\n \n     long time = System.currentTimeMillis() + (60 * 60 * 24);\n     Cookie cookie1 = new Cookie(\"fish\", \"cod\", \"/common/animals\", new Date(time));\n     WebDriver.Options options = driver.manage();\n     options.addCookie(cookie1);\n \n     Set<Cookie> cookies = options.getCookies();\n     Iterator<Cookie> iter = cookies.iterator();\n     Cookie retrievedCookie = null;\n     while (iter.hasNext()) {\n       Cookie temp = iter.next();\n \n       if (cookie1.equals(temp)) {\n         retrievedCookie = temp;\n         break;\n       }\n     }\n \n     assertNotNull(retrievedCookie);\n     //Cookie.equals only compares name, domain and path\n     assertEquals(cookie1, retrievedCookie);\n   }\n", "path": "common/test/java/org/openqa/selenium/CookieImplementationTest.java", "repo name": "epall/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1005", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "sebady/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1006", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, HTMLUNIT, IE, OPERA, OPERA_MOBILE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "sebady/selenium"}
{"repo_name": "handleFormWithJavascriptAction_1007", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {HTMLUNIT, PHANTOMJS, SAFARI, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "blueyed/selenium"}
{"repo_name": "canBlockInvalidSslCertificates_1008", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "bmannix/selenium"}
{"repo_name": "handleFormWithJavascriptAction_1009", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, HTMLUNIT, IPHONE, OPERA, PHANTOMJS, SAFARI, OPERA_MOBILE, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "isaksky/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1010", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "isaksky/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1011", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "isaksky/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1012", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "isaksky/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1013", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"Opera: failed\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "isaksky/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1014", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "isaksky/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1015", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "isaksky/selenium"}
{"repo_name": "canAuthenticateUsingBasicAuthentication_1016", "method name": "can Authenticate Using Basic Authentication", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"basicAuth\");\n     driver.get(url);\n \n     Alert alert = wait.until(alertIsPresent());\n \n     Credentials user = new UserAndPassword(\"test\", \"test\");\n \n     alert.authenticateUsing(user);\n \n \tWebElement element = wait.until(presenceOfElementLocated(By.tagName(\"h1\")));\n     assertEquals(\"authorized\", element.getText());\n   }\n", "path": "java/client/test/org/openqa/selenium/AuthenticatedPageLoadingTest.java", "repo name": "mojwang/selenium"}
{"repo_name": "testFacebookSharing_1017", "method name": "test Facebook Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing facebook link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         WebElement element = driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/facebook.png']\"));\n         String facebookLink = element.findElement(By.xpath(\"..\")).getAttribute(\"href\");\n         assertTrue(matchUrl(correctFacebookLink, facebookLink), \"Facebook sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "ayyoob/product-es"}
{"repo_name": "testGPlusSharing_1018", "method name": "test G Plus Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Google plus link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         WebElement element = driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/google.png']\"));\n         String gplusLink = element.findElement(By.xpath(\"..\")).getAttribute(\"href\");\n         gplusLink = URLDecoder.decode(gplusLink, \"UTF-8\");\n         assertTrue(matchUrl(correctGplusLink, gplusLink), \"GPlus sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "ayyoob/product-es"}
{"repo_name": "testTwitterSharing_1019", "method name": "test Twitter Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Twitter link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/twitter.png']\")).click();\n         switchWindow();\n         String twitterLink = driver.getCurrentUrl();\n         twitterLink = URLDecoder.decode(twitterLink, \"UTF-8\");\n         assertTrue(twitterLink.contains(correctTwitterLink), \"Twitter sharing is wrong\");\n         assertTrue(twitterLink.contains(correctTwitterLink2), \"Twitter sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "ayyoob/product-es"}
{"repo_name": "testDiggSharing_1020", "method name": "test Digg Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Digg link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/diggit.png']\")).click();\n         switchWindow();\n         String diggLink = driver.getCurrentUrl();\n \n         diggLink = URLDecoder.decode(diggLink, \"UTF-8\");\n         assertTrue(matchUrl(correctDiggLink, diggLink), \"Digg sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "ayyoob/product-es"}
{"repo_name": "resetUserPassword_1021", "method name": "reset User Password", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String userId = createUser(\"user1\", \"user1@localhost\");\n \n         CredentialRepresentation cred = new CredentialRepresentation();\n         cred.setType(CredentialRepresentation.PASSWORD);\n         cred.setValue(\"password\");\n         cred.setTemporary(false);\n \n         realm.users().get(userId).resetPassword(cred);\n         assertAdminEvents.assertEvent(realmId, OperationType.ACTION, AdminEventPaths.userResetPasswordPath(userId));\n \n         String accountUrl = RealmsResource.accountUrl(UriBuilder.fromUri(getAuthServerRoot())).build(REALM_NAME).toString();\n \n         driver.navigate().to(accountUrl);\n \n         assertEquals(\"Log in to admin-client-test\", driver.getTitle());\n \n         loginPage.login(\"user1\", \"password\");\n \n         assertTrue(driver.getTitle().contains(\"Account Management\"));\n     }\n", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "repo name": "iperdomo/keycloak"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_1022", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": ["Ignore({IE, CHROME, SELENESE, IPHONE})"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     driver.get(url);\n \n     // This should work\n     assertThat(driver.getTitle(), equalTo(\"Hello WebDriver\"));\n   }\n", "path": "common/test/java/org/openqa/selenium/PageLoadingTest.java", "repo name": "mogotest/selenium"}
{"repo_name": "navigateToService_1023", "method name": "navigate To Service", "comments": [" Navigates to the given service name in the current namespace", " @return the URL navigated to"], "url": true, "content": "    public String function(String serviceName) {\n         String url = getServiceUrl(serviceName);\n         WebDriver driver = getDriver();\n         driver.navigate().to(url);\n         return url;\n     }\n", "path": "components/fabric8-selenium/src/main/java/io/fabric8/selenium/WebDriverFacade.java", "repo name": "rajdavies/fabric8"}
{"repo_name": "canBlockInvalidSslCertificates_1024", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "winhamwr/selenium"}
{"repo_name": "test_calculate_two_values_1025", "method name": "test calculate two values", "comments": ["Test"], "url": true, "content": "    public void function() {\n         driver.get(url);\n \n         WebElement number1 = driver.findElement(By.id(\"number1\"));\n         number1.sendKeys(this.number1);\n \n         WebElement number2 = driver.findElement(By.id(\"number2\"));\n         number2.sendKeys(this.number2);\n \n         WebElement functionList = driver.findElement(By.id(\"function\"));\n         functionList.findElement(\n                 By.cssSelector(\n                         \"option[value='\" + this.function + \"']\"))\n                 .click();\n \n         WebElement calculateButton = driver.findElement(By.id(\"calculate\"));\n         calculateButton.click();\n \n         WebElement answer = new WebDriverWait(driver, 10).\n                 until(ExpectedConditions.\n                         visibilityOfElementLocated(\n                                 By.id(\"answer\")));\n \n         assertThat(answer.getText(), is(equalTo(this.answer)));\n \n     }\n", "path": "src/test/java/org/sayem/webdriver/basics/webdriver/datadriven/BasicDataDrivenTest.java", "repo name": "adini121/WebDriver"}
{"repo_name": "loginLoginHint_1026", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "anaerobic/keycloak"}
{"repo_name": "testESPublisherAssetOverrideExistingPageTestCase_1027", "method name": "test ES Publisher Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/asts/servicex/details\");\n     assertTrue(isElementPresent(By.id(\"assetOveriddenDetailsPage\")));\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetOverrideExistingPageTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESPublisherAssetOverrideRendererTestCase_1028", "method name": "test ES Publisher Asset Override Renderer Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/asts/servicex/lifecycle\");\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetOverrideRendererTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESStoreAssetOverrideExistingPageTestCase_1029", "method name": "test ES Store Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/asts/servicex/list\");\n     assertTrue(isElementPresent(By.id(\"assetListingPageH1\")));\n  }\n", "path": "modules/integration/selenium/generated/store/extensions/asset/ESStoreAssetOverrideExistingPageTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESPublisherAssetNewPageTestCase_1030", "method name": "test ES Publisher Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/asts/servicex/new_page\");\n     assertTrue(isElementPresent(By.id(\"servicexNewPageH1\")));\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetNewPageTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testNotFoundNoAlert_1031", "method name": "test Not Found No Alert", "comments": ["Test"], "url": true, "content": "\t  public void function() throws Exception{\n \t\t  driver.get(baseUrl + \"not_found\");\n \t\t  assertFalse(isAlertPresent());\n \t}\n", "path": "tests/selenium/java_package/src/selenium_package/tests/second_page/TestSecondPage.java", "repo name": "arthurlogilab/taurus"}
{"repo_name": "testFailedElementPresent_1032", "method name": "test Failed Element Present", "comments": ["Test"], "url": true, "content": "\t  public void function() throws Exception{\n \t\t  driver.get(baseUrl + \"not_found\");\n \t\t  assertTrue(isElementPresent(By.id(\"page-title\")));\n \t  }\n", "path": "tests/selenium/java_package/src/selenium_package/tests/second_page/TestSecondPage.java", "repo name": "arthurlogilab/taurus"}
{"repo_name": "testNotFoundNoAlert_1033", "method name": "test Not Found No Alert", "comments": ["Test"], "url": true, "content": "\t  public void function() throws Exception{\n \t\t  driver.get(baseUrl + \"not_found\");\n \t\t  assertFalse(isAlertPresent());\n \t  }\n", "path": "tests/selenium/java_package/src/selenium_package/tests/TestStaff.java", "repo name": "arthurlogilab/taurus"}
{"repo_name": "testFailedElementPresent_1034", "method name": "test Failed Element Present", "comments": ["Test"], "url": true, "content": "\t  public void function() throws Exception{\n \t\t  driver.get(baseUrl + \"not_found\");\n \t\t  assertTrue(isElementPresent(By.id(\"page-title\")));\n \t  }  \n", "path": "tests/selenium/java_package/src/selenium_package/tests/TestStaff.java", "repo name": "arthurlogilab/taurus"}
{"repo_name": "testESPublisherAssetOverridePartialTestCase_1035", "method name": "test ES Publisher Asset Override Partial Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/asts/servicex/update\");\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetOverridePartialTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESStoreAddedAssetTestCase_1036", "method name": "test ES Store Added Asset Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/asts/gadget/list\");\n     driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[3]/li\")).click();\n     assertTrue(isElementPresent(By.id(\"assetListingPageH1\")));\n  }\n", "path": "modules/integration/selenium/generated/store/extensions/asset/ESStoreAddedAssetTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testESPublisherAssetCaramelPageTestCase_1037", "method name": "test ES Publisher Asset Caramel Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/asts/servicex/new_caramel_page\");\n     assertTrue(isElementPresent(By.cssSelector(\"span.publisherTitle\")));\n     assertTrue(isElementPresent(By.linkText(\"Overview\")));\n     assertTrue(isElementPresent(By.linkText(\"Edit\")));\n     assertTrue(isElementPresent(By.linkText(\"Life Cycle\")));\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetCaramelPageTestCase.java", "repo name": "maheshika/product-es"}
{"repo_name": "testWithWebDriver_1038", "method name": "test With Web Driver", "comments": [" @Test"], "url": true, "content": "    public void function() throws Exception {\n         HttpProxyServer proxyServer = DefaultHttpProxyServer.bootstrap()\n                 .withPort(0)\n                 .start();\n \n         Proxy proxy = new Proxy();\n         proxy.setProxyType(Proxy.ProxyType.MANUAL);\n         String proxyStr = String.format(\"localhost:%d\", proxyServer.getListenAddress().getPort());\n         proxy.setHttpProxy(proxyStr);\n         proxy.setSslProxy(proxyStr);\n \n         DesiredCapabilities capability = DesiredCapabilities.firefox();\n         capability.setCapability(CapabilityType.PROXY, proxy);\n \n         final String urlString = \"http://www.yahoo.com/\";\n \n         // Note this will actually launch a browser!!\n         final WebDriver driver = new FirefoxDriver(capability);\n         driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);\n \n         driver.get(urlString);\n         final String source = driver.getPageSource();\n \n         // Just make sure it got something within reason.\n         assertThat(source.length(), greaterThan(100));\n         driver.close();\n \n         proxyServer.stop();\n     }\n", "path": "src/test/java/org/littleshoot/proxy/EndToEndStoppingTest.java", "repo name": "mapbased/LittleProxy"}
{"repo_name": "getHtmlPage_1039", "method name": "get Html Page", "comments": [], "url": true, "content": "    public static String function(String url, Configuration conf) {\n         WebDriver driver = null;\n \n         try {\n             driver = new FirefoxDriver();\n //            }            WebDriver driver = threadWebDriver.get();\n //            if (driver == null) {\n //                driver = new FirefoxDriver();\n //            }\n \n             driver.get(url);\n \n             // Wait for the page to load, timeout after 3 seconds\n             new WebDriverWait(driver, 3);\n \n             String innerHtml = driver.findElement(By.tagName(\"body\")).getAttribute(\"innerHTML\");\n \n             return innerHtml;\n \n             // I'm sure this catch statement is a code smell ; borrowing it from lib-htmlunit\n         } catch (Exception e) {\n             throw new RuntimeException(e);\n         } finally {\n             if (driver != null) try { driver.quit(); } catch (Exception e) { throw new RuntimeException(e); }\n         }\n", "path": "lib-selenium/src/java/org/apache/nutch/protocol/selenium/HttpWebClient.java", "repo name": "momer/nutch-selenium"}
{"repo_name": "testESStoreAssetNewPageTestCase_1040", "method name": "test ES Store Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/asts/servicex/new_page\");\n     assertTrue(isElementPresent(By.id(\"assetNewPageH1\")));\n  }\n", "path": "modules/integration/selenium/generated/store/extensions/asset/ESStoreAssetNewPageTestCase.java", "repo name": "pulasthi7/product-es"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1041", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "aluedeke/chromedriver"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1042", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "aluedeke/chromedriver"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1043", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, OPERA, OPERA_MOBILE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "aluedeke/chromedriver"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1044", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"Opera: failed\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "aluedeke/chromedriver"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1045", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"not tested\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "aluedeke/chromedriver"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1046", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"not tested\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "aluedeke/chromedriver"}
{"repo_name": "testWithWebDriver_1047", "method name": "test With Web Driver", "comments": [" @Test"], "url": true, "content": "    public void function() throws Exception {\n         int port = 9090;\n         HttpProxyServer proxyServer = DefaultHttpProxyServer.bootstrap()\n                 .withPort(port)\n                 .start();\n \n         Proxy proxy = new Proxy();\n         proxy.setProxyType(Proxy.ProxyType.MANUAL);\n         String proxyStr = String.format(\"localhost:%d\", port);\n         proxy.setHttpProxy(proxyStr);\n         proxy.setSslProxy(proxyStr);\n \n         DesiredCapabilities capability = DesiredCapabilities.firefox();\n         capability.setCapability(CapabilityType.PROXY, proxy);\n \n         final String urlString = \"http://www.yahoo.com/\";\n \n         // Note this will actually launch a browser!!\n         final WebDriver driver = new FirefoxDriver(capability);\n         driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);\n \n         driver.get(urlString);\n         final String source = driver.getPageSource();\n \n         // Just make sure it got something within reason.\n         assertTrue(source.length() > 100);\n         driver.close();\n \n         proxyServer.stop();\n     }\n", "path": "src/test/java/org/littleshoot/proxy/EndToEndStoppingTest.java", "repo name": "enbideren/LittleProxy"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1048", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "chrsmithdemos/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1049", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({OPERA, OPERA_MOBILE, MARIONETTE})"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "chrsmithdemos/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_1050", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "chrsmithdemos/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_1051", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "chrsmithdemos/selenium"}
{"repo_name": "testFacebookSharing_1052", "method name": "test Facebook Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing facebook link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         WebElement element = driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/facebook.png']\"));\n         String facebookLink = element.findElement(By.xpath(\"..\")).getAttribute(\"href\");\n         assertTrue(matchUrl(correctFacebookLink, facebookLink), \"Facebook sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "testGPlusSharing_1053", "method name": "test G Plus Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Google plus link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         WebElement element = driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/google.png']\"));\n         String gplusLink = element.findElement(By.xpath(\"..\")).getAttribute(\"href\");\n         gplusLink = URLDecoder.decode(gplusLink, \"UTF-8\");\n         assertTrue(matchUrl(correctGplusLink, gplusLink), \"GPlus sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "testTwitterSharing_1054", "method name": "test Twitter Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Twitter link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/twitter.png']\")).click();\n         switchWindow();\n         String twitterLink = driver.getCurrentUrl();\n         twitterLink = URLDecoder.decode(twitterLink, \"UTF-8\");\n         System.out.println(twitterLink);\n         assertTrue(twitterLink.contains(correctTwitterLink), \"Twitter sharing is wrong\");\n         assertTrue(twitterLink.contains(correctTwitterLink2), \"Twitter sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "testDiggSharing_1055", "method name": "test Digg Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Digg link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/diggit.png']\")).click();\n         switchWindow();\n         String diggLink = driver.getCurrentUrl();\n \n         diggLink = URLDecoder.decode(diggLink, \"UTF-8\");\n         assertTrue(matchUrl(correctDiggLink, diggLink), \"Digg sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "canBlockInvalidSslCertificates_1056", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "lummyare/lummyare-test"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1057", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "pulkitsinghal/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1058", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "pulkitsinghal/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1059", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE},"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "pulkitsinghal/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1060", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "pulkitsinghal/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1061", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "pulkitsinghal/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1062", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "pulkitsinghal/selenium"}
{"repo_name": "handleFormWithJavascriptAction_1063", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {HTMLUNIT, PHANTOMJS, SAFARI, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "pulkitsinghal/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1064", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "theandrewlane/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1065", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, IE, PHANTOMJS, SAFARI, MARIONETTE})", "NotYetImplemented(HTMLUNIT)", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "theandrewlane/selenium"}
{"repo_name": "handleFormWithJavascriptAction_1066", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {HTMLUNIT, PHANTOMJS, SAFARI, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "gemini-testing/selenium"}
{"repo_name": "findElementPoll_1067", "method name": "find Element Poll", "comments": [" This method will keep refreshing/reloading the current url for a given number of poll-count", " until a given element is available", " @param by        Element that is expected to be present", " @param pollCount Number of time page need to be reloaded into webdriver"], "url": true, "content": "\tpublic void function(By by, int pollCount) {\n \t\tint count = 0;\n \t\twhile (!isElementPresent(by) && count < pollCount) {\n \t\t\tString url = driver.getCurrentUrl();\n \t\t\tdriver.get(url);\n \t\t\tcount++;\n \t\t}\n \t}\n", "path": "integration/test-ui-integration/src/test/java/org/wso2/developerstudio/codenvy/ui/integration/test/utils/DevSWebDriver.java", "repo name": "liurl3/cloud-dev-studio"}
{"repo_name": "navigateToURL_1068", "method name": "navigate To URL", "comments": [" ", " Navigate to the given URl.", " ", " @param url", "            String url from the Website.", " ", " @throws UnreachableBrowserException", "             UnreachableBrowserException", " "], "url": true, "content": "\tpublic void function(String url) throws UnreachableBrowserException {\n \t\tif (url.toLowerCase().startsWith(\"http://\") || url.toLowerCase().startsWith(\"https://\")\n \t\t\t\t|| url.toLowerCase().startsWith(\"file:\")) {\n \t\t\twebDriver.get(url);\n \t\t} else {\n \t\t\twebDriver.get(\"http://\" + url);\n \t\t}\n \t}\n", "path": "uiscanner/org.testeditor.ui.uiscanner/src/main/java/org/testeditor/ui/uiscanner/webscanner/Scanner.java", "repo name": "test-editor/test-editor"}
{"repo_name": "getWebDriver_1069", "method name": "get Web Driver", "comments": [], "url": true, "content": "  private WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n                                                          // run with DISPLAY 99\n         }\n         FirefoxProfile profile = new FirefoxProfile();\n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/ZeppelinIT.java", "repo name": "nikste/visualizationDemo"}
{"repo_name": "test_calculate_two_values_1070", "method name": "test calculate two values", "comments": ["Test"], "url": true, "content": "    public void function() {\n         driver.get(url);\n \n         WebElement number1 = driver.findElement(By.id(\"number1\"));\n         number1.sendKeys(this.number1);\n \n         WebElement number2 = driver.findElement(By.id(\"number2\"));\n         number2.sendKeys(this.number2);\n \n         WebElement functionList = driver.findElement(By.id(\"function\"));\n         functionList.findElement(\n                 By.cssSelector(\n                         \"option[value='\" + this.function + \"']\"))\n                 .click();\n \n         WebElement calculateButton = driver.findElement(By.id(\"calculate\"));\n         calculateButton.click();\n \n         WebElement answer = new WebDriverWait(driver, 10).\n                 until(ExpectedConditions.\n                         visibilityOfElementLocated(\n                                 By.id(\"answer\")));\n \n         assertThat(answer.getText(), is(equalTo(this.answer)));\n \n     }\n", "path": "src/test/java/org/sayem/webdriver/basics/webdriver/datadriven/CsvDataDrivenTest.java", "repo name": "dholman7/WebDriver-master"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_1071", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "denis-vilyuzhanin/selenium"}
{"repo_name": "getWebDriver_1072", "method name": "get Web Driver", "comments": [], "url": true, "content": "  private WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n                                                          // run with DISPLAY 99\n         }\n         FirefoxProfile profile = new FirefoxProfile();\n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/ZeppelinIT.java", "repo name": "gliptak/incubator-zeppelin"}
{"repo_name": "getWebDriver_1073", "method name": "get Web Driver", "comments": [], "url": true, "content": "  public static WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n           // run with DISPLAY 99\n         }\n         int firefoxVersion = WebDriverManager.getFirefoxVersion();\n         LOG.info(\"Firefox version \" + firefoxVersion + \" detected\");\n \n         downLoadsDir = FileUtils.getTempDirectory().toString();\n \n         String tempPath = downLoadsDir + \"/firebug/\";\n \n         downloadFireBug(firefoxVersion, tempPath);\n \n         final String firebugPath = tempPath + \"firebug.xpi\";\n         final String firepathPath = tempPath + \"firepath.xpi\";\n \n         FirefoxProfile profile = new FirefoxProfile();\n         profile.setPreference(\"browser.download.folderList\", 2);\n         profile.setPreference(\"browser.download.dir\", downLoadsDir);\n         profile.setPreference(\"browser.helperApps.alwaysAsk.force\", false);\n         profile.setPreference(\"browser.download.manager.showWhenStarting\", false);\n         profile.setPreference(\"browser.download.manager.showAlertOnComplete\", false);\n         profile.setPreference(\"browser.download.manager.closeWhenDone\", true);\n         profile.setPreference(\"app.update.auto\", false);\n         profile.setPreference(\"app.update.enabled\", false);\n         profile.setPreference(\"dom.max_script_run_time\", 0);\n         profile.setPreference(\"dom.max_chrome_script_run_time\", 0);\n         profile.setPreference(\"browser.helperApps.neverAsk.saveToDisk\", \"application/x-ustar,application/octet-stream,application/zip,text/csv,text/plain\");\n         profile.setPreference(\"network.proxy.type\", 0);\n \n         profile.addExtension(new File(firebugPath));\n         profile.addExtension(new File(firepathPath));\n \n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while FireFox Driver \", e);\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while ChromeDriver \", e);\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while SafariDriver \", e);\n       }\n     }\n \n     String url;\n     if (System.getenv(\"url\") != null) {\n       url = System.getenv(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         LOG.info(\"Exception in WebDriverManager while WebDriverWait \", e);\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/WebDriverManager.java", "repo name": "karup1990/incubator-zeppelin"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1074", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1075", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({ANDROID, IPHONE, OPERA, OPERA_MOBILE})"], "url": true, "content": "  public void function() {\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_1076", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": ["Ignore(value = {IE, CHROME, IPHONE, OPERA, ANDROID, SAFARI, OPERA_MOBILE, PHANTOMJS},", "Test"], "url": true, "content": "  public void function() {\n     // TODO(user): Set the SSL capability to true.\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     driver.get(url);\n \n     assertThat(driver.getTitle(), equalTo(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1077", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE, PHANTOMJS, SAFARI})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(TestUtilities.isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "vinay-qa/vinayit-android-server-apk"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1078", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "dbo/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1079", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, HTMLUNIT, IE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "dbo/selenium"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_1080", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "jmt4/Selenium2"}
{"repo_name": "resetUserPassword_1081", "method name": "reset User Password", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String userId = createUser(\"user1\", \"user1@localhost\");\n \n         CredentialRepresentation cred = new CredentialRepresentation();\n         cred.setType(CredentialRepresentation.PASSWORD);\n         cred.setValue(\"password\");\n         cred.setTemporary(false);\n \n         realm.users().get(userId).resetPassword(cred);\n \n         String accountUrl = RealmsResource.accountUrl(UriBuilder.fromUri(Constants.AUTH_SERVER_ROOT)).build(REALM_NAME).toString();\n \n         driver.navigate().to(accountUrl);\n \n         assertEquals(\"Log in to admin-client-test\", driver.getTitle());\n \n         loginPage.login(\"user1\", \"password\");\n \n         assertEquals(\"Keycloak Account Management\", driver.getTitle());\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "repo name": "agolPL/keycloak"}
{"repo_name": "loginLoginHint_1082", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "lkubik/keycloak"}
{"repo_name": "displaysPolicyUrlInLoginPage_1083", "method name": "displays Policy Url In Login Page", "comments": ["Parameters({\"redirectUris\", \"redirectUri\"})", "Test"], "url": true, "content": "    public void function(final String redirectUris, final String redirectUri) throws Exception {\n         showTitle(\"OC5:FeatureTest-Displays Policy in Login Page\");\n \n         List<ResponseType> responseTypes = Arrays.asList(ResponseType.CODE);\n         String policyUri = \"http://www.gluu.org/policy\";\n \n         // 1. Register client\n         RegisterRequest registerRequest = new RegisterRequest(ApplicationType.WEB, \"oxAuth test app\",\n                 StringUtils.spaceSeparatedToList(redirectUris));\n         registerRequest.setResponseTypes(responseTypes);\n         registerRequest.setPolicyUri(policyUri);\n \n         RegisterClient registerClient = new RegisterClient(registrationEndpoint);\n         registerClient.setRequest(registerRequest);\n         RegisterResponse registerResponse = registerClient.exec();\n \n         showClient(registerClient);\n         assertEquals(registerResponse.getStatus(), 200, \"Unexpected response code: \" + registerResponse.getEntity());\n         assertNotNull(registerResponse.getClientId());\n         assertNotNull(registerResponse.getClientSecret());\n         assertNotNull(registerResponse.getRegistrationAccessToken());\n         assertNotNull(registerResponse.getClientIdIssuedAt());\n         assertNotNull(registerResponse.getClientSecretExpiresAt());\n \n         String clientId = registerResponse.getClientId();\n \n         // 2. Request authorization and receive the authorization code.\n         List<String> scopes = Arrays.asList(\"openid\", \"profile\", \"address\", \"email\");\n         String state = UUID.randomUUID().toString();\n \n         AuthorizationRequest authorizationRequest = new AuthorizationRequest(responseTypes, clientId, scopes, redirectUri, null);\n         authorizationRequest.setState(state);\n \n         String authorizationRequestUrl = getAuthorizationEndpoint() + \"?\" + authorizationRequest.getQueryString();\n \n         AuthorizeClient authorizeClient = new AuthorizeClient(getAuthorizationEndpoint());\n         authorizeClient.setRequest(authorizationRequest);\n \n         try {\n             startSelenium();\n             driver.navigate().to(authorizationRequestUrl);\n \n             WebElement policy = driver.findElement(By.xpath(\"//a[@href='\" + policyUri + \"']\"));\n             assertNotNull(policy);\n         } catch (NoSuchElementException ex) {\n             fail(\"Policy not found\");\n         } finally {\n             stopSelenium();\n         }\n     }\n", "path": "Client/src/test/java/org/xdi/oxauth/interop/DisplaysPolicyUriInLoginPage.java", "repo name": "madumlao/oxAuth"}
{"repo_name": "deleteAllCookies_1084", "method name": "delete All Cookies", "comments": ["Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() throws Exception {\n     assumeTrue(domainHelper.checkHasValidAlternateHostname());\n \n     Cookie cookie1 = new Cookie.Builder(\"fish1\", \"cod\")\n         .domain(appServer.getHostName()).build();\n     Cookie cookie2 = new Cookie.Builder(\"fish2\", \"tune\")\n         .domain(appServer.getAlternateHostName()).build();\n \n     String url1 = domainHelper.getUrlForFirstValidHostname(\"/common\");\n     String url2 = domainHelper.getUrlForSecondValidHostname(\"/common\");\n \n     WebDriver.Options options = driver.manage();\n \n     options.addCookie(cookie1);\n     assertCookieIsPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     options.addCookie(cookie2);\n     assertCookieIsNotPresentWithName(cookie1.getName());\n     assertCookieIsPresentWithName(cookie2.getName());\n \n     driver.get(url1);\n     assertCookieIsPresentWithName(cookie1.getName());\n     assertCookieIsNotPresentWithName(cookie2.getName());\n \n     options.deleteAllCookies();\n     assertCookieIsNotPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     assertCookieIsPresentWithName(cookie2.getName());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "petruc/selenium"}
{"repo_name": "loginLoginHint_1085", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "pfiled/keycloak"}
{"repo_name": "displaysLogoInLoginPage_1086", "method name": "displays Logo In Login Page", "comments": ["Parameters({\"redirectUris\", \"redirectUri\"})", "Test"], "url": true, "content": "    public void function(final String redirectUris, final String redirectUri) throws Exception {\n         showTitle(\"OC5:FeatureTest-Displays Logo in Login Page\");\n \n         List<ResponseType> responseTypes = Arrays.asList(ResponseType.CODE);\n         String logoUri = \"http://www.gluu.org/wp-content/themes/gluursn/images/logo.png\";\n \n         // 1. Register client\n         RegisterRequest registerRequest = new RegisterRequest(ApplicationType.WEB, \"oxAuth test app\",\n                 StringUtils.spaceSeparatedToList(redirectUris));\n         registerRequest.setResponseTypes(responseTypes);\n         registerRequest.setLogoUri(logoUri);\n \n         RegisterClient registerClient = new RegisterClient(registrationEndpoint);\n         registerClient.setRequest(registerRequest);\n         RegisterResponse registerResponse = registerClient.exec();\n \n         showClient(registerClient);\n         assertEquals(registerResponse.getStatus(), 200, \"Unexpected response code: \" + registerResponse.getEntity());\n         assertNotNull(registerResponse.getClientId());\n         assertNotNull(registerResponse.getClientSecret());\n         assertNotNull(registerResponse.getRegistrationAccessToken());\n         assertNotNull(registerResponse.getClientIdIssuedAt());\n         assertNotNull(registerResponse.getClientSecretExpiresAt());\n \n         String clientId = registerResponse.getClientId();\n \n         // 2. Request authorization and receive the authorization code.\n         List<String> scopes = Arrays.asList(\"openid\", \"profile\", \"address\", \"email\");\n         String state = UUID.randomUUID().toString();\n \n         AuthorizationRequest authorizationRequest = new AuthorizationRequest(responseTypes, clientId, scopes, redirectUri, null);\n         authorizationRequest.setState(state);\n \n         String authorizationRequestUrl = getAuthorizationEndpoint() + \"?\" + authorizationRequest.getQueryString();\n \n         AuthorizeClient authorizeClient = new AuthorizeClient(getAuthorizationEndpoint());\n         authorizeClient.setRequest(authorizationRequest);\n \n         try {\n             startSelenium();\n             driver.navigate().to(authorizationRequestUrl);\n \n             WebElement logo = driver.findElement(By.xpath(\"//img[@src='\" + logoUri + \"']\"));\n             assertNotNull(logo);\n         } catch (NoSuchElementException ex) {\n             fail(\"Logo not found\");\n         } finally {\n             stopSelenium();\n         }\n     }\n", "path": "Client/src/test/java/org/xdi/oxauth/interop/DisplaysLogoInLoginPage.java", "repo name": "nixu-corp/oxAuth"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_1087", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1088", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1089", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({MARIONETTE})"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_1090", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_1091", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_1092", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "sevaseva/selenium"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1093", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "gregerrag/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1094", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({MARIONETTE})"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "gregerrag/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_1095", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "gregerrag/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_1096", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "gregerrag/selenium"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1097", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "soundcloud/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1098", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({MARIONETTE})"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "soundcloud/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_1099", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "soundcloud/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_1100", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "soundcloud/selenium"}
{"repo_name": "testPasswordRecoveryEmail_1101", "method name": "test Password Recovery Email", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing password recovery through email\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.id(\"btn-signin\")).click();\n         driver.findElement(By.linkText(\"Forgot your password?\")).click();\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(USER);\n         driver.findElement(By.id(\"validationSubmit\")).click();\n         String resourceLocation = getResourceLocation();\n         smtpPropertyLocation = resourceLocation + SMTP_PROPERTY_FILE;\n         // TODO:avoid waiting\n         // waiting for email to receive\n         Thread.sleep(10000);\n         String message = ESUtil.readEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, RESET_MAIL_TITLE);\n         String resetUrl = message.split(\"\\r\")[5].trim().substring(\"https://localhost:10343\".length());\n         driver.get(baseUrl + resetUrl);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(NEW_PASSWORD);\n         driver.findElement(By.id(\"password2\")).clear();\n         driver.findElement(By.id(\"password2\")).sendKeys(NEW_PASSWORD);\n         driver.findElement(By.id(\"resetPassword\")).click();\n         ESUtil.login(driver, baseUrl, STORE_APP, USER, NEW_PASSWORD);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESPasswordRecovery.java", "repo name": "splinter/product-es"}
{"repo_name": "testFacebookSharing_1102", "method name": "test Facebook Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing facebook link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         WebElement element = driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/facebook.png']\"));\n         String facebookLink = element.findElement(By.xpath(\"..\")).getAttribute(\"href\");\n         assertTrue(matchUrl(correctFacebookLink, facebookLink), \"Facebook sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testGPlusSharing_1103", "method name": "test G Plus Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Google plus link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         WebElement element = driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/google.png']\"));\n         String gplusLink = element.findElement(By.xpath(\"..\")).getAttribute(\"href\");\n         gplusLink = URLDecoder.decode(gplusLink, \"UTF-8\");\n         assertTrue(matchUrl(correctGplusLink, gplusLink), \"GPlus sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testTwitterSharing_1104", "method name": "test Twitter Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Twitter link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/twitter.png']\")).click();\n         switchWindow();\n         String twitterLink = driver.getCurrentUrl();\n         twitterLink = URLDecoder.decode(twitterLink, \"UTF-8\");\n         System.out.println(twitterLink);\n         assertTrue(twitterLink.contains(correctTwitterLink), \"Twitter sharing is wrong\");\n         assertTrue(twitterLink.contains(correctTwitterLink2), \"Twitter sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testDiggSharing_1105", "method name": "test Digg Sharing", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing Digg link in share tab\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.xpath(\"//a[contains(.,'Line Plus Bar Chart')]\")).click();\n         assertEquals(driver.findElement(By.linkText(\"Share\")).getText(), \"Share\");\n         driver.findElement(By.linkText(\"Share\")).click();\n         assertEquals(driver.findElement(By.xpath(\"//h4[contains(.,'Social Sites')]\")).getText(), \"Social Sites\");\n \n         driver.findElement(By.xpath(\"//img[@src='/store/themes/store/img/diggit.png']\")).click();\n         switchWindow();\n         String diggLink = driver.getCurrentUrl();\n \n         diggLink = URLDecoder.decode(diggLink, \"UTF-8\");\n         assertTrue(matchUrl(correctDiggLink, diggLink), \"Digg sharing is wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSocialSharingTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testESPublisherAssetOverridePartialTestCase_1106", "method name": "test ES Publisher Asset Override Partial Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding a partial in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(updateUrl);\n         assertTrue(isElementPresent(driver, By.id(\"assetOverriddenListingH1\")));\n         assertEquals(driver.findElement(By.id(\"assetOverriddenListingH1\")).getText(), \"New Asset Update Partial of Publisher\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverridePartialTestCase.java", "repo name": "charithag/product-es"}
{"repo_name": "openTestURL_1107", "method name": "open Test URL", "comments": [], "url": true, "content": "    private void function(Class<?> uiClass, Set<String> parameters) {\n         String url = getTestURL(uiClass);\n \n         if (isDebug()) {\n             parameters.add(\"debug\");\n         }\n \n         if (LegacyApplication.class.isAssignableFrom(uiClass)) {\n             parameters.add(\"restartApplication\");\n         }\n \n         if (parameters.size() > 0) {\n             url += \"?\" + Joiner.on(\"&\").join(parameters);\n         }\n \n         driver.get(url);\n     }\n", "path": "uitest/src/com/vaadin/tests/tb3/AbstractTB3Test.java", "repo name": "BruceRodrigues/vaadin"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_1108", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": ["Ignore(value = {IE, CHROME, SELENESE, IPHONE, OPERA, ANDROID, SAFARI, OPERA_MOBILE},", "Test"], "url": true, "content": "  public void function() {\n     // TODO(user): Set the SSL capability to true.\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     driver.get(url);\n \n     assertThat(driver.getTitle(), equalTo(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "bwp/SeleniumWebDriver"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1109", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE, SAFARI, SELENESE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(TestUtilities.isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "bwp/SeleniumWebDriver"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1110", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "bwp/SeleniumWebDriver"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1111", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "telefonicaid/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1112", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({OPERA, OPERA_MOBILE, MARIONETTE})"], "url": true, "content": "  public void function() {\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "telefonicaid/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_1113", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "telefonicaid/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_1114", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "telefonicaid/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1115", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "telefonicaid/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1116", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, HTMLUNIT, IE, OPERA, OPERA_MOBILE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "telefonicaid/selenium"}
{"repo_name": "testPasswordRecoveryEmail_1117", "method name": "test Password Recovery Email", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing password recovery through email\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.id(\"btn-signin\")).click();\n         driver.findElement(By.linkText(\"Forgot your password?\")).click();\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(USER);\n         driver.findElement(By.id(\"validationSubmit\")).click();\n         String resourceLocation = getResourceLocation();\n         smtpPropertyLocation = resourceLocation + SMTP_PROPERTY_FILE;\n         // TODO:avoid waiting\n         // waiting for email to receive\n         Thread.sleep(10000);\n         String message = ESUtil.readEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, RESET_MAIL_TITLE);\n         String resetUrl = message.split(\"\\r\")[5].trim().substring(\"https://localhost:9443\".length());\n         driver.get(baseUrl + resetUrl);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(NEW_PASSWORD);\n         driver.findElement(By.id(\"password2\")).clear();\n         driver.findElement(By.id(\"password2\")).sendKeys(NEW_PASSWORD);\n         driver.findElement(By.id(\"resetPassword\")).click();\n         ESUtil.login(driver, baseUrl, STORE_APP, USER, NEW_PASSWORD);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESPasswordRecovery.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1118", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "orange-tv-blagnac/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1119", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "orange-tv-blagnac/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1120", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, OPERA, OPERA_MOBILE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "orange-tv-blagnac/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1121", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"Opera: failed\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "orange-tv-blagnac/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1122", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"not tested\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "orange-tv-blagnac/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1123", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"not tested\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "orange-tv-blagnac/selenium"}
{"repo_name": "getWebDriver_1124", "method name": "get Web Driver", "comments": [], "url": true, "content": "\tprivate WebDriver function(){\n \t\tWebDriver driver = null;\n \n \t\tif (driver==null){\n \t\t\ttry {\n \t\t\t\tFirefoxBinary ffox = new FirefoxBinary();\n \t\t\t\tif (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n \t\t\t\t\tffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to run with DISPLAY 99\n \t\t\t\t}\n \t\t\t\tFirefoxProfile profile = new FirefoxProfile();\n \t\t\t\tdriver = new FirefoxDriver(ffox, profile);\n \t\t\t} catch (Exception e){\n \t\t\t}\n \t\t}\n \n \t\tif (driver==null){\n \t\t\ttry {\n \t\t\t\tdriver = new ChromeDriver();\n \t\t\t} catch (Exception e){\n \t\t\t}\n \t\t}\n \n \t\tif (driver==null){\n \t\t\ttry {\n \t\t\t\tdriver = new SafariDriver();\n \t\t\t} catch (Exception e){\n \t\t\t}\n \t\t}\n \n \t\tString url;\n \t\tif (System.getProperty(\"url\")!=null) {\n \t\t\turl = System.getProperty(\"url\");\n \t\t} else {\n \t\t\turl = \"http://localhost:8080\";\n \t\t}\n \n \t\tlong start = System.currentTimeMillis();\n \t\tboolean loaded = false;\n \t\tdriver.get(url);\n \n \t\twhile (System.currentTimeMillis() - start < 60*1000) {\n \t        // wait for page load\n \t\t\ttry {\n \t\t        (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n \t\t            public Boolean apply(WebDriver d) {\n \t\t                return d.findElement(By.partialLinkText(\"Start\")).isDisplayed();\n \t\t            }\n \t\t        });\n \t\t        loaded = true;\n \t\t        break;\n \t\t\t} catch (TimeoutException e){\n \t\t\t\tdriver.navigate().to(url);\n \t\t\t}\n \t\t}\n \n \t\tif (loaded==false) {\n \t\t\tfail();\n \t\t}\n \n \t\treturn driver;\n \t}\n", "path": "zeppelin-server/src/test/java/com/nflabs/zeppelin/ZeppelinIT.java", "repo name": "minahlee/incubator-zeppelin"}
{"repo_name": "testHomePageHasAHeader_1125", "method name": "test Home Page Has A Header", "comments": ["Test"], "url": true, "content": "  public void function() {\n     driver.get(baseUrl);\n     Assert.assertFalse(\"\".equals(homepage.header.getText()));\n   }\n", "path": "src/test/java/ru/stqa/selenium/SampleTestNgTest.java", "repo name": "PopkovS/java_selenium_training"}
{"repo_name": "openTestUrl_1126", "method name": "open Test Url", "comments": [], "url": true, "content": "    public static void function(WebDriver driver, String testUrl) {\n         driver.manage().timeouts().implicitlyWait(WebDriverUtils.SETUP_URL_LOAD_WAIT_SECONDS, TimeUnit.SECONDS);\n \n         driver.get(testUrl);\n         if (!System.getProperty(SauceLabsWebDriverHelper.SAUCE_BROWSER_PROPERTY,\"ff\").equals(\"opera\")) {\n             driver.manage().window().maximize();\n             //            driver.manage().window().setSize(new Dimension(800,600));\n         }\n \n         WebDriverUtils.jGrowl(driver, \"Open URL\", false, \"Open \" + testUrl);\n \n         driver.manage().timeouts().implicitlyWait(WebDriverUtils.configuredImplicityWait(), TimeUnit.SECONDS);\n     }\n", "path": "rice-tools-test/src/main/java/org/kuali/rice/testtools/selenium/WebDriverUtils.java", "repo name": "kuali/rice"}
{"repo_name": "openTestURL_1127", "method name": "open Test URL", "comments": [], "url": true, "content": "    private void function(Class<?> uiClass, Set<String> parameters) {\n         String url = getTestURL(uiClass);\n \n         if (isDebug()) {\n             parameters.add(\"debug\");\n         }\n \n         if (LegacyApplication.class.isAssignableFrom(uiClass)) {\n             parameters.add(\"restartApplication\");\n         }\n \n         if (parameters.size() > 0) {\n             url += \"?\" + Joiner.on(\"&\").join(parameters);\n         }\n \n         driver.get(url);\n     }\n", "path": "uitest/src/com/vaadin/tests/tb3/AbstractTB3Test.java", "repo name": "mittop/vaadin"}
{"repo_name": "navigateToService_1128", "method name": "navigate To Service", "comments": [" Navigates to the given service name in the current namespace", " @return the URL navigated to"], "url": true, "content": "    public String function(String serviceName) {\n         String url = getServiceUrl(serviceName);\n         WebDriver driver = getDriver();\n         driver.navigate().to(url);\n         return url;\n     }\n", "path": "components/fabric8-selenium/src/main/java/io/fabric8/selenium/WebDriverFacade.java", "repo name": "oscerd/fabric8"}
{"repo_name": "openTestUrl_1129", "method name": "open Test Url", "comments": [], "url": true, "content": "    public static void function(WebDriver driver, String testUrl) {\n         driver.manage().timeouts().implicitlyWait(WebDriverUtils.SETUP_URL_LOAD_WAIT_SECONDS, TimeUnit.SECONDS);\n \n         driver.get(testUrl);\n         if (!System.getProperty(SauceLabsWebDriverHelper.SAUCE_BROWSER_PROPERTY,\"ff\").equals(\"opera\")) {\n             driver.manage().window().maximize();\n             //            driver.manage().window().setSize(new Dimension(800,600));\n         }\n \n         WebDriverUtils.jGrowl(driver, \"Open URL\", false, \"Open \" + testUrl);\n \n         driver.manage().timeouts().implicitlyWait(WebDriverUtils.configuredImplicityWait(), TimeUnit.SECONDS);\n     }\n", "path": "rice-tools-test/src/main/java/org/kuali/rice/testtools/selenium/WebDriverUtils.java", "repo name": "ricepanda/rice"}
{"repo_name": "handleFormWithJavascriptAction_1130", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {PHANTOMJS, SAFARI, MARIONETTE},", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "alb-i986/selenium"}
{"repo_name": "openTestUrl_1131", "method name": "open Test Url", "comments": [], "url": true, "content": "    public static void function(WebDriver driver, String testUrl) {\n         driver.manage().timeouts().implicitlyWait(WebDriverUtils.SETUP_URL_LOAD_WAIT_SECONDS, TimeUnit.SECONDS);\n \n         driver.get(testUrl);\n         if (!System.getProperty(SauceLabsWebDriverHelper.SAUCE_BROWSER_PROPERTY,\"ff\").equals(\"opera\")) {\n             driver.manage().window().maximize();\n             //            driver.manage().window().setSize(new Dimension(800,600));\n         }\n \n         WebDriverUtils.jGrowl(driver, \"Open URL\", false, \"Open \" + testUrl);\n \n         driver.manage().timeouts().implicitlyWait(WebDriverUtils.configuredImplicityWait(), TimeUnit.SECONDS);\n     }\n", "path": "rice-tools-test/src/main/java/org/kuali/rice/testtools/selenium/WebDriverUtils.java", "repo name": "jruchcolo/rice-cd"}
{"repo_name": "resetUserPassword_1132", "method name": "reset User Password", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String userId = createUser(\"user1\", \"user1@localhost\");\n \n         CredentialRepresentation cred = new CredentialRepresentation();\n         cred.setType(CredentialRepresentation.PASSWORD);\n         cred.setValue(\"password\");\n         cred.setTemporary(false);\n \n         realm.users().get(userId).resetPassword(cred);\n \n         String accountUrl = RealmsResource.accountUrl(UriBuilder.fromUri(getAuthServerRoot())).build(REALM_NAME).toString();\n \n         driver.navigate().to(accountUrl);\n \n         assertEquals(\"Log in to admin-client-test\", driver.getTitle());\n \n         loginPage.login(\"user1\", \"password\");\n \n         assertEquals(\"Keycloak Account Management\", driver.getTitle());\n     }\n", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "repo name": "dbarentine/keycloak"}
{"repo_name": "deleteAllCookies_1133", "method name": "delete All Cookies", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     Cookie cookie1 = new Cookie.Builder(\"fish1\", \"cod\")\n         .domain(appServer.getHostName()).build();\n     Cookie cookie2 = new Cookie.Builder(\"fish2\", \"tune\")\n         .domain(appServer.getAlternateHostName()).build();\n \n     String url1 = domainHelper.getUrlForFirstValidHostname(\"/common\");\n     String url2 = domainHelper.getUrlForSecondValidHostname(\"/common\");\n \n     WebDriver.Options options = driver.manage();\n \n     options.addCookie(cookie1);\n     assertCookieIsPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     options.addCookie(cookie2);\n     assertCookieIsNotPresentWithName(cookie1.getName());\n     assertCookieIsPresentWithName(cookie2.getName());\n \n     driver.get(url1);\n     assertCookieIsPresentWithName(cookie1.getName());\n     assertCookieIsNotPresentWithName(cookie2.getName());\n \n     options.deleteAllCookies();\n     assertCookieIsNotPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     assertCookieIsPresentWithName(cookie2.getName());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "krosenvold/selenium"}
{"repo_name": "canBlockInvalidSslCertificates_1134", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "yumingjuan/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1135", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test", "Ignore(value = {IE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "amar-sharma/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1136", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, IE, PHANTOMJS, SAFARI, MARIONETTE})", "NotYetImplemented(HTMLUNIT)", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "amar-sharma/selenium"}
{"repo_name": "getWebDriver_1137", "method name": "get Web Driver", "comments": [], "url": true, "content": "\tprivate WebDriver function(){\n \t\tWebDriver driver = null;\n \n \t\tif (driver==null){\n \t\t\ttry {\n \t\t\t\tFirefoxBinary ffox = new FirefoxBinary();\n \t\t\t\tif (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n \t\t\t\t\tffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to run with DISPLAY 99\n \t\t\t\t}\n \t\t\t\tFirefoxProfile profile = new FirefoxProfile();\n \t\t\t\tdriver = new FirefoxDriver(ffox, profile);\n \t\t\t} catch (Exception e){\n \t\t\t}\n \t\t}\n \n \t\tif (driver==null){\n \t\t\ttry {\n \t\t\t\tdriver = new ChromeDriver();\n \t\t\t} catch (Exception e){\n \t\t\t}\n \t\t}\n \n \t\tif (driver==null){\n \t\t\ttry {\n \t\t\t\tdriver = new SafariDriver();\n \t\t\t} catch (Exception e){\n \t\t\t}\n \t\t}\n \n \t\tString url;\n \t\tif (System.getProperty(\"url\")!=null) {\n \t\t\turl = System.getProperty(\"url\");\n \t\t} else {\n \t\t\turl = \"http://localhost:8080\";\n \t\t}\n \n \t\tlong start = System.currentTimeMillis();\n \t\tboolean loaded = false;\n \t\tdriver.get(url);\n \n \t\twhile (System.currentTimeMillis() - start < 60*1000) {\n \t        // wait for page load\n \t\t\ttry {\n \t\t        (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n \t\t            @Override\n                 public Boolean apply(WebDriver d) {\n \t\t                return d.findElement(By.partialLinkText(\"Start\")).isDisplayed();\n \t\t            }\n \t\t        });\n \t\t        loaded = true;\n \t\t        break;\n \t\t\t} catch (TimeoutException e){\n \t\t\t\tdriver.navigate().to(url);\n \t\t\t}\n \t\t}\n \n \t\tif (loaded==false) {\n \t\t\tfail();\n \t\t}\n \n \t\treturn driver;\n \t}\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/ZeppelinIT.java", "repo name": "blrunner/incubator-zeppelin"}
{"repo_name": "getWebDriver_1138", "method name": "get Web Driver", "comments": [], "url": true, "content": "  static WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n           // run with DISPLAY 99\n         }\n         int firefoxVersion = WebDriverManager.getFirefoxVersion();\n         LOG.info(\"Firefox version \" + firefoxVersion + \" detected\");\n \n         downLoadsDir = FileUtils.getTempDirectory().toString();\n \n         String tempPath = downLoadsDir + \"/firebug/\";\n \n         downloadFireBug(firefoxVersion, tempPath);\n \n         final String firebugPath = tempPath + \"firebug.xpi\";\n         final String firepathPath = tempPath + \"firepath.xpi\";\n \n         FirefoxProfile profile = new FirefoxProfile();\n         profile.setPreference(\"browser.download.folderList\", 2);\n         profile.setPreference(\"browser.download.dir\", downLoadsDir);\n         profile.setPreference(\"browser.helperApps.alwaysAsk.force\", false);\n         profile.setPreference(\"browser.download.manager.showWhenStarting\", false);\n         profile.setPreference(\"browser.download.manager.showAlertOnComplete\", false);\n         profile.setPreference(\"browser.download.manager.closeWhenDone\", true);\n         profile.setPreference(\"app.update.auto\", false);\n         profile.setPreference(\"app.update.enabled\", false);\n         profile.setPreference(\"dom.max_script_run_time\", 0);\n         profile.setPreference(\"dom.max_chrome_script_run_time\", 0);\n         profile.setPreference(\"browser.helperApps.neverAsk.saveToDisk\", \"application/x-ustar,application/octet-stream,application/zip,text/csv,text/plain\");\n         profile.setPreference(\"network.proxy.type\", 0);\n \n         profile.addExtension(new File(firebugPath));\n         profile.addExtension(new File(firepathPath));\n \n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while FireFox Driver \", e);\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while ChromeDriver \", e);\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while SafariDriver \", e);\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         LOG.info(\"Exception in WebDriverManager while WebDriverWait \", e);\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/WebDriverManager.java", "repo name": "HeartSaVioR/incubator-zeppelin"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1139", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "krosenvold/selenium-git-release-candidate"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_1140", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "dbo/selenium"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_1141", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": ["Ignore(value = {IE, CHROME, SELENESE, IPHONE, OPERA, ANDROID, SAFARI, OPERA_MOBILE, PHANTOMJS},", "Test"], "url": true, "content": "  public void function() {\n     // TODO(user): Set the SSL capability to true.\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     driver.get(url);\n \n     assertThat(driver.getTitle(), equalTo(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "jmt4/Selenium2"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1142", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE, PHANTOMJS, SAFARI, SELENESE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(TestUtilities.isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "jmt4/Selenium2"}
{"repo_name": "navigateToService_1143", "method name": "navigate To Service", "comments": [" Navigates to the given service name in the current namespace", " @return the URL navigated to"], "url": true, "content": "    public String function(String serviceName) {\n         String url = getServiceUrl(serviceName);\n         WebDriver driver = getDriver();\n         driver.navigate().to(url);\n         return url;\n     }\n", "path": "components/fabric8-selenium/src/main/java/io/fabric8/selenium/WebDriverFacade.java", "repo name": "KurtStam/fabric8"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1144", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "blueyed/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1145", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "blueyed/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1146", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE},"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "blueyed/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1147", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "blueyed/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1148", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "blueyed/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1149", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "blueyed/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_1150", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "blueyed/selenium"}
{"repo_name": "canBlockInvalidSslCertificates_1151", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "blueyed/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1152", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "bmannix/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1153", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "bmannix/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1154", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE},"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "bmannix/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1155", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "bmannix/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1156", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "bmannix/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1157", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "bmannix/selenium"}
{"repo_name": "testWithWebDriver_1158", "method name": "test With Web Driver", "comments": [" @Test"], "url": true, "content": "    public void function() throws Exception {\n         HttpProxyServer proxyServer = DefaultHttpProxyServer.bootstrap()\n                 .withPort(0)\n                 .start();\n \n         Proxy proxy = new Proxy();\n         proxy.setProxyType(Proxy.ProxyType.MANUAL);\n         String proxyStr = String.format(\"localhost:%d\", proxyServer.getListenAddress().getPort());\n         proxy.setHttpProxy(proxyStr);\n         proxy.setSslProxy(proxyStr);\n \n         DesiredCapabilities capability = DesiredCapabilities.firefox();\n         capability.setCapability(CapabilityType.PROXY, proxy);\n \n         final String urlString = \"http://www.yahoo.com/\";\n \n         // Note this will actually launch a browser!!\n         final WebDriver driver = new FirefoxDriver(capability);\n         driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);\n \n         driver.get(urlString);\n         final String source = driver.getPageSource();\n \n         // Just make sure it got something within reason.\n         assertThat(source.length(), greaterThan(100));\n         driver.close();\n \n         proxyServer.abort();\n     }\n", "path": "src/test/java/org/littleshoot/proxy/EndToEndStoppingTest.java", "repo name": "jekh/LittleProxy"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1159", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "compstak/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1160", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "compstak/selenium"}
{"repo_name": "openTestURL_1161", "method name": "open Test URL", "comments": [], "url": true, "content": "    private void function(Class<?> uiClass, Set<String> parameters) {\n         String url = getTestURL(uiClass);\n \n         if (isDebug()) {\n             parameters.add(\"debug\");\n         }\n \n         if (LegacyApplication.class.isAssignableFrom(uiClass)) {\n             parameters.add(\"restartApplication\");\n         }\n \n         if (parameters.size() > 0) {\n             url += \"?\" + Joiner.on(\"&\").join(parameters);\n         }\n \n         driver.get(url);\n     }\n", "path": "uitest/src/com/vaadin/tests/tb3/AbstractTB3Test.java", "repo name": "shahrzadmn/vaadin"}
{"repo_name": "testJsonDataLoaded_1162", "method name": "test Json Data Loaded", "comments": [" confirm an option for each currency in data file"], "url": true, "content": "    public void function() throws Exception {\n         String jsonUrl = baseUrl + jsonDataPath;\n         Map<String, Map<String, String>> membershipData = mapper.readValue(new URL(jsonUrl), Map.class);\n         assertTrue(membershipData.keySet().containsAll(currencies));\n         \n         String pageUrl = baseUrl + paymentPage;\n         driver.get(pageUrl);\n         waitOnXpathsPresent(Arrays.asList(\"//select[@id='displayed-currency']/option[@value='\" + defaultCurrency + \"']\"));\n         List<WebElement> options = driver.findElements(By.xpath(\"//select[@id='displayed-currency']/option\"));\n         assertTrue(options.size() == currencies.size());\n         driver.close();\n     }\n", "path": "selenium/src/test/java/PagesPaymentTest.java", "repo name": "daisieh/dryad-repo"}
{"repo_name": "testChangeCurrency_1163", "method name": "test Change Currency", "comments": [" click on the \"Show all amounts in\" options and confirm updates on page"], "url": true, "content": "    public void function() throws Exception {\n         String jsonUrl = baseUrl + jsonDataPath;\n         Map<String, Map<String, String>> membershipData = mapper.readValue(new URL(jsonUrl), Map.class);\n         assertTrue(membershipData.keySet().containsAll(currencies));\n         \n         String pageUrl = baseUrl + paymentPage;\n         driver.get(pageUrl);\n         waitOnXpathsPresent(Arrays.asList(\"//select[@id='displayed-currency']/option[@value='\" + defaultCurrency + \"']\"));\n \n         for (Entry<String, Map<String, String>> entry : membershipData.entrySet()) {\n             String currency = entry.getKey();\n             Map<String, String> values = entry.getValue();\n             WebElement elt = driver.findElement(By.xpath(\"//select[@id='displayed-currency']/option[@value='\" + currency + \"']\"));\n             elt.click();\n             for (Entry<String,String> value: values.entrySet()) {\n                 String klass = \"msg-\" + value.getKey();\n                 if (displayClasses.contains(klass)) {\n                     String amount = value.getValue();\n                     WebElement span = driver.findElement(By.className(klass));\n                     assertTrue(span.getText().equals(amount));\n                 }\n             }\n         }\n         driver.close();\n     }\n", "path": "selenium/src/test/java/PagesPaymentTest.java", "repo name": "daisieh/dryad-repo"}
{"repo_name": "testCanNavigateToAGivenUrl_1164", "method name": "test Can Navigate To A Given Url", "comments": [], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tfinal String url = \"http://www.example.com\";\n \t\t\n \t\tchecking(new Expectations() {{ \n \t\t\tone(webdriver).get(url);\n \t\t}});\n \t\t\n \t\tcontext.goTo(url);\n \t}\n", "path": "support/test/java/org/openqa/selenium/lift/WebDriverTestContextTest.java", "repo name": "mfazekas/safaridriver"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1165", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "jsarenik/jajomojo-selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1166", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE, PHANTOMJS, SAFARI, MARIONETTE})", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "jsarenik/jajomojo-selenium"}
{"repo_name": "handleFormWithJavascriptAction_1167", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, PHANTOMJS, SAFARI, SELENESE, OPERA_MOBILE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "qamate/iOS-selenium-server"}
{"repo_name": "testCanNavigateToAGivenUrl_1168", "method name": "test Can Navigate To A Given Url", "comments": [], "url": true, "content": "\tpublic void function() throws Exception {\n \n \t\tfinal String url = \"http://www.example.com\";\n \t\t\n \t\tchecking(new Expectations() {{ \n \t\t\tone(webdriver).get(url);\n \t\t}});\n \t\t\n \t\tcontext.goTo(url);\n \t}\n", "path": "support/test/java/org/openqa/selenium/lift/TestContextTest.java", "repo name": "brownman/selenium-webdriver"}
{"repo_name": "LoginAspectTest_1169", "method name": "Login Aspect Test", "comments": [], "url": true, "content": "    public function() throws Exception {\n         driver = new FirefoxDriver();\n         driver.get(baseUrl + \"/login\");\n     }\n", "path": "brjs-sdk/apps/it-app/default-aspect/test-integration/webdriver/LoginAspectTest.java", "repo name": "trueadm/brjs"}
{"repo_name": "handleFormWithJavascriptAction_1170", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {HTMLUNIT, OPERA, PHANTOMJS, SAFARI, OPERA_MOBILE, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "sebady/selenium"}
{"repo_name": "resetUserPassword_1171", "method name": "reset User Password", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String userId = createUser(\"user1\", \"user1@localhost\");\n \n         CredentialRepresentation cred = new CredentialRepresentation();\n         cred.setType(CredentialRepresentation.PASSWORD);\n         cred.setValue(\"password\");\n         cred.setTemporary(false);\n \n         realm.users().get(userId).resetPassword(cred);\n \n         String accountUrl = RealmsResource.accountUrl(UriBuilder.fromUri(Constants.AUTH_SERVER_ROOT)).build(REALM_NAME).toString();\n \n         driver.navigate().to(accountUrl);\n \n         assertEquals(\"Log in to admin-client-test\", driver.getTitle());\n \n         loginPage.login(\"user1\", \"password\");\n \n         assertEquals(\"Keycloak Account Management\", driver.getTitle());\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "repo name": "cfsnyder/keycloak"}
{"repo_name": "handleFormWithJavascriptAction_1172", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {ANDROID, HTMLUNIT, IPHONE, OPERA, PHANTOMJS, SAFARI, OPERA_MOBILE, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "xlzdew/seleniumpr"}
{"repo_name": "testESPublisherAssetOverridePartialTestCase_1173", "method name": "test ES Publisher Asset Override Partial Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding a partial in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(updateUrl);\n         assertTrue(isElementPresent(driver, By.id(\"assetOverriddenListingH1\")));\n         assertEquals(driver.findElement(By.id(\"assetOverriddenListingH1\")).getText(), \"New Asset Update Partial of Publisher\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverridePartialTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testESPublisherAssetOverrideListAssetBodyPartialTestCase_1174", "method name": "test ES Publisher Asset Override List Asset Body Partial Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding listAssetTableBody partial in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/assets/servicex/list\");\n         assertTrue(isElementPresent(driver, By.className(\"assetOverriddenListingElement\")));\n         assertEquals(driver.findElement(By.className(\"assetOverriddenListingElement\")).getText(), \"New Asset List Partial of Publisher\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverridePartialTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_1175", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "aluedeke/chromedriver"}
{"repo_name": "handleFormWithJavascriptAction_1176", "method name": "handle Form With Javascript Action", "comments": ["Test(enabled = false)", " @Ignore(value = { ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, SAFARI,", " SELENESE, OPERA_MOBILE }, reason =", " \"Untested on all other browsers, fails on chrome, fails on IE.\", issues = {", " 3508 })"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.dismiss();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "ios-selenium-tests/src/test/java/org/uiautomation/ios/selenium/FormHandlingTest.java", "repo name": "ios-driver/ios-driver"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_1177", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "orange-tv-blagnac/selenium"}
{"repo_name": "deleteAllCookies_1178", "method name": "delete All Cookies", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     Cookie cookie1 = new Cookie.Builder(\"fish1\", \"cod\")\n         .domain(appServer.getHostName()).build();\n     Cookie cookie2 = new Cookie.Builder(\"fish2\", \"tune\")\n         .domain(appServer.getAlternateHostName()).build();\n \n     String url1 = domainHelper.getUrlForFirstValidHostname(\"/common\");\n     String url2 = domainHelper.getUrlForSecondValidHostname(\"/common\");\n \n     WebDriver.Options options = driver.manage();\n \n     options.addCookie(cookie1);\n     assertCookieIsPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     options.addCookie(cookie2);\n     assertCookieIsNotPresentWithName(cookie1.getName());\n     assertCookieIsPresentWithName(cookie2.getName());\n \n     driver.get(url1);\n     assertCookieIsPresentWithName(cookie1.getName());\n     assertCookieIsNotPresentWithName(cookie2.getName());\n \n     options.deleteAllCookies();\n     assertCookieIsNotPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     assertCookieIsPresentWithName(cookie2.getName());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "dkentw/selenium"}
{"repo_name": "fakeTypeURL_1179", "method name": "fake Type URL", "comments": [], "url": true, "content": "  private void function(String url) {\n     getWebDriver().get(url);\n   }\n", "path": "server/src/main/java/org/uiautomation/ios/command/web/GetHandler.java", "repo name": "freynaud/ios-driver"}
{"repo_name": "testShouldBeAbleToAccessPagesWithAnInsecureSslCertificate_1180", "method name": "test Should Be Able To Access Pages With An Insecure Ssl Certificate", "comments": [" @Ignore(value = {IE, CHROME, SELENESE, IPHONE, OPERA, ANDROID, SAFARI,", " OPERA_MOBILE}, reason = \"Safari: does not support insecure SSL\")", "Test(enabled = false)"], "url": true, "content": "  public void function() {\n     // TODO(user): Set the SSL capability to true.\n     //String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n     //driver.get(url);\n \n     //Assert.assertEquals(driver.getTitle(), (\"Hello WebDriver\"));\n   }\n", "path": "ios-selenium-tests/src/test/java/org/uiautomation/ios/selenium/PageLoadingTest.java", "repo name": "seem-sky/ios-driver"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1181", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": [" @Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, OPERA, OPERA_MOBILE,", " SAFARI, SELENESE})", "Test(enabled = false)"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     /*\n      * assumeTrue(TestUtilities.isLocal());\n      * \n      * DesiredCapabilities requiredCaps = new DesiredCapabilities();\n      * requiredCaps.setCapability(ACCEPT_SSL_CERTS, false); WebDriverBuilder\n      * builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n      * localDriver = builder.get();\n      * \n      * String url =\n      * GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\"\n      * ); localDriver.get(url);\n      * \n      * assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n      */\n   }\n", "path": "ios-selenium-tests/src/test/java/org/uiautomation/ios/selenium/PageLoadingTest.java", "repo name": "seem-sky/ios-driver"}
{"repo_name": "testUpdateNotification_1182", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update event\","], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         AssetUtil.updateAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_DESCRIPTION);\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         //read email using smtp\n         boolean hasMail = (ESUtil.readEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, updateNotificationSubject) != null);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherTenantNotificationTestCase.java", "repo name": "splinter/product-es"}
{"repo_name": "testUpdateNotification_1183", "method name": "test Update Notification", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Testing mails for asset update event\","], "url": true, "content": "    public void function() throws Exception {\n         //Update gadget and check lC state change notification\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         AssetUtil.updateAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_DESCRIPTION);\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         //read email using smtp\n         boolean hasMail = (ESUtil.readEmail(smtpPropertyLocation, EMAIL_PWD, EMAIL, updateNotificationSubject) != null);\n         assertTrue(hasMail, \"Asset Update Notification failed for user:\" + currentUserName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherNotificationTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testChangeCurrency_1184", "method name": "test Change Currency", "comments": [" click on the \"Show all amounts in\" options and confirm updates on page"], "url": true, "content": "    public void function() throws Exception {\n         String jsonUrl = baseUrl + jsonDataPath;\n         Map<String, Map<String, String>> membershipData = mapper.readValue(new URL(jsonUrl), Map.class);\n         assertTrue(membershipData.keySet().containsAll(plans));\n         \n         String pageUrl = baseUrl + paymentPlanComparisonToolPage;\n         driver.get(pageUrl);\n         \n         WebElement btnCalculate = driver.findElement(By.xpath(calculateButtonXpath));\n         \n         for (PageResult r : pageResults) {\n             //  How many research articles do you publish per year?\n             WebElement apy = driver.findElement(By.xpath(apyXpath)); // articles_per_year\n             apy.clear();\n             apy.sendKeys(r.articlesPerYear);\n             //  What percentage of articles do you expect will have data in Dryad?\n             WebElement pwd = driver.findElement(By.xpath(pwdXpath)); // percentage_with_deposits\n             pwd.clear();\n             pwd.sendKeys(r.percentageWithDeposits);\n             //  Is your gross annual income LESS than 10 Million Dollars? Yes No \n             WebElement radio = null;\n             if (r.under10m) {\n                 radio = driver.findElement(By.xpath(under10mXpath));\n             } else {\n                 radio = driver.findElement(By.xpath(over10mXpath));\n             }\n             radio.click();\n             btnCalculate.click();\n             sleepMS(postClickSleepMS);\n             for (int i = 0; i < plans.size(); ++i) {\n                 for (int j = 0; j < columns.size(); ++j) {\n                     if (r.error) {                        \n                         assertTrue(xpathsPresent(r.errorXpaths));\n                     } else {\n                         String xp = \"//tr[@id='\" + plans.get(i) + \"']/td[@class='\" + columns.get(j) + \"']\";\n                         WebElement cell = driver.findElement(By.xpath(xp));\n                         String expected = r.table.get(i).get(j);\n                         String got = cell.getText();\n                         String msg = \"Table value for \" + xp + \" expected '\" + expected + \"' got '\" + got + \"'\";\n                         assertTrue(msg, got.equals(expected));\n                     }\n                     \n                 }\n             }\n             btnCalculate.click();\n         }\n         driver.close();\n     }\n", "path": "selenium/src/test/java/PagesPaymentPlanComparisonTool.java", "repo name": "datadryad/dryad-repo"}
{"repo_name": "testJsonDataLoaded_1185", "method name": "test Json Data Loaded", "comments": [" confirm an option for each currency in data file"], "url": true, "content": "    public void function() throws Exception {\n         String jsonUrl = baseUrl + jsonDataPath;\n         Map<String, Map<String, String>> membershipData = mapper.readValue(new URL(jsonUrl), Map.class);\n         assertTrue(membershipData.keySet().containsAll(currencies));\n         \n         String pageUrl = baseUrl + membershipOverviewPage;\n         driver.get(pageUrl);\n         waitOnXpathsPresent(Arrays.asList(\"//select[@id='displayed-currency']/option[@value='\" + defaultCurrency + \"']\"));\n         List<WebElement> options = driver.findElements(By.xpath(\"//select[@id='displayed-currency']/option\"));\n         assertTrue(options.size() == currencies.size());\n         driver.close();\n     }\n", "path": "selenium/src/test/java/PagesMembershipOverviewTest.java", "repo name": "ojacobson/dryad-repo"}
{"repo_name": "testChangeCurrency_1186", "method name": "test Change Currency", "comments": [" click on the \"Show all amounts in\" options and confirm updates on page"], "url": true, "content": "    public void function() throws Exception {\n         String jsonUrl = baseUrl + jsonDataPath;\n         Map<String, Map<String, String>> membershipData = mapper.readValue(new URL(jsonUrl), Map.class);\n         assertTrue(membershipData.keySet().containsAll(currencies));\n         \n         String pageUrl = baseUrl + membershipOverviewPage;\n         driver.get(pageUrl);\n         waitOnXpathsPresent(Arrays.asList(\"//select[@id='displayed-currency']/option[@value='\" + defaultCurrency + \"']\"));\n \n         for (Entry<String, Map<String, String>> entry : membershipData.entrySet()) {\n             String currency = entry.getKey();\n             Map<String, String> values = entry.getValue();\n             WebElement elt = driver.findElement(By.xpath(\"//select[@id='displayed-currency']/option[@value='\" + currency + \"']\"));\n             elt.click();\n             for (Entry<String,String> value: values.entrySet()) {\n                 String klass = value.getKey();\n                 String amount = value.getValue();\n                 WebElement span = driver.findElement(By.className(klass));\n                 assertTrue(span.getText().equals(amount));\n             }\n         }\n         driver.close();\n     }\n", "path": "selenium/src/test/java/PagesMembershipOverviewTest.java", "repo name": "ojacobson/dryad-repo"}
{"repo_name": "testBannerLoaded_1187", "method name": "test Banner Loaded", "comments": [" confirm minimal content for page banner"], "url": true, "content": "    public void function() throws Exception {\n         String pageUrl = baseUrl + goodPage;\n         driver.get(pageUrl);\n         sleepMS(pageLoadWait);\n         assertTrue(xpathsPresent(bannerParaXpaths));\n         driver.close();\n     }\n", "path": "selenium/src/test/java/JournalLandingPageTests.java", "repo name": "rnathanday/dryad-repo"}
{"repo_name": "testBrowseButtons_1188", "method name": "test Browse Buttons", "comments": [" cycle through the tab buttons and confirm panel contents visibility"], "url": true, "content": "    public void function() throws Exception {\n         String pageUrl = baseUrl + goodPage;\n         driver.get(pageUrl);\n         for (int i = buttonMin; i <= buttonMax; ++i) {\n             driver.findElement(By.xpath(String.format(tabButtonFmt, i))).click();\n             sleepMS(clickWait);\n             assertTrue(driver.findElement(By.xpath(String.format(tabDivFmt, i))).isDisplayed());\n         }\n         driver.close();\n     }\n", "path": "selenium/src/test/java/JournalLandingPageTests.java", "repo name": "rnathanday/dryad-repo"}
{"repo_name": "testSearchForm_1189", "method name": "test Search Form", "comments": [" confirm that the search page loads when the search form is submitted"], "url": true, "content": "    public void function() throws Exception {\n         String pageUrl = baseUrl + goodPage;\n         driver.get(pageUrl);\n         sleepMS(pageLoadWait);\n         WebElement form = driver.findElement(By.xpath(searchFormXpath));\n         WebElement input = driver.findElement(By.xpath(searchInputXpath));\n         assertTrue(input.isDisplayed());\n         input.sendKeys(searchText);\n         form.submit();\n         assertTrue(driver.getTitle().equals(searchResultsPageTitle));\n         String expectedUrlBasePath = baseUrl + searchUrlPath;\n         String actualUrlAll = driver.getCurrentUrl();\n         assertTrue(actualUrlAll.length() >= expectedUrlBasePath.length());\n         assertTrue(actualUrlAll.substring(0, expectedUrlBasePath.length()).equals(expectedUrlBasePath));        \n         driver.close();\n     }    \n", "path": "selenium/src/test/java/JournalLandingPageTests.java", "repo name": "rnathanday/dryad-repo"}
{"repo_name": "logoutFromAdminConsole_1190", "method name": "logout From Admin Console", "comments": [" To logout from admin console", " @param driver WebDriver instance", " @param url    base url of the server"], "url": true, "content": "    public static void function(ESWebDriver driver, String url) {\n         driver.get(url + ADMIN_CONSOLE_SUFFIX);\n         driver.findElement(By.linkText(\"Sign-out\")).click();\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/es/ui/integration/util/ESUtil.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "testPageLoad_1191", "method name": "test Page Load", "comments": [" confirm that the static pages load and are not the not-found page", " (which is returned with a 200 code)"], "url": true, "content": "    public void function() throws Exception {\n         for (String p : pageNames200) {\n             String url = baseUrl + pageRoot + p;\n             driver.get(url);\n             sleepMS(loadSleep);\n             // will raise an exception \n             WebElement pnfDiv = null;\n             try {\n                 pnfDiv = driver.findElement(By.id(pageNotFoundId));\n             } catch(NoSuchElementException e) {}\n             assertTrue(\"Not-found div found in page\", pnfDiv == null);\n         }\n     }\n", "path": "selenium/src/test/java/PagesAllStaticPages.java", "repo name": "elizabethdryad/dryad-repo"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_1192", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["Ignore(value = {SELENESE})", "Test"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "krosenvold/selenium-git-release-candidate"}
{"repo_name": "testGadgetPage_1193", "method name": "test Gadget Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Gadgets Page\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, MAX_POLL_COUNT);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(\"Gadgets\")));\n         assertTrue(isElementPresent(driver, By.linkText(\"Gadgets\")), \"Gadgets heading missing\");\n         assertTrue(isElementPresent(driver,By.linkText(LINE_PLUS_BAR_CHART)), LINE_PLUS_BAR_CHART + \" Gadgets missing\");\n         assertTrue(isElementPresent(driver,By.linkText(LINE_CHART)),LINE_CHART + \" Gadgets missing\");\n         assertTrue(isElementPresent(driver,By.cssSelector(\"span.advanced-search-text\")), \"Advanced search missing\");\n         assertTrue(isElementPresent(driver,By.cssSelector(\"#sortDropdown > img\")), \"Sorting dropdown missing\");\n         assertEquals(driver.findElement(By.cssSelector(\"span.sort-asset-info\")).getText(), \"( Date/Time Created )\");\n         driver.findElement(By.cssSelector(\"#sortDropdown > img\")).click();\n         assertTrue(isElementPresent(driver,By.linkText(\"POPULAR\")), \"Popular sort missing\");\n         assertTrue(isElementPresent(driver,By.linkText(\"NAME\")), \"Sort by name missing\");\n         assertTrue(isElementPresent(driver,By.linkText(\"DATE/TIME CREATED\")),\"Sort by created date/time missing\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreGadgetPageTestCase.java", "repo name": "wso2/product-es"}
{"repo_name": "testLinksFromPage_1194", "method name": "test Links From Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Gadgets Page Links\","], "url": true, "content": "    public void function() throws Exception {\n         //test links\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         driver.findElement(By.linkText(\"WSO2 Carbon Commits List Discussion\")).click();\n         assertEquals(driver.findElement(By.cssSelector(\"h3\")).getText(), \"Gadget Details\",\n                 \"Cannot reach asset details page from gadget list page\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreGadgetPageTestCase.java", "repo name": "wso2/product-es"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1195", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "freynaud/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1196", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "freynaud/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1197", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "freynaud/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1198", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test", "Ignore(value = {OPERA, OPERA_MOBILE}, reason = \"Opera: failed\")"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "freynaud/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1199", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test", "Ignore(value = {HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "freynaud/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1200", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test", "Ignore(value = {HTMLUNIT, OPERA, OPERA_MOBILE, ANDROID, IPHONE, MARIONETTE}, reason"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "freynaud/selenium"}
{"repo_name": "deleteAllCookies_1201", "method name": "delete All Cookies", "comments": ["Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() throws Exception {\n     assumeTrue(domainHelper.checkHasValidAlternateHostname());\n \n     Cookie cookie1 = new Cookie.Builder(\"fish1\", \"cod\")\n         .domain(appServer.getHostName()).build();\n     Cookie cookie2 = new Cookie.Builder(\"fish2\", \"tune\")\n         .domain(appServer.getAlternateHostName()).build();\n \n     String url1 = domainHelper.getUrlForFirstValidHostname(\"/common\");\n     String url2 = domainHelper.getUrlForSecondValidHostname(\"/common\");\n \n     WebDriver.Options options = driver.manage();\n \n     options.addCookie(cookie1);\n     assertCookieIsPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     options.addCookie(cookie2);\n     assertCookieIsNotPresentWithName(cookie1.getName());\n     assertCookieIsPresentWithName(cookie2.getName());\n \n     driver.get(url1);\n     assertCookieIsPresentWithName(cookie1.getName());\n     assertCookieIsNotPresentWithName(cookie2.getName());\n \n     options.deleteAllCookies();\n     assertCookieIsNotPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     assertCookieIsPresentWithName(cookie2.getName());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "twalpole/selenium"}
{"repo_name": "loginLoginHint_1202", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "Smartling/keycloak"}
{"repo_name": "testESRegisterUserTestCase_1203", "method name": "test ES Register User Test Case", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing user registration\")"], "url": true, "content": "    public void function() throws Exception {\n         //Register new user\n         driver.get(baseUrl + STORE_URL);\n         driver.findElement(By.id(\"btn-register\")).click();\n         driver.findElement(By.id(\"reg-username\")).clear();\n         driver.findElement(By.id(\"reg-username\")).sendKeys(NEW_USER_NAME);\n         driver.findElement(By.id(\"reg-password\")).clear();\n         driver.findElement(By.id(\"reg-password\")).sendKeys(NEW_USER_PWD);\n         driver.findElement(By.id(\"reg-password2\")).clear();\n         driver.findElement(By.id(\"reg-password2\")).sendKeys(NEW_USER_PWD);\n \n         driver.findElement(By.name(\"reg-email\")).clear();\n         driver.findElement(By.name(\"reg-email\")).sendKeys(NEW_USER_EMAIL);\n         driver.findElement(By.name(\"reg-first-name\")).clear();\n         driver.findElement(By.name(\"reg-first-name\")).sendKeys(NEW_USER_FNAME);\n         driver.findElement(By.name(\"reg-last-name\")).clear();\n         driver.findElement(By.name(\"reg-last-name\")).sendKeys(NEW_USER_LNAME);\n         driver.findElement(By.id(\"registrationSubmit\")).click();\n         // check the success message\n         assertTrue(isElementPresent(driver,By.id(\"regFormSuc\")),\"User creation failed.\");\n         driver.findElement(By.id(\"signInLink\")).click();\n \n         driver.findElementPoll(By.id(\"username\"), MAX_POLL_COUNT);\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(NEW_USER_NAME);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(NEW_USER_PWD);\n         driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n \n         WebElement userNameElement = driver.findElement(By.id(\"logedInUser\"));\n \n         assertEquals(userNameElement.getText().trim(), NEW_USER_NAME);\n \n         //Checking claim from carbon console.\n         driver.get(baseUrl + MANAGEMENT_CONSOLE_URL);\n         driver.findElement(By.id(\"txtUserName\")).clear();\n         driver.findElement(By.id(\"txtUserName\")).sendKeys(adminUserName);\n         driver.findElement(By.id(\"txtPassword\")).clear();\n         driver.findElement(By.id(\"txtPassword\")).sendKeys(adminUserPwd);\n \n         driver.findElement(By.cssSelector(\"input.button\")).click();\n         driver.findElement(By.linkText(\"Users and Roles\")).click();\n         driver.findElement(By.linkText(\"Users\")).click();\n         driver.findElement(By.cssSelector(\"#userTable tbody tr:last-child td:nth-child(2) a:nth-child(5)\")).click();\n         driver.findElement(By.linkText(\"default\")).click();\n         assertEquals(driver.findElement(By.cssSelector(\".styledLeft tr:nth-child(7) input\")).getAttribute(\"value\"), NEW_USER_EMAIL , \"Claims are not working properly.\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRegisterUserTestCase.java", "repo name": "udarakr/product-es"}
{"repo_name": "testESStoreBookmarkTestCase_1204", "method name": "test ES Store Bookmark Test Case", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Bookmarking\")"], "url": true, "content": "    public void function() throws Exception {\n \n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //get the first element from the gadget list\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector\n                 (\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")));\n         String bookmarkedAsset = driver.findElement(By.cssSelector\n                 (\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")).getText();\n         driver.findElement(By.cssSelector(\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")).click();\n \n         //bookmark the asset\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"btn-add-gadget\")));\n         driver.findElement(By.id(\"btn-add-gadget\")).click();\n \n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"main-bookmark\"), \"Bookmarked\"));\n         assertEquals(\"Bookmarked\", driver.findElement(By.id(\"main-bookmark\")).getText(), \"Bookmarking failed\");\n \n         //check if shown in My Items page\n         driver.findElement(By.cssSelector(\".bookmark-link-text\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"div.ast-title a.ast-name\")));\n         assertEquals(bookmarkedAsset, driver.findElement(By.cssSelector(\"div.ast-title a.ast-name\")).getText(),\n                 \"Bookmarked asset not shown in My Items page\");\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreBookmarkTestCase.java", "repo name": "udarakr/product-es"}
{"repo_name": "testSubscriptionCreation_1205", "method name": "test Subscription Creation", "comments": ["Test(groups = \"wso2.es\", description = \"Check if subscriptions are created\", enabled = true)"], "url": true, "content": "    public void function() throws Exception {\n         //add new gadget\n         AssetUtil.addNewAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_VERSION, \"\", \"\", \"\");\n         if (isAlertPresent(driver)) {\n             closeAlertAndGetItsText(driver, true);\n         }\n         //navigate to admin console\n         driver.get(baseUrl + \"/carbon/\");\n         driver.findElement(By.linkText(\"Gadgets\")).click();\n         driver.findElementPoll(By.linkText(\"NAME\"), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(\"NAME\")).click();\n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(assetName)).click();\n         //check two subscriptions\n         String subscription1 = driver.findElement(By.cssSelector(\"#subscriptionsTable > tbody > \" +\n                 \"tr.tableOddRow > td\")).getText();\n         String subscription2 = driver.findElement(By.xpath\n                 (\"//table[@id='subscriptionsTable']/tbody/tr[3]/td\")).getText();\n         String subscription1Name;\n         String subscription2Name;\n         //used to make the test independent of the subscription creation order\n         if (LC_SUBSCRIPTION.equalsIgnoreCase(subscription1)) {\n             subscription1Name = LC_SUBSCRIPTION;\n             subscription2Name = UPDATE_SUBSCRIPTION;\n         } else {\n             subscription1Name = UPDATE_SUBSCRIPTION;\n             subscription2Name = LC_SUBSCRIPTION;\n         }\n         assertEquals(subscription1Name, subscription1);\n         assertEquals(subscription2Name, subscription2);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherSubscriptionTestCase.java", "repo name": "udarakr/product-es"}
{"repo_name": "addNewAsset_1206", "method name": "add New Asset", "comments": [" Add a new asset", " @param driver      WebDriver instance", " @param baseUrl     base url of the server", " @param assetType   asset type", " @param assetName   asset name", " @param version     version"], "url": true, "content": "    public static void function(WebDriver driver, String baseUrl, String assetType, String assetName, String version, String category, String url, String description) {\n         driver.get(baseUrl + \"/publisher/assets/\" + assetType + \"/list\");\n         WebDriverWait wait = new WebDriverWait(driver, MAX_POLL_COUNT);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Add\"+assetType)));\n         driver.findElement(By.id(\"Add\"+assetType)).click();\n         //driver.get(baseUrl+PUBLISHER_GADGET_CREATE_PAGE);\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(version);\n         if(!category.equals(\"\")){\n             new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(category);\n         }\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(url);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(description);\n         driver.findElement(By.name(\"images_thumbnail\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                                  +\"/../src/test/resources/images/thumbnail.jpg\");\n         driver.findElement(By.name(\"images_banner\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                               +\"/../src/test/resources/images/banner.jpg\");\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Add\"+assetType)));\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/es/ui/integration/util/AssetUtil.java", "repo name": "splinter/product-es"}
{"repo_name": "testRestrictAddAssetAsReviewer_1207", "method name": "test Restrict Add Asset As Reviewer", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"verify not being able to add asset\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         assertTrue(!isElementPresent(driver, By.id(\"Addgadget\")), \"User who has only internal/reviewer role can add \" +\n                 \"asset.\");\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRBACAsReviewerTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testRestrictEditAssetAsReviewer_1208", "method name": "test Restrict Edit Asset As Reviewer", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"verify not being able to edit asset\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         driver.findElement(By.cssSelector(\"h3.ast-name\")).click();\n         assertTrue(!isElementPresent(driver, By.id(\"Edit\")), \"User who has only internal/reviewer role can edit \" +\n                 \"asset.\");\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRBACAsReviewerTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testRestrictVersionAssetAsReviewer_1209", "method name": "test Restrict Version Asset As Reviewer", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"verify not being able to version asset\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         driver.findElement(By.cssSelector(\"h3.ast-name\")).click();\n         assertTrue(!isElementPresent(driver, By.id(\"Version\")), \"User who has only internal/reviewer role can version\" +\n                 \"asset.\");\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRBACAsReviewerTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testRestrictLoginToStoreAsReviewer_1210", "method name": "test Restrict Login To Store As Reviewer", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"verify not being able to login to store\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_TOP_ASSETS_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, MAX_POLL_COUNT);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"btn-signin\")));\n         driver.findElement(By.id(\"btn-signin\")).click();\n         assertEquals(driver.findElement(By.cssSelector(\"h3\")).getText(), \"You do not have permission to login to this\" +\n                 \" application.Please contact your administrator and request permission.\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRBACAsReviewerTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testESPublishToStore_1211", "method name": "test ES Publish To Store", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing Publishing an asset to store\")"], "url": true, "content": "    public void function() throws Exception {\n         //Add a new gadget with info\n         driver.findElement(By.id(\"Add\" + ASSET_TYPE)).click();\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(ASSET_NAME);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION);\n         driver.findElement(By.name(\"images_thumbnail\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                 +\"/../src/test/resources/images/thumbnail.jpg\");\n         driver.findElement(By.name(\"images_banner\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                 + \"/../src/test/resources/images/banner.jpg\");\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n //        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Add\" + ASSET_TYPE)));\n \n         //publish the gadget to store\n         driver.findElementPoll(By.linkText(ASSET_NAME), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(ASSET_NAME)).click();\n         driver.findElement(By.id(\"LifeCycle\")).click();\n \n         driver.findElement(By.id(\"lcActionPromote\")).click();\n //        driver.findElement(By.id(\"commentModalText\")).clear();\n //        driver.findElement(By.id(\"commentModalText\")).sendKeys(LC_COMMENT);\n //        driver.findElement(By.id(\"commentModalSave\")).click();\n \n         driver.get(driver.getCurrentUrl());\n         driver.findElement(By.id(\"lcActionPromote\")).click();\n //        driver.findElement(By.id(\"commentModalText\")).clear();\n //        driver.findElement(By.id(\"commentModalText\")).sendKeys(LC_COMMENT);\n //        driver.findElement(By.id(\"commentModalSave\")).click();\n         //navigate to store to check the published gadget\n         driver.get(baseUrl + STORE_URL);\n         driver.findElementPoll(By.linkText(ASSET_NAME), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(ASSET_NAME)).click();\n         assertEquals(ASSET_NAME, driver.findElement(By.cssSelector(\"h4\")).getText());\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESPublishToStore.java", "repo name": "charithag/product-es"}
{"repo_name": "deleteAllCookies_1212", "method name": "delete All Cookies", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     assumeTrue(domainHelper.checkHasValidAlternateHostname());\n \n     Cookie cookie1 = new Cookie.Builder(\"fish1\", \"cod\")\n         .domain(appServer.getHostName()).build();\n     Cookie cookie2 = new Cookie.Builder(\"fish2\", \"tune\")\n         .domain(appServer.getAlternateHostName()).build();\n \n     String url1 = domainHelper.getUrlForFirstValidHostname(\"/common\");\n     String url2 = domainHelper.getUrlForSecondValidHostname(\"/common\");\n \n     WebDriver.Options options = driver.manage();\n \n     options.addCookie(cookie1);\n     assertCookieIsPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     options.addCookie(cookie2);\n     assertCookieIsNotPresentWithName(cookie1.getName());\n     assertCookieIsPresentWithName(cookie2.getName());\n \n     driver.get(url1);\n     assertCookieIsPresentWithName(cookie1.getName());\n     assertCookieIsNotPresentWithName(cookie2.getName());\n \n     options.deleteAllCookies();\n     assertCookieIsNotPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     assertCookieIsPresentWithName(cookie2.getName());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "dcjohnson1989/selenium"}
{"repo_name": "testRestrictLoginToPublisherAsStoreOnlyUser_1213", "method name": "test Restrict Login To Publisher As Store Only User", "comments": ["Test(groups = \"wso2.es.store\", description = \"verify not being able to login to publisher\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         assertEquals(driver.findElement(By.cssSelector(\"h3\")).getText(), \"You do not have permission to login to this\" +\n                 \" application.Please contact your administrator and request permission.\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESRBACAsStoreUserTestCase.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "loginLoginHint_1214", "method name": "login Login Hint", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String loginFormUrl = oauth.getLoginFormUrl() + \"&login_hint=login-test\";\n         driver.navigate().to(loginFormUrl);\n \n         Assert.assertEquals(\"login-test\", loginPage.getUsername());\n         loginPage.login(\"password\");\n \n         Assert.assertEquals(RequestType.AUTH_RESPONSE, appPage.getRequestType());\n         Assert.assertNotNull(oauth.getCurrentQuery().get(OAuth2Constants.CODE));\n \n         events.expectLogin().user(userId).detail(Details.USERNAME, \"login-test\").assertEvent();\n     }\n", "path": "testsuite/integration/src/test/java/org/keycloak/testsuite/forms/LoginTest.java", "repo name": "j-bore/keycloak"}
{"repo_name": "getWebDriver_1215", "method name": "get Web Driver", "comments": [], "url": true, "content": "  public static WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n           // run with DISPLAY 99\n         }\n         int firefoxVersion = WebDriverManager.getFirefoxVersion();\n         LOG.info(\"Firefox version \" + firefoxVersion + \" detected\");\n \n         downLoadsDir = FileUtils.getTempDirectory().toString();\n \n         String tempPath = downLoadsDir + \"/firebug/\";\n \n         downloadFireBug(firefoxVersion, tempPath);\n \n         final String firebugPath = tempPath + \"firebug.xpi\";\n         final String firepathPath = tempPath + \"firepath.xpi\";\n \n         FirefoxProfile profile = new FirefoxProfile();\n         profile.setPreference(\"browser.download.folderList\", 2);\n         profile.setPreference(\"browser.download.dir\", downLoadsDir);\n         profile.setPreference(\"browser.helperApps.alwaysAsk.force\", false);\n         profile.setPreference(\"browser.download.manager.showWhenStarting\", false);\n         profile.setPreference(\"browser.download.manager.showAlertOnComplete\", false);\n         profile.setPreference(\"browser.download.manager.closeWhenDone\", true);\n         profile.setPreference(\"app.update.auto\", false);\n         profile.setPreference(\"app.update.enabled\", false);\n         profile.setPreference(\"dom.max_script_run_time\", 0);\n         profile.setPreference(\"dom.max_chrome_script_run_time\", 0);\n         profile.setPreference(\"browser.helperApps.neverAsk.saveToDisk\", \"application/x-ustar,application/octet-stream,application/zip,text/csv,text/plain\");\n         profile.setPreference(\"network.proxy.type\", 0);\n \n         profile.addExtension(new File(firebugPath));\n         profile.addExtension(new File(firepathPath));\n \n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while FireFox Driver \", e);\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while ChromeDriver \", e);\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while SafariDriver \", e);\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         LOG.info(\"Exception in WebDriverManager while WebDriverWait \", e);\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/WebDriverManager.java", "repo name": "bharatl/zeppelin"}
{"repo_name": "testESPublisherAssetNewPageTestCase_1216", "method name": "test ES Publisher Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test adding a new asset page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/assets/servicex/list\");\n //        driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         driver.findElement(By.id(\"popoverExampleTwo\")).click();\n \n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/assets/servicex/new_page\");\n         assertTrue(isElementPresent(driver, By.id(\"assetNewPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetNewPageTestCase.java", "repo name": "ayyoob/product-es"}
{"repo_name": "resetUserPassword_1217", "method name": "reset User Password", "comments": ["Test"], "url": true, "content": "    public void function() {\n         String userId = createUser(\"user1\", \"user1@localhost\");\n \n         CredentialRepresentation cred = new CredentialRepresentation();\n         cred.setType(CredentialRepresentation.PASSWORD);\n         cred.setValue(\"password\");\n         cred.setTemporary(false);\n \n         realm.users().get(userId).resetPassword(cred);\n         assertAdminEvents.assertEvent(realmId, OperationType.ACTION, AdminEventPaths.userResetPasswordPath(userId));\n \n         String accountUrl = RealmsResource.accountUrl(UriBuilder.fromUri(getAuthServerRoot())).build(REALM_NAME).toString();\n \n         driver.navigate().to(accountUrl);\n \n         assertEquals(\"Log in to admin-client-test\", driver.getTitle());\n \n         loginPage.login(\"user1\", \"password\");\n \n         assertTrue(driver.getTitle().contains(\"Account Management\"));\n     }\n", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "repo name": "pedroigor/keycloak"}
{"repo_name": "testAddAsset_1218", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing adding a new asset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, 60);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Addgadget\")));\n         driver.findElement(By.id(\"Addgadget\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.name(\"overview_name\")));\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION_1);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_1);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_1);\n         driver.findElement(By.name(\"images_thumbnail\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                                  +\"/../src/test/resources/images/thumbnail.jpg\");\n         driver.findElement(By.name(\"images_banner\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                               + \"/../src/test/resources/images/banner.jpg\");\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n \n         //driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Addgadget\")));\n \n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         //check if the created gadget is shown\n         assertTrue(isElementPresent(driver, By.linkText(assetName)), \"Adding an asset failed for user:\" + currentUserName);\n         driver.findElement(By.linkText(assetName)).click();\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(2) div:nth-child(2)\")).getText());\n         assertEquals(ASSET_VERSION_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(3) div:nth-child(2)\")).getText(),\n                      \"Incorrect version\");\n         assertEquals(ASSET_CATEGORY_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(4) div:nth-child(2)\")).getText());\n         assertEquals(ASSET_URL_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(5) div:nth-child(2)\")).getText(),\n                      \"Incorrect URL\");\n         assertEquals(ASSET_DESCRIPTION_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(6) div:nth-child(2)\")).getText(),\n                      \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherTenantAddEditAssetTestCase.java", "repo name": "udarakr/product-es"}
{"repo_name": "testEditAsset_1219", "method name": "test Edit Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing editing an asset\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, 60);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(assetName)));\n         driver.findElement(By.linkText(assetName)).click();\n         //TODO edit is not visible in the UI for tenant admins ( check this and uncomment this code segment )\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Edit\")));\n         driver.findElement(By.id(\"Edit\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.name(\"overview_category\")));\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(ASSET_CATEGORY_2);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_2);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_2);\n         driver.findElement(By.id(\"editAssetButton\")).click();\n         //closeAlertAndGetItsText(driver, true);\n         //check updated info\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"#collapseOverview div:nth-child(2) div:nth-child(2)\")));\n \n         assertEquals(assetName, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(2) div:nth-child(2)\")).getText());\n         assertEquals(ASSET_CATEGORY_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(4) div:nth-child(2)\")).getText());\n         assertEquals(ASSET_URL_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(5) div:nth-child(2)\")).getText(),\n                      \"Incorrect URL\");\n         assertEquals(ASSET_DESCRIPTION_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(6) div:nth-child(2)\")).getText(),\n                      \"Incorrect description\");\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherTenantAddEditAssetTestCase.java", "repo name": "udarakr/product-es"}
{"repo_name": "testAddAsset_1220", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing adding a new asset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, 60);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Addgadget\")));\n         driver.findElement(By.id(\"Addgadget\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.name(\"overview_name\")));\n         driver.findElement(By.name(\"overview_name\")).clear();\n         driver.findElement(By.name(\"overview_name\")).sendKeys(assetName);\n         driver.findElement(By.name(\"overview_version\")).clear();\n         driver.findElement(By.name(\"overview_version\")).sendKeys(ASSET_VERSION_1);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_1);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_1);\n         driver.findElement(By.name(\"images_thumbnail\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                                  +\"/../src/test/resources/images/thumbnail.jpg\");\n         driver.findElement(By.name(\"images_banner\")).sendKeys(FrameworkPathUtil.getReportLocation()\n                                                               +\"/../src/test/resources/images/banner.jpg\");\n         driver.findElement(By.id(\"btn-create-asset\")).click();\n \n         //driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Addgadget\")));\n \n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         //check if the created gadget is shown\n         assertTrue(isElementPresent(driver, By.linkText(assetName)), \"Adding an asset failed for user:\" + currentUserName);\n         driver.findElement(By.linkText(assetName)).click();\n         assertEquals(assetName, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(2) div:nth-child(2)\")).getText());\n         assertEquals(ASSET_VERSION_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(3) div:nth-child(2)\")).getText(),\n                      \"Incorrect version\");\n         assertEquals(ASSET_CATEGORY_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(4) div:nth-child(2)\")).getText());\n         assertEquals(ASSET_URL_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(5) div:nth-child(2)\")).getText(),\n                      \"Incorrect URL\");\n         assertEquals(ASSET_DESCRIPTION_1, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(6) div:nth-child(2)\")).getText(),\n                      \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherAddEditAssetTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testEditAsset_1221", "method name": "test Edit Asset", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Testing editing an asset\", dependsOnMethods = \"testAddAsset\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         WebDriverWait wait = new WebDriverWait(driver, 60);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(assetName)));\n         driver.findElement(By.linkText(assetName)).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"Edit\")));\n         driver.findElement(By.id(\"Edit\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.name(\"overview_category\")));\n         new Select(driver.findElement(By.name(\"overview_category\"))).selectByVisibleText(ASSET_CATEGORY_2);\n         driver.findElement(By.name(\"overview_url\")).clear();\n         driver.findElement(By.name(\"overview_url\")).sendKeys(ASSET_URL_2);\n         driver.findElement(By.name(\"overview_description\")).clear();\n         driver.findElement(By.name(\"overview_description\")).sendKeys(ASSET_DESCRIPTION_2);\n         driver.findElement(By.id(\"editAssetButton\")).click();\n         //check updated info\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"#collapseOverview div:nth-child(2) div:nth-child(2)\")));\n \n         assertEquals(assetName, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(2) div:nth-child(2)\")).getText());\n         assertEquals(ASSET_CATEGORY_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(4) div:nth-child(2)\")).getText());\n         assertEquals(ASSET_URL_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(5) div:nth-child(2)\")).getText(),\n                      \"Incorrect URL\");\n         assertEquals(ASSET_DESCRIPTION_2, driver.findElement(By.cssSelector(\"#collapseOverview div:nth-child(6) div:nth-child(2)\")).getText(),\n                      \"Incorrect description\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherAddEditAssetTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testESPublisherAssetOverrideExistingPageTestCase_1222", "method name": "test ES Publisher Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding existing page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/assets/servicex/list\");\n //        driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         driver.findElement(By.id(\"popoverExampleTwo\")).click();\n \n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/assets/servicex/details\");\n         assertTrue(isElementPresent(driver, By.id(\"assetOveriddenDetailsPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverrideExistingPageTestCase.java", "repo name": "charithag/product-es"}
{"repo_name": "testLoginToPublisher_1223", "method name": "test Login To Publisher", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"verify login to ES Publisher\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_GADGET_LIST_PAGE);\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(currentUserName);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(currentUserPwd);\n         driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n         assertEquals(\"Asset | WSO2 Enterprise Store Publisher\", driver.getTitle());\n         assertEquals(currentUserName, driver.findElement(By.xpath(\"/html/body/div/div[1]/header/div/div[2]/div/a/div/span\"))\n                 .getText(), \"Logged in user not shown\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherLoginLogoutTestCase.java", "repo name": "charithag/product-es"}
{"repo_name": "testESPublisherAssetCaramelPageTestCase_1224", "method name": "test ES Publisher Asset Caramel Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Testing adding a new caramel page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/assets/servicex/list\");\n //        driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         driver.findElement(By.id(\"popoverExampleTwo\")).click();\n \n         driver.findElement(By.linkText(\"Service\")).click();\n         driver.get(baseUrl + \"/publisher/assets/servicex/new_caramel_page\");\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         assertTrue(isElementPresent(driver, By.id(\"Overview\")));\n         assertTrue(isElementPresent(driver, By.id(\"Edit\")));\n         //assertTrue(isElementPresent(driver, By.id(\"Life Cycle\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetCaramelPageTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testHomePageDisplay_1225", "method name": "test Home Page Display", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n \tdriver.get(baseUrl + \"/\");\n \tassertEquals(\"Dryad Digital Repository - Dryad\", driver.getTitle());\n \tassertTrue(\"recently published list\", isElementPresent(By.cssSelector(\"li.ds-artifact-item.even\")));\n     }\n", "path": "selenium/src/test/java/HomePageTest.java", "repo name": "jimallman/dryad-repo"}
{"repo_name": "handleFormWithJavascriptAction_1226", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {PHANTOMJS, SAFARI, HTMLUNIT},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "minhthuanit/selenium"}
{"repo_name": "testJournalMetadataImport_1227", "method name": "test Journal Metadata Import", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n \n \t// login\n \tdriver.get(baseUrl+ \"/\");\n \tdriver.findElement(By.id(\"login-item\")).click();\n \tdriver.findElement(By.id(\"aspect_eperson_PasswordLogin_field_login_email\")).clear();\n \tdriver.findElement(By.id(\"aspect_eperson_PasswordLogin_field_login_email\")).sendKeys(\"seleniumtest@datadryad.org\");\n \tdriver.findElement(By.id(\"aspect_eperson_PasswordLogin_field_login_password\")).clear();\n \tdriver.findElement(By.id(\"aspect_eperson_PasswordLogin_field_login_password\")).sendKeys(\"seleniumtest\");\n \tWebElement loginBox = driver.findElement(By.id(\"aspect_eperson_PasswordLogin_div_login\"));\n \tloginBox.findElement(By.id(\"aspect_eperson_PasswordLogin_field_submit\")).click();\n \t\n \t// begin submission with a known manuscript (using the URL interface to set the fields)\n \tdriver.get(baseUrl + \"/handle/10255/3/submit?journalID=MolEcol&manu=test-accept\");\n \tdriver.findElement(By.name(\"license_accept\")).click();\n \tdriver.findElement(By.id(\"aspect_submission_StepTransformer_field_submit_next\")).click();\n \n \t// assert the the page is correct and the correct manuscript metadata was imported\n \tassertEquals(\"Dryad Submission - Dryad\", driver.getTitle());\n \tassertTrue(\"imported keywords contain Nummulites\", idContains(\"aspect_submission_StepTransformer_div_submit-describe-publication\", \"Nummulites\"));\n \t\t\n \t// remove the partial submission\n \tdriver.findElement(By.id(\"aspect_submission_StepTransformer_field_submit_cancel\")).click();\n \tdriver.findElement(By.id(\"aspect_submission_submit_SaveOrRemoveStep_field_submit_remove\")).click();\n     }\n", "path": "selenium/src/test/java/SubmissionTest.java", "repo name": "ojacobson/dryad-repo"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1228", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "krosenvold/selenium-git-release-candidate"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1229", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({ANDROID, CHROME, HTMLUNIT, IE, IPHONE, SELENESE, OPERA, OPERA_MOBILE})"], "url": true, "content": "  public void function() {\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "krosenvold/selenium-git-release-candidate"}
{"repo_name": "canAuthenticateUsingBasicAuthentication_1230", "method name": "can Authenticate Using Basic Authentication", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"basicAuth\");\n     driver.get(url);\n \n     Alert alert = wait.until(alertIsPresent());\n \n     UserAndPassword user = new UserAndPassword(\"test\", \"test\");\n \n     alert.authenticateUsing(user);\n \n     assertEquals(\"authorized\", driver.findElement(By.tagName(\"h1\")).getText());\n   }\n", "path": "java/client/test/org/openqa/selenium/AuthenticatedPageLoadingTest.java", "repo name": "dbo/selenium"}
{"repo_name": "openTestUrl_1231", "method name": "open Test Url", "comments": [], "url": true, "content": "    public static void function(WebDriver driver, String testUrl) {\n         driver.manage().timeouts().implicitlyWait(WebDriverUtils.SETUP_URL_LOAD_WAIT_SECONDS, TimeUnit.SECONDS);\n \n         driver.get(testUrl);\n         if (!System.getProperty(SauceLabsWebDriverHelper.SAUCE_BROWSER_PROPERTY,\"ff\").equals(\"opera\")) {\n             driver.manage().window().maximize();\n             //            driver.manage().window().setSize(new Dimension(800,600));\n         }\n \n         WebDriverUtils.jGrowl(driver, \"Open URL\", false, \"Open \" + testUrl);\n \n         driver.manage().timeouts().implicitlyWait(WebDriverUtils.configuredImplicityWait(), TimeUnit.SECONDS);\n     }\n", "path": "rice-tools-test/src/main/java/org/kuali/rice/testtools/selenium/WebDriverUtils.java", "repo name": "iu-uits-es/rice"}
{"repo_name": "testESStoreNewGlobalPageTestCase_1232", "method name": "test ES Store New Global Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Add new Global page via extension test case\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/pages/servicex_global\");\n         assertTrue(isElementPresent(driver, By.id(\"assetNewGlobalPage\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreNewGlobalPageTestCase.java", "repo name": "wso2/product-es"}
{"repo_name": "testESStoreLogin_1233", "method name": "test ES Store Login", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Store Login\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_URL);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"ul.navbar-right li:first-child a\")));\n         driver.findElement(By.cssSelector(\"ul.navbar-right li:first-child a\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"username\")));\n         driver.findElement(By.id(\"username\")).clear();\n         driver.findElement(By.id(\"username\")).sendKeys(currentUserName);\n         driver.findElement(By.id(\"password\")).clear();\n         driver.findElement(By.id(\"password\")).sendKeys(currentUserPwd);\n         driver.findElement(By.xpath(\"//button[@type='submit']\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"logedInUser\")));\n         //TODO mysubscriptions section is removed as it contains errors uncomment the following ones it's fixed\n       /*  wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"myItemsToggle\")));\n         driver.findElement(By.id(\"myItemsToggle\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.linkText(\"My Subscription\")));\n         assertTrue(isElementPresent(driver, By.linkText(\"My Subscription\")), \"My Subscription link missing\");\n         assertEquals(currentUserName.toLowerCase(),driver.findElement(By.id(\"logedInUser\")).getText().toLowerCase(), \"Logged in user not shown\");\n */    }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreLoginLogoutTestCase.java", "repo name": "wso2/product-es"}
{"repo_name": "testESStoreLogout_1234", "method name": "test ES Store Logout", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test Store Logout\","], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_URL);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"logedInUser\")));\n         driver.findElement(By.id(\"logedInUser\")).click();\n         driver.findElement(By.cssSelector(\".dropdown-account a\")).click();\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"ul.navbar-right li:first-child span.ro-text\")));\n         assertEquals(\"sign in\", driver.findElement(By.cssSelector(\"ul.navbar-right li:first-child span.ro-text\")).getText().toLowerCase(), \"Sign in link missing\");\n         assertEquals(\"register\", driver.findElement(By.cssSelector(\"a#btn-register span.ro-text\")).getText().toLowerCase(), \"Register button missing\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreLoginLogoutTestCase.java", "repo name": "wso2/product-es"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1235", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "vveliev/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1236", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, IE, PHANTOMJS, SAFARI, MARIONETTE})", "NotYetImplemented(HTMLUNIT)", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "vveliev/selenium"}
{"repo_name": "testESPublisherAssetOverrideExistingPageTestCase_1237", "method name": "test ES Publisher Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/servicex/details\");\n     assertTrue(isElementPresent(By.id(\"assetOveriddenDetailsPage\")));\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetOverrideExistingPageTestCase.java", "repo name": "ayyoob/product-es"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1238", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "andresgap/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1239", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "andresgap/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1240", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE},"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "andresgap/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1241", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "andresgap/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1242", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "andresgap/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1243", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "andresgap/selenium"}
{"repo_name": "testESPublisherAssetOverrideRendererTestCase_1244", "method name": "test ES Publisher Asset Override Renderer Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding a renderer in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(lifecycleUrl);\n         assertTrue(isElementPresent(driver, By.id(\"assetLifecyclePartial\")));\n         assertEquals(driver.findElement(By.id(\"assetLifecyclePartial\")).getText(), \"Asset Overridden Lifecycle through renderer\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAssetOverrideRendererTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testSubscriptionCreation_1245", "method name": "test Subscription Creation", "comments": ["Test(groups = \"wso2.es.notification\", description = \"Check if subscriptions are created\")"], "url": true, "content": "    public void function() throws Exception {\n         //add new gadget\n         AssetUtil.addNewAsset(driver, baseUrl, ASSET_TYPE, assetName, ASSET_VERSION, \"\", \"\", \"\");\n         if (isAlertPresent(driver)) {\n             closeAlertAndGetItsText(driver, true);\n         }\n         //navigate to admin console\n         driver.get(baseUrl + MANAGEMENT_CONSOLE_URL);\n         driver.findElement(By.linkText(\"Gadgets\")).click();\n         driver.findElementPoll(By.linkText(assetName), MAX_POLL_COUNT);\n         driver.findElement(By.linkText(assetName)).click();\n         //check two subscriptions\n         String subscription1 = driver.findElement(By.cssSelector(\"#subscriptionsTable > tbody > tr.tableOddRow > td\"))\n                 .getText();\n         String subscription2 = driver.findElement(By.xpath(\"//table[@id='subscriptionsTable']/tbody/tr[3]/td\"))\n                 .getText();\n         String subscription1Name;\n         String subscription2Name;\n         //used to make the test independent of the subscription creation order\n         if (LC_SUBSCRIPTION.equalsIgnoreCase(subscription1)) {\n             subscription1Name = LC_SUBSCRIPTION;\n             subscription2Name = UPDATE_SUBSCRIPTION;\n         } else {\n             subscription1Name = UPDATE_SUBSCRIPTION;\n             subscription2Name = LC_SUBSCRIPTION;\n         }\n         assertEquals(subscription1Name, subscription1);\n         assertEquals(subscription2Name, subscription2);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/notifications/ESPublisherTenantSubscriptionTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testSelfSignUpForm_1246", "method name": "test Self Sign Up Form", "comments": ["Test(groups = \"wso2.es.common\", description = \"Testing correctness of self sign up form\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + MANAGEMENT_CONSOLE_URL);\n         driver.findElement(By.xpath(\"//span[contains(.,'Configure')]\")).click();\n         driver.findElement(By.linkText(\"Claim Management\")).click();\n         driver.findElement(By.linkText(\"http://wso2.org/claims\")).click();\n         driver.findElement(By.xpath(\"//span[contains(.,'Country')]\")).click();\n         driver.findElement(By.xpath(\"//a[@href='update-claim.jsp?dialect=http://wso2.org/claims&claimUri=http://wso2.org/claims/country']\")).click();\n         driver.findElement(By.xpath(\"//input[@id='required']\")).click();\n         driver.findElement(By.xpath(\"//input[@value='Update']\")).click();\n         driver.get(baseUrl + PUBLISHER_URL);\n         assertTrue(isElementPresent(driver, By.name(\"reg-country\")), \"New claim is not shown up in sign up form\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/common/ESSelfSignUpTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testESPublisherOverridenGlobalPageTestCase_1247", "method name": "test ES Publisher Overriden Global Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test overriding a global page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/pages/splash\");\n         assertTrue(isElementPresent(driver, By.id(\"assetOverridenGlobalPage\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherOverridenGlobalPageTestCase.java", "repo name": "rushmin/product-es"}
{"repo_name": "testAssetListingPage_1248", "method name": "test Asset Listing Page", "comments": ["Test(groups = \"wso2.es.store\", description= \"Test if a logged in super tenant user can navigate to the asset \" +"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         assertTrue(isElementPresent(driver, By.cssSelector(\"div.app-logo a\")), \"Asset listing page error: Logo missing\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreCarbonSuperUserTUHomePageTestCase.java", "repo name": "udarakr/product-es"}
{"repo_name": "testESPublisherNewGlobalPageTestCase_1249", "method name": "test ES Publisher New Global Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Test adding a new global page in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/publisher/pages/servicex_global\");\n         assertTrue(isElementPresent(driver, By.id(\"assetNewGlobalPage\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherNewGlobalPageTestCase.java", "repo name": "udarakr/product-es"}
{"repo_name": "testListPageSortByName_1250", "method name": "test List Page Sort By Name", "comments": ["Test(groups = \"wso2.es.publisher\", description = \"Test sort by name\", enabled = false)"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_URL);\n         driver.findElementPoll(By.linkText(ASSET_NAME), MAX_POLL_COUNT);\n         driver.findElement(By.cssSelector(\"#dropdownMenu1 > img\")).click();\n         driver.findElement(By.linkText(\"Name\")).click();\n         assertEquals(NAME_SORT_ASSET_1, driver.findElement(By.xpath(\"/html/body/div/div[3]/div/div[3]/div/div[1]/div/div/a/h3\"))\n                 .getText(), \"Sort on name failed\");\n         assertEquals(NAME_SORT_ASSET_2, driver.findElement(By.xpath(\"/html/body/div/div[3]/div/div[3]/div/div[2]/div/div/a/h3\"))\n                 .getText(), \"Sort on name failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/publisher/ESPublisherListPageSortTestCase.java", "repo name": "sajithar/product-es"}
{"repo_name": "testESStoreAssetNewPageTestCase_1251", "method name": "test ES Store Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/servicex/new_page\");\n     assertTrue(isElementPresent(By.id(\"assetNewPageH1\")));\n  }\n", "path": "modules/integration/selenium/generated/store/extensions/asset/ESStoreAssetNewPageTestCase.java", "repo name": "splinter/product-es"}
{"repo_name": "testESStoreAddedAssetTestCase_1252", "method name": "test ES Store Added Asset Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"The new asset type list page extension in store Test Case\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/service/list\");\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         //WebElement myDynamicElement = (new WebDriverWait(driver, 10))\n           //      .until(ExpectedConditions.presenceOfElementLocated(By.id(\"popoverExampleTwo\")));\n         //driver.findElement(By.id(\"popoverExampleTwo\")).click();\n \n         //driver.findElement(By.linkText(\"Service\")).click();\n         //driver.findElementPoll(By.id(\"assetListingPageH1\"),POLL_COUNT);\n         //assertTrue(isElementPresent(driver, By.id(\"assetListingPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreAddedAssetTestCase.java", "repo name": "splinter/product-es"}
{"repo_name": "testAddAsset_1253", "method name": "test Add Asset", "comments": ["Test(groups = \"wso2.es.store\", description = \"Add asset\")"], "url": true, "content": "    public void function() throws Exception {\n         ESUtil.login(driver, baseUrl, \"publisher\", userInfo.getUserName(),\n                 userInfo.getPassword());\n         AssetUtil.addNewAsset(driver, baseUrl, assetType, assetName, assetVersion, assetCategory, assetURL, assetDescription);\n         driver.get(baseUrl + \"/publisher/assets/gadget/list\");\n         driver.findElementPoll(By.linkText(assetName), 10);\n         AssetUtil.publishAssetToStore(driver, assetName);\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreSearchGadgetListTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testESPublisherAssetOverridePartialTestCase_1254", "method name": "test ES Publisher Asset Override Partial Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/servicex/update\");\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetOverridePartialTestCase.java", "repo name": "ayshsandu/product-es"}
{"repo_name": "testESPublisherAssetCaramelPageTestCase_1255", "method name": "test ES Publisher Asset Caramel Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/servicex/new_caramel_page\");\n     assertTrue(isElementPresent(By.cssSelector(\"span.publisherTitle\")));\n     assertTrue(isElementPresent(By.linkText(\"Overview\")));\n     assertTrue(isElementPresent(By.linkText(\"Edit\")));\n     assertTrue(isElementPresent(By.linkText(\"Life Cycle\")));\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetCaramelPageTestCase.java", "repo name": "charithag/product-es"}
{"repo_name": "testStoreSortOnPopularity_1256", "method name": "test Store Sort On Popularity", "comments": ["TODO fix this part ones the UI is fixed for sort by popularity", " @Test(groups = \"wso2.es.store\", description = \"Testing sorting on popularity\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //sort by popularity\n         driver.findElement(By.cssSelector(\"i.icon-star\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\"h4\"), popularAsset1));\n         assertEquals(driver.findElement(By.cssSelector(\"h4\")).getText(), popularAsset1, \"Popularity Sort failed\");\n         assertEquals(driver.findElement(By.xpath\n                 (\"//div[@id='assets-container']/div/div[2]/div/div/a/h4\")).getText(), popularAsset2,\n                 \"Popularity Sort failed\");\n     }*/\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testStoreSortOnAlphabeticalOrder_1257", "method name": "test Store Sort On Alphabetical Order", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing sorting on alphabetical order\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //sort by alphabetical order\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"sortDropdown\")));\n         driver.findElement(By.cssSelector(\"#sortDropdown > img\")).click();\n         driver.findElement(By.cssSelector(\"#ul-sort-assets li:nth-child(2) a\")).click();\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector\n                 (\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")));\n         assertEquals(assetName, driver.findElement(By.cssSelector\n                 (\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")).getText(), \"Alphabetical Sort failed\");\n         assertEquals(WSO2_JIRA, driver.findElement(By.cssSelector\n                 (\".assets-container section div.ctrl-wr-asset:nth-child(2) a.ast-name\")).getText(), \"Alphabetical Sort failed\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testStoreSortOnCreatedTime_1258", "method name": "test Store Sort On Created Time", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing sorting on created time\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //sort by created time ( no need to click on hte link for sorting on created time since this is the default case )\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector\n                 (\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")));\n         assertEquals(assetName, driver.findElement(By.cssSelector(\".assets-container section div.ctrl-wr-asset:first-child a.ast-name\")).getText(), \"Alphabetical Sort failed\");\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testCategoryGoogle_1259", "method name": "test Category Google", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category Google\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //google category\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"advanced-search-btn\")));\n         driver.findElement(By.id(\"advanced-search-btn\")).click();\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"search-button2\")));\n         driver.findElement(By.id(\"search-button2\")).click();\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"div.ctrl-wr-asset\")));\n         assertTrue(isElementPresent(driver,By.cssSelector(\"div.ctrl-wr-asset\")), \"Google Category wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testCategoryWSO2_1260", "method name": "test Category WSO2", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category WSO2\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //google category\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"advanced-search-btn\")));\n         driver.findElement(By.id(\"advanced-search-btn\")).click();\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"search-button2\")));\n         new Select(driver.findElement(By.id(\"overview_category\"))).selectByVisibleText(\"WSO2\");\n         driver.findElement(By.id(\"search-button2\")).click();\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"div.ctrl-wr-asset\")));\n         assertTrue(isElementPresent(driver,By.cssSelector(\"div.ctrl-wr-asset\")), \"WSO2 Category wrong\");\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testCategoryTemplate_1261", "method name": "test Category Template", "comments": ["Test(groups = \"wso2.es.store\", description = \"Testing category template\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         //google category\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"advanced-search-btn\")));\n         driver.findElement(By.id(\"advanced-search-btn\")).click();\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.id(\"search-button2\")));\n         new Select(driver.findElement(By.id(\"overview_category\"))).selectByVisibleText(\"Templates\");\n         driver.findElement(By.id(\"search-button2\")).click();\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\"div.ctrl-wr-asset\")));\n         assertTrue(isElementPresent(driver,By.cssSelector(\"div.ctrl-wr-asset\")), \"WSO2 Category wrong\");\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonCategorySortingTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testESPublisherAssetOverrideRendererTestCase_1262", "method name": "test ES Publisher Asset Override Renderer Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/servicex/lifecycle\");\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetOverrideRendererTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testESPublisherAddedAssetTestCase_1263", "method name": "test ES Publisher Added Asset Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Testing adding a new asset type in extensions\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + PUBLISHER_URL);\n //        assertTrue(isElementPresent(driver, By.cssSelector(\"button.btn.dropdown-toggle\")));\n //        driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n //        driver.findElement(By.linkText(\"Service\")).click();\n         driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);\n         driver.findElement(By.id(\"popoverExampleTwo\")).click();\n         assertEquals(driver.findElement(By.linkText(ASSET_TYPE)).getText(), ASSET_TYPE);\n         driver.findElement(By.linkText(ASSET_TYPE)).click();\n \n         assertTrue(isElementPresent(driver, By.linkText(ASSET_TYPE_PLURAL)));\n         //assertEquals(driver.findElement(By.linkText(ASSET_TYPE_PLURAL)).getText(), ASSET_TYPE_PLURAL);\n         assertTrue(isElementPresent(driver, By.xpath(\"//h2[@class='app-title']\")));\n         //assertEquals(driver.findElement(By.xpath(\"//h2[@class='app-title']\")).getText(), \"Enterprise Store Back Office\");\n //        assertTrue(isElementPresent(driver, By.cssSelector(\"span.publisherTitle\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/publisher/ESPublisherAddedAssetTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testESPublisherAssetNewPageTestCase_1264", "method name": "test ES Publisher Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/assets/servicex/new_page\");\n     assertTrue(isElementPresent(By.id(\"servicexNewPageH1\")));\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAssetNewPageTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "testESStoreAssetOverrideExistingPageTestCase_1265", "method name": "test ES Store Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"Overriding list page via extensions test case\")"], "url": true, "content": "    public void function() throws Exception {\n \n         driver.get(baseUrl + \"/store/assets/servicex/list\");\n         assertTrue(isElementPresent(driver, By.id(\"assetListingPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreAssetOverrideExistingPageTestCase.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "canBlockInvalidSslCertificates_1266", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "aluedeke/chromedriver"}
{"repo_name": "testESStoreAssetOverrideExistingPageTestCase_1267", "method name": "test ES Store Asset Override Existing Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/servicex/list\");\n     assertTrue(isElementPresent(By.id(\"assetListingPageH1\")));\n  }\n", "path": "modules/integration/selenium/generated/store/extensions/asset/ESStoreAssetOverrideExistingPageTestCase.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "testESStoreAssetNewPageTestCase_1268", "method name": "test ES Store Asset New Page Test Case", "comments": ["Test(groups = \"wso2.es.extensions\", description = \"New page added via extensions test case\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/servicex/new_page\");\n         assertTrue(isElementPresent(driver, By.id(\"assetNewPageH1\")));\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui-extension/src/test/java/org/wso2/es/ui/integration/extension/test/store/ESStoreAssetNewPageTestCase.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "testStoreBeforeAddRatings_1269", "method name": "test Store Before Add Ratings", "comments": ["Test(groups = \"wso2.es.store.ratings\", description = \"Test Start Add Rating\")"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + \"/store/assets/gadget/list\");\n         driver.findElement(By.cssSelector(\"i.icon-cog\")).click();\n         driver.findElement(By.cssSelector(\"h4\")).click();\n         driver.findElement(By.linkText(\"User Reviews\")).click();\n         driver.switchTo().frame(driver.findElement(By.id(\"socialIfr\")));\n         assertEquals(\"Please Sign in to add a Review\",\n                 driver.findElement(By.cssSelector(\"div.com-guest\")).getText());\n         assertEquals(\"Be the first one to review!\",\n                 driver.findElement(By.cssSelector(\"p.com-first-review\")).getText());\n         driver.switchTo().defaultContent();\n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreRatingsTestCase.java", "repo name": "jeradrutnam/product-es"}
{"repo_name": "testESStoreAddedAssetTestCase_1270", "method name": "test ES Store Added Asset Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/assets/gadget/list\");\n     driver.findElement(By.xpath(\"//div[@id='container-search']/div/div/div/div/a[3]/li\")).click();\n     assertTrue(isElementPresent(By.id(\"assetListingPageH1\")));\n  }\n", "path": "modules/integration/selenium/generated/store/extensions/asset/ESStoreAddedAssetTestCase.java", "repo name": "rajeenthini/product-es"}
{"repo_name": "testAnonAssetListingPage_1271", "method name": "test Anon Asset Listing Page", "comments": ["Test(groups = \"wso2.es.store\", description = \"Test if the asset listing page loads when using /t/domain as anon \" +"], "url": true, "content": "    public void function() throws Exception {\n         driver.get(baseUrl + STORE_GADGET_LIST_PAGE);\n         wait.until(ExpectedConditions.visibilityOfAllElementsLocatedBy(By.cssSelector(\".ctrl-wr-asset\")));\n         assertTrue(isElementPresent(driver, By.cssSelector(\".app-logo\")), \"Home Page error: Logo missing\");\n         assertTrue(isElementPresent(driver, By.cssSelector(\".ctrl-wr-asset\")), \"Home Page error: Gadgets list is not populated\");\n \n     }\n", "path": "modules/integration/tests-ui-integration/tests-ui/src/test/java/org/wso2/es/ui/integration/test/store/ESStoreAnonTenantHomePageTestCase.java", "repo name": "rajeenthini/product-es"}
{"repo_name": "getWebDriver_1272", "method name": "get Web Driver", "comments": [], "url": true, "content": "  private WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n                                                          // run with DISPLAY 99\n         }\n         FirefoxProfile profile = new FirefoxProfile();\n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/ZeppelinIT.java", "repo name": "rohit2b/incubator-zeppelin"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_1273", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "isaksky/selenium"}
{"repo_name": "canAuthenticateUsingBasicAuthentication_1274", "method name": "can Authenticate Using Basic Authentication", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"basicAuth\");\n     driver.get(url);\n \n     Alert alert = waitFor(alertToBePresent(driver));\n \n     UserAndPassword user = new UserAndPassword(\"test\", \"test\");\n \n     alert.authenticateUsing(user);\n \n     assertEquals(\"authorized\", driver.findElement(By.tagName(\"h1\")).getText());\n   }\n", "path": "java/client/test/org/openqa/selenium/AuthenticatedPageLoadingTest.java", "repo name": "krosenvold/selenium-git-release-candidate"}
{"repo_name": "performImplicitGrant_1275", "method name": "perform Implicit Grant", "comments": [], "url": true, "content": "  private void function(boolean needConsent) {\n \n     WebDriver webdriver = getWebDriver();\n \n     String responseType = \"token\";\n     String clientId = \"it-test-client-grant\";\n     String redirectUri = \"http://localhost:8080/fourOhFour\";\n \n     String url = String.format(\n         \"%s/oauth2/authorize?response_type=%s&client_id=%s&redirect_uri=%s\",\n         baseUrl(), responseType, clientId, redirectUri);\n     webdriver.get(url);\n \n     login(webdriver, needConsent);\n \n     // Token response\n     URI responseURI = URI.create(webdriver.getCurrentUrl());\n \n     assertThat(responseURI.getFragment(), containsString(\"access_token=\"));\n     assertThat(responseURI.getPath(), equalTo(\"/fourOhFour\"));\n     assertThat(responseURI.getHost(), equalTo(\"localhost\"));\n   }\n", "path": "apis-authorization-server-war/src/test/java/org/surfnet/oaaas/selenium/ImplicitGrantTestIT.java", "repo name": "SimiPro/apis"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_1276", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "findElementPoll_1277", "method name": "find Element Poll", "comments": [" This method will keep refreshing/reloading the current url for a given number of poll-count", " until a given element is available", " @param by        Element that is expected to be present", " @param pollCount Number of time page need to be reloaded into webDriver"], "url": true, "content": "    public void function(By by, int pollCount) throws InterruptedException {\n         int count = 0;\n         while (!isElementPresent(by) && count < pollCount) {\n             Thread.sleep(POLL_SLEEP_INTERVAL);\n             String url = driver.getCurrentUrl();\n             driver.get(url);\n             count++;\n         }\n     }\n", "path": "modules/integration/tests-ui-integration/ui-test-utils/src/main/java/org/wso2/es/ui/integration/util/ESWebDriver.java", "repo name": "cnapagoda/product-es"}
{"repo_name": "canNavigateToAGivenUrl_1278", "method name": "can Navigate To A Given Url", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     final String url = \"http://www.example.com\";\n \n     checking(new Expectations() {{\n       one(webdriver).get(url);\n     }});\n \n     context.goTo(url);\n   }\n", "path": "java/client/test/org/openqa/selenium/lift/WebDriverTestContextTest.java", "repo name": "lummyare/lummyare-lummy"}
{"repo_name": "canNavigateToAGivenUrl_1279", "method name": "can Navigate To A Given Url", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \n     final String url = \"http://www.example.com\";\n \n     checking(new Expectations() {{\n       one(webdriver).get(url);\n     }});\n \n     context.goTo(url);\n   }\n", "path": "java/client/test/org/openqa/selenium/lift/TestContextTest.java", "repo name": "qamate/iOS-selenium-server"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1280", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1281", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({ANDROID, IPHONE, OPERA, OPERA_MOBILE, MARIONETTE})"], "url": true, "content": "  public void function() {\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_1282", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_1283", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore({IE, HTMLUNIT})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "SevInf/IEDriver"}
{"repo_name": "testESPublisherNewGlobalPageTestCase_1284", "method name": "test ES Publisher New Global Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/pages/servicex_global\");\n     assertTrue(isElementPresent(By.id(\"assetNewGlobalPage\")));\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherNewGlobalPageTestCase.java", "repo name": "wso2/product-es"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1285", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "HtmlUnit/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1286", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "HtmlUnit/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_1287", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore(IE)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "HtmlUnit/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_1288", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "HtmlUnit/selenium"}
{"repo_name": "ResetPasswordPage_1289", "method name": "Reset Password Page", "comments": [], "url": true, "content": "    public function(WebDriver driver, String url) {\n         super(driver);\n         driver.get(url);\n     }\n", "path": "src/integration/java/org/mamute/integration/pages/ResetPasswordPage.java", "repo name": "xdarklight/mamute"}
{"repo_name": "testESStoreNewGlobalPageTestCase_1290", "method name": "test ES Store New Global Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/store/pages/servicex_global\");\n     assertTrue(isElementPresent(By.id(\"assetNewGlobalPage\")));\n  }\n", "path": "modules/integration/selenium/generated/store/extensions/app/ESStoreNewGlobalPageTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "testESPublisherOverridenGlobalPageTestCase_1291", "method name": "test ES Publisher Overriden Global Page Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/pages/splash\");\n     assertTrue(isElementPresent(By.id(\"assetOverridenGlobalPage\")));\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherOverridenGlobalPageTestCase.java", "repo name": "ruchiraw/product-es"}
{"repo_name": "handleFormWithJavascriptAction_1292", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {PHANTOMJS, SAFARI, HTMLUNIT, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "joshuaduffy/selenium"}
{"repo_name": "testESPublisherAddedAssetTestCase_1293", "method name": "test ES Publisher Added Asset Test Case", "comments": ["Test(groups = \"wso2.es\", description = \"\")"], "url": true, "content": "  public void function() throws Exception {\n     driver.get(baseUrl + \"/publisher/\");\n     assertTrue(isElementPresent(By.cssSelector(\"button.btn.dropdown-toggle\")));\n     // ERROR: Caught exception [ERROR: Unsupported command [selectWindow | null | ]]\n     driver.findElement(By.cssSelector(\"button.btn.dropdown-toggle\")).click();\n     driver.findElement(By.linkText(\"Service\")).click();\n     assertTrue(isElementPresent(By.cssSelector(\"span.publisherTitle\")));\n  }\n", "path": "modules/integration/selenium/generated/publisher/extensions/ESPublisherAddedAssetTestCase.java", "repo name": "rajeenthini/product-es"}
{"repo_name": "canBlockInvalidSslCertificates_1294", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "cisco-open-source/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1295", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test", "Ignore(value = {IE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "juangj/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1296", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, IE, PHANTOMJS, SAFARI, MARIONETTE})", "NotYetImplemented(HTMLUNIT)", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "juangj/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_1297", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "p0deje/selenium"}
{"repo_name": "canBlockInvalidSslCertificates_1298", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "p0deje/selenium"}
{"repo_name": "canAuthenticateUsingBasicAuthentication_1299", "method name": "can Authenticate Using Basic Authentication", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"basicAuth\");\n     driver.get(url);\n \n     Alert alert = wait.until(alertIsPresent());\n \n     Credentials user = new UserAndPassword(\"test\", \"test\");\n \n     alert.authenticateUsing(user);\n \n \tWebElement element = wait.until(presenceOfElementLocated(By.tagName(\"h1\")));\n     assertEquals(\"authorized\", element.getText());\n   }\n", "path": "java/client/test/org/openqa/selenium/AuthenticatedPageLoadingTest.java", "repo name": "davehunt/selenium"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_1300", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "davehunt/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1301", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sankha93/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1302", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sankha93/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1303", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE}, reason = \"Chrome: failed\")", "SwitchToTopAfterTest"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sankha93/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1304", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sankha93/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1305", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sankha93/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1306", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "sankha93/selenium"}
{"repo_name": "testGetInfoFromSecurityContext_1307", "method name": "test Get Info From Security Context", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         User user = makeTestUser();\n         String jsonUser = UserCookieEncoder.toCookieValue( user );\n \n         // go to the site and set the user cookie (the security filter would normally do this upon login)\n         driver.get( baseUrl + \"blank.html\" );\n         driver.manage().addCookie( new Cookie( UserCookieEncoder.USER_COOKIE_NAME,\n                                                jsonUser,\n                                                \"/\",\n                                                new Date( System.currentTimeMillis() + 1000 * 60 * 24 ) ) );\n \n         // now go to the app with the cookie in place\n         driver.get( baseUrl );\n         waitForDefaultPerspective();\n         driver.get( baseUrl + \"#\" + SecurityContextInfoScreen.class.getName() );\n \n         WebElement userLabel = driver.findElement( By.id( \"gwt-debug-SecurityStatusScreen-userLabel\" ) );\n         assertEquals( user.getIdentifier(), userLabel.getText() );\n \n         WebElement rolesLabel = driver.findElement( By.id( \"gwt-debug-SecurityStatusScreen-rolesLabel\" ) );\n         assertEquals( user.getRoles().toString(), rolesLabel.getText() );\n \n         WebElement groupsLabel = driver.findElement( By.id( \"gwt-debug-SecurityStatusScreen-groupsLabel\" ) );\n         assertEquals( user.getGroups().toString(), groupsLabel.getText() );\n     }\n", "path": "uberfire-workbench/uberfire-workbench-client-tests/src/test/java/org/uberfire/wbtest/selenium/UserCookieTest.java", "repo name": "wmedvede/uberfire"}
{"repo_name": "testGetInfoFromInjectedUser_1308", "method name": "test Get Info From Injected User", "comments": ["Test"], "url": true, "content": "    public void function() throws Exception {\n         User user = makeTestUser();\n         String jsonUser = UserCookieEncoder.toCookieValue( user );\n \n         // go to the site and set the user cookie (the security filter would normally do this upon login)\n         driver.get( baseUrl + \"blank.html\" );\n         driver.manage().addCookie( new Cookie( UserCookieEncoder.USER_COOKIE_NAME,\n                                                jsonUser,\n                                                \"/\",\n                                                new Date( System.currentTimeMillis() + 1000 * 60 * 24 ) ) );\n \n         // now go to the app with the cookie in place\n         driver.get( baseUrl );\n         waitForDefaultPerspective();\n         driver.get( baseUrl + \"#\" + InjectedUserScreen.class.getName() );\n \n         WebElement userLabel = driver.findElement( By.id( \"gwt-debug-SecurityStatusScreen-userLabel\" ) );\n         assertEquals( user.getIdentifier(), userLabel.getText() );\n \n         WebElement rolesLabel = driver.findElement( By.id( \"gwt-debug-SecurityStatusScreen-rolesLabel\" ) );\n         assertEquals( user.getRoles().toString(), rolesLabel.getText() );\n \n         WebElement groupsLabel = driver.findElement( By.id( \"gwt-debug-SecurityStatusScreen-groupsLabel\" ) );\n         assertEquals( user.getGroups().toString(), groupsLabel.getText() );\n     }\n", "path": "uberfire-workbench/uberfire-workbench-client-tests/src/test/java/org/uberfire/wbtest/selenium/UserCookieTest.java", "repo name": "wmedvede/uberfire"}
{"repo_name": "deleteAllCookies_1309", "method name": "delete All Cookies", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     assumeTrue(domainHelper.checkHasValidAlternateHostname());\n \n     Cookie cookie1 = new Cookie.Builder(\"fish1\", \"cod\")\n         .domain(appServer.getHostName()).build();\n     Cookie cookie2 = new Cookie.Builder(\"fish2\", \"tune\")\n         .domain(appServer.getAlternateHostName()).build();\n \n     String url1 = domainHelper.getUrlForFirstValidHostname(\"/common\");\n     String url2 = domainHelper.getUrlForSecondValidHostname(\"/common\");\n \n     WebDriver.Options options = driver.manage();\n \n     options.addCookie(cookie1);\n     assertCookieIsPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     options.addCookie(cookie2);\n     assertCookieIsNotPresentWithName(cookie1.getName());\n     assertCookieIsPresentWithName(cookie2.getName());\n \n     driver.get(url1);\n     assertCookieIsPresentWithName(cookie1.getName());\n     assertCookieIsNotPresentWithName(cookie2.getName());\n \n     options.deleteAllCookies();\n     assertCookieIsNotPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     assertCookieIsPresentWithName(cookie2.getName());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "TikhomirovSergey/selenium"}
{"repo_name": "requestsProcessedByProxy_1310", "method name": "requests Processed By Proxy", "comments": ["Test"], "url": true, "content": "    public void function() {\n         proxy.newHar(url.toString());\n \n         WebDriver driver = getDriver();\n         driver.navigate().to(url);\n \n         JsonObject har = proxy.har();\n         assertNotNull(har);\n         String firstUrlLoaded = har.getAsJsonObject(\"log\")\n                 .getAsJsonArray(\"entries\").get(0).getAsJsonObject()\n                 .getAsJsonObject(\"request\")\n                 .getAsJsonPrimitive(\"url\").getAsString();\n         assertEquals(url.toString(), firstUrlLoaded);\n     }\n", "path": "test/java/src/test/java/ghostdriver/RuntimeProxySetupTest.java", "repo name": "51ttw/ghostdriver"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_1311", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "BlackSmith/selenium"}
{"repo_name": "deleteAllCookies_1312", "method name": "delete All Cookies", "comments": ["Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() throws Exception {\n     assumeTrue(domainHelper.checkHasValidAlternateHostname());\n \n     Cookie cookie1 = new Cookie.Builder(\"fish1\", \"cod\")\n         .domain(appServer.getHostName()).build();\n     Cookie cookie2 = new Cookie.Builder(\"fish2\", \"tune\")\n         .domain(appServer.getAlternateHostName()).build();\n \n     String url1 = domainHelper.getUrlForFirstValidHostname(\"/common\");\n     String url2 = domainHelper.getUrlForSecondValidHostname(\"/common\");\n \n     WebDriver.Options options = driver.manage();\n \n     options.addCookie(cookie1);\n     assertCookieIsPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     options.addCookie(cookie2);\n     assertCookieIsNotPresentWithName(cookie1.getName());\n     assertCookieIsPresentWithName(cookie2.getName());\n \n     driver.get(url1);\n     assertCookieIsPresentWithName(cookie1.getName());\n     assertCookieIsNotPresentWithName(cookie2.getName());\n \n     options.deleteAllCookies();\n     assertCookieIsNotPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     assertCookieIsPresentWithName(cookie2.getName());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "sri85/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1313", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "5hawnknight/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1314", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, IE, PHANTOMJS, SAFARI, MARIONETTE})", "NotYetImplemented(HTMLUNIT)", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "5hawnknight/selenium"}
{"repo_name": "listVaadinSessions_1315", "method name": "list Vaadin Sessions", "comments": ["Test"], "url": true, "content": "    public void function() {\n \n         assertUICount(0);\n \n         // Open a new UI\n         getDriver().get(integrationUrl);\n         assertUICount(1);\n \n         // Open a new UI\n         getDriver().get(integrationUrl);\n \n         // Should now have two UIs for the same service with different uiIds\n         List<UIData> twoUIs = getUIs();\n         assertEquals(2, twoUIs.size());\n         assertNotEquals(twoUIs.get(0).uiId, twoUIs.get(1).uiId);\n         assertEquals(twoUIs.get(0).serviceName, twoUIs.get(1).serviceName);\n \n         getDriver().get(appRunnerTestUrl);\n         // Should now have two services with 2 + 1 UIs\n         List<UIData> threeUIs = getUIs();\n         assertEquals(3, threeUIs.size());\n         Set<String> serviceNames = new HashSet<String>();\n         Set<Integer> uiIds = new HashSet<Integer>();\n         for (UIData uiData : threeUIs) {\n             serviceNames.add(uiData.serviceName);\n             uiIds.add(uiData.uiId);\n         }\n         assertGreaterOrEqual(\n                 \"There should be at least two unique service names\",\n                 serviceNames.size(), 2);\n         assertGreaterOrEqual(\"There should be at least two unique ui ids\",\n                 uiIds.size(), 2);\n     }\n", "path": "uitest/src/com/vaadin/tests/integration/JSPIntegrationTest.java", "repo name": "sammso/vaadin"}
{"repo_name": "getUIs_1316", "method name": "get U Is", "comments": [], "url": true, "content": "    private List<UIData> function() {\n         List<UIData> uis = new ArrayList<UIData>();\n \n         getDriver().get(jspUrl);\n         List<WebElement> rows = getDriver().findElements(\n                 By.xpath(\"//tr[@class='uirow']\"));\n         for (WebElement row : rows) {\n             UIData data = new UIData();\n             List<WebElement> tds = row.findElements(By.xpath(\"./td\"));\n \n             data.serviceName = tds.get(0).getText();\n             data.uiId = Integer.parseInt(tds.get(2).getText());\n \n             uis.add(data);\n         }\n \n         return uis;\n     }\n", "path": "uitest/src/com/vaadin/tests/integration/JSPIntegrationTest.java", "repo name": "sammso/vaadin"}
{"repo_name": "deleteAllCookies_1317", "method name": "delete All Cookies", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     assumeTrue(domainHelper.checkHasValidAlternateHostname());\n \n     Cookie cookie1 = new Cookie.Builder(\"fish1\", \"cod\")\n         .domain(appServer.getHostName()).build();\n     Cookie cookie2 = new Cookie.Builder(\"fish2\", \"tune\")\n         .domain(appServer.getAlternateHostName()).build();\n \n     String url1 = domainHelper.getUrlForFirstValidHostname(\"/common\");\n     String url2 = domainHelper.getUrlForSecondValidHostname(\"/common\");\n \n     WebDriver.Options options = driver.manage();\n \n     options.addCookie(cookie1);\n     assertCookieIsPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     options.addCookie(cookie2);\n     assertCookieIsNotPresentWithName(cookie1.getName());\n     assertCookieIsPresentWithName(cookie2.getName());\n \n     driver.get(url1);\n     assertCookieIsPresentWithName(cookie1.getName());\n     assertCookieIsNotPresentWithName(cookie2.getName());\n \n     options.deleteAllCookies();\n     assertCookieIsNotPresentWithName(cookie1.getName());\n \n     driver.get(url2);\n     assertCookieIsPresentWithName(cookie2.getName());\n   }\n", "path": "java/client/test/org/openqa/selenium/CookieImplementationTest.java", "repo name": "yukaReal/selenium"}
{"repo_name": "canAuthenticateUsingBasicAuthentication_1318", "method name": "can Authenticate Using Basic Authentication", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"basicAuth\");\n     driver.get(url);\n \n     Alert alert = wait.until(alertIsPresent());\n \n     UserAndPassword user = new UserAndPassword(\"test\", \"test\");\n \n     alert.authenticateUsing(user);\n \n     assertEquals(\"authorized\", driver.findElement(By.tagName(\"h1\")).getText());\n   }\n", "path": "java/client/test/org/openqa/selenium/AuthenticatedPageLoadingTest.java", "repo name": "sergeychipiga/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1319", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jerome-jacob/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1320", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jerome-jacob/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1321", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jerome-jacob/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1322", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jerome-jacob/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1323", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jerome-jacob/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1324", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "jerome-jacob/selenium"}
{"repo_name": "canNavigateToAGivenUrl_1325", "method name": "can Navigate To A Given Url", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     final String url = \"http://www.example.com\";\n \n     context.goTo(url);\n \n     verify(webdriver).get(url);\n   }\n", "path": "java/client/test/org/openqa/selenium/lift/WebDriverTestContextTest.java", "repo name": "misttechnologies/selenium"}
{"repo_name": "canNavigateToAGivenUrl_1326", "method name": "can Navigate To A Given Url", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \n     final String url = \"http://www.example.com\";\n \n     context.goTo(url);\n     verify(webdriver).get(url);\n   }\n", "path": "java/client/test/org/openqa/selenium/lift/TestContextTest.java", "repo name": "jsarenik/jajomojo-selenium"}
{"repo_name": "canBlockInvalidSslCertificates_1327", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "stupidnetizen/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_1328", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "doungni/selenium"}
{"repo_name": "handleFormWithJavascriptAction_1329", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {PHANTOMJS, SAFARI, MARIONETTE, HTMLUNIT},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "customcommander/selenium"}
{"repo_name": "handleFormWithJavascriptAction_1330", "method name": "handle Form With Javascript Action", "comments": ["Test", "Ignore(value = {PHANTOMJS, SAFARI, HTMLUNIT, MARIONETTE},"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"form_handling_js_submit.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"theForm\"));\n     element.submit();\n     Alert alert = driver.switchTo().alert();\n     String text = alert.getText();\n     alert.accept();\n \n     assertEquals(\"Tasty cheese\", text);\n   }\n", "path": "java/client/test/org/openqa/selenium/FormHandlingTest.java", "repo name": "stupidnetizen/selenium"}
{"repo_name": "testShouldReturnURLOnNotExistedPage_1331", "method name": "test Should Return URL On Not Existed Page", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"not_existed_page.html\");\n     driver.get(url);\n     assertEquals(url, driver.getCurrentUrl());\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "dandv/selenium"}
{"repo_name": "shouldBeAbleToDisableAcceptOfInsecureSslCertsWithRequiredCapability_1332", "method name": "should Be Able To Disable Accept Of Insecure Ssl Certs With Required Capability", "comments": ["Ignore({CHROME, IE, PHANTOMJS, SAFARI, MARIONETTE})", "NotYetImplemented(HTMLUNIT)", "Test"], "url": true, "content": "  public void function() {\n     // TODO: Resolve why this test doesn't work on the remote server\n     assumeTrue(isLocal());\n \n     DesiredCapabilities requiredCaps = new DesiredCapabilities();\n     requiredCaps.setCapability(ACCEPT_SSL_CERTS, false);\n     WebDriverBuilder builder = new WebDriverBuilder().setRequiredCapabilities(requiredCaps);\n     localDriver = builder.get();\n \n     String url = appServer.whereIsSecure(\"simpleTest.html\");\n     localDriver.get(url);\n \n     assertThat(localDriver.getTitle(), not(\"Hello WebDriver\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/PageLoadingTest.java", "repo name": "dandv/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInTheViewport_1333", "method name": "test Should Be Able To Click On An Element In The Viewport", "comments": [" See http://code.google.com/p/selenium/issues/attachmentText?id=2700", "Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds.html\");\n \n     driver.get(url);\n     WebElement button = driver.findElement(By.id(\"button\"));\n \n     try {\n       button.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "tarlabs/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementGreaterThanTwoViewports_1334", "method name": "test Should Be Able To Click On An Element Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {MARIONETTE})"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_too_big.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n \n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "tarlabs/selenium"}
{"repo_name": "testShouldBeAbleToClickOnAnElementInFrameGreaterThanTwoViewports_1335", "method name": "test Should Be Able To Click On An Element In Frame Greater Than Two Viewports", "comments": ["Test", "Ignore(value = {CHROME, MARIONETTE},"], "url": true, "content": "  public void function() {\n     assumeFalse(isFirefox(driver) && isNativeEventsEnabled(driver));\n \n     String url = appServer.whereIs(\"click_too_big_in_frame.html\");\n     driver.get(url);\n \n     WebElement frame = driver.findElement(By.id(\"iframe1\"));\n     driver.switchTo().frame(frame);\n \n     WebElement element = driver.findElement(By.id(\"click\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "tarlabs/selenium"}
{"repo_name": "testShouldBeAbleToClickOnRTLLanguageLink_1336", "method name": "test Should Be Able To Click On RTL Language Link", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_rtl.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"ar_link\"));\n     element.click();\n \n     wait.until(titleIs(\"clicks\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "tarlabs/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooter_1337", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScroll.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "tarlabs/selenium"}
{"repo_name": "testShouldBeAbleToClickOnLinkInAbsolutelyPositionedFooterInQuirksMode_1338", "method name": "test Should Be Able To Click On Link In Absolutely Positioned Footer In Quirks Mode", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"fixedFooterNoScrollQuirksMode.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"link\"));\n     element.click();\n \n     wait.until(titleIs(\"XHTML Test Page\"));\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickTest.java", "repo name": "tarlabs/selenium"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_1339", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "eric-stanley/selenium"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1340", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "AutomatedTester/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1341", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test", "Ignore({MARIONETTE})"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "AutomatedTester/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_1342", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "AutomatedTester/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_1343", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "AutomatedTester/selenium"}
{"repo_name": "testShouldBeAbleToReturnTheTextInAPage_1344", "method name": "test Should Be Able To Return The Text In A Page", "comments": ["NeedsFreshDriver", "Test", "Ignore(MARIONETTE)"], "url": true, "content": "  public void function() {\n     String url = GlobalTestEnvironment.get()\n         .getAppServer()\n         .whereIs(\"encoding\");\n     driver.get(url);\n \n     String text = driver.findElement(By.tagName(\"body\")).getText();\n \n     assertEquals(shalom, text);\n   }\n", "path": "java/client/test/org/openqa/selenium/I18nTest.java", "repo name": "customcommander/selenium"}
{"repo_name": "parentNodeVisibleWhenAllChildrenAreAbsolutelyPositionedAndOverflowIsHidden_1345", "method name": "parent Node Visible When All Children Are Absolutely Positioned And Overflow Is Hidden", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"visibility-css.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"suggest\"));\n     assertTrue(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "alexec/selenium"}
{"repo_name": "tooSmallAWindowWithOverflowHiddenIsNotAProblem_1346", "method name": "too Small A Window With Overflow Hidden Is Not A Problem", "comments": ["Test"], "url": true, "content": "  public void function() {\n     // Browser window cannot be resized on ANDROID (and most mobile platforms\n     // though others aren't defined in org.openqa.selenium.Platform).\n     assumeFalse(TestUtilities.getEffectivePlatform(driver).is(ANDROID));\n     WebDriver.Window window = driver.manage().window();\n     Dimension originalSize = window.getSize();\n \n     try {\n       // Short in the Y dimension\n       window.setSize(new Dimension(1024, 500));\n \n       String url = appServer.whereIs(\"overflow-body.html\");\n       driver.get(url);\n \n       WebElement element = driver.findElement(By.name(\"resultsFrame\"));\n       assertTrue(element.isDisplayed());\n     } finally {\n       window.setSize(originalSize);\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "alexec/selenium"}
{"repo_name": "shouldShowElementNotVisibleWithHiddenAttribute_1347", "method name": "should Show Element Not Visible With Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n     WebElement element = driver.findElement(By.id(\"singleHidden\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "alexec/selenium"}
{"repo_name": "testShouldShowElementNotVisibleWhenParentElementHasHiddenAttribute_1348", "method name": "test Should Show Element Not Visible When Parent Element Has Hidden Attribute", "comments": ["Test", "Ignore(IE)", "NotYetImplemented(HTMLUNIT)"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"hidden.html\");\n     driver.get(url);\n \n     WebElement element = driver.findElement(By.id(\"child\"));\n     assertFalse(element.isDisplayed());\n   }\n", "path": "java/client/test/org/openqa/selenium/VisibilityTest.java", "repo name": "alexec/selenium"}
{"repo_name": "getWebDriver_1349", "method name": "get Web Driver", "comments": [], "url": true, "content": "  private WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n                                                          // run with DISPLAY 99\n         }\n         FirefoxProfile profile = new FirefoxProfile();\n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n       }\n     }\n \n     String url;\n     if (System.getProperty(\"url\") != null) {\n       url = System.getProperty(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/ZeppelinIT.java", "repo name": "EasonYi/incubator-zeppelin"}
{"repo_name": "testShouldScrollToClickOnAnElementHiddenByOverflow_1350", "method name": "test Should Scroll To Click On An Element Hidden By Overflow", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"click_out_of_bounds_overflow.html\");\n     driver.get(url);\n \n     WebElement link = driver.findElement(By.id(\"link\"));\n     try {\n       link.click();\n     } catch (MoveTargetOutOfBoundsException e) {\n       fail(\"Should not be out of bounds: \" + e.getMessage());\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/ClickScrollingTest.java", "repo name": "petruc/selenium"}
{"repo_name": "getWebDriver_1351", "method name": "get Web Driver", "comments": [], "url": true, "content": "  public static WebDriver function() {\n     WebDriver driver = null;\n \n     if (driver == null) {\n       try {\n         FirefoxBinary ffox = new FirefoxBinary();\n         if (\"true\".equals(System.getenv(\"TRAVIS\"))) {\n           ffox.setEnvironmentProperty(\"DISPLAY\", \":99\"); // xvfb is supposed to\n           // run with DISPLAY 99\n         }\n         int firefoxVersion = WebDriverManager.getFirefoxVersion();\n         LOG.info(\"Firefox version \" + firefoxVersion + \" detected\");\n \n         downLoadsDir = FileUtils.getTempDirectory().toString();\n \n         String tempPath = downLoadsDir + \"/firebug/\";\n \n         downloadFireBug(firefoxVersion, tempPath);\n \n         final String firebugPath = tempPath + \"firebug.xpi\";\n         final String firepathPath = tempPath + \"firepath.xpi\";\n \n         FirefoxProfile profile = new FirefoxProfile();\n         profile.setPreference(\"browser.download.folderList\", 2);\n         profile.setPreference(\"browser.download.dir\", downLoadsDir);\n         profile.setPreference(\"browser.helperApps.alwaysAsk.force\", false);\n         profile.setPreference(\"browser.download.manager.showWhenStarting\", false);\n         profile.setPreference(\"browser.download.manager.showAlertOnComplete\", false);\n         profile.setPreference(\"browser.download.manager.closeWhenDone\", true);\n         profile.setPreference(\"app.update.auto\", false);\n         profile.setPreference(\"app.update.enabled\", false);\n         profile.setPreference(\"dom.max_script_run_time\", 0);\n         profile.setPreference(\"dom.max_chrome_script_run_time\", 0);\n         profile.setPreference(\"browser.helperApps.neverAsk.saveToDisk\", \"application/x-ustar,application/octet-stream,application/zip,text/csv,text/plain\");\n         profile.setPreference(\"network.proxy.type\", 0);\n \n         profile.addExtension(new File(firebugPath));\n         profile.addExtension(new File(firepathPath));\n \n         driver = new FirefoxDriver(ffox, profile);\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while FireFox Driver \", e);\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new ChromeDriver();\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while ChromeDriver \", e);\n       }\n     }\n \n     if (driver == null) {\n       try {\n         driver = new SafariDriver();\n       } catch (Exception e) {\n         LOG.error(\"Exception in WebDriverManager while SafariDriver \", e);\n       }\n     }\n \n     String url;\n     if (System.getenv(\"url\") != null) {\n       url = System.getenv(\"url\");\n     } else {\n       url = \"http://localhost:8080\";\n     }\n \n     long start = System.currentTimeMillis();\n     boolean loaded = false;\n     driver.manage().timeouts().implicitlyWait(AbstractZeppelinIT.MAX_IMPLICIT_WAIT,\n         TimeUnit.SECONDS);\n     driver.get(url);\n \n     while (System.currentTimeMillis() - start < 60 * 1000) {\n       // wait for page load\n       try {\n         (new WebDriverWait(driver, 5)).until(new ExpectedCondition<Boolean>() {\n           @Override\n           public Boolean apply(WebDriver d) {\n             return d.findElement(By.partialLinkText(\"Create new note\"))\n                 .isDisplayed();\n           }\n         });\n         loaded = true;\n         break;\n       } catch (TimeoutException e) {\n         LOG.info(\"Exception in WebDriverManager while WebDriverWait \", e);\n         driver.navigate().to(url);\n       }\n     }\n \n     if (loaded == false) {\n       fail();\n     }\n \n     return driver;\n   }\n", "path": "zeppelin-server/src/test/java/org/apache/zeppelin/WebDriverManager.java", "repo name": "prabhjyotsingh/incubator-zeppelin"}
{"repo_name": "canBlockInvalidSslCertificates_1352", "method name": "can Block Invalid Ssl Certificates", "comments": ["Test"], "url": true, "content": "  public void function() {\n     FirefoxProfile profile = new FirefoxProfile();\n     profile.setAcceptUntrustedCertificates(false);\n     String url = GlobalTestEnvironment.get().getAppServer().whereIsSecure(\"simpleTest.html\");\n \n     WebDriver secondDriver = null;\n     try {\n       secondDriver = newFirefoxDriver(profile);\n       secondDriver.get(url);\n       String gotTitle = secondDriver.getTitle();\n       assertFalse(\"Hello WebDriver\".equals(gotTitle));\n     } catch (Exception e) {\n       e.printStackTrace();\n       fail(\"Creating driver with untrusted certificates set to false failed.\");\n     } finally {\n       if (secondDriver != null) {\n         secondDriver.quit();\n       }\n     }\n   }\n", "path": "java/client/test/org/openqa/selenium/firefox/FirefoxDriverTest.java", "repo name": "slongwang/selenium"}
{"repo_name": "canAuthenticateUsingBasicAuthentication_1353", "method name": "can Authenticate Using Basic Authentication", "comments": ["Test"], "url": true, "content": "  public void function() {\n     String url = appServer.whereIs(\"basicAuth\");\n     driver.get(url);\n \n     Alert alert = wait.until(alertIsPresent());\n \n     Credentials user = new UserAndPassword(\"test\", \"test\");\n \n     alert.authenticateUsing(user);\n \n     assertEquals(\"authorized\", driver.findElement(By.tagName(\"h1\")).getText());\n   }\n", "path": "java/client/test/org/openqa/selenium/AuthenticatedPageLoadingTest.java", "repo name": "yukaReal/selenium"}
{"repo_name": "canNavigateToAGivenUrl_1354", "method name": "can Navigate To A Given Url", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n \n     final String url = \"http://www.example.com\";\n \n     context.goTo(url);\n     verify(webdriver).get(url);\n   }\n", "path": "java/client/test/org/openqa/selenium/lift/TestContextTest.java", "repo name": "lewis421/selenium"}
{"repo_name": "canNavigateToAGivenUrl_1355", "method name": "can Navigate To A Given Url", "comments": ["Test"], "url": true, "content": "  public void function() throws Exception {\n     final String url = \"http://www.example.com\";\n \n     context.goTo(url);\n \n     verify(webdriver).get(url);\n   }\n", "path": "java/client/test/org/openqa/selenium/lift/WebDriverTestContextTest.java", "repo name": "SouWilliams/selenium"}
{"repo_name": "shouldCreateASeparateSessionWithEveryNewDriverInstance_1356", "method name": "should Create A Separate Session With Every New Driver Instance", "comments": ["Test"], "url": true, "content": "    public void function() {\n         WebDriver d = getDriver();\n         d.get(url);\n \n         // Grab NEW set of session cookies\n         Set<Cookie> newSessionCookies = d.manage().getCookies();\n \n         // No cookie of the new Session can be found in the cookies of the old Session\n         for (Cookie c : sessionCookies) {\n             assertFalse(newSessionCookies.contains(c));\n         }\n         // No cookie of the old Session can be found in the cookies of the new Session\n         for (Cookie c : newSessionCookies) {\n             assertFalse(sessionCookies.contains(c));\n         }\n     }\n", "path": "test/ghostdriver-test/java/src/test/java/ghostdriver/IsolatedSessionTest.java", "repo name": "sxhao/phantomjs"}
