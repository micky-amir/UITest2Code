[{"repo_name": "SK_1_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_1_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Espa\u00f1ol - ES']\"))).click();\n", "        assertEquals(\"Carrito\", driver.findElement(By.id(\"nav-cart-text-container\")).getText());\n", "    }\n"]},
{"repo_name": "SK_2_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_2_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        driver.findElement(By.xpath(\"//a[contains(text(),'Deals')]\")).click();\n", "        assertEquals(\"Deals and Promotions\", driver.findElement(By.tagName(\"h1\")).getText());\n", "    }\n"]},
{"repo_name": "SK_3_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_3_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        driver.findElement(By.xpath(\"//h2[text()='AmazonBasics']/../following-sibling::*[@class='a-cardui-footer']/a\")).click();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"amazonbasics\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        List<WebElement> searchResults = driver.findElements(By.xpath\n", "                (\"//*[contains(@data-cel-widget, 'MAIN-SEARCH_RESULTS')]/descendant::a/span[contains(@class, 'a-text-normal')]\"));\n", "        for (int i = 0; i < 6; i++) {\n", "            assertTrue(searchResults.get(i).getText().toLowerCase(Locale.ROOT).contains(\"amazon\") && searchResults.get(i).getText().toLowerCase(Locale.ROOT).contains(\"basic\"));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_4_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_4_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"watch\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        List<WebElement> searchResults = driver.findElements(By.xpath\n", "                (\"//*[contains(@data-cel-widget, 'MAIN-SEARCH_RESULTS')]/descendant::a/span[contains(@class, 'a-text-normal')]\"));\n", "        for (WebElement result : searchResults) {\n", "            assertTrue(result.getText().toLowerCase(Locale.ROOT).contains(\"watch\"));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_5_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_5_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        element = driver.findElement(By.id(\"navBackToTop\"));\n", "        Actions actions = new Actions(driver);\n", "        actions.moveToElement(element).click(element).perform();\n", "        JavascriptExecutor executor = driver;\n", "        assertEquals(0, (long) executor.executeScript(\"return window.pageYOffset;\"));\n", "    }\n"]},
{"repo_name": "SK_6_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_6_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        driver.findElement(By.id(\"nav-cart\")).click();\n", "        assertEquals(\"Your Amazon Cart is empty\", driver.findElement(By.tagName(\"h2\")).getText());\n", "        assertTrue(driver.findElement(By.cssSelector(\".sc-sign-in .a-button-text\")).getText().contains(\"Sign in\"));\n", "        assertTrue(driver.findElement(By.cssSelector(\".sc-sign-in .a-button:nth-child(2) a\")).getText().contains(\"Sign up\"));\n", "    }\n"]},
{"repo_name": "SK_7_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_7_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"main-content\"));\n", "        actions.moveToElement(element).perform();\n", "        element.findElement(By.cssSelector(\".as-title-block-right > a\")).click();\n", "        List<WebElement> results = driver.findElements(By.cssSelector(\".apb-browse-searchresults-product\"));\n", "        for (WebElement element : results) {\n", "            assertTrue(element.findElement(By.tagName(\"img\")).isDisplayed());\n", "            assertTrue(element.findElement(By.tagName(\"h2\")).isDisplayed());\n", "            assertTrue(element.findElement(By.cssSelector(\".a-icon-star-small\")).isDisplayed());\n", "            assertTrue(element.findElement(By.className(\"a-price\")).isDisplayed());\n", "            assertEquals(\"$\", element.findElement(By.className(\"a-price-symbol\")).getText());\n", "        }\n", "    }\n"]},
{"repo_name": "SK_8_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_8_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        driver.findElement(By.id(\"searchDropdownBox\")).click();\n", "        driver.findElement(By.xpath(\"//option[text()='Arts & Crafts']\")).click();\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"color\");\n", "        element.submit();\n", "        assertTrue(driver.findElement(By.cssSelector(\"#departments ul .a-text-bold\")).getText().contains(\"Arts & Crafts\"));\n", "\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"color\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        List<WebElement> searchResults = driver.findElements(By.xpath\n", "                (\"//*[contains(@data-cel-widget, 'MAIN-SEARCH_RESULTS')]/descendant::a/span[contains(@class, 'a-text-normal')]\"));\n", "        for (WebElement result : searchResults) {\n", "            assertTrue(result.getText().toLowerCase(Locale.ROOT).contains(\"color\"));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_9_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_9_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        driver.findElement(By.id(\"nav-global-location-slot\")).click();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"a-popover-3\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"a-dropdown-container\"))).click();\n", "        driver.findElement(By.xpath(\"//a[text()='United Kingdom']\")).click();\n", "        wait.until(ExpectedConditions.textToBe(By.id(\"GLUXCountryValue\"), \"United Kingdom\"));\n", "        driver.findElement(By.xpath(\"//button[@name='glowDoneButton']\")).click();\n", "        wait.until(ExpectedConditions.textToBe(By.id(\"nav-global-location-slot\"), \"Deliver to\\nUnited Kingdom\"));\n", "    }\n"]},
{"repo_name": "SK_10_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_10_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        driver.findElement(By.id(\"nav-global-location-slot\")).click();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"a-popover-3\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"GLUXZipUpdateInput\"))).sendKeys(\"32958\");\n", "\n", "        driver.findElement(By.cssSelector(\"#GLUXZipUpdate .a-button-input\")).click();\n", "        wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.id(\"GLUXHiddenSuccessSelectedAddressPlaceholder\"), \"\")));\n", "        assertEquals(\"32958\", driver.findElement(By.id(\"GLUXHiddenSuccessSelectedAddressPlaceholder\")).getText());\n", "        wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\".a-popover-footer > .a-button\"))).click();\n", "        wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.id(\"nav-global-location-slot\"), \"Deliver to\\nIsrael\")));\n", "        assertTrue(driver.findElement(By.id(\"nav-global-location-slot\")).getText().contains(\"Sebastian 32958\"));\n", "    }\n"]},
{"repo_name": "SK_11_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_11_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "        assertEquals(\"Cart\", driver.findElement(By.id(\"nav-cart-text-container\")).getText());\n", "\n", "        driver.findElement(By.id(\"nav-hamburger-menu\")).click();\n", "        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"hmenu-content\")));\n", "        element = driver.findElement(By.xpath(\"//div[text()='Amazon Music']/..\"));\n", "        actions.moveToElement(element).click(element).perform();\n", "        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//a[text()='Amazon Music HD']\"))).click();\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"#katana-unrec-5 h1\")));\n", "        assertTrue(element.getText().contains(\"AMAZON MUSIC HD\"));\n", "    }\n"]},
{"repo_name": "SK_12_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_12_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        driver.findElement(By.id(\"nav-orders\")).click();\n", "        assertEquals(\"Sign-In\", driver.findElement(By.tagName(\"h1\")).getText());\n", "    }\n"]},
{"repo_name": "SK_13_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_13_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"nav-link-accountList\"));\n", "        actions.moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-accountList\")).getCssValue(\"display\"));\n", "        assertTrue(driver.findElement(By.id(\"nav-flyout-ya-signin\")).isDisplayed());\n", "        List<WebElement> titlesElements = driver.findElements(By.className(\"nav-title\"));\n", "        assertEquals(\"Your Lists\", titlesElements.get(0).getText());\n", "        assertEquals(\"Your Account\", titlesElements.get(1).getText());\n", "        for (WebElement element : titlesElements) {\n", "            assertTrue(element.findElements(By.xpath(\".//../a\")).size() > 1);\n", "        }\n", "\n", "        driver.findElement(By.xpath(\"//*[text()='Create a List']/..\")).click();\n", "        assertEquals(\"Lists\", driver.findElement(By.className(\"al-intro-banner-header\")).getText());\n", "        assertEquals(\"Sign In\", driver.findElement(By.className(\"a-button-text\")).getText());\n", "    }\n"]},
{"repo_name": "SK_14_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_14_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"nav-link-accountList\"));\n", "        actions.moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-accountList\")).getCssValue(\"display\"));\n", "        assertTrue(driver.findElement(By.id(\"nav-flyout-ya-signin\")).isDisplayed());\n", "        List<WebElement> titlesElements = driver.findElements(By.className(\"nav-title\"));\n", "        assertEquals(\"Your Lists\", titlesElements.get(0).getText());\n", "        assertEquals(\"Your Account\", titlesElements.get(1).getText());\n", "        for (WebElement element : titlesElements) {\n", "            assertTrue(element.findElements(By.xpath(\".//../a\")).size() > 1);\n", "        }\n", "\n", "        driver.findElement(By.xpath(\"//*[text()='Account']/..\")).click();\n", "        assertEquals(\"Your Account\", driver.findElement(By.tagName(\"h1\")).getText());\n", "        List<WebElement> cardElements = driver.findElements(By.xpath(\"//h2[contains(@class, 'a-text-normal')]\"));\n", "        List<String> expectedTitles = new LinkedList<>(Arrays.asList(\"Your Orders\", \"Login & security\", \"Prime\",\n", "                \"Gift cards\", \"Your Payments\", \"Your Profiles\", \"Your devices and content\"));\n", "        List<String> actualTitles = new LinkedList<>();\n", "        for (WebElement element : cardElements) {\n", "            actualTitles.add(element.getText());\n", "        }\n", "        assertEquals(expectedTitles, actualTitles);\n", "        cardElements.clear();\n", "        cardElements = driver.findElements(By.cssSelector(\".a-box.ya-card h2\"));\n", "        expectedTitles.clear();\n", "        expectedTitles.addAll(Arrays.asList(\"Ordering and shopping preferences\", \"Digital content and devices\",\n", "                \"Memberships and subscriptions\", \"Communication and content\", \"Shopping programs and rentals\",\n", "                \"Other programs\"));\n", "        actualTitles.clear();\n", "        for (WebElement element : cardElements) {\n", "            actualTitles.add(element.getText());\n", "        }\n", "        assertEquals(expectedTitles, actualTitles);\n", "\n", "        driver.findElement(By.xpath(\"//h2[contains(text(),'Your Profiles')]\")).click();\n", "        assertEquals(\"Sign-In\", driver.findElement(By.tagName(\"h1\")).getText());\n", "    }\n"]},
{"repo_name": "SK_15_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_15_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_4'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "        driver.findElement(By.id(\"buy-now-button\")).click();\n", "        assertEquals(\"Sign-In\", driver.findElement(By.tagName(\"h1\")).getText());\n", "    }\n"]},
{"repo_name": "SK_16_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_16_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_4'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "        driver.findElement(By.id(\"add-to-cart-button\")).click();\n", "        driver.findElement(By.id(\"nav-cart\")).click();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".sc-product-link .a-truncate-cut\")));\n", "        assertTrue(itemName.contains(element.getText()) || element.getText().contains(itemName));\n", "    }\n"]},
{"repo_name": "SK_17_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_17_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_4'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "        driver.findElement(By.cssSelector(\"a[title='Add to List']\")).click();\n", "        assertEquals(\"Sign-In\", driver.findElement(By.tagName(\"h1\")).getText());\n", "    }\n"]},
{"repo_name": "SK_18_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_18_Tamar() throws InterruptedException {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).build().perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).build().perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        Thread.sleep(1000);\n", "        driver.findElement(By.className(\"icp-flyout-change\")).click();\n", "\n", "        assertEquals(\"Language Settings\", driver.findElement(By.id(\"lop-heading\")).getText());\n", "        assertEquals(\"Currency Settings\", driver.findElement(By.id(\"icp-sc-heading\")).getText());\n", "        driver.findElement(By.cssSelector(\".a-button-dropdown\")).click();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"a-popover-3\")).getCssValue(\"display\"));\n", "        driver.findElement(By.xpath(\"//a[contains(text(), 'ILS')]\")).click();\n", "        driver.findElement(By.className(\"a-button-input\")).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        List<WebElement> prices = driver.findElements(By.className(\"a-price-symbol\"));\n", "        for (WebElement element : prices) {\n", "            if (!driver.findElement(By.xpath(\".//ancestor::li\")).isDisplayed())\n", "                assertEquals(\"ILS\", element.getText());\n", "        }\n", "    }\n"]},
{"repo_name": "SK_19_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_19_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_3'] a.a-text-normal\")));\n", "        element.click();\n", "        driver.findElement(By.id(\"add-to-cart-button\")).click();\n", "        driver.findElement(By.id(\"nav-cart\")).click();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".sc-product-link .a-truncate-cut\")));\n", "        String itemName = element.getText();\n", "        driver.findElement(By.cssSelector(\"[value='Delete']\")).click();\n", "        assertFalse(driver.findElement(By.cssSelector(\".sc-product-link .a-truncate-cut\")).isDisplayed());\n", "        assertFalse(driver.findElement(By.cssSelector(\".sc-product-link .a-truncate-cut\")).isDisplayed() && driver.findElement(By.cssSelector(\".sc-product-link .a-truncate-cut\")).getText().equals(itemName));\n", "    }\n"]},
{"repo_name": "SK_20_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_20_Tamar() throws InterruptedException {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_2'] a.a-text-normal\")));\n", "        element.click();\n", "        driver.findElement(By.id(\"add-to-cart-button\")).click();\n", "        driver.findElement(By.id(\"nav-cart\")).click();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".sc-product-link .a-truncate-cut\")));\n", "        String itemName = element.getText().replaceAll(\" - \", \"-\");\n", "        driver.findElement(By.cssSelector(\"[value='Compare with similar items']\")).click();\n", "        element = driver.findElement(By.cssSelector(\".a-popover\"));\n", "        assertNotEquals(\"none\", element.getCssValue(\"display\"));\n", "        Thread.sleep(1000);\n", "        assertEquals(\"Compare with similar items\", element.findElement(By.tagName(\"h1\")).getText());\n", "        String presentedName = element.findElement(By.cssSelector(\".comparable_item_scroller0 .a-size-base.a-link-normal\")).getText()\n", "                .replace(\"...\", \"\").replaceAll(\" - \", \"-\");\n", "        assertTrue(itemName.contains(presentedName) || presentedName.contains(itemName));\n", "        assertEquals(driver.findElement(By.cssSelector(\".sc-product-price\")).getText(), element.findElement(By.cssSelector(\".a-color-price\")).getText());\n", "        assertTrue(element.findElements(By.tagName(\"img\")).size() > 1);\n", "    }\n"]},
{"repo_name": "SK_21_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_21_Tamar() throws InterruptedException {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_2'] a.a-text-normal\")));\n", "        element.click();\n", "        driver.findElement(By.id(\"add-to-cart-button\")).click();\n", "        driver.findElement(By.id(\"nav-cart\")).click();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".sc-product-link .a-truncate-cut\")));\n", "        String itemName = element.getText();\n", "        driver.findElement(By.cssSelector(\"[value='Save for later']\")).click();\n", "        Thread.sleep(1000);\n", "        assertFalse(driver.findElements(By.cssSelector(\"#activeCartViewForm .a-truncate-cut\")).size() > 0\n", "                && driver.findElement(By.cssSelector(\"#activeCartViewForm .sc-product-link .a-truncate-cut\")).getText().equals(itemName));\n", "        assertEquals(itemName, driver.findElement(By.cssSelector(\"#sc-saved-cart-items .a-truncate-full\")).getText());\n", "    }\n"]},
{"repo_name": "SK_22_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_22_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "        assertEquals(\"Cart\", driver.findElement(By.id(\"nav-cart-text-container\")).getText());\n", "\n", "        driver.findElement(By.id(\"nav-hamburger-menu\")).click();\n", "        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"hmenu-content\")));\n", "        element = driver.findElement(By.xpath(\"//div[text()='Electronics']/..\"));\n", "        actions.moveToElement(element).click(element).perform();\n", "        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//a[text()='Accessories & Supplies']\"))).click();\n", "        assertTrue(driver.findElement(By.cssSelector(\"[data-component-type='s-result-info-bar']\")).isDisplayed());\n", "        assertEquals(\"Accessories & Supplies\", driver.findElement(By.cssSelector(\"#searchDropdownBox [selected]\")).getText());\n", "    }\n"]},
{"repo_name": "SK_23_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_23_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "        assertEquals(\"Cart\", driver.findElement(By.id(\"nav-cart-text-container\")).getText());\n", "\n", "        driver.findElement(By.id(\"nav-hamburger-menu\")).click();\n", "        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"hmenu-content\")));\n", "        element = driver.findElement(By.xpath(\"//div[text()='Gift Cards']/..\"));\n", "        actions.moveToElement(element).click(element).perform();\n", "        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//a[text()='All gift cards']\"))).click();\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.tagName(\"h1\")));\n", "        assertEquals(\"Gift Cards\", element.getText());\n", "        driver.findElement(By.xpath(\"//img[@alt='Birthday Gift Cards']/..\")).click();\n", "        assertEquals(\"Birthday Gift Cards Header\",\n", "                driver.findElement(By.cssSelector(\".a-container img\")).getAttribute(\"alt\"));\n", "    }\n"]},
{"repo_name": "SK_24_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_24_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "        assertEquals(\"Cart\", driver.findElement(By.id(\"nav-cart-text-container\")).getText());\n", "\n", "        driver.findElement(By.id(\"nav-hamburger-menu\")).click();\n", "        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"hmenu-content\")));\n", "        element = driver.findElement(By.xpath(\"//div[text()='Amazon Live']/..\"));\n", "        actions.moveToElement(element).click(element).perform();\n", "        wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//a[text()='Live']\"))).click();\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-id='pageHeaderLogo'] > img\")));\n", "        assertEquals(\"Amazon Live logo\", element.getAttribute(\"alt\"));\n", "        assertTrue(driver.findElement(By.cssSelector(\"[aria-label='Video Player']\")).isDisplayed());\n", "    }\n"]},
{"repo_name": "SK_25_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_25_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "        assertEquals(\"Cart\", driver.findElement(By.id(\"nav-cart-text-container\")).getText());\n", "\n", "        driver.findElement(By.id(\"nav-hamburger-menu\")).click();\n", "        wait.until(ExpectedConditions.visibilityOfElementLocated(By.id(\"hmenu-content\")));\n", "        element = driver.findElement(By.xpath(\"//li/a[text()='Customer Service']\"));\n", "        actions.moveToElement(element).click(element).perform();\n", "        List<WebElement> cardElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\".a-box-inner h3\")));\n", "        List<String> expectedTitles = new LinkedList<>(Arrays.asList(\"Your Orders\", \"Returns & Refunds\",\n", "                \"Get Product Help\", \"Digital Services and Device Support\", \"Manage Prime\", \"Payments & Gift Cards\",\n", "                \"Your Account\", \"Amazon and COVID-19\", \"Safe Online Shopping\"));\n", "        List<String> actualTitles = new LinkedList<>();\n", "        for (WebElement element : cardElements) {\n", "            actualTitles.add(element.getText());\n", "        }\n", "        assertEquals(expectedTitles, actualTitles);\n", "        assertEquals(\"Search the help library\", driver.findElement(By.cssSelector(\"#help-search-label .a-text-bold\")).getText());\n", "        assertTrue(driver.findElement(By.id(\"helpsearch\")).isDisplayed());\n", "        assertEquals(\"Browse Help Topics\", driver.findElement(By.cssSelector(\".help-content h1\")).getText());\n", "    }\n"]},
{"repo_name": "SK_26_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_26_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "        assertEquals(\"Cart\", driver.findElement(By.id(\"nav-cart-text-container\")).getText());\n", "\n", "        driver.findElement(By.xpath(\"//a[(text()='Customer Service')]\")).click();\n", "        element = driver.findElement(By.id(\"helpsearch\"));\n", "        element.sendKeys(\"menu\");\n", "        List<WebElement> suggestions = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"#help_srch_sggst > *\")));\n", "        assertEquals(\"menu\", suggestions.get(0).getText());\n", "        assertEquals(\"menu button\", suggestions.get(1).getText());\n", "        element.submit();\n", "        assertTrue(driver.findElement(By.cssSelector(\"#search-help p\")).getText().contains(\"search results for menu\"));\n", "    }\n"]},
{"repo_name": "SK_27_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_27_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_3'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "        element = driver.findElement(By.id(\"acrCustomerReviewLink\"));\n", "        element.click();\n", "        assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n", "                \"var elem = arguments[0],                 \" +\n", "                        \"  box = elem.getBoundingClientRect(),    \" +\n", "                        \"  cx = box.left + box.width / 2,         \" +\n", "                        \"  cy = box.top + box.height / 2,         \" +\n", "                        \"  e = document.elementFromPoint(cx, cy); \" +\n", "                        \"for (; e; e = e.parentElement) {         \" +\n", "                        \"  if (e === elem)                        \" +\n", "                        \"    return true;                         \" +\n", "                        \"}                                        \" +\n", "                        \"return false;                            \"\n", "                , driver.findElement(By.cssSelector(\"#reviewsMedley h2\"))));\n", "        assertEquals(driver.findElement(By.id(\"acrPopover\")).getAttribute(\"title\").replace(\" stars\", \"\"), driver.findElement(By.xpath(\"//*[@data-hook='rating-out-of-text']\")).getText());\n", "        assertEquals(element.getText(), driver.findElement(By.xpath(\"//*[@data-hook='total-review-count']\")).getText().replace(\"global \", \"\"));\n", "        assertTrue(driver.findElement(By.cssSelector(\"[data-hook='review']\")).isDisplayed());\n", "    }\n"]},
{"repo_name": "SK_28_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_28_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_3'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "        element = driver.findElement(By.id(\"askATFLink\"));\n", "        element.click();\n", "        assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n", "                \"var elem = arguments[0],                 \" +\n", "                        \"  box = elem.getBoundingClientRect(),    \" +\n", "                        \"  cx = box.left + box.width / 2,         \" +\n", "                        \"  cy = box.top + box.height / 2,         \" +\n", "                        \"  e = document.elementFromPoint(cx, cy); \" +\n", "                        \"for (; e; e = e.parentElement) {         \" +\n", "                        \"  if (e === elem)                        \" +\n", "                        \"    return true;                         \" +\n", "                        \"}                                        \" +\n", "                        \"return false;                            \"\n", "                , wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"askInlineWidget\")))));\n", "        String moreAnswers = driver.findElement(By.cssSelector(\".askTopQandALoadMoreQuestions\")).getText();\n", "        int numberOfMoreAnswers = Integer.parseInt(moreAnswers.substring(moreAnswers.indexOf(\"(\") + 1, moreAnswers.lastIndexOf(\")\")));\n", "        int numberOfPresentedAnswers = driver.findElements(By.cssSelector(\".askTeaserQuestions > *\")).size();\n", "        assertEquals(Integer.parseInt(element.getText().split(\" \")[0]), numberOfMoreAnswers + numberOfPresentedAnswers);\n", "        assertTrue(numberOfMoreAnswers > 0);\n", "    }\n"]},
{"repo_name": "SK_29_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_29_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_3'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "        element = driver.findElement(By.cssSelector(\".twisterSwatchWrapper\"));\n", "        element.click();\n", "        wait.until(ExpectedConditions.textToBe(By.cssSelector(\"#variation_color_name .selection\"), element.findElement(By.tagName(\"img\")).getAttribute(\"alt\")));\n", "    }\n"]},
{"repo_name": "SK_30_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_30_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_3'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "        element = driver.findElement(By.xpath(\"//h2[contains(text(), 'Have a question?')]\"));\n", "        actions.moveToElement(element).perform();\n", "        element = driver.findElement(By.cssSelector(\"[aria-labelledby='askDPSearchPromptLabel']\"));\n", "        element.sendKeys(\"size\");\n", "\n", "        List<WebElement> answersElement = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n", "                By.cssSelector(\".askSearchResultsActive  [data-ask-selector].a-section\")));\n", "        for (WebElement element : answersElement) {\n", "            assertTrue(element.getText().contains(\"size\"));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_31_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_31_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_4'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "        driver.findElement(By.className(\"a-dropdown-container\")).click();\n", "        assertEquals(\"true\", driver.findElement(By.cssSelector((\"[name='quantity']\"))).getAttribute(\"aria-pressed\"));\n", "        List<WebElement> options = driver.findElements(By.cssSelector(\"[name='quantity'] option\"));\n", "        for (int i = 1; i <= options.size(); i++) {\n", "            assertEquals(i, Integer.parseInt(options.get(i - 1).getText()));\n", "        }\n", "        driver.findElement(By.xpath(\"//option[@value='2']\")).click();\n", "        assertEquals(\"Qty:2\", driver.findElement(By.cssSelector(\"[data-action='a-dropdown-button']\")).getText());\n", "        driver.findElement(By.id(\"add-to-cart-button\")).click();\n", "        String sideDataEncodedOffering = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-encoded-offering]\"))).getAttribute(\"data-encoded-offering\");\n", "        driver.findElement(By.id(\"nav-cart\")).click();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".sc-product-link .a-truncate-cut\")));\n", "        assertEquals(sideDataEncodedOffering, driver.findElement(By.cssSelector(\"[data-encoded-offering]\")).getAttribute(\"data-encoded-offering\"));\n", "        assertEquals(\"2\", element.findElement(By.xpath(\".//ancestor::ul[contains(@class, 'sc-info-block')]/following-sibling::*/descendant::*[@class='a-dropdown-prompt']\")).getText());\n", "    }\n"]},
{"repo_name": "SK_32_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_32_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_3'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "\n", "        driver.findElement(By.id(\"nav-global-location-slot\")).click();\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"a-popover-4\")));\n", "        assertNotEquals(\"none\", element.getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//select[@id='GLUXCountryList']/..\"))).click();\n", "        driver.findElement(By.xpath(\"//a[text()='United Kingdom']\")).click();\n", "        wait.until(ExpectedConditions.textToBe(By.id(\"GLUXCountryValue\"), \"United Kingdom\"));\n", "        driver.findElement(By.xpath(\"//button[@name='glowDoneButton']\")).click();\n", "        wait.until(ExpectedConditions.textToBe(By.id(\"nav-global-location-slot\"), \"Deliver to\\nUnited Kingdom\"));\n", "        assertTrue(driver.findElement(By.id(\"ourprice_shippingmessage\")).getText().contains(\"United Kingdom\"));\n", "    }\n"]},
{"repo_name": "SK_33_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_33_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"navFooter\"));\n", "        actions.moveToElement(element).perform();\n", "        driver.findElement(By.xpath(\"//a[text()='Careers']\")).click();\n", "        assertEquals(\"Find jobs\", driver.findElement(By.tagName(\"h1\")).getText());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[data-react-class='SearchInput']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[aria-label='Apply now']\")).isEnabled());\n", "\n", "        assertTrue(driver.findElement(By.className(\"selected-employee-profile\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.className(\"name\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.cssSelector(\".selected-employee-profile img\")).isDisplayed());\n", "    }\n"]},
{"repo_name": "SK_34_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_34_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        driver.findElement(By.xpath(\"//a[(text()='Sell')]\")).click();\n", "\n", "        assertEquals(\"Sell on Amazon\", driver.findElement(By.cssSelector(\".sticks-top h2\")).getText());\n", "        assertEquals(\"Introduction to ecommerce selling\", driver.findElement(By.xpath(\"(//h2)[2]\")).getText());\n", "        element = driver.findElement(By.xpath(\"(//h2)[2]/../../descendant::h3\"));\n", "        actions.moveToElement(element).perform();\n", "        element = driver.findElement(By.xpath(\"((//h2)[2]/../../descendant::h3)[8]\"));\n", "        actions.moveToElement(element).perform();\n", "        wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"((//h2)[2]/../../descendant::h3)[8]\"), \"\")));\n", "        List<WebElement> titlesElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath(\"(//h2)[2]/../../descendant::h3\")));\n", "        List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"What is ecommerce?\", \"Build a business\",\n", "                \"Ecommerce fulfillment\", \"Inventory management\", \"What is dropshipping?\", \"Create an Amazon storefront\",\n", "                \"Sell books on Amazon\", \"Seller University\"));\n", "        List<String> actualTitles = new ArrayList<>();\n", "        for (WebElement element : titlesElements) {\n", "            actualTitles.add(element.getText());\n", "        }\n", "        assertEquals(expectedTitles, actualTitles);\n", "        assertTrue(driver.findElement(By.xpath(\"//h3[text()='Start selling today']\")).isDisplayed());\n", "    }\n"]},
{"repo_name": "SK_35_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_35_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[(text()='Registry')]\"))).click();\n", "\n", "        assertEquals(\"Registry & Gifting\", driver.findElement(By.cssSelector(\".gr-header\")).getText());\n", "        assertEquals(\"Find a registry or gift list\", driver.findElement(By.cssSelector(\".gr-find-stripe__header\")).getText());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[placeholder='Search by Registrant name']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[data-action='a-dropdown-select']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.xpath(\"//button[@aria-label='Search']\")).isDisplayed());\n", "\n", "        List<WebElement> cardsElements = driver.findElements(By.className(\"gr-registry-types__card\"));\n", "        List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n", "                \"Wedding Registry\", \"Baby Registry\", \"Birthday Gift List\", \"Custom Gift List\"));\n", "        List<String> actualTitles = new ArrayList<>();\n", "        for (WebElement element : cardsElements) {\n", "            assertTrue(element.findElement(By.xpath(\".//img\")).isDisplayed());\n", "            actualTitles.add(element.findElement(By.className(\"gr-registry-types__header\")).getText());\n", "        }\n", "        assertEquals(expectedTitles, actualTitles);\n", "    }\n"]},
{"repo_name": "SK_36_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_36_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[(text()='Customer Service')]\"))).click();\n", "        element = driver.findElement(By.id(\"csg-support-topics\"));\n", "        actions.moveToElement(element).perform();\n", "        element = driver.findElement(By.xpath(\"//*[contains(text(), 'My Stuff')]\"));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        element = driver.findElement(By.id(\"help-gateway-category-1\"));\n", "        assertNotEquals(\"none\", element.getCssValue(\"display\"));\n", "        assertEquals(\"Where's My Stuff?\", element.findElement(By.tagName(\"h3\")).getText());\n", "        List<WebElement> linkElements = driver.findElements(By.cssSelector(\"#help-gateway-category-1 a\"));\n", "        List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Find a Missing Package that Shows as Delivered\",\n", "                \"Contact Shipping Carrier\", \"Track Your Package\", \"More in Where's My Stuff\"));\n", "        List<String> actualTitles = new ArrayList<>();\n", "        for (WebElement element : linkElements) {\n", "            actualTitles.add(element.getText());\n", "        }\n", "        assertEquals(expectedTitles, actualTitles);\n", "        linkElements.get(3).click();\n", "        assertEquals(\"Where's My Stuff?\", driver.findElement(By.tagName(\"h1\")).getText());\n", "    }\n"]},
{"repo_name": "SK_37_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_37_Tamar() throws InterruptedException {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"watch\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        driver.findElement(By.className(\"a-dropdown-container\")).click();\n", "        driver.findElement(By.xpath(\"//a[text()='Price: Low to High']\")).click();\n", "        Thread.sleep(2000);\n", "        List<WebElement> priceElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"a-price-whole\")));\n", "        for (int i = 1; i < priceElements.size() - 4; i++) { // last 4 ones are sponsored and aren't sorted\n", "            String previousPrice = priceElements.get(i - 1).getText() + \".\" +\n", "                    priceElements.get(i - 1).findElement(By.xpath(\".//following-sibling::*[@class='a-price-fraction']\")).getText();\n", "            String currentPrice = priceElements.get(i).getText() + \".\" +\n", "                    priceElements.get(i).findElement(By.xpath(\".//following-sibling::*[@class='a-price-fraction']\")).getText();\n", "            assertTrue(\"last: \" + previousPrice + \" current: \" + currentPrice,\n", "                    Double.parseDouble(currentPrice) >= Double.parseDouble(previousPrice));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_38_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_38_Tamar() throws InterruptedException {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"watch\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        driver.findElement(By.className(\"a-dropdown-container\")).click();\n", "        driver.findElement(By.xpath(\"//a[text()='Avg. Customer Review']\")).click();\n", "        Thread.sleep(2000);\n", "        List<WebElement> reviewsElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label$='out of 5 stars']\")));\n", "        for (int i = 1; i < 20; i++) { // checking the first ones only\n", "            String previousReview = reviewsElements.get(i - 1).getAttribute(\"aria-label\");\n", "            String currentReview = reviewsElements.get(i).getAttribute(\"aria-label\");\n", "            assertTrue(\"last: \" + previousReview + \" current: \" + currentReview,\n", "                    Double.parseDouble(previousReview.substring(0, previousReview.indexOf(\" \"))) >=\n", "                            Double.parseDouble(currentReview.substring(0, currentReview.indexOf(\" \"))));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_39_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_39_Tamar() throws InterruptedException {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"watch\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        driver.findElement(By.cssSelector(\"[aria-label='Climate Pledge Friendly'] a\")).click();\n", "        Thread.sleep(2000);\n", "        List<WebElement> searchResults = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n", "                By.xpath(\"//*[contains(@data-cel-widget, 'MAIN-SEARCH_RESULTS')]\")));\n", "        for (int i = 0; i < 20; i++) { // checking the first ones only\n", "            assertEquals(\"Climate Pledge Friendly\", searchResults.get(i).findElement(By.cssSelector(\".s-cpf-badge\")).getText());\n", "        }\n", "        element = driver.findElement(By.cssSelector(\"[data-action='s-cpf-popover']\"));\n", "        actions.moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"a-popover-4\")).getCssValue(\"display\"));\n", "        assertNotEquals(\"\", driver.findElement(By.cssSelector(\"#a-popover-4 .a-color-base\")).getText());\n", "        assertTrue(driver.findElement(By.cssSelector(\"#a-popover-4 .a-text-bold\")).getText().contains(\"PRODUCT CERTIFICATION\"));\n", "    }\n"]},
{"repo_name": "SK_40_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_40_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"watch\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        By locator = By.xpath(\"//*[text()='Smartwatches']/..\");\n", "        driver.findElement(locator).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[contains(@class, 'a-text-bold') and text()='Smartwatches']\")));\n", "\n", "        List<WebElement> searchResults = driver.findElements(By.xpath\n", "                (\"//*[contains(@data-cel-widget, 'MAIN-SEARCH_RESULTS')]/descendant::a/span[contains(@class, 'a-text-normal')]\"));\n", "        for (WebElement result : searchResults) {\n", "            String itemName = result.getText().toLowerCase(Locale.ROOT).replaceAll(\" \", \"\");\n", "            assertTrue(itemName.contains(\"smartwatch\") || itemName.contains(\"applewatch\"));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_41_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_41_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"watch\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        By locator = By.xpath(\"//*[@aria-label='4 Stars & Up']/..\");\n", "        driver.findElement(locator).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@aria-label='4 Stars & Up']//span[contains(@class, 'a-text-bold') and text()='& Up']\")));\n", "\n", "        List<WebElement> reviewsElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label$='out of 5 stars']\")));\n", "        for (WebElement review : reviewsElements) {\n", "            String currentReview = review.getAttribute(\"aria-label\");\n", "            assertTrue(Double.parseDouble(currentReview.substring(0, currentReview.indexOf(\" \"))) >= 4.0);\n", "        }\n", "    }\n"]},
{"repo_name": "SK_42_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_42_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"watch\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        By locator = By.xpath(\"//*[text()='Apple']/..\");\n", "        driver.findElement(locator).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[contains(@class, 'a-text-bold') and text()='Apple']\")));\n", "\n", "        List<WebElement> searchResults = driver.findElements(By.xpath\n", "                (\"//*[contains(@data-cel-widget, 'MAIN-SEARCH_RESULTS')]/descendant::a/span[contains(@class, 'a-text-normal')]\"));\n", "        for (WebElement result : searchResults) {\n", "            assertTrue(result.getText().contains(\"Apple\"));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_43_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_43_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"watch\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        driver.findElement(By.id(\"low-price\")).sendKeys(\"50\");\n", "        driver.findElement(By.id(\"high-price\")).sendKeys(\"100\");\n", "        driver.findElement(By.xpath(\"//*[contains(text(), 'Go')]/preceding-sibling::input[@type='submit']\")).click();\n", "\n", "        List<WebElement> priceElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"a-price-whole\")));\n", "        for (int i = 1; i < 10; i++) { // checking the first ones only.\n", "            double dOGPrice = 0;\n", "            if (priceElements.get(i).findElements(By.xpath(\".//ancestor::*[@class='a-price']/following-sibling::*\")).size() > 0) {\n", "                String originalPrice = priceElements.get(i).findElement(By.xpath(\".//ancestor::*[@class='a-price']/following-sibling::*/*[@aria-hidden='true']\"))\n", "                        .getText();\n", "                if (!originalPrice.isEmpty()) {\n", "                    originalPrice = originalPrice.substring(1);\n", "                    dOGPrice = Double.parseDouble(originalPrice);\n", "                }\n", "            }\n", "            String currentPrice = priceElements.get(i).getText() + \".\" +\n", "                    priceElements.get(i).findElement(By.xpath(\".//following-sibling::*[@class='a-price-fraction']\")).getText();\n", "            double price = Double.parseDouble(currentPrice);\n", "            assertTrue(i + \" price: \" + currentPrice + \", og price: \" + dOGPrice,\n", "                    price >= 50.0 && price <= 100.0 || dOGPrice >= 50.0 && dOGPrice <= 100.0);\n", "        }\n", "    }\n"]},
{"repo_name": "SK_44_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_44_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(\"watch\", searchWord.replaceAll(\"\\\"\", \"\"));\n", "\n", "        driver.findElement(By.xpath(\"//*[@aria-label='4 Stars & Up']/..\")).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@aria-label='4 Stars & Up']//span[contains(@class, 'a-text-bold') and text()='& Up']\")));\n", "        driver.findElement(By.xpath(\"//*[text()='Apple']/..\")).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[contains(@class, 'a-text-bold') and text()='Apple']\")));\n", "\n", "        List<WebElement> reviewsElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label$='out of 5 stars']\")));\n", "        for (WebElement review : reviewsElements) {\n", "            String currentReview = review.getAttribute(\"aria-label\");\n", "            assertTrue(Double.parseDouble(currentReview.substring(0, currentReview.indexOf(\" \"))) >= 4.0);\n", "        }\n", "        List<WebElement> searchResults = driver.findElements(By.xpath\n", "                (\"//*[contains(@data-cel-widget, 'MAIN-SEARCH_RESULTS')]/descendant::a/span[contains(@class, 'a-text-normal')]\"));\n", "        for (WebElement result : searchResults) {\n", "            assertTrue(result.getText().contains(\"Apple\"));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_45_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_45_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        wait.until(ExpectedConditions.attributeContains(By.id(\"nav-flyout-searchAjax\"), \"style\", \"display: block\"));\n", "        List<WebElement> suggestionsElements = driver.findElements(By.cssSelector(\"#suggestions > .s-suggestion\"));\n", "        for (WebElement result : suggestionsElements) {\n", "            assertTrue(result.getText().contains(\"watch\"));\n", "        }\n", "        String selectedSuggestion = suggestionsElements.get(3).getText();\n", "        suggestionsElements.get(3).click();\n", "        String searchWord = driver.findElement(By.cssSelector(\".a-color-state.a-text-bold\")).getText();\n", "        assertEquals(selectedSuggestion, searchWord.replaceAll(\"\\\"\", \"\"));\n", "    }\n"]},
{"repo_name": "SK_46_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_46_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        wait.until(ExpectedConditions.attributeContains(By.id(\"nav-flyout-searchAjax\"), \"style\", \"display: block\"));\n", "        List<WebElement> suggestionsElements = driver.findElements(By.cssSelector(\"#suggestions > .s-suggestion\"));\n", "        for (WebElement result : suggestionsElements) {\n", "            assertTrue(result.getText().contains(\"watch\"));\n", "        }\n", "        assertEquals(\"by price\", driver.findElement(By.cssSelector(\".discover-tr span\")).getText());\n", "        List<WebElement> priceSuggestionsElements = driver.findElements(By.cssSelector(\".discover-tr-carousel-container  a\"));\n", "        Set<WebElement> set = new HashSet<>(priceSuggestionsElements);\n", "        assertEquals(set.size(), priceSuggestionsElements.size());\n", "\n", "        String priceSelectedSuggestion = priceSuggestionsElements.get(2).getText();\n", "        double minLimit = Double.parseDouble(priceSelectedSuggestion.substring(1, priceSelectedSuggestion.indexOf(' ')));\n", "        double maxLimit = Double.parseDouble(priceSelectedSuggestion.substring(priceSelectedSuggestion.lastIndexOf('$') + 1));\n", "        priceSuggestionsElements.get(2).click();\n", "        assertEquals(priceSelectedSuggestion, driver.findElement(By.cssSelector(\"#priceRefinements a > .a-text-bold\")).getText());\n", "\n", "        List<WebElement> priceElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"a-price-whole\")));\n", "        for (int i = 1; i < 10; i++) { // checking the first ones only.\n", "            double dOGPrice = 0;\n", "            if (priceElements.get(i).findElements(By.xpath(\".//ancestor::*[@class='a-price']/following-sibling::*\")).size() > 0) {\n", "                String originalPrice = priceElements.get(i).findElement(By.xpath(\".//ancestor::*[@class='a-price']/following-sibling::*/*[@aria-hidden='true']\"))\n", "                        .getText();\n", "                if (!originalPrice.isEmpty()) {\n", "                    originalPrice = originalPrice.substring(1);\n", "                    dOGPrice = Double.parseDouble(originalPrice);\n", "                }\n", "            }\n", "            String currentPrice = priceElements.get(i).getText() + \".\" +\n", "                    priceElements.get(i).findElement(By.xpath(\".//following-sibling::*[@class='a-price-fraction']\")).getText();\n", "            double price = Double.parseDouble(currentPrice);\n", "            assertTrue(i + \" price: \" + currentPrice + \", og price: \" + dOGPrice,\n", "                    price >= minLimit && price <= maxLimit || dOGPrice >= minLimit && dOGPrice <= maxLimit);\n", "        }\n", "    }\n"]},
{"repo_name": "SK_47_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_47_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        String[] itemsNames = new String[2];\n", "        for (int i = 0; i < 2; i++) {\n", "            element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "            element.sendKeys(\"watch\");\n", "            element.submit();\n", "            element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_\" + (i + 2) + \"'] a.a-text-normal\")));\n", "            itemsNames[i] = element.getText();\n", "            element.click();\n", "            assertEquals(itemsNames[i], driver.findElement(By.id(\"productTitle\")).getText());\n", "            driver.findElement(By.id(\"add-to-cart-button\")).click();\n", "        }\n", "        driver.findElement(By.id(\"nav-cart\")).click();\n", "\n", "        for (int i = 0; i < 2; i++) {\n", "            element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-item-count='\" + (i + 1) + \"'] .sc-product-link .a-truncate-cut\")));\n", "            assertTrue(itemsNames[1 - i].contains(element.getText()) || element.getText().contains(itemsNames[1 - i]));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_48_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_48_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"nav-link-accountList\"));\n", "        actions.moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-accountList\")).getCssValue(\"display\"));\n", "        assertTrue(driver.findElement(By.id(\"nav-flyout-ya-signin\")).isDisplayed());\n", "        List<WebElement> titlesElements = driver.findElements(By.className(\"nav-title\"));\n", "        assertEquals(\"Your Lists\", titlesElements.get(0).getText());\n", "        assertEquals(\"Your Account\", titlesElements.get(1).getText());\n", "        for (WebElement element : titlesElements) {\n", "            assertTrue(element.findElements(By.xpath(\".//../a\")).size() > 1);\n", "        }\n", "\n", "        driver.findElement(By.xpath(\"//*[text()='AmazonSmile Charity Lists']/..\")).click();\n", "        assertTrue(driver.findElement(By.cssSelector(\"[alt='AmazonSmile logo']\")).isDisplayed());\n", "        assertEquals(\"Charity Lists\", driver.findElement(By.tagName(\"h1\")).getText());\n", "        assertTrue(driver.findElement(By.className(\"donate-amount\")).isDisplayed());\n", "        List<WebElement> buttons = driver.findElements(By.xpath(\"//a/*[contains(text(),'Get started')]\"));\n", "        assertEquals(2, buttons.size());\n", "        buttons.get(0).click();\n", "        assertEquals(\"You shop. Amazon gives.\", driver.findElement(By.tagName(\"h1\")).getText());\n", "        assertEquals(\"Email or mobile phone number\", driver.findElement(By.className(\"a-form-label\")).getText());\n", "    }\n"]},
{"repo_name": "SK_49_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_49_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"nav-link-accountList\"));\n", "        actions.moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-accountList\")).getCssValue(\"display\"));\n", "        assertTrue(driver.findElement(By.id(\"nav-flyout-ya-signin\")).isDisplayed());\n", "        List<WebElement> titlesElements = driver.findElements(By.className(\"nav-title\"));\n", "        assertEquals(\"Your Lists\", titlesElements.get(0).getText());\n", "        assertEquals(\"Your Account\", titlesElements.get(1).getText());\n", "        for (WebElement element : titlesElements) {\n", "            assertTrue(element.findElements(By.xpath(\".//../a\")).size() > 1);\n", "        }\n", "\n", "        driver.findElement(By.xpath(\"//*[text()='Music Library']/..\")).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[alt='Amazon Music']\")));\n", "        assertTrue(driver.findElement(By.cssSelector(\"[title='Sign in button']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.id(\"navbarSearchInput\")).isDisplayed());\n", "        assertTrue(driver.findElements(By.tagName(\"music-vertical-item\")).size() > 3);\n", "        driver.findElement(By.cssSelector(\"[icon-name='play']\")).click();\n", "        assertTrue(driver.findElement(By.id(\"dialog\")).isDisplayed());\n", "        assertEquals(\"Sign In for Free Streaming Music\", driver.findElement(By.tagName(\"h1\")).getText());\n", "        driver.findElement(By.cssSelector(\"[icon-name='cancel']\")).click();\n", "        assertEquals(0, driver.findElements(By.id(\"dialog\")).size());\n", "    }\n"]},
{"repo_name": "SK_50_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_50_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_4'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "\n", "        element = driver.findElement(By.id(\"nav-link-accountList\"));\n", "        actions.moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-accountList\")).getCssValue(\"display\"));\n", "        driver.findElement(By.xpath(\"//*[text()='Browsing History']/..\")).click();\n", "        assertEquals(\"Browsing history\", driver.findElement(By.tagName(\"h1\")).getText());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[title='\" + itemName + \"']\")).isDisplayed());\n", "    }\n"]},
{"repo_name": "SK_51_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_51_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_4'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "\n", "        element = driver.findElement(By.id(\"nav-link-accountList\"));\n", "        actions.moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-accountList\")).getCssValue(\"display\"));\n", "        driver.findElement(By.xpath(\"//*[text()='Browsing History']/..\")).click();\n", "        assertEquals(\"Browsing history\", driver.findElement(By.tagName(\"h1\")).getText());\n", "        element = driver.findElement(By.cssSelector(\"[title='\" + itemName + \"']\"));\n", "        element.findElement(By.xpath(\".//ancestor::*[@data-type='ViewedItems']/descendant::*[contains(@class, 'ybh-remove')]//input\")).click();\n", "        wait.until(ExpectedConditions.not(ExpectedConditions.attributeContains(\n", "                element.findElement(By.xpath(\".//ancestor::*[@data-type='ViewedItems']/*[contains(@class, 'removed')]\")),\n", "                \"class\", \"hidden\")));\n", "    }\n"]},
{"repo_name": "SK_52_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_52_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_4'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "\n", "        element = driver.findElement(By.id(\"nav-link-accountList\"));\n", "        actions.moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-accountList\")).getCssValue(\"display\"));\n", "        driver.findElement(By.xpath(\"//*[text()='Browsing History']/..\")).click();\n", "        assertEquals(\"Browsing history\", driver.findElement(By.tagName(\"h1\")).getText());\n", "        driver.findElement(By.xpath(\"//*[contains(text(), 'Manage history')]\")).click();\n", "        assertNotEquals(\"none\", driver.findElement(By.cssSelector(\"[aria-expanded]\")).getCssValue(\"display\"));\n", "        driver.findElement(By.cssSelector(\"[aria-labelledby='btn_clear-announce']\")).click();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"a-popover-3\")).getCssValue(\"display\"));\n", "        element = driver.findElement(By.cssSelector(\"[data-action='delete-all'] > *\"));\n", "        actions.moveByOffset(0, 0).moveToElement(element).click(element).perform();\n", "        wait.until(ExpectedConditions.not(ExpectedConditions.attributeContains(By.id(\"a-popover-3\"), \"style\", \"visibility: visible\")));\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"no_items_message\")).getCssValue(\"display\"));\n", "    }\n"]},
{"repo_name": "SK_53_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_53_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"twotabsearchtextbox\"));\n", "        element.sendKeys(\"watch\");\n", "        element.submit();\n", "\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-cel-widget='search_result_2'] a.a-text-normal\")));\n", "        String itemName = element.getText();\n", "        element.click();\n", "        assertEquals(itemName, driver.findElement(By.id(\"productTitle\")).getText());\n", "        driver.findElement(By.id(\"add-to-cart-button\")).click();\n", "        driver.findElement(By.id(\"nav-cart\")).click();\n", "\n", "        assertTrue(driver.findElement(By.id(\"cart-recs-carousel\")).isDisplayed());\n", "        String title = driver.findElement(By.tagName(\"h2\")).getText();\n", "        assertTrue(\"Customers who bought items in your cart also bought\".equals(title) ||\n", "                (title.contains(\"Customers who shopped for\") && title.contains(\"also shopped for:\")));\n", "        assertTrue(driver.findElements(By.cssSelector(\"#cart-recs-carousel .a-carousel-card\")).size() > 1);\n", "    }\n"]},
{"repo_name": "SK_54_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_54_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        element = driver.findElement(By.id(\"nav-link-accountList\"));\n", "        actions.moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-accountList\")).getCssValue(\"display\"));\n", "        assertTrue(driver.findElement(By.id(\"nav-flyout-ya-signin\")).isDisplayed());\n", "        List<WebElement> titlesElements = driver.findElements(By.className(\"nav-title\"));\n", "        assertEquals(\"Your Lists\", titlesElements.get(0).getText());\n", "        assertEquals(\"Your Account\", titlesElements.get(1).getText());\n", "        for (WebElement element : titlesElements) {\n", "            assertTrue(element.findElements(By.xpath(\".//../a\")).size() > 1);\n", "        }\n", "\n", "        driver.findElement(By.id(\"nav-flyout-ya-signin\")).click();\n", "        assertEquals(\"Sign-In\", driver.findElement(By.tagName(\"h1\")).getText());\n", "        driver.findElement(By.className(\"a-link-nav-icon\")).click();\n", "        assertTrue(driver.findElement(By.id(\"gw-desktop-herotator\")).isDisplayed());\n", "    }\n"]},
{"repo_name": "SK_55_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_55_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        driver.findElement(By.xpath(\"//a[contains(text(),'Deals')]\")).click();\n", "        assertEquals(\"Deals and Promotions\", driver.findElement(By.tagName(\"h1\")).getText());\n", "\n", "        driver.findElement(By.id(\"nav-logo-sprites\")).click();\n", "        assertTrue(driver.findElement(By.id(\"gw-desktop-herotator\")).isDisplayed());\n", "    }\n"]},
{"repo_name": "SK_56_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_56_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[(text()='Registry')]\"))).click();\n", "\n", "        assertEquals(\"Find a registry or gift list\", driver.findElement(By.cssSelector(\".gr-find-stripe__header\")).getText());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[placeholder='Search by Registrant name']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[data-action='a-dropdown-select']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.xpath(\"//button[@aria-label='Search']\")).isDisplayed());\n", "\n", "        driver.findElement(By.cssSelector(\"[placeholder='Search by Registrant name']\")).sendKeys(\"Ali\");\n", "        driver.findElement(By.cssSelector(\"[data-a-class='gr-find-stripe__type']\")).click();\n", "        wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\"[data-action='a-dropdown-select']\"), \"aria-pressed\", \"true\"));\n", "        driver.findElement(By.xpath(\"//option[contains(text(), 'Birthday Gift List')]\")).click();\n", "        driver.findElement(By.xpath(\"//button[@aria-label='Search']\")).click();\n", "\n", "        wait.until(ExpectedConditions.textToBe(By.id(\"gr-search-result-title-id\"), \"Search results for \\\"Ali\\\"\"));\n", "        List<WebElement> nameElements = driver.findElements(By.cssSelector(\"#search-result-container .gr-search-registry-name\"));\n", "        for (WebElement name : nameElements) {\n", "            assertTrue(name.getText().toLowerCase(Locale.ROOT).contains(\"ali\"));\n", "        }\n", "    }\n"]},
{"repo_name": "SK_57_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_57_Tamar() throws InterruptedException {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[(text()='Registry')]\"))).click();\n", "\n", "        assertEquals(\"Find a registry or gift list\", driver.findElement(By.cssSelector(\".gr-find-stripe__header\")).getText());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[placeholder='Search by Registrant name']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[data-action='a-dropdown-select']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.xpath(\"//button[@aria-label='Search']\")).isDisplayed());\n", "\n", "        driver.findElement(By.cssSelector(\"[placeholder='Search by Registrant name']\")).sendKeys(\"Ali\");\n", "        driver.findElement(By.cssSelector(\"[data-a-class='gr-find-stripe__type']\")).click();\n", "        wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\"[data-action='a-dropdown-select']\"), \"aria-pressed\", \"true\"));\n", "        driver.findElement(By.xpath(\"//option[contains(text(), 'Birthday Gift List')]\")).click();\n", "        driver.findElement(By.xpath(\"//button[@aria-label='Search']\")).click();\n", "\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".gr-search-criteria-location-drop-down > *\"))).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[text()='California']\"))).click();\n", "        driver.findElement(By.cssSelector(\"[data-action='grSearchButton'] [type='submit']\")).click();\n", "\n", "        Thread.sleep(1000);\n", "        List<WebElement> locationElements = driver.findElements(By.cssSelector(\"#search-result-container .gr-search-registry-event-location\"));\n", "        for (WebElement location : locationElements) {\n", "            assertEquals(\"CA\", location.getText());\n", "        }\n", "    }\n"]},
{"repo_name": "SK_58_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_58_Tamar() throws InterruptedException {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[(text()='Registry')]\"))).click();\n", "\n", "        assertEquals(\"Find a registry or gift list\", driver.findElement(By.cssSelector(\".gr-find-stripe__header\")).getText());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[placeholder='Search by Registrant name']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[data-action='a-dropdown-select']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.xpath(\"//button[@aria-label='Search']\")).isDisplayed());\n", "\n", "        driver.findElement(By.cssSelector(\"[placeholder='Search by Registrant name']\")).sendKeys(\"Ali\");\n", "        driver.findElement(By.cssSelector(\"[data-a-class='gr-find-stripe__type']\")).click();\n", "        wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\"[data-action='a-dropdown-select']\"), \"aria-pressed\", \"true\"));\n", "        driver.findElement(By.xpath(\"//option[contains(text(), 'Birthday Gift List')]\")).click();\n", "        driver.findElement(By.xpath(\"//button[@aria-label='Search']\")).click();\n", "\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".gr-search-month-drop-down-wrapper > *\"))).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[text()='January']\"))).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".gr-search-year-drop-down-wrapper > *\"))).click();\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[text()='2020']\"))).click();\n", "        driver.findElement(By.cssSelector(\"[data-action='grSearchButton'] [type='submit']\")).click();\n", "\n", "        Thread.sleep(1000);\n", "        List<WebElement> nameElements = driver.findElements(By.cssSelector(\"#search-result-container .gr-search-registry-name\"));\n", "        for (WebElement name : nameElements) {\n", "            assertTrue(name.getText().toLowerCase(Locale.ROOT).contains(\"ali\"));\n", "        }\n", "\n", "        List<WebElement> dateElements = driver.findElements(By.cssSelector(\"#search-result-container .gr-search-registry-date\"));\n", "        for (WebElement date : dateElements) {\n", "            String dateText = date.getText();\n", "            String year = dateText.substring(dateText.indexOf(\",\") + 1);\n", "            assertTrue(Integer.parseInt(year) >= 2020);\n", "        }\n", "    }\n"]},
{"repo_name": "SK_59_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_59_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[(text()='Registry')]\"))).click();\n", "\n", "        assertEquals(\"Find a registry or gift list\", driver.findElement(By.cssSelector(\".gr-find-stripe__header\")).getText());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[placeholder='Search by Registrant name']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.cssSelector(\"[data-action='a-dropdown-select']\")).isDisplayed());\n", "        assertTrue(driver.findElement(By.xpath(\"//button[@aria-label='Search']\")).isDisplayed());\n", "\n", "        driver.findElement(By.cssSelector(\"[placeholder='Search by Registrant name']\")).sendKeys(\"Ali\");\n", "        driver.findElement(By.cssSelector(\"[data-a-class='gr-find-stripe__type']\")).click();\n", "        wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\"[data-action='a-dropdown-select']\"), \"aria-pressed\", \"true\"));\n", "        driver.findElement(By.xpath(\"//option[contains(text(), 'Birthday Gift List')]\")).click();\n", "        driver.findElement(By.xpath(\"//button[@aria-label='Search']\")).click();\n", "\n", "        wait.until(ExpectedConditions.textToBe(By.id(\"gr-search-result-title-id\"), \"Search results for \\\"Ali\\\"\"));\n", "        List<WebElement> nameElements = driver.findElements(By.cssSelector(\"#search-result-container .gr-search-registry-name\"));\n", "        for (WebElement name : nameElements) {\n", "            assertTrue(name.getText().toLowerCase(Locale.ROOT).contains(\"ali\"));\n", "        }\n", "\n", "        element = driver.findElements(By.cssSelector(\"#search-result-container .gr-search-registry-title > a\")).get(2);\n", "        String listName = element.getText();\n", "        element.click();\n", "        assertEquals(listName, driver.findElement(By.className(\"gr-guest-summary-registry-name\")).getText());\n", "        assertTrue(driver.findElements(By.className(\"gr-product-tile\")).size() > 0);\n", "    }\n"]},
{"repo_name": "SK_60_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Amazon.java", "content": ["    public void SK_60_Tamar() {\n", "        driver.get(\"https://www.amazon.com/\");\n", "        Actions actions = new Actions(driver);\n", "        WebDriverWait wait = new WebDriverWait(driver, 10);\n", "        element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"icp-nav-flyout\")));\n", "        actions.moveByOffset(0, 0).moveToElement(element).perform();\n", "        assertNotEquals(\"none\", driver.findElement(By.id(\"nav-flyout-icp\")).getCssValue(\"display\"));\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English - EN']/..\"))).click();\n", "\n", "        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[(text()='Registry')]\"))).click();\n", "        driver.findElement(By.className(\"gr-registry-types__card\")).click();\n", "        assertEquals(\"Amazon Wedding\", driver.findElement(By.xpath(\"//img/parent::a\")).getAttribute(\"aria-label\"));\n", "        driver.findElement(By.xpath(\"//a[contains(text(), 'Create your registry')]\")).click();\n", "        assertEquals(\"Sign-In\", driver.findElement(By.tagName(\"h1\")).getText());\n", "    }\n"]},
]