{"id": 336, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . xpath ( \" // a[text()='Tools']\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . id ( \"popupBox\" ) ) . getAttribute ( \"class\" ) . contains ( \"open-close-active\" ) ) ; assertTrue ( driver . findElements ( By . cssSelector ( \".popup-holder ▁ > ▁ *\" ) ) . size ( ) > 1 ) ; element = driver . findElement ( By . cssSelector ( \"#popupBox ▁ .language-block ▁ .select-holder\" ) ) ; Actions actions = new Actions ( driver ) ; actions . moveByOffset ( 0 , 0 ) . click ( element ) . perform ( ) ; assertEquals ( \"English\" , element . findElement ( By . cssSelector ( \"[selected]\" ) ) . getText ( ) ) ; element . findElement ( By . xpath ( \". // option[text()='Italiano']\" ) ) . click ( ) ; assertEquals ( \"it\" , driver . findElement ( By . tagName ( \"body\" ) ) . getAttribute ( \"lang\" ) ) ; } ", "Test Name": "Homepage-Setings - Language", "Test Description": "The purpose is to test that Settings options can be used to change Language of website", "Steps": "1. User is on thr free dictionary home page, 2. User selects settings icon from extreme right side of page, 3. User is displayed a drop- down with multiple options, 4. User selects the Language drop down , 5. Verify that default language is set to English.User selects 'Italiano', 6. Verify homepage refreshes and website language is changed to Italiano", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/"}
{"id": 337, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . xpath ( \" // a[text()='Tools']\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . id ( \"popupBox\" ) ) . getAttribute ( \"class\" ) . contains ( \"open-close-active\" ) ) ; assertTrue ( driver . findElements ( By . cssSelector ( \".popup-holder ▁ > ▁ *\" ) ) . size ( ) > 1 ) ; List < WebElement > fontsElements = driver . findElements ( By . cssSelector ( \"#popupBox ▁ .text-size ▁ a\" ) ) ; assertEquals ( 4 , fontsElements . size ( ) ) ; for ( int i = 1 ; i < fontsElements . size ( ) ; i ++ ) { String onClickCurrent = fontsElements . get ( i ) . getAttribute ( \"onclick\" ) ; onClickCurrent = onClickCurrent . substring ( onClickCurrent . indexOf ( '(' ) + 1 , onClickCurrent . length ( ) - 1 ) ; String onClickPrevious = fontsElements . get ( i - 1 ) . getAttribute ( \"onclick\" ) ; onClickPrevious = onClickPrevious . substring ( onClickPrevious . indexOf ( '(' ) + 1 , onClickPrevious . length ( ) - 1 ) ; assertTrue ( Integer . parseInt ( onClickCurrent ) > Integer . parseInt ( onClickPrevious ) ) ; } fontsElements . get ( 0 ) . click ( ) ; assertEquals ( \"font-size: ▁ 11px;\" , driver . findElement ( By . tagName ( \"html\" ) ) . getAttribute ( \"style\" ) ) ; } ", "Test Name": "Homepage - Settings - Font size", "Test Description": "The purpose is to test that Settings options can be used to change font size of website", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selects settings icon from extreme right side of page, 3. User is displayed a drop- down with multiple options, 4. User is presented with four font size options ,small,alittle big,Big,Bigger, 5. User selects small A option, 6. Verify that page refreshes and font size of website is changed to small"}
{"id": 338, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_tfd\" ) ) . click ( ) ; List < WebElement > radioElements = driver . findElements ( By . cssSelector ( \"#lstTFD ▁ li\" ) ) ; List < String > expectedTitles = new LinkedList < > ( Arrays . asList ( \"Word ▁ / ▁ Article\" , \"Starts ▁ with\" , \"Ends ▁ with\" , \"Text\" ) ) ; List < String > actualTitles = new LinkedList < > ( ) ; for ( WebElement element : radioElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; driver . findElement ( By . id ( \"f1_google\" ) ) . click ( ) ; assertEquals ( \"visibility: ▁ hidden;\" , driver . findElement ( By . id ( \"f1_TFDBy\" ) ) . getAttribute ( \"style\" ) ) ; } ", "Test Name": "Above Search bar - two checks", "Test Description": "The purpose is to test that multiple options are dipslyed when ThefreeDictionary is selected", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selects the free dictionary option above search bar, 3. Verify that four new options are displayedbelowsearch bar as below :\n*Word/Article\n*Starts with\n*Ends with\n*Text, 4. User selects Google from above search bar, 5.Verif that four options below search bar dissapear"}
{"id": 339, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_tfd\" ) ) . click ( ) ; driver . findElement ( By . id ( \"f1_tfd_word\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"customize\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . attributeContains ( By . className ( \"sayt\" ) , \"style\" , \"display: ▁ none\" ) ) ) ; Actions actions = new Actions ( driver ) ; element = driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) ; actions . moveByOffset ( 0 , 0 ) . moveToElement ( element ) . click ( element ) . perform ( ) ; wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( By . cssSelector ( \".sayt ▁ > ▁ *\" ) ) ) ; wait . until ( ExpectedConditions . textToBe ( By . id ( \"SAYTk0\" ) , \"customize\" ) ) ; assertEquals ( \"Customize ▁ Look ▁ and ▁ Feel\" , driver . findElement ( By . id ( \"SAYTk1\" ) ) . getText ( ) ) ; } ", "Test Name": "Search bar - Word/Article - Suggestions", "Test Description": "The purpose is to test that multiple suggestions are dipslyed when seacrhed for a word", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selects the free dictionary option above search bar, 3. User search for word 'customize' with option selected as Wor/Article, 4. Verify user is presented with multiple suggestions under the word searchedsuch as \n'Customize'\n\"Customize look and feel', Mulyiple suggestions are displayed"}
{"id": 340, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_tfd\" ) ) . click ( ) ; driver . findElement ( By . id ( \"f1_tfd_word\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"customize\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . attributeContains ( By . className ( \"sayt\" ) , \"style\" , \"display: ▁ none\" ) ) ) ; Actions actions = new Actions ( driver ) ; element = driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) ; actions . moveByOffset ( 0 , 0 ) . moveToElement ( element ) . click ( element ) . perform ( ) ; wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( By . cssSelector ( \".sayt ▁ > ▁ *\" ) ) ) ; wait . until ( ExpectedConditions . textToBe ( By . id ( \"SAYTk0\" ) , \"customize\" ) ) ; assertEquals ( \"Customize ▁ Look ▁ and ▁ Feel\" , driver . findElement ( By . id ( \"SAYTk1\" ) ) . getText ( ) ) ; driver . findElement ( By . cssSelector ( \"[type='submit']\" ) ) . click ( ) ; assertEquals ( \"customize\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; assertEquals ( \"To ▁ make ▁ or ▁ alter ▁ to ▁ individual ▁ or ▁ personal ▁ specifications: ▁ customize ▁ a ▁ van.\" , driver . findElement ( By . className ( \"ds-single\" ) ) . getText ( ) ) ; } ", "Test Name": "Search bar - Search", "Test Description": "The purpose is to test that a word can be searched via search bar", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selects the free dictionary option above search bar, 3. User search for word 'customize' with option selected as Wor/Article, 4. Verify user is presented with multiple suggestions such as \n'Customize'\n\"Customize look and feel', 5. User press > button placed on search bar, 6. Verify user is routed to word  'Customize' meaning \"To make or alter to individual or personal specifications: customize a van.\""}
{"id": 341, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_tfd\" ) ) . click ( ) ; driver . findElement ( By . id ( \"f1_tfd_word\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"customize\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . attributeContains ( By . className ( \"sayt\" ) , \"style\" , \"display: ▁ none\" ) ) ) ; Actions actions = new Actions ( driver ) ; element = driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) ; actions . moveByOffset ( 0 , 0 ) . moveToElement ( element ) . click ( element ) . perform ( ) ; wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( By . cssSelector ( \".sayt ▁ > ▁ *\" ) ) ) ; wait . until ( ExpectedConditions . textToBe ( By . id ( \"SAYTk0\" ) , \"customize\" ) ) ; assertEquals ( \"Customize ▁ Look ▁ and ▁ Feel\" , driver . findElement ( By . id ( \"SAYTk1\" ) ) . getText ( ) ) ; driver . findElement ( By . cssSelector ( \"[type='submit']\" ) ) . click ( ) ; assertEquals ( \"customize\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; assertEquals ( \"To ▁ make ▁ or ▁ alter ▁ to ▁ individual ▁ or ▁ personal ▁ specifications: ▁ customize ▁ a ▁ van.\" , driver . findElement ( By . className ( \"ds-single\" ) ) . getText ( ) ) ; driver . findElement ( By . cssSelector ( \"[title='Thesaurus']\" ) ) . click ( ) ; assertTrue ( ( Boolean ) ( ( JavascriptExecutor ) driver ) . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , driver . findElement ( By . id ( \"Thesaurus\" ) ) ) ) ; } ", "Test Name": "Switch to thesaurus", "Test Description": "The purpose is to test that a word can be searched via search bar and then its synonyms can also be seen", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selects the free dictionary option above search bar, 3. User search for word 'customize' with option selected as Wor/Article, 4. Verify user is presented with multiple suggestions such as \n'Customize'\n\"Customize look and feel', 5. User press > button placed on search bar, 6. Verify user is routed to word  'Customize' meaning \"To make or alter to individual or personal specifications: customize a van.\", 7. Verify A↔B icon is placed along side the word definitions, 8. Verify that when user press A↔B icon he is routed to thesaurus section, Thesaurus section is displayed"}
{"id": 342, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_tfd\" ) ) . click ( ) ; driver . findElement ( By . id ( \"f1_tfd_word\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"customize\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . attributeContains ( By . className ( \"sayt\" ) , \"style\" , \"display: ▁ none\" ) ) ) ; Actions actions = new Actions ( driver ) ; element = driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) ; actions . moveByOffset ( 0 , 0 ) . moveToElement ( element ) . click ( element ) . perform ( ) ; wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( By . cssSelector ( \".sayt ▁ > ▁ *\" ) ) ) ; wait . until ( ExpectedConditions . textToBe ( By . id ( \"SAYTk0\" ) , \"customize\" ) ) ; assertEquals ( \"Customize ▁ Look ▁ and ▁ Feel\" , driver . findElement ( By . id ( \"SAYTk1\" ) ) . getText ( ) ) ; driver . findElement ( By . cssSelector ( \"[type='submit']\" ) ) . click ( ) ; assertEquals ( \"customize\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; assertEquals ( \"To ▁ make ▁ or ▁ alter ▁ to ▁ individual ▁ or ▁ personal ▁ specifications: ▁ customize ▁ a ▁ van.\" , driver . findElement ( By . className ( \"ds-single\" ) ) . getText ( ) ) ; driver . findElement ( By . cssSelector ( \"[title='Translations']\" ) ) . click ( ) ; assertTrue ( ( Boolean ) ( ( JavascriptExecutor ) driver ) . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , driver . findElement ( By . id ( \"Translations\" ) ) ) ) ; } ", "Test Name": "Switch to translations", "Test Description": "The purpose is to test that a word can be searched via search bar and then its translations can also be seen", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selects the free dictionary option above search bar, 3. User search for word 'customize' with option selected as Wor/Article, 4. Verify user is presented with multiple suggestions such as \n'Customize'\n\"Customize look and feel', 5. User press > button placed on search bar, 6. Verify user is routed to word  'Customize' meaning \"To make or alter to individual or personal specifications: customize a van.\", 7. Verify A-->Ѭ icon is placed along side the word definition, 8. Verify that when user press A-->Ѭ icon he is routed to translation section, Translations section is displayed"}
{"id": 343, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_tfd\" ) ) . click ( ) ; By keyboardLocator = By . xpath ( \" // a[text()='Keyboard']\" ) ; assertTrue ( driver . findElement ( keyboardLocator ) . isDisplayed ( ) ) ; driver . findElement ( keyboardLocator ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . attributeContains ( By . id ( \"keyboard\" ) , \"style\" , \"display: ▁ none\" ) ) ) ; driver . findElement ( By . xpath ( \" // td[text()='P']/ancestor::*[@onclick]\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // td[text()='L']/ancestor::*[@onclick]\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // td[text()='U']/ancestor::*[@onclick]\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // td[text()='G']/ancestor::*[@onclick]\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // *[@onclick ▁ and ▁ text()='Enter']\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[type='submit']\" ) ) . click ( ) ; assertEquals ( \"plug\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; } ", "Test Name": "Keyboard displyed - Search bar", "Test Description": "This is to check if keyboard expands when clicked", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selects the free dictionary option above search bar, 3. check if keyboard is displayed on search bar, 4. User press keyboard icon, 5. Verify that keyboardexpands, 6. User writes the word 'Plug' from keyboard and press ENTER on keyboard displayed, 7. Userpress > icon to search the word 'plug'"}
{"id": 344, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_google\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"Clogged\" ) ; driver . findElement ( By . cssSelector ( \"[type='submit']\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[name='googleSearchFrame']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[name='googleSearchFrame']\" ) ) . getAttribute ( \"src\" ) . contains ( \"Clogged\" ) ) ; } ", "Test Name": "Google search", "Test Description": "This is to check if system routes to google search page when searched via google", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selects the Google option above search bar, 3. User writes the word 'Clogged' and press > icon to search, 4. Verif user is routed to Google search results for clogged"}
{"id": 345, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . xpath ( \" // a[text()='Medical ▁ Dictionary']\" ) ) . click ( ) ; assertEquals ( \"Medical ▁ Dictionary\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"anasthesia\" ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . submit ( ) ; List < WebElement > definitions = driver . findElements ( By . className ( \"runseg\" ) ) ; assertEquals ( \"1. ▁ lack ▁ of ▁ feeling ▁ or ▁ sensation.\" , definitions . get ( 0 ) . getText ( ) ) ; assertTrue ( definitions . get ( 1 ) . getText ( ) . contains ( \"2. ▁ artificially ▁ induced ▁ loss ▁ of ▁ ability ▁ to ▁ feel ▁ pain, ▁ \" + \"done ▁ to ▁ permit ▁ the ▁ performance ▁ of ▁ surgery ▁ or ▁ other ▁ painful ▁ procedures. ▁ \" + \"It ▁ may ▁ be ▁ produced ▁ by ▁ a ▁ number ▁ of ▁ agents ▁ (anesthetics) ▁ capable ▁ of ▁ bringing ▁ about ▁ partial ▁ \" + \"or ▁ complete ▁ loss ▁ of ▁ sensation.(See ▁ accompanying ▁ table.)\" ) ) ; assertEquals ( \"1. ▁ Total ▁ or ▁ partial ▁ loss ▁ of ▁ sensation, ▁ especially ▁ tactile ▁ sensibility, ▁ induced ▁ by ▁ disease,\" + \" ▁ injury, ▁ acupuncture, ▁ or ▁ an ▁ anesthetic, ▁ such ▁ as ▁ chloroform ▁ or ▁ nitrous ▁ oxide.\" , driver . findElement ( By . cssSelector ( \"[data-src='hm_med'] ▁ .ds-list\" ) ) . getText ( ) ) ; } ", "Test Name": "Medical Dictionary", "Test Description": "This is to check if medical terms can be searched via medical dictionary", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selets medical dictionary from left pannel, 3. Verify user is routed to medical dictionary, 4. User search for word anasthesia, 5. Verify user is presented with medical definition :\n1. lack of feeling or sensation.\n2. artificially induced loss of ability to feel pain, done to permit the performance of surgery or other painful procedures. It may be produced by a number of agents (anesthetics) capable of bringing about partial or complete loss of sensation.(See accompanying table.), 6. Now select Dictionary from above tab , 7. Verify that a different genral definition of anasthesia is displayed\n1. Total or partial loss of sensation, especially tactile sensibility, induced by disease, injury, acupuncture, or an anesthetic, such as chloroform or nitrous oxide."}
{"id": 346, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_tfd\" ) ) . click ( ) ; driver . findElement ( By . id ( \"f1_tfd_text\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"Pakistan\" ) ; driver . findElement ( By . cssSelector ( \"[type='submit']\" ) ) . click ( ) ; assertEquals ( \"Words ▁ with ▁ Pakistan ▁ in ▁ definition:\" , driver . findElement ( By . tagName ( \"h2\" ) ) . getText ( ) ) ; } ", "Test Name": "Text search", "Test Description": "This is to check if Text is contained in the search", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2.User selects the free dictionary option from above the search bar and Text option from below the search bar, 3. User writes 'Pakistan' in search bar and press > icon to search, 4. Verify user is routed to words with Pakistan in definition"}
{"id": 347, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; String text = driver . findElement ( By . xpath ( \" // *[@class='hpCont']/preceding-sibling::div[1]\" ) ) . getText ( ) ; LocalDate currentDate = LocalDate . now ( ) ; String month = currentDate . getMonth ( ) . toString ( ) . toLowerCase ( ) ; String monthFormat = month . substring ( 0 , 1 ) . toUpperCase ( ) + month . substring ( 1 ) ; String dayOfTheWeek = currentDate . getDayOfWeek ( ) . toString ( ) . toLowerCase ( Locale . ROOT ) ; String dOTWFormat = dayOfTheWeek . substring ( 0 , 1 ) . toUpperCase ( ) + dayOfTheWeek . substring ( 1 ) ; String todayDate = dOTWFormat + \", ▁ \" + monthFormat + \" ▁ \" + currentDate . getDayOfMonth ( ) + \", ▁ \" + currentDate . getYear ( ) ; assertTrue ( text . contains ( todayDate ) ) ; } ", "Test Name": "Date displayed", "Test Description": "This is to ensure that Date is mentioned on the free dictionary website", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. Verify that date is displayed on website in the following format DAY,MonthDate,year, Date is displayed as Sunday, September 05,2021"}
{"id": 348, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; Actions actions = new Actions ( driver ) ; List < String > textSections = new ArrayList < > ( Arrays . asList ( \"Customize ▁ Your ▁ Homepage\" , \"English ▁ Language ▁ Forum\" , \"Word ▁ of ▁ the ▁ Day\" ) ) ; for ( int i = 0 ; i < textSections . size ( ) ; i ++ ) { element = driver . findElement ( By . xpath ( \" // h2[text()='\" + textSections . get ( i ) + \"']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; actions . moveToElement ( element ) . perform ( ) ; assertEquals ( \"move\" , element . getCssValue ( \"cursor\" ) ) ; By dragContainerLocator = By . id ( \"DragContainer\" ) ; String originalDragValue = driver . findElement ( dragContainerLocator ) . getCssValue ( \"top\" ) + \" ▁ \" + driver . findElement ( dragContainerLocator ) . getCssValue ( \"left\" ) ; actions . clickAndHold ( element ) . moveToElement ( driver . findElement ( By . xpath ( \" // h2[text()='\" + textSections . get ( ( textSections . size ( ) - i ) % ( textSections . size ( ) - 1 ) ) + \"']\" ) ) ) . release ( ) . perform ( ) ; String afterDragValue = driver . findElement ( dragContainerLocator ) . getCssValue ( \"top\" ) + \" ▁ \" + driver . findElement ( dragContainerLocator ) . getCssValue ( \"left\" ) ; assertNotEquals ( originalDragValue , afterDragValue ) ; } } ", "Test Name": "Customize website page", "Test Description": "This is to ensure that the free dictionary website can be customized", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2.Verify user is presented with customization option in second coloumn, 3. User hover over customize your homepage option, 4. Verify a four way arrow displays, 5. Press on that arrow and move the text field, Customize your homepage text field get re positioned, 6. Verify that other sections can also be customized and moved"}
{"id": 349, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_tfd\" ) ) . click ( ) ; driver . findElement ( By . id ( \"f1_tfd_end\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"Pakistan\" ) ; driver . findElement ( By . cssSelector ( \"[type='submit']\" ) ) . click ( ) ; assertEquals ( \"Words ▁ ending ▁ with ▁ Pakistan:\" , driver . findElement ( By . tagName ( \"h2\" ) ) . getText ( ) ) ; List < WebElement > suggestionElements = driver . findElements ( By . cssSelector ( \".suggestions ▁ a\" ) ) ; for ( WebElement element : suggestionElements ) { assertTrue ( element . getText ( ) . endsWith ( \"Pakistan\" ) ) ; } } ", "Test Name": "Ends with Search", "Test Description": "This is to ensure that Ends with search would always contain the searched word at end", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2.User selects the free dictionary option from above the search bar and Ends with option from below the search bar, 3. User writes 'Pakistan' in search bar and press > icon to search, 4. Verify user is routed to words ending with Pakistan"}
{"id": 350, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . id ( \"f1_tfd\" ) ) . click ( ) ; driver . findElement ( By . id ( \"f1_tfd_end\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"Pakistan\" ) ; driver . findElement ( By . cssSelector ( \"[type='submit']\" ) ) . click ( ) ; assertEquals ( \"Words ▁ ending ▁ with ▁ Pakistan:\" , driver . findElement ( By . tagName ( \"h2\" ) ) . getText ( ) ) ; driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // h2[text()='Customize ▁ Your ▁ Homepage']\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "The free dictionary by Farlex", "Test Description": "The aim is to confirm that the free dictionary by farlex always routes the user to home page", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2.User selects the free dictionary option from above the search bar and Ends with option from below the search bar, 3. User writes 'Pakistan' in search bar and press > icon to search, 4. Verify user is routed to words ending with Pakistan, 5. User pres The Fre Dictionary by Farlex icon button on top of page, 6. Verify that user is routed back to home page"}
{"id": 351, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . xpath ( \" // a[text()='Idioms']\" ) ) . click ( ) ; assertEquals ( \"Idiom ▁ of ▁ the ▁ Day\" , driver . findElement ( By . tagName ( \"h2\" ) ) . getText ( ) ) ; element = driver . findElement ( By . cssSelector ( \".videoWrap ▁ iframe\" ) ) ; assertTrue ( element . getAttribute ( \"src\" ) . contains ( \"youtube\" ) ) ; driver . switchTo ( ) . frame ( element ) ; driver . findElement ( By . cssSelector ( \".ytp-large-play-button\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . textToBe ( By . className ( \"ytp-time-current\" ) , \"0:00\" ) ) ) ; } ", "Test Name": "homepage Idioms", "Test Description": "The aim is to confirm that the free dictionary by farlex always routes the user to home page", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User selects idioms from left pannel, 3. Verify user is presented with idiom of the day, 4. Verify a Youtube video is also present.User press Red Play button in the middle, 5. Verify youtube video starts"}
{"id": 352, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"=\" ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . submit ( ) ; assertEquals ( \"=\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"content-holder\" ) ) . getText ( ) . contains ( \"Also ▁ found ▁ in: ▁ Dictionary. \\n = \\n equals\" ) ) ; } ", "Test Name": "Search special characters in search bar", "Test Description": "The aim is to confirm that special characters can also be searched", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User writes' '=' in seacrh bar which is a special charcer, 3. Verify that user  is displayed with definition of =, Also found in: Dictionary.\n=\nequals"}
{"id": 353, "website": "TheFreeDictionary", "code": " void function ( ) { driver . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; driver . findElement ( By . cssSelector ( \"[type='search']\" ) ) . sendKeys ( \"pool\" ) ; driver . findElement ( By . cssSelector ( \"[type='submit']\" ) ) . click ( ) ; assertEquals ( \"pool\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; driver . findElement ( By . cssSelector ( \"[title='pool ▁ in ▁ Idioms']\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[text()='Idioms']/../..\" ) ) . getAttribute ( \"class\" ) . contains ( \"active\" ) ) ; assertEquals ( \"pool\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; } ", "Test Name": "Search - Idioms", "Test Description": "The aim is to confirm that Idioms regarding a word can also be searched", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1. User is on the free dictionary home page, 2. User writes pool in search bar and hit search icon, 3. Verify that user  is routed to pool definition, 4. User selects Idioms from header, 5. Verify user is presented withidioms against word pool"}
{"id": 354, "website": "TheFreeDictionary", "code": " void function ( ) { WebDriverManager . edgedriver ( ) . setup ( ) ; EdgeDriver driver2 = new EdgeDriver ( ) ; driver2 . manage ( ) . window ( ) . maximize ( ) ; driver2 . get ( \"https: // www.thefreedictionary.com/\" ) ; assertTrue ( driver2 . findElement ( By . cssSelector ( \".logo ▁ > ▁ a\" ) ) . getText ( ) . contains ( \"The ▁ Free ▁ Dictionary\" ) ) ; assertEquals ( 25 , driver2 . findElements ( By . cssSelector ( \"#Content_CA_WI_0_DataZone ▁ a\" ) ) . size ( ) ) ; driver2 . quit ( ) ; } ", "Test Name": "Website working - IE", "Test Description": "The aim is to confirm that website can be opend on IE", "Preconditions": "1. Navigate to https://www.thefreedictionary.com/", "Steps": "1.Open website on IE, 2. Veriffy that website home page loads successfully, All the pictures and links loads perfectly"}
