{"id": 145, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Politics']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Politics\" ) ) ; driver . findElement ( By . className ( \"logo\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"market-data\" ) ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Home Page", "Test Description": "FXN01_Verify user is able to land on home page when clicked on the website icon", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select 'Politics' from navigation menu, User should be able to navigate to 'Politics' page with its title 'Politics', 3. Click on the website icon 'FoxNews' on top left corner of the page, The page should navigate back to home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu"}
{"id": 146, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; element = driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics'] ▁ a\" ) ) ; String text = element . getText ( ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . titleIs ( text ) ) ; driver . navigate ( ) . back ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"market-data\" ) ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Home Page", "Test Description": "FXN02_Verify user is able to navigate to the Hot topic page on clicking on the link", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on the hypertext link provided after Hot Topic text, The page should get navigated to the specific linked website, 3. Click on Browser back button, User should navigate back to the home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu"}
{"id": 147, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; element = driver . findElement ( By . id ( \"main-nav\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; String script = \"return ▁ window.getComputedStyle(document.querySelector('#main-nav'),':selection').getPropertyValue('background-color')\" ; JavascriptExecutor js = driver ; String content = ( String ) js . executeScript ( script ) ; assertEquals ( \"rgba(0, ▁ 51, ▁ 102, ▁ 0.99)\" , content ) ; List < String > titles = Arrays . asList ( \"U.S.\" , \"Politics\" , \"Media\" , \"Opinion\" , \"Business\" , \"Entertainment\" , \"Sports\" , \"Lifestyle\" , \"TV\" , \"Fox ▁ Nation\" , \"Listen\" ) ; for ( String title : titles ) { driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='\" + title + \"']\" ) ) . click ( ) ; switch ( title ) { case \"Business\" : wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // nav[@id='main-nav'] // *[text()='Economy']\" ) ) ) ; driver . navigate ( ) . back ( ) ; break ; case \"Sports\" : wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"fox-sports-logo\" ) ) ) ; break ; case \"TV\" : wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Fox ▁ News ▁ Shows\" ) ) ; break ; case \"Fox ▁ Nation\" : wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='Try ▁ Fox ▁ Nation ▁ Today']\" ) ) ) ; break ; case \"Listen\" : wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@id='td-top-menu'] // *[text()='Podcasts']\" ) ) ) ; break ; default : wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , title ) ) ; break ; } } driver . navigate ( ) . back ( ) ; driver . findElement ( By . className ( \"menu-more\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . className ( \"expandable-nav\" ) ) . getCssValue ( \"display\" ) ) ; assertTrue ( driver . findElement ( By . className ( \"search\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Home Page", "Test Description": "FXN03_Verify user is able to navigate to different pages from Home Page Navigation menu", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu in blue background, 2. Select 'U.S.' from navigation menu, The page should navigate and display the title 'U.S.', 3. Select 'Politics' from navigation menu, The page should navigate and display the title 'Politics', 4. Select 'Media' from navigation menu, The page should navigate and display the title 'Media', 5. Select 'Opinion' from navigation menu, The page should navigate and display the title 'Opinion', 6. Select 'Business' from navigation menu, The page should navigate and display 'Economy' as one of the navigation menu options, 7. Select browser back option and Select 'Entertainment' from navigation menu, The page should navigate and display the title 'Entertainment', 8. Select 'Sports' from navigation menu, The page should navigate and contain 'Fox Sports' in its content body, 9. Select 'Lifestyle' from navigation menu, The page should navigate and display the title 'Lifestyle', 10. Select 'TV' from navigation menu, The page should navigate and display the title 'Fox News Shows', 11. Select 'Fox Nation' from navigation menu, The page should navigate and contain 'Try Fox Nation Today' in its content body, 12. Select 'Listen' from navigation menu, The page should navigate and display 'Podcasts' as one of the navigation menu options, 13. Select browser back option and Select 'More' from navigation menu, The page should navigate and display the search page"}
{"id": 148, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[text()='Watch ▁ TV']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . cssSelector ( \".video-player ▁ iframe[aria-label='MVPD ▁ Picker']\" ) ) ) ; driver . switchTo ( ) . frame ( element ) ; assertEquals ( \"Choose ▁ your ▁ provider\" , wait . until ( ExpectedConditions . presenceOfElementLocated ( By . tagName ( \"h2\" ) ) ) . getText ( ) ) ; driver . findElement ( By . cssSelector ( \"[data-id='ATT']\" ) ) . click ( ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . cssSelector ( \"[title='att.net']\" ) ) ) ; driver . switchTo ( ) . window ( tabs . get ( 0 ) ) ; driver . findElement ( By . id ( \"show-clips\" ) ) . click ( ) ; driver . switchTo ( ) . frame ( element ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . cssSelector ( \"[data-type='tve']\" ) ) ) ; } ", "Test Name": "Home Page", "Test Description": "FXN04_Verify the use is able to view the video on selection of watch TV option", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select 'Watch TV' option located in the right corner of the page, The page should load the watch TV screen with the frame displaying 'Choose your Provider' title, 3. Select any of the provider from the list, A new tab should be opened with the provider's website, 4. Select the 'Show Clips' button on the top navigation menu, The video frame should be displayed on the screen"}
{"id": 149, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . cssSelector ( \".js-exclusive-clips ▁ h2 ▁ a\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . cssSelector ( \".video-player ▁ iframe[aria-label='MVPD ▁ Picker']\" ) ) ) ; element = driver . findElement ( By . id ( \"show-clips\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; assertEquals ( \"active\" , element . getAttribute ( \"class\" ) ) ; } ", "Test Name": "Home Page", "Test Description": "FXN05_Verify user is able to view the exclusive clips videos from home page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select the first video from 'Exclusive Clips' in the left panel of the page, The page should navigate to the 'show clips' section of the video and the video frame should be displayed on the screen"}
{"id": 150, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . className ( \"expandable-nav\" ) ) . getCssValue ( \"display\" ) ) ; element = driver . findElement ( By . cssSelector ( \"[aria-label='search ▁ foxnews.com']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . sendKeys ( \"Covid\" ) ; element = driver . findElement ( By . cssSelector ( \"[aria-label='submit ▁ search']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . submit ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"search-results-content\" ) ) ) ; assertTrue ( driver . findElements ( By . className ( \"article\" ) ) . size ( ) > 9 ) ; } ", "Test Name": "Search Page", "Test Description": "FXN06_Verify the functionality of search icon on home page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on the search icon located on top right of navigation menu, User should be displayed with the search page with search field and search button, 3. Enter the text in search field Ex: Covid and hit Search button, The page should load the search results with minimum 10 results displayed on the page"}
{"id": 151, "website": "FoxNews", "code": " void function ( ) throws InterruptedException { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . className ( \"expandable-nav\" ) ) . getCssValue ( \"display\" ) ) ; element = driver . findElement ( By . cssSelector ( \"[aria-label='search ▁ foxnews.com']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . sendKeys ( \"Covid\" ) ; element = driver . findElement ( By . cssSelector ( \"[aria-label='submit ▁ search']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . submit ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"search-results-content\" ) ) ) ; assertEquals ( 10 , driver . findElements ( By . className ( \"article\" ) ) . size ( ) ) ; driver . findElement ( By . cssSelector ( \".load-more ▁ > ▁ a\" ) ) . click ( ) ; Thread . sleep ( 1000 ) ; assertEquals ( 20 , wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( By . className ( \"article\" ) ) ) . size ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".load-more\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Search Page", "Test Description": "FXN07_Verify user is able to load more videos on click of 'Load More' in search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on the search icon located on top right of navigation menu, User should be displayed with the search page with search field and search button, 3. Enter the text in search field Ex: Covid and hit Search button, The page should load the search results with minimum 10 results displayed on the page, 4. Click on 'Load More', User should be able to load 10 more videos and 'Load more' option at the end of the list"}
{"id": 152, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . className ( \"expandable-nav\" ) ) . getCssValue ( \"display\" ) ) ; element = driver . findElement ( By . cssSelector ( \"[aria-label='search ▁ foxnews.com']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . sendKeys ( \"Covid\" ) ; element = driver . findElement ( By . cssSelector ( \"[aria-label='submit ▁ search']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . submit ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"search-results-content\" ) ) ) ; By locator = By . cssSelector ( \".num-found ▁ > ▁ span ▁ > ▁ span\" ) ; element = driver . findElement ( locator ) ; assertTrue ( element . isDisplayed ( ) ) ; String originalCount = element . getText ( ) ; driver . findElement ( By . xpath ( \" // *[text()='By ▁ Content']/../button\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . cssSelector ( \".filter.content ▁ ul\" ) ) . getCssValue ( \"display\" ) ) ; List < WebElement > optionElements = driver . findElements ( By . xpath ( \" // *[@type='checkbox']/..\" ) ) ; List < String > expectedTitles = Arrays . asList ( \"Article\" , \"Video\" , \"Slideshow\" ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : optionElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; optionElements . get ( 0 ) . click ( ) ; element = driver . findElement ( By . xpath ( \" // a[text()='Search']\" ) ) ; element . click ( ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . textToBe ( locator , originalCount ) ) ) ; String newCount = driver . findElement ( By . className ( \"num-found\" ) ) . getText ( ) ; List < WebElement > buttons = driver . findElements ( By . cssSelector ( \".date ▁ button\" ) ) ; for ( WebElement button : buttons ) { button . click ( ) ; String requiredID = \"01\" ; if ( button . getText ( ) . equals ( \"YYYY\" ) ) { if ( button . findElement ( By . xpath ( \". // ancestor::*[contains(@class, ▁ 'date')]\" ) ) . getAttribute ( \"class\" ) . contains ( \"min\" ) ) requiredID = \"2020\" ; else requiredID = \"2021\" ; } button . findElement ( By . xpath ( \". // following-sibling::* // *[@id='\" + requiredID + \"']\" ) ) . click ( ) ; } element . click ( ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . textToBe ( locator , newCount ) ) ) ; } ", "Test Name": "Search Page", "Test Description": "FXN08_Verify the Filter functionality of search results on search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on the search icon located on top right of navigation menu, User should be displayed with the search page with search field and search button, 3. Enter the text in search field Ex: Covid and hit Search button, The page should load the search results and the count of search results should be displayed to the user, 4. Select the filter 'By Content', The content options - Article, Video and Slideshow should be displayed with multi-select checkboxes, 5. Select any of the checkbox Ex: Article and click Search, The search result count should be changed, 6. Select the Date range Ex: 01/01/2020 to 01/01/2021 and click Search button, The search result count should be changed"}
{"id": 153, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . className ( \"expandable-nav\" ) ) . getCssValue ( \"display\" ) ) ; element = driver . findElement ( By . cssSelector ( \"[aria-label='search ▁ foxnews.com']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . sendKeys ( \"Covid\" ) ; element = driver . findElement ( By . cssSelector ( \"[aria-label='submit ▁ search']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . submit ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"search-results-content\" ) ) ) ; assertTrue ( driver . findElement ( By . className ( \"num-found\" ) ) . isDisplayed ( ) ) ; element = driver . findElement ( By . cssSelector ( \"h2 ▁ > ▁ a\" ) ) ; String title = element . getText ( ) ; element . click ( ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( title , driver . getTitle ( ) ) ; assertTrue ( driver . getCurrentUrl ( ) . startsWith ( \"https: // www.foxnews.com/\" ) ) ; } ", "Test Name": "Search Page", "Test Description": "FXN09_Verify user is able to navigate to the articles by using search functionality", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on the search icon located on top right of navigation menu, User should be displayed with the search page with search field and search button, 3. Enter the text in search field Ex: Covid and hit Search button, The page should load the search results and the count of search results should be displayed to the user, 4. Click on the first article on the search page, A new tab should be opened with the foxnews website https://www.foxnews.com/ displaying the article specified"}
{"id": 154, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . cssSelector ( \".more-markets ▁ > ▁ a\" ) ) . click ( ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Markets\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; driver . switchTo ( ) . frame ( driver . findElement ( By . id ( \"market-index-charts\" ) ) ) ; List < WebElement > sectionElements = driver . findElements ( By . className ( \"fdsg-headtext\" ) ) ; List < String > expectedTitles = Arrays . asList ( \"DOW ▁ JONES ▁ AVERAGES\" , \"NASDAQ ▁ COMPOSITE ▁ INDEX\" , \"S&P ▁ 500\" ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : sectionElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; } ", "Test Name": "Home Page", "Test Description": "FXN10_Verify whether user is able to navigate to more hyperlink of Markets", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on the 'more' option right after the Markets text, The page should navigate to a new tab and display the title 'Markets'. User should be able to view 'DOW JONES AVERAGES', 'NASDAQ COMPOSITE INDEX' and 'S&P 500' sections in the right panel of the page"}
{"id": 155, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; for ( String title : actualTitles ) { driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[contains(text(), ▁ '\" + title + \"')]\" ) ) . click ( ) ; switch ( title ) { case \"Personal ▁ Finance\" : assertTrue ( driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) . contains ( title ) ) ; driver . navigate ( ) . back ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Fox ▁ Business\" ) ) ; break ; case \"Watchlist\" : wait . until ( ExpectedConditions . textToBe ( By . className ( \"page-title\" ) , title ) ) ; break ; case \"Tech\" : wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Technology\" ) ) ; break ; case \"TV\" : wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"On ▁ Air\" ) ) ; break ; case \"Podcasts\" : wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"strong\" ) , \"FOX ▁ News ▁ Talk\" ) ) ; driver . navigate ( ) . back ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"On ▁ Air\" ) ) ; break ; case \"More\" : assertNotEquals ( \"none\" , driver . findElement ( By . className ( \"expandable-nav\" ) ) . getCssValue ( \"display\" ) ) ; assertTrue ( driver . findElement ( By . className ( \"search\" ) ) . isDisplayed ( ) ) ; break ; default : wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , title ) ) ; break ; } } } ", "Test Name": "Business Page", "Test Description": "FXN11_Verify the different sections available under business category", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on Personal Finance option, The page should load and the page title should contain the term 'Personal Finances', 4. Click on browser back button, The page should land on the business page, 5. Click on 'Economy', The page should load and the page title should contain the term 'Economy', 6. Click on 'Markets', The page should load and the page title should contain the term 'Markets', 7. Click on 'Watchlist', The page should load and the page title should contain the term 'Watchlist', 8. Click on 'Lifestyle', The page should load and the page title should contain the term 'Lifestyle', 9. Click on 'Real Estate', The page should load and the page title should contain the term 'Real Estate', 10. Click on 'Tech', The page should load and the page title should contain the term 'Technology', 11. Click on 'TV', The page should load and the page title should contain the term 'On Air', 12. Click on 'Podcast', The page should load and the page title should contain the term 'FOX News Talk', 13. Click on Browser back button, The page should land on the business page > TV shows, 14. Click on 'More', The page should display the search button"}
{"id": 156, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 0 ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[contains(text(), ▁ 'Personal ▁ Finance')]\" ) ) ) ; navElements . clear ( ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; navElements = driver . findElements ( By . cssSelector ( \".navbar__link\" ) ) ; expectedTitles = Arrays . asList ( \"Mortgages\" , \"Student ▁ Loans\" , \"Personal ▁ Loans\" , \"Credit ▁ Cards\" , \"Insurance\" , \"High ▁ Yield ▁ Savings\" ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; Actions actions = new Actions ( driver ) ; for ( int i = 0 ; i < navElements . size ( ) ; i ++ ) { actions . moveToElement ( navElements . get ( i ) ) . perform ( ) ; assertNotEquals ( \"hidden\" , navElements . get ( i ) . getCssValue ( \"visibility\" ) ) ; List < WebElement > columns = navElements . get ( i ) . findElements ( By . xpath ( \". // following-sibling::* // *[@class='category__title']\" ) ) ; List < String > expectedCategories = new ArrayList < > ( ) ; List < String > actualCategories = new ArrayList < > ( ) ; switch ( i ) { case 0 : expectedCategories = Arrays . asList ( \"Best ▁ refinance ▁ rates\" , \"Cash ▁ out ▁ refinancing\" , \"Guide ▁ to ▁ refinancing\" , \"How ▁ refinancing ▁ works\" ) ; break ; case 1 : expectedCategories = Arrays . asList ( \"Applying ▁ for ▁ FAFSA\" , \"Best ▁ student ▁ loans\" , \"How ▁ to ▁ refinance\" , \"Reduce ▁ student ▁ loan ▁ debt\" ) ; break ; case 2 : expectedCategories = Arrays . asList ( \"Best ▁ personal ▁ loans\" , \"Debt ▁ consolidation ▁ loans\" , \"Pay ▁ off ▁ credit ▁ card ▁ debt\" , \"Take ▁ out ▁ personal ▁ loan\" ) ; break ; case 3 : expectedCategories = Arrays . asList ( \"Avoid ▁ credit ▁ card ▁ mistakes\" , \"How ▁ to ▁ build ▁ credit\" , \"Types ▁ of ▁ credit ▁ cards\" ) ; break ; case 4 : expectedCategories = Arrays . asList ( \"Auto ▁ insurance\" , \"Homeowners ▁ insurance\" , \"Life ▁ insurance\" ) ; break ; case 5 : expectedCategories = Arrays . asList ( \"Boost ▁ your ▁ savings\" , \"Guide ▁ to ▁ high-yield ▁ savings ▁ account\" , \"How ▁ to ▁ open ▁ high-yield ▁ savings ▁ account\" ) ; break ; } for ( WebElement element : columns ) { actualCategories . add ( element . getText ( ) ) ; } assertEquals ( expectedCategories , actualCategories ) ; } } ", "Test Name": "Business page", "Test Description": "FX12_Verify the different sub-sections available under 'Personal Finance' section in business page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on Personal Finance option, The page should load and the page title should contain the term 'Personal Finances'. The page should display the following sub-sections - Mortgages, Student Loans, Personal Loans, Credit Cards, Insurance, High Yield Savings, 4. Hover over on 'Mortgage' section, user should be able to view the columns - 'Best refinance rates','Cash out refinancing','Guide to refinancing','How refinancing works', 5. Hover over on 'Student Loans' section, user should be able to view the columns - 'Applying for FAFSA','Best student loans','How to refinance','Reduce student loan debt', 6. Hover over on 'Personal Loans' section, user should be able to view the columns - 'Best personal loans','Debt consolidation loans','Pay off credit card debt','Take out personal loan', 7. Hover over on 'Credits cards' section, user should be able to view the columns - 'Avoid credit card mistakes','How to build credit','Types of credit cards', 8. Hover over on 'Insurance' section, user should be able to view the columns - 'Auto insurance','Homeowners insurance','Life insurance', 9. Hover over on 'High Yield Savings' section, user should be able to view the columns - 'Boost your savings','Guide to high-yield savings account','How to open high-yield savings account'"}
{"id": 157, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 3 ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . className ( \"page-title\" ) , \"Watchlist\" ) ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='Create ▁ a ▁ New ▁ List']\" ) ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Sign ▁ In\" ) ) ; driver . findElement ( By . xpath ( \" // *[text()='Create ▁ Account']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Create ▁ Account\" ) ) ; driver . findElement ( By . cssSelector ( \"[name='email']\" ) ) . sendKeys ( \"qa.tries.123@gmail.com\" ) ; driver . findElement ( By . id ( \"password\" ) ) . sendKeys ( \"test123!\" ) ; driver . findElement ( By . cssSelector ( \"[name='firstName']\" ) ) . sendKeys ( \"first\" ) ; driver . findElement ( By . cssSelector ( \"[name='lastName']\" ) ) . sendKeys ( \"last\" ) ; driver . findElement ( By . cssSelector ( \"[name='displayName']\" ) ) . sendKeys ( \"testUser\" ) ; driver . findElement ( By . cssSelector ( \"[name='month']\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // option[text()='Jan']\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[name='day']\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // option[text()='01']\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[name='year']\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // option[text()='2000']\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"[name='gender']\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // option[text()='Female']\" ) ) . click ( ) ; driver . findElement ( By . className ( \"foxid-input-checkbox\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // button[text()='Create ▁ Account']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='Verify ▁ Account']\" ) ) ) ; driver . findElement ( By . xpath ( \" // button[text()='Log ▁ Out']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Fox ▁ Business\" ) ) ; } ", "Test Name": "Business Page", "Test Description": "FX13_Verify user is able to create an account in FoxBusiness Page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on 'Watchlist', The page should load and display the option 'Create a New list' button on the page, 4. Click on 'Create a new list' button, The page should load the sign-in page, 5. Click on create account option, User should land on 'Create account' page, 6. Enter the valid user details - Email, Password, First Name, Last Name, Display Name, Enter your Birth date, Gender, check the checkbox, User should be able to enter all the details, 7. Click on 'Create Account' button, The page should display 'Verify Account', 8. Click on 'logout', User should land on foxnews business home page"}
{"id": 158, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 3 ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . className ( \"page-title\" ) , \"Watchlist\" ) ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='Create ▁ a ▁ New ▁ List']\" ) ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Sign ▁ In\" ) ) ; driver . findElement ( By . cssSelector ( \"[name='email']\" ) ) . sendKeys ( \"qa.tries.123@gmail.com\" ) ; driver . findElement ( By . cssSelector ( \"[name='password']\" ) ) . sendKeys ( \"test123!\" ) ; driver . findElement ( By . cssSelector ( \".login\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Fox ▁ Business\" ) ) ; driver . findElement ( By . cssSelector ( \"[data-omtr-intcmp='nav_watchlist']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . className ( \"page-title\" ) , \"Watchlist\" ) ) ; assertTrue ( driver . findElement ( By . className ( \"watchlist-search-bar\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"edit-button\" ) ) . isDisplayed ( ) ) ; String [ ] searchWords = { \"ST\" , \"A\" } ; for ( int i = 0 ; i < 2 ; i ++ ) { driver . findElement ( By . cssSelector ( \".watchlist-search-bar ▁ > ▁ input\" ) ) . sendKeys ( searchWords [ i ] ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . attributeToBeNotEmpty ( driver . findElement ( By . className ( \"dropdown\" ) ) , \"style\" ) ) ) ; element = driver . findElement ( By . className ( \"result\" ) ) ; String name = element . findElement ( By . className ( \"company\" ) ) . getText ( ) ; element . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . cssSelector ( \".table-row:last-child ▁ .stock-summary-cell ▁ .company-name\" ) , name ) ) ; } } ", "Test Name": "Business Page", "Test Description": "FX14_Verify user is able to login and create a watchlist", "Steps": "Pre-requisite- There should be a verified account created with an email id and password in watchlist page, 1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on 'Watchlist', The page should load and display the option 'Create a New list' button on the page, 4. Click on 'Create a new list' button, The page should load the sign-in page, 5. Enter the email address and password and click Sign-in button, User should be able to login and page displays foxnews business home page, 6. Select Business > Watchlist, User should be able to view the search field and edit button on the right of the page, 7. Search a text in the search field Ex: ST, The search should display the auto populated list to select values, 8. Select first value of the list, The watch list table should get loaded with the selected value, 9. Search another text in search field Ex: A, The search should display the auto populated list to select values, 8. Select first value of the list, The watch list table should get loaded with the selected value"}
{"id": 159, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 3 ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . className ( \"page-title\" ) , \"Watchlist\" ) ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='Create ▁ a ▁ New ▁ List']\" ) ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Sign ▁ In\" ) ) ; driver . findElement ( By . cssSelector ( \"[name='email']\" ) ) . sendKeys ( \"qa.tries.123@gmail.com\" ) ; driver . findElement ( By . cssSelector ( \"[name='password']\" ) ) . sendKeys ( \"test123!\" ) ; driver . findElement ( By . cssSelector ( \".login\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Fox ▁ Business\" ) ) ; driver . findElement ( By . cssSelector ( \"[data-omtr-intcmp='nav_watchlist']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . className ( \"page-title\" ) , \"Watchlist\" ) ) ; assertTrue ( driver . findElement ( By . className ( \"watchlist-search-bar\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"edit-button\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . cssSelector ( \".watchlist-search-bar ▁ > ▁ input\" ) ) . sendKeys ( \"ST\" ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . attributeToBeNotEmpty ( driver . findElement ( By . className ( \"dropdown\" ) ) , \"style\" ) ) ) ; element = driver . findElement ( By . className ( \"result\" ) ) ; String name = element . findElement ( By . className ( \"company\" ) ) . getText ( ) ; element . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . cssSelector ( \".table-row:last-child ▁ .stock-summary-cell ▁ .company-name\" ) , name ) ) ; driver . findElement ( By . className ( \"edit-button\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . cssSelector ( \".watchlist-header ▁ > ▁ button\" ) , \"Save\" ) ) ; driver . findElement ( By . className ( \"edit-done-button\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . cssSelector ( \".watchlist-header ▁ > ▁ button\" ) , \"Edit\" ) ) ; } ", "Test Name": "Business Page", "Test Description": "FX15_Verify user is able to Edit and save the list of watchlist in business page", "Steps": "Pre-requisite- There should be a verified account created with an email id and password in watchlist page, 1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on 'Watchlist', The page should load and display the option 'Create a New list' button on the page, 4. Click on 'Create a new list' button, The page should load the sign-in page, 5. Enter the email address and password and click Sign-in button, User should be able to login and page displays foxnews home page, 6. Select Business > Watchlist, User should be able to view the search field and edit button on the right of the page, 7. Search a text in the search field Ex: ST, The search should display the auto populated list to select values, 8. Select first value of the list, The watch list table should get loaded with the selected value, 9. Click on edit option, The edit button should turn to 'save' button, 10. Click on 'Save' button, The save button should turn back to Edit button"}
{"id": 160, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 3 ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . className ( \"page-title\" ) , \"Watchlist\" ) ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='Create ▁ a ▁ New ▁ List']\" ) ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Sign ▁ In\" ) ) ; driver . findElement ( By . cssSelector ( \"[name='email']\" ) ) . sendKeys ( \"qa.tries.123@gmail.com\" ) ; driver . findElement ( By . cssSelector ( \"[name='password']\" ) ) . sendKeys ( \"test123!\" ) ; driver . findElement ( By . cssSelector ( \".login\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Fox ▁ Business\" ) ) ; driver . findElement ( By . cssSelector ( \"[data-omtr-intcmp='nav_watchlist']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . className ( \"page-title\" ) , \"Watchlist\" ) ) ; assertTrue ( driver . findElement ( By . className ( \"watchlist-search-bar\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"edit-button\" ) ) . isDisplayed ( ) ) ; for ( int i = 0 ; i < 2 ; i ++ ) { driver . findElement ( By . cssSelector ( \".watchlist-search-bar ▁ > ▁ input\" ) ) . sendKeys ( \"ST\" ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . attributeToBeNotEmpty ( driver . findElement ( By . className ( \"dropdown\" ) ) , \"style\" ) ) ) ; element = driver . findElement ( By . className ( \"result\" ) ) ; String name = element . findElement ( By . className ( \"company\" ) ) . getText ( ) ; element . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . cssSelector ( \".table-row:last-child ▁ .stock-summary-cell ▁ .company-name\" ) , name ) ) ; driver . findElement ( By . className ( \"edit-button\" ) ) . click ( ) ; if ( i == 0 ) { wait . until ( ExpectedConditions . textToBe ( By . cssSelector ( \".watchlist-header ▁ > ▁ button\" ) , \"Save\" ) ) ; driver . findElement ( By . cssSelector ( \".table-row:last-child ▁ .watchlist-edit-row ▁ [alt='delete']\" ) ) . click ( ) ; assertEquals ( 0 , driver . findElements ( By . xpath ( \" // *[@class='table-row'] // *[@class='company-name' ▁ and ▁ text()='\" + name + \"']\" ) ) . size ( ) ) ; driver . findElement ( By . className ( \"edit-done-button\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . cssSelector ( \".watchlist-header ▁ > ▁ button\" ) , \"Edit\" ) ) ; assertEquals ( 0 , driver . findElements ( By . xpath ( \" // *[@class='table-row'] // *[@class='company-name' ▁ and ▁ text()='\" + name + \"']\" ) ) . size ( ) ) ; } else { wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"delete-button\" ) ) ) . click ( ) ; assertEquals ( \"Are ▁ you ▁ sure ▁ you ▁ want ▁ to ▁ delete ▁ the ▁ whole ▁ list?\" , driver . switchTo ( ) . alert ( ) . getText ( ) ) ; driver . switchTo ( ) . alert ( ) . accept ( ) ; wait . until ( ExpectedConditions . numberOfElementsToBe ( By . cssSelector ( \".table-row ▁ .company-name\" ) , 0 ) ) ; } } } ", "Test Name": "Buisness Page", "Test Description": "FXN16_Verify the user is able to delete the enteries in watchlist", "Steps": "Pre-requisite- There should be a verified account created with an email id and password in watchlist page, 1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on 'Watchlist', The page should load and display the option 'Create a New list' button on the page, 4. Click on 'Create a new list' button, The page should load the sign-in page, 5. Enter the email address and password and click Sign-in button, User should be able to login and page displays foxnews home page, 6. Select Business > Watchlist, User should be able to view the search field and edit button on the right of the page, 7. Search a text in the search field Ex: ST, The search should display the auto populated list to select values, 8. Select first value of the list, The watch list table should get loaded with the selected value, 9. Click on edit option, The edit button should turn to 'save' button, 10. Click on cancel mark displayed on the selected record, The record should be removed from the table, 11. Click on save button, The table should get refreshed and the deleted record should not be displayed in the table, 12. Search a text in the search field Ex: ST, The search should display the auto populated list to select values, 13. Select first value of the list, The watch list table should get loaded with the selected value, 14. Click on edit option, Delete Watchlist button should be displayed, 15. Click on the \"delete watchlist' button, The browser confirmation pop-up alert should be displayed stating - Are you sure you want to delete the whole list?, 16. Click on OK, All the enteried in the watchlist table should be removed"}
{"id": 161, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 7 ) . click ( ) ; List < WebElement > buttons = wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( ( By . cssSelector ( \".heading ▁ a\" ) ) ) ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; expectedTitles = new ArrayList < > ( Arrays . asList ( \"Watch ▁ Live\" , \"Full ▁ Schedule\" , \"Personalities\" , \"Channel ▁ Finder\" ) ) ; for ( WebElement element : buttons ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; } ", "Test Name": "Buisness Page", "Test Description": "FXN17_Verify different options available on TV section in Business page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on \"TV\" section, User should be able to view the following options to the right side of the page - Watch Live, Full Schedule, Personalities, Channel Finder"}
{"id": 162, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 7 ) . click ( ) ; List < WebElement > buttons = wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( ( By . cssSelector ( \".heading ▁ a\" ) ) ) ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; expectedTitles = new ArrayList < > ( Arrays . asList ( \"Watch ▁ Live\" , \"Full ▁ Schedule\" , \"Personalities\" , \"Channel ▁ Finder\" ) ) ; for ( WebElement element : buttons ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; buttons . get ( 0 ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"video-player\" ) ) ) ; List < WebElement > subNavElements = wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( ( By . cssSelector ( \".show ▁ nav.secondary ▁ a\" ) ) ) ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; expectedTitles = new ArrayList < > ( Arrays . asList ( \"Featured\" , \"Full ▁ Episodes\" , \"Primetime\" , \"Daytime\" , \"All ▁ Shows\" ) ) ; for ( WebElement element : subNavElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; } ", "Test Name": "Buisness Page", "Test Description": "FXN18_Verify different sub-sections available in watch Live section of business page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on \"TV\" section, User should be able to view the following options to the right side of the page - Watch Live, Full schedule, Personalities, Channel Finder, 4. Click on 'Watch Live', User should be able to view the following options below the video frame - Featured, Full Episodes, Primetime, Daytime, All Shows"}
{"id": 163, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 7 ) . click ( ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; List < WebElement > buttons = wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( ( By . cssSelector ( \".heading ▁ a\" ) ) ) ) ; expectedTitles = new ArrayList < > ( Arrays . asList ( \"Watch ▁ Live\" , \"Full ▁ Schedule\" , \"Personalities\" , \"Channel ▁ Finder\" ) ) ; for ( WebElement element : buttons ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; buttons . get ( 1 ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Full ▁ Schedule\" ) ) ; element = driver . findElement ( By . xpath ( \" // *[@class='weekday'] // *[contains(text(), ▁ 'Yesterday')]\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='weekday'] // *[contains(text(), ▁ 'Today')]\" ) ) . isDisplayed ( ) ) ; element . click ( ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".item-day.active\" ) ) . getText ( ) . contains ( \"Yesterday\" ) ) ; } ", "Test Name": "Buisness Page", "Test Description": "FXN19_Verify user is able to view the full schedule page in Business page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on \"TV\" section, User should be able to view the following options to the right side of the page - Watch Live, Full schedule, Personalities, Channel Finder, 4. Click on 'Full Schedule\", The page should load and the title of the page should display 'Full Schedule'. User should view the options 'Today' and 'Yesterday' displayed on the page, 5. Click on 'Yesterday', User should be able to slide to yesterdsy section"}
{"id": 164, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 7 ) . click ( ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; List < WebElement > buttons = wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( ( By . cssSelector ( \".heading ▁ a\" ) ) ) ) ; expectedTitles = new ArrayList < > ( Arrays . asList ( \"Watch ▁ Live\" , \"Full ▁ Schedule\" , \"Personalities\" , \"Channel ▁ Finder\" ) ) ; for ( WebElement element : buttons ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; buttons . get ( 2 ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Anchors ▁ & ▁ Reporters\" ) ) ; } ", "Test Name": "Business Page", "Test Description": "FXN20_Verify user is able to view Anchors and reporters page through Business page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on \"TV\" section, User should be able to view the following options to the right side of the page - Watch Live, Full schedule, Personalities, Channel Finder, 4. Click on 'Personalities\", The page should load and the title of the page should display 'Anchors & Reporters'"}
{"id": 165, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 7 ) . click ( ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; List < WebElement > buttons = wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( ( By . cssSelector ( \".heading ▁ a\" ) ) ) ) ; expectedTitles = new ArrayList < > ( Arrays . asList ( \"Watch ▁ Live\" , \"Full ▁ Schedule\" , \"Personalities\" , \"Channel ▁ Finder\" ) ) ; for ( WebElement element : buttons ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; buttons . get ( 3 ) . click ( ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . id ( \"channel-finder\" ) ) ) ; driver . switchTo ( ) . frame ( element ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Fox ▁ Business ▁ Network\" ) ) ; driver . findElement ( By . id ( \"cfZip\" ) ) . sendKeys ( \"12010\" ) ; driver . findElement ( By . id ( \"bttnGO\" ) ) . click ( ) ; assertEquals ( \"Choose ▁ your ▁ Provider\" , driver . findElement ( By . id ( \"providerLabel\" ) ) . getText ( ) ) ; wait . until ( ExpectedConditions . numberOfElementsToBeMoreThan ( By . cssSelector ( \"#cfProviderSelect ▁ > ▁ *\" ) , 1 ) ) ; } ", "Test Name": "Business Page", "Test Description": "FXN21_Verify the functionality of channel finder text field", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on \"TV\" section, User should be able to view the following options to the right side of the page - Watch Live, Full schedule, Personalities, Channel Finder, 4. Click on 'Channel Finder', The page should load and the title of the page should display 'Fox Business Network', 5. Enter the zip code belonging to USA ex: 12010 and click on GO, The 'choose your provider' should display different channels enteries"}
{"id": 166, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 8 ) . click ( ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; List < WebElement > menuItems = wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( ( By . cssSelector ( \".menu-top-nav-container ▁ #menu-top-nav-1 ▁ > ▁ li.menu-item ▁ > ▁ a\" ) ) ) ) ; expectedTitles = new ArrayList < > ( Arrays . asList ( \"How ▁ to ▁ Listen\" , \"FOX ▁ News ▁ Talk ▁ Shows\" , \"Podcasts\" , \"Station ▁ Finder\" ) ) ; for ( int i = 1 ; i < menuItems . size ( ) ; i ++ ) { actualTitles . add ( menuItems . get ( i ) . getText ( ) . replace ( \" \\n »\" , \"\" ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; Actions actions = new Actions ( driver ) ; actions . moveToElement ( menuItems . get ( 3 ) ) . perform ( ) ; wait . until ( ExpectedConditions . attributeContains ( menuItems . get ( 3 ) . findElement ( By . xpath ( \". // following-sibling::ul[@class='sub-menu']\" ) ) , \"style\" , \"display: ▁ block;\" ) ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; List < WebElement > submenuItems = menuItems . get ( 3 ) . findElements ( ( By . xpath ( \". // following-sibling::ul[@class='sub-menu'] // li[contains(@class, ▁ 'menu-item-type-custom')]/a\" ) ) ) ; expectedTitles = new ArrayList < > ( Arrays . asList ( \"Premium ▁ Podcast ▁ Account ▁ Access\" , \"FOX ▁ News ▁ Talk ▁ Radio ▁ Premium ▁ Podcasts\" , \"FOX ▁ News ▁ Channel ▁ Premium ▁ Podcasts\" , \"FOX ▁ Business ▁ Network ▁ Premium ▁ Podcasts\" , \"Free ▁ Podcasts\" ) ) ; for ( WebElement element : submenuItems ) { if ( ! element . getText ( ) . isEmpty ( ) ) actualTitles . add ( element . getText ( ) . replace ( \" \\n »\" , \"\" ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; } ", "Test Name": "Business Page", "Test Description": "FXN22_Verify for different subsections available in podcasts in business page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on \"Podcasts\" section, User should be able to view the following menu items on the page - 'How to Listen', 'FOX News Talk Shows','Podcasts','Station Finder', 4. Hover over on 'Podcasts' menu, The list of available podcasts types should be displayed in the list - Premium Podcast Account Access,FOX News Talk Radio Premium Podcasts,FOX News Channel Premium Podcasts, FOX Business Network Premium Podcasts, Free Podcasts"}
{"id": 167, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; element = driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; assertEquals ( \"Fox ▁ Business\" , driver . findElement ( By . tagName ( \"h1\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"#main-nav ▁ a\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Personal ▁ Finance\" , \"Economy\" , \"Markets\" , \"Watchlist\" , \"Lifestyle\" , \"Real ▁ Estate\" , \"Tech\" , \"TV\" , \"Podcasts\" , \"More\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; navElements . get ( 8 ) . click ( ) ; expectedTitles . clear ( ) ; actualTitles . clear ( ) ; List < WebElement > menuItems = wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( ( By . cssSelector ( \".menu-top-nav-container ▁ #menu-top-nav-1 ▁ > ▁ li.menu-item ▁ > ▁ a\" ) ) ) ) ; expectedTitles = new ArrayList < > ( Arrays . asList ( \"How ▁ to ▁ Listen\" , \"FOX ▁ News ▁ Talk ▁ Shows\" , \"Podcasts\" , \"Station ▁ Finder\" ) ) ; for ( int i = 1 ; i < menuItems . size ( ) ; i ++ ) { actualTitles . add ( menuItems . get ( i ) . getText ( ) . replace ( \" \\n »\" , \"\" ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; menuItems . get ( 4 ) . click ( ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . cssSelector ( \".td-page-text-content ▁ iframe\" ) ) ) ; driver . switchTo ( ) . frame ( element ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"select[name='State']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"select[name='Show']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"input[value='Search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . cssSelector ( \"select[name='State']\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"option[value='AZ']\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"select[name='Show']\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"option[value='5']\" ) ) . click ( ) ; driver . findElement ( By . cssSelector ( \"input[value='Search']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( By . cssSelector ( \"tbody ▁ > ▁ tr\" ) ) ) ; assertEquals ( \"5 ▁ MINUTE ▁ NEWS\" , driver . findElement ( By . cssSelector ( \"h1 ▁ span:nth-child(1)\" ) ) . getText ( ) ) ; assertEquals ( \"AZ\" , driver . findElement ( By . cssSelector ( \"h1 ▁ span:nth-child(2)\" ) ) . getText ( ) ) ; } ", "Test Name": "Business Page", "Test Description": "FXN23_Verify the filter functionality in station finder page in business page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on the home page with Navigation menu displaying 'Business' as one of the option, 2. Click on the business page, The page should load and display following section on the navigation menu - Personal Finance, Economy, Markets, Watchlist, Lifestyle, Real Estate, Tech, TV, Podcasts, More, 3. Click on \"Podcasts\" section, User should be able to view the following menu items on the page - 'How to Listen', 'FOX News Talk Shows','Podcasts','Station Finder', 4. Click on 'Station Finder' option, User should be able to view 'State' with dropdown and Show with dropdown and a search button, 5. Select any state from state dropdown, show dropdown and click Search, A table should be displayed with atleast one record in the table"}
{"id": 168, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // nav[@id='main-nav'] // a[text()='Business']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; ArrayList < String > tabs = new ArrayList < > ( driver . getWindowHandles ( ) ) ; driver . switchTo ( ) . window ( tabs . get ( 1 ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . className ( \"expandable-nav\" ) ) . getCssValue ( \"display\" ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='search ▁ foxbusiness.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . cssSelector ( \"[data-omtr-intcmp='more_personalfinance_subsection_retirement']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[contains(text(), ▁ 'Retirement')]\" ) ) ) ; } ", "Test Name": "Business Page", "Test Description": "FXN24_Verify user is able to access and view the pages under personal finance in business Search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select Business and Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select any page under 'Personal Finance' section Ex: Retirement, The page should load and display the article with title containing the page selected Ex: Title contains 'Retirement' in this case"}
{"id": 169, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . className ( \"expandable-nav\" ) ) . getCssValue ( \"display\" ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . cssSelector ( \"[aria-label='Other ▁ - ▁ Fox ▁ News ▁ Shop']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . titleContains ( \"Shop\" ) ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . cssSelector ( \".field.search\" ) ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[text()='My ▁ Cart']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[text()='Patriotic ▁ Collection']/..\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( By . cssSelector ( \".product-item\" ) ) ) ; driver . findElement ( By . cssSelector ( \"[title='Add ▁ to ▁ Cart']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . className ( \"counter-number\" ) , \"1\" ) ) ; driver . findElement ( By . cssSelector ( \".showcart\" ) ) . click ( ) ; assertEquals ( \"1 ▁ Item ▁ in ▁ Cart\" , driver . findElement ( By . className ( \"items-total\" ) ) . getText ( ) ) ; } ", "Test Name": "Search Page", "Test Description": "FXN45_Verify the Add to cart functionality on foxnews website", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Fox News Shop' under 'Other' section, The page should load with title containing the term 'shop' with a search text field in the left top corner and My Cart option on the right corner of the cart, 4. Click on patriotic collection, User should be able to view more than 1 item in the list, 5. Click on 'Add to cart' on one of the item, The count on My cart should be incremented by 1, 6. Click on 'My cart', The pop-up should display the number of items in the cart Ex: 1 Item in Cart"}
{"id": 170, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; WebDriverWait wait = new WebDriverWait ( driver , 15 ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . className ( \"expandable-nav\" ) ) . getCssValue ( \"display\" ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . cssSelector ( \"[aria-label='Other ▁ - ▁ Fox ▁ News ▁ Shop']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . titleContains ( \"Shop\" ) ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . cssSelector ( \".field.search\" ) ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[text()='My ▁ Cart']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[text()='Patriotic ▁ Collection']/..\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfAllElementsLocatedBy ( By . cssSelector ( \".product-item\" ) ) ) ; driver . findElement ( By . cssSelector ( \"[title='Add ▁ to ▁ Cart']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . className ( \"counter-number\" ) , \"1\" ) ) ; driver . findElement ( By . cssSelector ( \".showcart\" ) ) . click ( ) ; assertNotEquals ( \"none\" , driver . findElement ( By . cssSelector ( \".minicart-wrapper ▁ .ui-dialog\" ) ) . getCssValue ( \"display\" ) ) ; driver . findElement ( By . xpath ( \" // *[text()='View ▁ and ▁ Edit ▁ Cart']/..\" ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Shopping ▁ Cart\" ) ) ; assertEquals ( 1 , driver . findElements ( By . cssSelector ( \".cart.item\" ) ) . size ( ) ) ; element = driver . findElement ( By . cssSelector ( \"[title='Qty']\" ) ) ; assertEquals ( \"1\" , element . getAttribute ( \"value\" ) ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@class='cart-summary'] // *[text()='Order ▁ Total']\" ) ) ) ; By locator = By . cssSelector ( \"[data-th='Order ▁ Total']\" ) ; String originalTotal = driver . findElement ( locator ) . getText ( ) ; element . clear ( ) ; element . sendKeys ( \"3\" ) ; driver . findElement ( By . xpath ( \" // *[text()='Update ▁ Shopping ▁ Cart']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( locator ) ) ; wait . until ( ExpectedConditions . not ( ExpectedConditions . textToBe ( locator , originalTotal ) ) ) ; wait . until ( ExpectedConditions . elementToBeClickable ( By . cssSelector ( \"[title='Remove ▁ item']\" ) ) ) . click ( ) ; wait . until ( ExpectedConditions . textToBePresentInElementLocated ( By . className ( \"cart-empty\" ) , \"You ▁ have ▁ no ▁ items ▁ in ▁ your ▁ shopping ▁ cart.\" ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \".counter.qty\" ) ) . getAttribute ( \"class\" ) . contains ( \"empty\" ) ) ; } ", "Test Name": "Search Page", "Test Description": "FXN46_Verify that functionality of View and Edit purchase on foxnews shop page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Fox News Shop' under 'Other' section, The page should load with title containing the term 'shop' with a search text field in the left top corner and My Cart option on the right corner of the cart, 4. Click on patriotic collection, User should be able to view more than 1 item in the list, 5. Click on 'Add to cart' on one of the item, The count on My cart should be incremented by 1, 6. Click on 'My cart', User should view 'View and Edit' cart option, 7. Click on 'View and Edit' button, The page should load the details of the items with the title - 'Shopping Cart'. 1 item should be listed in the page with quantity selected as '1'. Also the total bill on purchase should be displayed in the right panel, 8. Increase the quantity of the item to '3' and click 'Update shopping cart', The page should update and display the total amount on purchase should be updated to new value, 9. Click on Delete icon displayed on the screen, User should be able to view the message 'You have no items in your shopping cart.' and the count on My cart icon should be removed"}
{"id": 171, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; JavascriptExecutor js = driver ; js . executeScript ( \"window.scrollBy(0,document.body.scrollHeight)\" ) ; assertTrue ( ( Boolean ) ( ( JavascriptExecutor ) driver ) . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , driver . findElement ( By . className ( \"footer-lower\" ) ) ) ) ; driver . findElement ( By . cssSelector ( \"footer ▁ a[aria-label*='Terms ▁ of ▁ Use']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Fox ▁ News ▁ Network, ▁ LLC ▁ Terms ▁ of ▁ Use ▁ Agreement\" ) ) ; js . executeScript ( \"window.scrollBy(0,document.body.scrollHeight)\" ) ; assertTrue ( ( Boolean ) ( ( JavascriptExecutor ) driver ) . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , driver . findElement ( By . xpath ( \" // *[text()=\" + \"'I ▁ HAVE ▁ READ ▁ THIS ▁ AGREEMENT ▁ AND ▁ AGREE ▁ TO ▁ ALL ▁ OF ▁ THE ▁ PROVISIONS ▁ CONTAINED ▁ ABOVE.']\" ) ) ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN47_Verify user Is able to view the Terms of use through the link present in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'New Terms of Use' link, The page should load and display the title 'Fox News Network, LLC Terms of Use Agreement', 4. Scroll down to the end of terms of use statement text, The terms of use must end with the confirmation message - 'I HAVE READ THIS AGREEMENT AND AGREE TO ALL OF THE PROVISIONS CONTAINED ABOVE.'"}
{"id": 172, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; JavascriptExecutor js = driver ; js . executeScript ( \"window.scrollBy(0,document.body.scrollHeight)\" ) ; assertTrue ( ( Boolean ) ( ( JavascriptExecutor ) driver ) . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , driver . findElement ( By . className ( \"footer-lower\" ) ) ) ) ; driver . findElement ( By . cssSelector ( \"footer ▁ a[aria-label*='Privacy ▁ Policy']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . textToBe ( By . tagName ( \"h1\" ) , \"Privacy ▁ Policy\" ) ) ; assertEquals ( \"Table ▁ of ▁ Contents:\" , driver . findElement ( By . tagName ( \"h2\" ) ) . getText ( ) ) ; List < WebElement > navElements = driver . findElements ( By . cssSelector ( \"ol ▁ > ▁ li ▁ strong\" ) ) ; List < String > expectedTitles = new ArrayList < > ( Arrays . asList ( \"Scope ▁ and ▁ Application\" , \"Collection ▁ of ▁ Information\" , \"Use ▁ and ▁ Disclosure\" , \"Security\" , \"User ▁ Access ▁ and ▁ Control\" , \"Other ▁ Important ▁ Information\" , \"Contact ▁ Us\" , \"California ▁ Consumer ▁ Privacy ▁ Act ▁ Notice\" ) ) ; List < String > actualTitles = new ArrayList < > ( ) ; for ( WebElement element : navElements ) { actualTitles . add ( element . getText ( ) ) ; } assertEquals ( expectedTitles , actualTitles ) ; } ", "Test Name": "Footer", "Test Description": "FXN48_Verify user Is able to view the Privacy Policy through the link present in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'New Privacy Policy' link, The page should load and display the title 'Privacy Policy' and Table to contents displaying - Scope and Application, Collection of Information, Use and Disclosure, Security, User Access and Control, Other Important Information, Contact Us and California Consumer Privacy Act Notice"}
{"id": 173, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; JavascriptExecutor js = driver ; js . executeScript ( \"window.scrollBy(0,document.body.scrollHeight)\" ) ; assertTrue ( ( Boolean ) ( ( JavascriptExecutor ) driver ) . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , driver . findElement ( By . className ( \"footer-lower\" ) ) ) ) ; driver . findElement ( By . cssSelector ( \"footer ▁ a[aria-label='Facebook']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . urlToBe ( \"https: // www.facebook.com/FoxNews\" ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN49_Verify user is able to connect to foxnews facebook page through the link provided in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'facebook' icon, The page should load and display the page connecting to URL https://www.facebook.com/FoxNews"}
{"id": 174, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; JavascriptExecutor js = driver ; js . executeScript ( \"window.scrollBy(0,document.body.scrollHeight)\" ) ; assertTrue ( ( Boolean ) ( ( JavascriptExecutor ) driver ) . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , driver . findElement ( By . className ( \"footer-lower\" ) ) ) ) ; driver . findElement ( By . cssSelector ( \"footer ▁ a[aria-label='Instagram']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . urlToBe ( \"https: // www.instagram.com/foxnews/\" ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN50_Verify user is able to connect to foxnews Instagram page through the link provided in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'Instagram' icon, The page should load and display the page connecting to URL https://www.instagram.com/foxnews/"}
{"id": 175, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; JavascriptExecutor js = driver ; js . executeScript ( \"window.scrollBy(0,document.body.scrollHeight)\" ) ; assertTrue ( ( Boolean ) ( ( JavascriptExecutor ) driver ) . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , driver . findElement ( By . className ( \"footer-lower\" ) ) ) ) ; driver . findElement ( By . cssSelector ( \"footer ▁ a[aria-label='Twitter']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . urlToBe ( \"https: // twitter.com/foxnews\" ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN51_Verify user is able to connect to foxnews twitter page through the link provided in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'twitter' icon, The page should load and display the page connecting to URL https://twitter.com/foxnews"}
{"id": 176, "website": "FoxNews", "code": " void function ( ) { driver . get ( \"https: // www.foxnews.com/\" ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[aria-label='hot ▁ topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"market-data\" ) ) . isDisplayed ( ) ) ; JavascriptExecutor js = driver ; js . executeScript ( \"window.scrollBy(0,document.body.scrollHeight)\" ) ; assertTrue ( ( Boolean ) ( ( JavascriptExecutor ) driver ) . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , driver . findElement ( By . className ( \"footer-lower\" ) ) ) ) ; driver . findElement ( By . cssSelector ( \"footer ▁ a[aria-label='Youtube']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; wait . until ( ExpectedConditions . urlToBe ( \"https: // www.youtube.com/c/FoxNews\" ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN52_Verify user is able to connect to foxnews youtube page through the link provided in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'youtube' icon, The page should load and display the page connecting to URL https://www.youtube.com/c/FoxNews"}
{"id": 177, "website": "FoxNews", "code": " void function ( ) { String newTab ; String topic = \"Business\" ; String category = \"Economy\" ; String pageToChoose = \"Small ▁ Business\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"menu-\" + topic . toLowerCase ( Locale . ROOT ) ) ) . click ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . partialLinkText ( \"search\" ) ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxbusiness.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='header ▁ nav ▁ item ▁ \" + category + \"'] // *[text()='\" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[contains(text(), ▁ '\" + pageToChoose + \"')]\" ) ) ) ; } ", "Test Name": "Business Page", "Test Description": "FXN25_Verify user is able to access and view the pages under Economy section in Business Search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select Business and Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select any page under 'Economy' section Ex: Small Business, The page should load and display the article with title containing the name of page selected Ex: Title contains 'Small Business' in this case"}
{"id": 178, "website": "FoxNews", "code": " void function ( ) { String newTab ; String topic = \"Business\" ; String category = \"Markets\" ; String pageToChoose = \"Retail\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"menu-\" + topic . toLowerCase ( Locale . ROOT ) ) ) . click ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . partialLinkText ( \"search\" ) ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxbusiness.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='header ▁ nav ▁ item ▁ \" + category + \"'] // *[text()='\" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[contains(text(), ▁ '\" + pageToChoose + \"')]\" ) ) ) ; } ", "Test Name": "Business Page", "Test Description": "FXN26_Verify user is able to access and view the pages under Markets section in Business Search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select Business and Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select any page under 'Markets' section Ex: Retail, The page should load and display the article with title containing the name of page selected Ex: Title contains 'Retail' in this case"}
{"id": 179, "website": "FoxNews", "code": " void function ( ) { String newTab ; String topic = \"Business\" ; String category = \"Lifestyle\" ; String pageToChoose = \"Travel\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"menu-\" + topic . toLowerCase ( Locale . ROOT ) ) ) . click ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . partialLinkText ( \"search\" ) ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxbusiness.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='header ▁ nav ▁ item ▁ \" + category + \"'] // *[text()='\" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[contains(text(), ▁ '\" + pageToChoose + \"')]\" ) ) ) ; } ", "Test Name": "Business page", "Test Description": "FXN27_Verify user is able to access and view the pages under Lifestyle section in Business Search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select Business and Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select any page under 'Lifestyle' section Ex: Travel, The page should load and display the article with title containing the name of page selected Ex: Title contains 'Travel' in this case"}
{"id": 180, "website": "FoxNews", "code": " void function ( ) { String newTab ; String topic = \"Business\" ; String category = \"Real ▁ Estate\" ; String pageToChoose = \"Commercial\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"menu-\" + topic . toLowerCase ( Locale . ROOT ) ) ) . click ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . partialLinkText ( \"search\" ) ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxbusiness.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='header ▁ nav ▁ item ▁ \" + category + \"'] // *[text()='\" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[contains(text(), ▁ '\" + pageToChoose + \"')]\" ) ) ) ; } ", "Test Name": "Business page", "Test Description": "FXN28_Verify user is able to access and view the pages under Real Estate section in Business Search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select Business and Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select any page under 'Real Estate' section Ex: Commercial, The page should load and display the article with title containing the name of page selected Ex: Title contains 'Commercial' in this case"}
{"id": 181, "website": "FoxNews", "code": " void function ( ) { String newTab ; String topic = \"Business\" ; String category = \"Tech\" ; String pageToChoose = \"Space\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"menu-\" + topic . toLowerCase ( Locale . ROOT ) ) ) . click ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . partialLinkText ( \"search\" ) ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxbusiness.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='header ▁ nav ▁ item ▁ \" + category + \"'] // *[text()='\" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[contains(text(), ▁ '\" + pageToChoose + \"')]\" ) ) ) ; } ", "Test Name": "Business page", "Test Description": "FXN30_Verify user is able to access and view the pages under Tech section in Business Search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select Business and Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select any page under 'Tech' section Ex: Space, The page should load and display the article with title containing the name of page selected Ex: Title contains 'Space' in this case"}
{"id": 182, "website": "FoxNews", "code": " void function ( ) { String newTab ; String topic = \"Business\" ; String category = \"Shows\" ; String pageToChoose = \"Mornings ▁ with ▁ Maria\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"menu-\" + topic . toLowerCase ( Locale . ROOT ) ) ) . click ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . partialLinkText ( \"search\" ) ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxbusiness.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='header ▁ nav ▁ item ▁ \" + category + \"'] // *[text()='\" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[contains(text(), ▁ '\" + pageToChoose + \"')]\" ) ) ) ; } ", "Test Name": "Business page", "Test Description": "FXN31_Verify user is able to access and view the pages under Shows section in Business Search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Select Business and Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select any page under 'Shows' section Ex: Mornings with Maria, The page should load and display the article with title containing the name of page selected Ex: Title contains 'Mornings with Maria' in this case"}
{"id": 183, "website": "FoxNews", "code": " void function ( ) { String category = \"About\" ; String pageToChoose = \"Careers\" ; String [ ] navigableItems = new String [ ] { \"Our ▁ Brands\" , \"Life ▁ At ▁ FOX\" , \"Internships\" , \"Job ▁ Search\" , \"My ▁ Account\" } ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; for ( String item : navigableItems ) assertTrue ( driver . findElement ( By . xpath ( \" // a[@title='\" + item + \"']\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Search page", "Test Description": "FXN32_Verify the pages available in job career through search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Careers' under 'About' section, The page should load with title 'Job Search' and should display 'Our Brands','Life at fox','Internships','Job search' and 'My account' as navigable items"}
{"id": 184, "website": "FoxNews", "code": " void function ( ) { String category = \"About\" ; String pageToChoose = \"Careers\" ; String [ ] navigableItems = new String [ ] { \"Our ▁ Brands\" , \"Life ▁ At ▁ FOX\" , \"Internships\" , \"Job ▁ Search\" , \"My ▁ Account\" } ; String itemToChoose = \"Our ▁ Brands\" ; String optionInItem = \"Fox ▁ Corporation\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Actions action = new Actions ( driver ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; for ( String item : navigableItems ) assertTrue ( driver . findElement ( By . xpath ( \" // a[@title='\" + item + \"']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // a[@title='\" + itemToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='\" + itemToChoose + \"']\" ) ) ) ; try { driver . findElement ( By . xpath ( \" // *[@alt='close']\" ) ) . click ( ) ; } catch ( Exception ignored ) { } element = driver . findElement ( By . xpath ( \" // *[contains(@class, ▁ 'sectionNav') ▁ and ▁ text()='\" + optionInItem + \"']\" ) ) ; action . moveToElement ( element ) . perform ( ) ; element . click ( ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='View ▁ Jobs']\" ) ) ) ; action . moveToElement ( element ) . perform ( ) ; element . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; assertTrue ( Integer . parseInt ( driver . findElement ( By . id ( \"jobsCount\" ) ) . getText ( ) ) >= 1 ) ; } ", "Test Name": "Search page", "Test Description": "FXN33_Verify user is able to view the job search results of FOX brands via search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Careers' under 'About' section, The page should load with title 'Job Search' and should display 'Our Brands','Life at fox','Internships','Job search' and 'My account' as navigable items, 4. Select 'Our Brands' option, The page should load the page with title 'Our brands', 5. Select an option under Our brands in the left panel of the screen Ex: Fox corporation, The page should load and display 'View jobs' button in the right panel of the screen, 6. Click on 'View jobs' button, The page should redirect to the page with titled 'JOB SEARCH'. User should be able to view 1 or more than 1 search results"}
{"id": 185, "website": "FoxNews", "code": " void function ( ) throws InterruptedException { String category = \"About\" ; String pageToChoose = \"Careers\" ; String [ ] navigableItems = new String [ ] { \"Our ▁ Brands\" , \"Life ▁ At ▁ FOX\" , \"Internships\" , \"Job ▁ Search\" , \"My ▁ Account\" } ; String itemToChoose = \"Job ▁ Search\" ; String textToType = \"Sales\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; for ( String item : navigableItems ) assertTrue ( driver . findElement ( By . xpath ( \" // a[@title='\" + item + \"']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // a[@title='\" + itemToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='\" + itemToChoose + \"']\" ) ) ) ; try { driver . findElement ( By . xpath ( \" // *[@alt='close']\" ) ) . click ( ) ; } catch ( Exception ignored ) { } wait . until ( ExpectedConditions . elementToBeClickable ( By . id ( \"keywordSearch\" ) ) ) . sendKeys ( textToType ) ; driver . findElement ( By . xpath ( \" // *[@id='filterButton' ▁ and ▁ @value='Go']\" ) ) . click ( ) ; Thread . sleep ( 2000 ) ; assertTrue ( Integer . parseInt ( driver . findElement ( By . id ( \"jobsCount\" ) ) . getText ( ) ) >= 1 ) ; } ", "Test Name": "Search page", "Test Description": "FXN34_Verify user is able to search the job in job search page using search text field", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Careers' under 'About' section, The page should load with title 'Job Search' and should display 'Our Brands','Life at fox','Internships','Job search' and 'My account' as navigable items, 4. Select 'Job search' option, The page should redirect to the page with titled 'JOB SEARCH'., 5. Enter a job search text in search field Ex: Sales and click on 'GO', The page should load and display 1 or more than 1 job search results"}
{"id": 186, "website": "FoxNews", "code": " void function ( ) throws InterruptedException { String category = \"About\" ; String pageToChoose = \"Careers\" ; String [ ] navigableItems = new String [ ] { \"Our ▁ Brands\" , \"Life ▁ At ▁ FOX\" , \"Internships\" , \"Job ▁ Search\" , \"My ▁ Account\" } ; String itemToChoose = \"Job ▁ Search\" ; String checkboxToSelect = \"Administrative\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Actions action = new Actions ( driver ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; for ( String item : navigableItems ) assertTrue ( driver . findElement ( By . xpath ( \" // a[@title='\" + item + \"']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // a[@title='\" + itemToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='\" + itemToChoose + \"']\" ) ) ) ; try { driver . findElement ( By . xpath ( \" // *[@alt='close']\" ) ) . click ( ) ; } catch ( Exception ignored ) { } element = driver . findElement ( By . id ( checkboxToSelect + \"_checkbox\" ) ) ; action . moveToElement ( element ) . click ( ) . perform ( ) ; wait . until ( ExpectedConditions . elementToBeSelected ( element ) ) ; Thread . sleep ( 2000 ) ; assertTrue ( Integer . parseInt ( driver . findElement ( By . id ( \"jobsCount\" ) ) . getText ( ) ) >= 1 ) ; } ", "Test Name": "Search page", "Test Description": "FXN35_Verify user is able to use the filters to search the job in job search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Careers' under 'About' section, The page should load with title 'Job Search' and should display 'Our Brands','Life at fox','Internships','Job search' and 'My account' as navigable items, 4. Select 'Job search' option, The page should redirect to the page with titled 'JOB SEARCH'., 5. Check the checkbox of 'Job Function' filter search Ex: Administrative, The page should load and display 1 or more than 1 job search results"}
{"id": 187, "website": "FoxNews", "code": " void function ( ) throws InterruptedException { String category = \"About\" ; String pageToChoose = \"Careers\" ; String [ ] navigableItems = new String [ ] { \"Our ▁ Brands\" , \"Life ▁ At ▁ FOX\" , \"Internships\" , \"Job ▁ Search\" , \"My ▁ Account\" } ; String itemToChoose = \"Job ▁ Search\" ; String [ ] checkboxesToSelect = new String [ ] { \"Fox ▁ Sports\" , \"India\" } ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Actions action = new Actions ( driver ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; for ( String item : navigableItems ) assertTrue ( driver . findElement ( By . xpath ( \" // a[@title='\" + item + \"']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // a[@title='\" + itemToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='\" + itemToChoose + \"']\" ) ) ) ; try { driver . findElement ( By . xpath ( \" // *[@alt='close']\" ) ) . click ( ) ; } catch ( Exception ignored ) { } for ( String checkbox : checkboxesToSelect ) { element = driver . findElement ( By . id ( checkbox + \"_checkbox\" ) ) ; action . moveToElement ( element ) . click ( ) . perform ( ) ; Thread . sleep ( 2000 ) ; } wait . until ( ExpectedConditions . textToBe ( By . id ( \"jobsCount\" ) , \"0\" ) ) ; element = driver . findElement ( By . linkText ( \"New ▁ Job ▁ Search\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; action . moveToElement ( element ) . click ( ) . perform ( ) ; for ( String checkbox : checkboxesToSelect ) { element = driver . findElement ( By . id ( checkbox + \"_checkbox\" ) ) ; wait . until ( ExpectedConditions . elementSelectionStateToBe ( element , false ) ) ; } } ", "Test Name": "Search page", "Test Description": "FXN36_Verify the functionality to display when there is no search results in job search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Careers' under 'About' section, The page should load with title 'Job Search' and should display 'Our Brands','Life at fox','Internships','Job search' and 'My account' as navigable items, 4. Select 'Job search' option, The page should redirect to the page with titled 'JOB SEARCH'., 5. Use the filter under 'Brands' - 'FOX Sports' as well as select the country 'India', The page should load and display the message '0 Results Found ' and a link ' New Job Search', 6. Click on ' New Job Search' link, The page should get refreshed and the filters selected should be removed"}
{"id": 188, "website": "FoxNews", "code": " void function ( ) { String category = \"About\" ; String pageToChoose = \"Careers\" ; String [ ] navigableItems = new String [ ] { \"Our ▁ Brands\" , \"Life ▁ At ▁ FOX\" , \"Internships\" , \"Job ▁ Search\" , \"My ▁ Account\" } ; String itemToChoose = \"Internships\" ; String newTab ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Actions action = new Actions ( driver ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; for ( String item : navigableItems ) assertTrue ( driver . findElement ( By . xpath ( \" // a[@title='\" + item + \"']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // a[@title='\" + itemToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='\" + itemToChoose + \"']\" ) ) ) ; try { driver . findElement ( By . xpath ( \" // *[@alt='close']\" ) ) . click ( ) ; } catch ( Exception ignored ) { } element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // a[text()='Search ▁ for ▁ Internships']\" ) ) ) ; action . moveToElement ( element ) . click ( ) . perform ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; assertTrue ( Integer . parseInt ( driver . findElement ( By . id ( \"jobsCount\" ) ) . getText ( ) ) >= 1 ) ; assertTrue ( driver . findElement ( By . id ( \"Internships_checkbox\" ) ) . isSelected ( ) ) ; } ", "Test Name": "Search page", "Test Description": "FXN37_Verify the functionality of 'search for internships' in job search page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Careers' under 'About' section, The page should load with title 'Job Search' and should display 'Our Brands','Life at fox','Internships','Job search' and 'My account' as navigable items, 4. Select 'Internships' option, The page should redirect to the page with titled 'INTERNSHIPS', 5. Scroll down to the content of the page, User should find the button - Search for Internships, 6. Click on 'Search for Internships' button, The page should get redirected to 'JOB SEARCH' page and display 1 or more than 1 job search results. Under left filter panel, The checkbox of 'Internships' should be checked"}
{"id": 189, "website": "FoxNews", "code": " void function ( ) { String category = \"About\" ; String pageToChoose = \"Careers\" ; String [ ] navigableItems = new String [ ] { \"Our ▁ Brands\" , \"Life ▁ At ▁ FOX\" , \"Internships\" , \"Job ▁ Search\" , \"My ▁ Account\" } ; String itemToChoose = \"My ▁ Account\" ; String emailAddress = \"qa.tries.123@gmail.com\" ; String password = \"Qa@123456789\" ; String newTab ; driver . close ( ) ; ChromeOptions options = new ChromeOptions ( ) ; options . addArguments ( \"incognito\" ) ; driver = new ChromeDriver ( options ) ; driver . manage ( ) . window ( ) . maximize ( ) ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; try { driver . findElement ( By . xpath ( \" // *[@aria-label='close']\" ) ) . click ( ) ; } catch ( Exception ignored ) { } driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; wait . until ( ExpectedConditions . elementToBeClickable ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; for ( String item : navigableItems ) assertTrue ( driver . findElement ( By . xpath ( \" // a[@title='\" + item + \"']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // a[@title='\" + itemToChoose + \"']\" ) ) . click ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='FOX ▁ Careers ▁ TERMS ▁ OF ▁ USE ▁ AGREEMENTS']\" ) ) ) ; try { driver . findElement ( By . xpath ( \" // *[@alt='close']\" ) ) . click ( ) ; } catch ( Exception ignored ) { } assertTrue ( driver . findElement ( By . xpath ( \" // label[text()='I ▁ have ▁ read ▁ and ▁ understood ▁ the ▁ ']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . linkText ( \"Privacy ▁ Policy\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . name ( \"PrivacyPolicyCheckbox\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // *[@value='Submit']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@data-automation-id='email']\" ) ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@data-automation-id='password']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@data-automation-id='createAccountLink']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h2[text()='Create ▁ Account']\" ) ) ) ; driver . findElement ( By . xpath ( \" // *[@data-automation-id='email']\" ) ) . sendKeys ( emailAddress ) ; driver . findElement ( By . xpath ( \" // *[@data-automation-id='password']\" ) ) . sendKeys ( password ) ; driver . findElement ( By . xpath ( \" // *[@data-automation-id='verifyPassword']\" ) ) . sendKeys ( password ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='Create ▁ Account']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h2 /* [@title='Candidate ▁ Home']\" ) ) ) ; driver . findElement ( By . xpath ( \" // *[text()='\" + emailAddress + \"']\" ) ) . click ( ) ; element = driver . findElement ( By . xpath ( \" // *[@aria-label='Account ▁ Settings']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element = driver . findElement ( By . xpath ( \" // *[@aria-label='Sign ▁ Out']\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h2[text()='Sign ▁ In']\" ) ) ) ; } ", "Test Name": "Search page", "Test Description": "FXN38_Verify user is able to create an account in Fox job careers page", "Steps": "1. Open the browser in incognito mode - Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Careers' under 'About' section, The page should load with title 'Job Search' and should display 'Our Brands','Life at fox','Internships','Job search' and 'My account' as navigable items, 4. Select 'My Account' option, A new tab should be opened and the page should display 'FOX CAREERS TERMS OF USE AGREEMENTS' in its page content with a checkbox with message 'I have read and understood the Privacy Policy', 5. Check the checkbox and click submit, The page should load and display sign-in input fields - Email address and Password, 6. Select Create account link below the password field, Create account page should be displayed, 7. Enter valid email address, password and confirm password inputs and select 'Create Account', The page should be submitted and user should be displayed with 'Candidate Home' as title, 8. Click on the account email id in the topright corner of the page, User should be able to view 'Account settings' and 'Sign out' page, 9. click on 'sign out', The user should view the sign-in page with user logged out"}
{"id": 190, "website": "FoxNews", "code": " void function ( ) { String category = \"About\" ; String pageToChoose = \"Careers\" ; String [ ] navigableItems = new String [ ] { \"Our ▁ Brands\" , \"Life ▁ At ▁ FOX\" , \"Internships\" , \"Job ▁ Search\" , \"My ▁ Account\" } ; String itemToChoose = \"My ▁ Account\" ; String emailAddress = \"qa.tries.123@gmail.com\" ; String password = \"Qa@123456789\" ; String newTab ; String jobsNumString ; int jobsNumInt ; driver . close ( ) ; ChromeOptions options = new ChromeOptions ( ) ; options . addArguments ( \"incognito\" ) ; driver = new ChromeDriver ( options ) ; driver . manage ( ) . window ( ) . maximize ( ) ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 15 ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; try { driver . findElement ( By . xpath ( \" // *[@aria-label='close']\" ) ) . click ( ) ; } catch ( Exception ignored ) { } driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; wait . until ( ExpectedConditions . elementToBeClickable ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[contains(@class, ▁ 'h2') ▁ and ▁ text()='Job ▁ Search']\" ) ) ) ; for ( String item : navigableItems ) assertTrue ( driver . findElement ( By . xpath ( \" // a[@title='\" + item + \"']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // a[@title='\" + itemToChoose + \"']\" ) ) . click ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='FOX ▁ Careers ▁ TERMS ▁ OF ▁ USE ▁ AGREEMENTS']\" ) ) ) ; try { driver . findElement ( By . xpath ( \" // *[@alt='close']\" ) ) . click ( ) ; } catch ( Exception ignored ) { } assertTrue ( driver . findElement ( By . xpath ( \" // label[text()='I ▁ have ▁ read ▁ and ▁ understood ▁ the ▁ ']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . linkText ( \"Privacy ▁ Policy\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . name ( \"PrivacyPolicyCheckbox\" ) ) . click ( ) ; driver . findElement ( By . xpath ( \" // *[@value='Submit']\" ) ) . click ( ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@data-automation-id='email']\" ) ) ) ; element . sendKeys ( emailAddress ) ; element = driver . findElement ( By . xpath ( \" // *[@data-automation-id='password']\" ) ) ; element . sendKeys ( password ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='Sign ▁ In']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='\" + emailAddress + \"']\" ) ) ) ; driver . findElement ( By . xpath ( \" // button[text()='Search ▁ for ▁ Jobs']\" ) ) . click ( ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@aria-label='Search ▁ Results'] // *[contains(text(), ▁ 'Results')]\" ) ) ) ; jobsNumString = element . getText ( ) ; jobsNumInt = Integer . parseInt ( jobsNumString . substring ( 0 , jobsNumString . indexOf ( ' ▁ ' ) ) ) ; assertTrue ( jobsNumInt >= 1 ) ; } ", "Test Name": "Search page", "Test Description": "FXN39_Verify user is able to login to the job careers page", "Steps": "Pre-requiiste: An account credential should already be created in job careers page, 1. Open the browser in incognito mode - Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Careers' under 'About' section, The page should load with title 'Job Search' and should display 'Our Brands','Life at fox','Internships','Job search' and 'My account' as navigable items, 4. Select 'My Account' option, A new tab should be opened and the page should display 'FOX CAREERS TERMS OF USE AGREEMENTS' in its page content with a checkbox with message 'I have read and understood the Privacy Policy', 5. Check the checkbox and click submit, The page should load and display sign-in input fields - Email address and Password, 6. Enter Email address and password in the input fields and submit, The user should be logged in. User should be able to view the account email Id in the top right corner of the page, 7. Click on Search for jobs button, The page should load and display 1 or more than 1 job search results"}
{"id": 191, "website": "FoxNews", "code": " void function ( ) { String category = \"About\" ; String pageToChoose = \"Media ▁ Relations\" ; String [ ] buttons = new String [ ] { \"Home\" , \"Press ▁ Releases\" , \"Media ▁ Contacts\" , \"FAQ\" , \"Fox ▁ Business\" , \"Help ▁ Center\" } ; String buttonToPress = \"Help ▁ Center\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Actions action = new Actions ( driver ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; element = driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) ; action . moveToElement ( element ) . click ( ) . perform ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[text()='Media ▁ Contacts']\" ) ) ) ; for ( String button : buttons ) assertTrue ( driver . findElement ( By . linkText ( button ) ) . isDisplayed ( ) ) ; driver . findElement ( By . linkText ( buttonToPress ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // input[@placeholder='Search']\" ) ) ) ; assertTrue ( driver . findElement ( By . linkText ( \"Submit ▁ a ▁ request\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Search Page", "Test Description": "FXN40_Verify user is able to view different options under Media Relations", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Media Relations' under 'About' section, The page should load with title 'MEDIA CONTACTS' and 'Help Center' button on the page displayed, 4. Click on 'Help Center', The page should load and display the search field on the page. User should also view a link on top right corner of the page titled 'Submit a request'"}
{"id": 192, "website": "FoxNews", "code": " void function ( ) { String [ ] articleCategories = new String [ ] { \"U.S.\" , \"World\" , \"Politics\" , \"Entertainment\" , \"Business\" , \"Lifestyle\" , \"Science\" , \"Tech\" , \"Health\" , \"TV\" , \"About\" , \"Other\" } ; List < String > haveNoLink = Arrays . asList ( \"About\" , \"Other\" ) ; String blueRGB = \"rgba(0, ▁ 51, ▁ 102, ▁ 1)\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; JavascriptExecutor js = ( JavascriptExecutor ) driver ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; js . executeScript ( \"window.scrollTo(0, ▁ document.body.scrollHeight)\" ) ; element = driver . findElement ( By . className ( \"site-footer\" ) ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; assertEquals ( blueRGB , element . getCssValue ( \"background-color\" ) ) ; for ( String category : articleCategories ) { if ( haveNoLink . contains ( category ) ) assertTrue ( driver . findElement ( By . xpath ( \" // footer // h6[text()='\" + category + \"']\" ) ) . isDisplayed ( ) ) ; else assertTrue ( driver . findElement ( By . xpath ( \" // footer // a[text()='\" + category + \"']\" ) ) . isDisplayed ( ) ) ; } } ", "Test Name": "Home Page", "Test Description": "FXN41_Verify different articles categories other than navigation menu present on the home page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view a blue background panel containing following artciles section - U.S., World, Politics, Entertainment, Business, Lifestyle, Science, Tech, Health, TV, About, Other"}
{"id": 193, "website": "FoxNews", "code": " void function ( ) { String [ ] articleCategories = new String [ ] { \"U.S.\" , \"World\" , \"Politics\" , \"Entertainment\" , \"Business\" , \"Lifestyle\" , \"Science\" , \"Tech\" , \"Health\" , \"TV\" , \"About\" , \"Other\" } ; List < String > haveNoLink = Arrays . asList ( \"About\" , \"Other\" ) ; int loopNum = 3 ; String [ ] categoriesToChoose = new String [ ] { \"Health\" , \"Science\" , \"World\" } ; String [ ] articlesToChoose = new String [ ] { \"Coronavirus\" , \"Wild ▁ Nature\" , \"Disasters\" } ; String [ ] titlesToCheck = new String [ ] { \"Coronavirus\" , \"Wild ▁ Nature\" . toUpperCase ( Locale . ROOT ) , \"Disasters\" . toUpperCase ( Locale . ROOT ) } ; String blueRGB = \"rgba(0, ▁ 51, ▁ 102, ▁ 1)\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; JavascriptExecutor js = ( JavascriptExecutor ) driver ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; for ( int i = 0 ; i < loopNum ; i ++ ) { js . executeScript ( \"window.scrollTo(0, ▁ document.body.scrollHeight)\" ) ; element = driver . findElement ( By . className ( \"site-footer\" ) ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; assertEquals ( blueRGB , element . getCssValue ( \"background-color\" ) ) ; for ( String category : articleCategories ) { if ( haveNoLink . contains ( category ) ) assertTrue ( driver . findElement ( By . xpath ( \" // footer // h6[contains(text(), ▁ '\" + category + \"')]\" ) ) . isDisplayed ( ) ) ; else assertTrue ( driver . findElement ( By . xpath ( \" // footer // a[text()='\" + category + \"']\" ) ) . isDisplayed ( ) ) ; } driver . findElement ( By . xpath ( \" // footer // *[@aria-label='\" + categoriesToChoose [ i ] + \" ▁ - ▁ \" + articlesToChoose [ i ] + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[text()='\" + titlesToCheck [ i ] + \"']\" ) ) ) ; } } ", "Test Name": "Home Page", "Test Description": "FXN42_Verify user is able to view different pages from section categories in the home page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view a blue background panel containing following artciles section - U.S., World, Politics, Entertainment, Business, Lifestyle, Science, Tech, Health, TV, About, Other, 3. Select any page under 'Health' category Ex: Coronavirus, The page should load and display the article title 'coronavirus', 4. Scroll down to the bottom of the page, User should be able to view a blue background panel containing following artciles section - U.S., World, Politics, Entertainment, Business, Lifestyle, Science, Tech, Health, TV, About, Other, 5. Select any page under 'Science' category Ex: Wild Nature, The page should load and display the article title 'WILD NATURE', 6. Scroll down to the bottom of the page, User should be able to view a blue background panel containing following artciles section - U.S., World, Politics, Entertainment, Business, Lifestyle, Science, Tech, Health, TV, About, Other, 7. Select any page under 'World' category Ex: Disasters, The page should load and display the article title 'Disasters'"}
{"id": 194, "website": "FoxNews", "code": " void function ( ) throws InterruptedException { String [ ] articleCategories = new String [ ] { \"U.S.\" , \"World\" , \"Politics\" , \"Entertainment\" , \"Business\" , \"Lifestyle\" , \"Science\" , \"Tech\" , \"Health\" , \"TV\" , \"About\" , \"Other\" } ; List < String > haveNoLink = Arrays . asList ( \"About\" , \"Other\" ) ; String categoryToChoose = \"Other\" ; String articleToChoose = \"Newsletters\" ; String titleToCheck = \"Newsletter ▁ Subscriptions\" ; String blueRGB = \"rgba(0, ▁ 51, ▁ 102, ▁ 1)\" ; String emailAddress = \"qa.tries.123@gmail.com\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Actions action = new Actions ( driver ) ; JavascriptExecutor js = ( JavascriptExecutor ) driver ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; js . executeScript ( \"window.scrollTo(0, ▁ document.body.scrollHeight)\" ) ; element = driver . findElement ( By . className ( \"site-footer\" ) ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; assertEquals ( blueRGB , element . getCssValue ( \"background-color\" ) ) ; for ( String category : articleCategories ) { if ( haveNoLink . contains ( category ) ) assertTrue ( driver . findElement ( By . xpath ( \" // footer // h6[contains(text(), ▁ '\" + category + \"')]\" ) ) . isDisplayed ( ) ) ; else assertTrue ( driver . findElement ( By . xpath ( \" // footer // a[text()='\" + category + \"']\" ) ) . isDisplayed ( ) ) ; } driver . findElement ( By . xpath ( \" // footer // *[@aria-label='\" + categoryToChoose + \" ▁ - ▁ \" + articleToChoose + \"']\" ) ) . click ( ) ; Thread . sleep ( 3000 ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[text()='\" + titleToCheck + \"']\" ) ) ) ; element = driver . findElement ( By . xpath ( \" // li[1] // *[@class='button ▁ subscribe'] // a\" ) ) ; action . moveToElement ( element ) . click ( ) . perform ( ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // li[1] // *[@name='email']\" ) ) ) ; assertTrue ( element . isDisplayed ( ) ) ; element . sendKeys ( emailAddress ) ; driver . findElement ( By . xpath ( \" // li[1] // *[@class='button ▁ enter'] // a\" ) ) . click ( ) ; wait . until ( ExpectedConditions . visibilityOfElementLocated ( By . xpath ( \" // li[1] // *[contains(text(), ▁ 'successfully')]\" ) ) ) ; wait . until ( ExpectedConditions . visibilityOfElementLocated ( By . xpath ( \" // li[1] // *[text()='Subscribed']\" ) ) ) ; } ", "Test Name": "Home Page", "Test Description": "FXN43_Verify the functionality of subscribing the Newsletters", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view a blue background panel containing following artciles section - U.S., World, Politics, Entertainment, Business, Lifestyle, Science, Tech, Health, TV, About, Other, 3. Select 'Newsletters' under 'Other' category, The page should load and display the article title 'Newsletter Subscriptions', 4. Click on 'Subscribe' button on first newsletter artcle, User should be able to view a text field to enter an email address, 5. Enter an email address and click 'subscribe', User should receive a toast message - 'You've successfully subscribed to this newsletter!' and should be able to view 'subscribed' term"}
{"id": 195, "website": "FoxNews", "code": " void function ( ) { String category = \"U.S.\" ; String pageToChoose = \"Crime\" ; String blueRGB = \"rgba(0, ▁ 51, ▁ 102, ▁ 1)\" ; String newTab ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; JavascriptExecutor js = ( JavascriptExecutor ) driver ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"menu-more\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // header // *[@class='section-nav']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[text()='\" + pageToChoose . toUpperCase ( Locale . ROOT ) + \"']\" ) ) ) ; driver . navigate ( ) . back ( ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // header // *[@class='section-nav']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . sendKeys ( pageToChoose ) ; driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@class='num-found']\" ) ) ) ; driver . findElements ( By . xpath ( \" // a[text()='category']\" ) ) . get ( 0 ) . click ( ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 1 ] ; driver . switchTo ( ) . window ( newTab ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[text()='\" + pageToChoose . toUpperCase ( Locale . ROOT ) + \"']\" ) ) ) ; newTab = ( String ) driver . getWindowHandles ( ) . toArray ( ) [ 0 ] ; driver . switchTo ( ) . window ( newTab ) ; driver . navigate ( ) . back ( ) ; js . executeScript ( \"window.scrollTo(0, ▁ document.body.scrollHeight)\" ) ; element = driver . findElement ( By . className ( \"site-footer\" ) ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; assertEquals ( blueRGB , element . getCssValue ( \"background-color\" ) ) ; driver . findElement ( By . xpath ( \" // footer // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[text()='\" + pageToChoose . toUpperCase ( Locale . ROOT ) + \"']\" ) ) ) ; } ", "Test Name": "Home Page", "Test Description": "FXN44_Verify user is able to navigate to the same article category from different areas of website", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on 'more' option on navigation items, User should view the section categories panel, 3. Click on 'Crime' page under 'U.S.' section, The page should load with the title displaying 'Crime', 4. Click on browser back option, User should navigate to the home page, 5. Click on search icon, User should view the section categories panel, 6. Type the term to search in search text field Ex: type 'Crime' and click the \"Search\" button, User should get the search results, 7. Click on first search result having 'category' tag, The page should load with the title displaying 'Crime', 8. Click on browser back option, User should navigate to the home page, 9. Scroll down to the bottom of the page, User should view the section categories panel, 10. Click on 'crime' page under 'U.S.' section, The page should load with the title displaying 'Crime'"}
{"id": 196, "website": "FoxNews", "code": " void function ( ) throws InterruptedException { String category = \"Other\" ; String pageToChoose = \"Fox ▁ News ▁ Shop\" ; int myCartCount ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Actions action = new Actions ( driver ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@class='field ▁ search']\" ) ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // a // *[text()='My ▁ Cart']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[text()='Patriotic ▁ Collection']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@class='toolbar-number'][2]\" ) ) ) ; assertTrue ( Integer . parseInt ( driver . findElements ( By . xpath ( \" // *[@class='toolbar-number'][2]\" ) ) . get ( 0 ) . getText ( ) ) > 1 ) ; if ( driver . findElement ( By . className ( \"counter-number\" ) ) . getText ( ) . equals ( \"\" ) ) myCartCount = 0 ; else myCartCount = Integer . parseInt ( driver . findElement ( By . className ( \"counter-number\" ) ) . getText ( ) ) ; element = driver . findElement ( By . xpath ( \" // *[@title='Add ▁ to ▁ Cart']\" ) ) ; action . moveToElement ( element ) . click ( ) . perform ( ) ; Thread . sleep ( 2000 ) ; assertEquals ( myCartCount + 1 , Integer . parseInt ( driver . findElement ( By . className ( \"counter-number\" ) ) . getText ( ) ) ) ; myCartCount ++ ; driver . findElement ( By . xpath ( \" // a // *[text()='My ▁ Cart']\" ) ) . click ( ) ; if ( myCartCount == 1 ) assertTrue ( driver . findElement ( By . xpath ( \" // *[contains(text(), ▁ 'Item ▁ in ▁ Cart')]\" ) ) . isDisplayed ( ) ) ; else assertTrue ( driver . findElement ( By . xpath ( \" // *[contains(text(), ▁ 'Items ▁ in ▁ Cart')]\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Search Page", "Test Description": "FXN45_Verify the Add to cart functionality on foxnews website", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Fox News Shop' under 'Other' section, The page should load with title containing the term 'shop' with a search text field in the left top corner and My Cart option on the right corner of the cart, 4. Click on patriotic collection, User should be able to view more than 1 item in the list, 5. Click on 'Add to cart' on one of the item, The count on My cart should be incremented by 1, 6. Click on 'My cart', The pop-up should display the number of items in the cart Ex: 1 Item in Cart"}
{"id": 197, "website": "FoxNews", "code": " void function ( ) throws InterruptedException { String category = \"Other\" ; String pageToChoose = \"Fox ▁ News ▁ Shop\" ; String totalPrice ; int myCartCount ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Actions action = new Actions ( driver ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . className ( \"js-focus-search\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='search ▁ foxnews.com']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@aria-label='submit ▁ search']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[@class='expandable-nav'] // *[@aria-label='\" + category + \" ▁ - ▁ \" + pageToChoose + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@class='field ▁ search']\" ) ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // a // *[text()='My ▁ Cart']\" ) ) . isDisplayed ( ) ) ; driver . findElement ( By . xpath ( \" // *[text()='Patriotic ▁ Collection']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@class='toolbar-number'][2]\" ) ) ) ; assertTrue ( Integer . parseInt ( driver . findElements ( By . xpath ( \" // *[@class='toolbar-number'][2]\" ) ) . get ( 0 ) . getText ( ) ) > 1 ) ; if ( driver . findElement ( By . className ( \"counter-number\" ) ) . getText ( ) . equals ( \"\" ) ) myCartCount = 0 ; else myCartCount = Integer . parseInt ( driver . findElement ( By . className ( \"counter-number\" ) ) . getText ( ) ) ; element = driver . findElement ( By . xpath ( \" // *[@title='Add ▁ to ▁ Cart']\" ) ) ; action . moveToElement ( element ) . click ( ) . perform ( ) ; Thread . sleep ( 2000 ) ; assertEquals ( myCartCount + 1 , Integer . parseInt ( driver . findElement ( By . className ( \"counter-number\" ) ) . getText ( ) ) ) ; driver . findElement ( By . xpath ( \" // a // *[text()='My ▁ Cart']\" ) ) . click ( ) ; element = driver . findElement ( By . xpath ( \" // *[text()='View ▁ and ▁ Edit ▁ Cart']\" ) ) ; element . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1 // *[text()='Shopping ▁ Cart']\" ) ) ) ; assertEquals ( 1 , driver . findElements ( By . xpath ( \" // *[@class='cart ▁ item']\" ) ) . size ( ) ) ; assertEquals ( 1 , Integer . parseInt ( driver . findElement ( By . xpath ( \" // *[@class='control ▁ qty'] // input\" ) ) . getAttribute ( \"value\" ) ) ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='Order ▁ Total']\" ) ) ) ; Thread . sleep ( 1000 ) ; totalPrice = driver . findElement ( By . xpath ( \" // *[@data-th='Order ▁ Total'] // *[@class='price']\" ) ) . getText ( ) ; element = driver . findElement ( By . xpath ( \" // *[@title='Increase ▁ the ▁ quantity']\" ) ) ; element . click ( ) ; element . click ( ) ; driver . findElement ( By . xpath ( \" // *[text()='Update ▁ Shopping ▁ Cart']\" ) ) . click ( ) ; Thread . sleep ( 3000 ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@data-th='Order ▁ Total'] // *[@class='price']\" ) ) ) ; assertNotEquals ( totalPrice , element . getText ( ) ) ; driver . findElement ( By . xpath ( \" // *[contains(@class, ▁ 'action-delete')]\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[@class='cart-empty'] // *[text()='You ▁ have ▁ no ▁ items ▁ in ▁ your ▁ shopping ▁ cart.']\" ) ) ) ; assertEquals ( \"\" , driver . findElement ( By . className ( \"counter-number\" ) ) . getText ( ) ) ; } ", "Test Name": "Search Page", "Test Description": "FXN46_Verify that functionality of View and Edit purchase on foxnews shop page", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Click on search icon located in top right corner of the page, User should be able to view the search field with search button option, 3. Select 'Fox News Shop' under 'Other' section, The page should load with title containing the term 'shop' with a search text field in the left top corner and My Cart option on the right corner of the cart, 4. Click on patriotic collection, User should be able to view more than 1 item in the list, 5. Click on 'Add to cart' on one of the item, The count on My cart should be incremented by 1, 6. Click on 'My cart', User should view 'View and Edit' cart option, 7. Click on 'View and Edit' button, The page should load the details of the items with the title - 'Shopping Cart'. 1 item should be listed in the page with quantity selected as '1'. Also the total bill on purchase should be displayed in the right panel, 8. Increase the quantity of the item to '3' and click 'Update shopping cart', The page should update and display the total amount on purchase should be updated to new value, 9. Click on Delete icon displayed on the screen, User should be able to view the message 'You have no items in your shopping cart.' and the count on My cart icon should be removed"}
{"id": 198, "website": "FoxNews", "code": " void function ( ) { String linkToClick = \"New ▁ Terms ▁ of ▁ Use\" ; String titleToCheck = \"Fox ▁ News ▁ Network, ▁ LLC ▁ Terms ▁ of ▁ Use ▁ Agreement\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Actions action = new Actions ( driver ) ; JavascriptExecutor js = ( JavascriptExecutor ) driver ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; js . executeScript ( \"window.scrollTo(0, ▁ document.body.scrollHeight)\" ) ; element = driver . findElement ( By . className ( \"site-footer\" ) ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; driver . findElement ( By . xpath ( \" // footer // a[text()='\" + linkToClick + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[text()='\" + titleToCheck + \"']\" ) ) ) ; element = driver . findElement ( By . xpath ( \" // *[text()='I ▁ HAVE ▁ READ ▁ THIS ▁ AGREEMENT ▁ AND ▁ AGREE ▁ TO ▁ ALL ▁ OF ▁ THE ▁ PROVISIONS ▁ CONTAINED ▁ ABOVE.']\" ) ) ; action . moveToElement ( element ) . perform ( ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN47_Verify user Is able to view the Terms of use through the link present in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'New Terms of Use' link, The page should load and display the title 'Fox News Network, LLC Terms of Use Agreement', 4. Scroll down to the end of terms of use statement text, The terms of use must end with the confirmation message - 'I HAVE READ THIS AGREEMENT AND AGREE TO ALL OF THE PROVISIONS CONTAINED ABOVE.'"}
{"id": 199, "website": "FoxNews", "code": " void function ( ) { String linkToClick = \"New ▁ Privacy ▁ Policy\" ; String titleToCheck = \"Privacy ▁ Policy\" ; String [ ] contents = new String [ ] { \"Scope ▁ and ▁ Application\" , \"Collection ▁ of ▁ Information\" , \"Use ▁ and ▁ Disclosure\" , \"Security\" , \"User ▁ Access ▁ and ▁ Control\" , \"Other ▁ Important ▁ Information\" , \"Contact ▁ Us\" , \"California ▁ Consumer ▁ Privacy ▁ Act ▁ Notice\" } ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; JavascriptExecutor js = ( JavascriptExecutor ) driver ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; js . executeScript ( \"window.scrollTo(0, ▁ document.body.scrollHeight)\" ) ; element = driver . findElement ( By . className ( \"site-footer\" ) ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; driver . findElement ( By . xpath ( \" // footer // a[text()='\" + linkToClick + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // h1[text()='\" + titleToCheck + \"']\" ) ) ) ; for ( String content : contents ) assertTrue ( driver . findElement ( By . xpath ( \" // strong[text()='\" + content + \"']\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN48_Verify user Is able to view the Privacy Policy through the link present in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'New Privacy Policy' link, The page should load and display the title 'Privacy Policy' and Table to contents displaying - Scope and Application, Collection of Information, Use and Disclosure, Security, User Access and Control, Other Important Information, Contact Us and California Consumer Privacy Act Notice"}
{"id": 200, "website": "FoxNews", "code": " void function ( ) { String socialNetwork = \"Facebook\" ; String urlToCheck = \"https: // www.facebook.com/FoxNews\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; JavascriptExecutor js = ( JavascriptExecutor ) driver ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; js . executeScript ( \"window.scrollTo(0, ▁ document.body.scrollHeight)\" ) ; element = driver . findElement ( By . className ( \"site-footer\" ) ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; driver . findElement ( By . xpath ( \" // footer // *[@aria-label='\" + socialNetwork + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . urlToBe ( urlToCheck ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN49_Verify user is able to connect to foxnews facebook page through the link provided in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'facebook' icon, The page should load and display the page connecting to URL https://www.facebook.com/FoxNews"}
{"id": 201, "website": "FoxNews", "code": " void function ( ) { String socialNetwork = \"Instagram\" ; String urlToCheck = \"https: // www.instagram.com/foxnews/\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; JavascriptExecutor js = ( JavascriptExecutor ) driver ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; js . executeScript ( \"window.scrollTo(0, ▁ document.body.scrollHeight)\" ) ; element = driver . findElement ( By . className ( \"site-footer\" ) ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; driver . findElement ( By . xpath ( \" // footer // *[@aria-label='\" + socialNetwork + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . urlToBe ( urlToCheck ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN50_Verify user is able to connect to foxnews Instagram page through the link provided in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'Instagram' icon, The page should load and display the page connecting to URL https://www.instagram.com/foxnews/"}
{"id": 202, "website": "FoxNews", "code": " void function ( ) { String socialNetwork = \"Twitter\" ; String urlToCheck = \"https: // twitter.com/foxnews\" ; driver . get ( \"https: // www.foxnews.com/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; JavascriptExecutor js = ( JavascriptExecutor ) driver ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Hot ▁ Topics']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . xpath ( \" // *[@class='subnav-title' ▁ and ▁ text()='Markets']\" ) ) . isDisplayed ( ) ) ; js . executeScript ( \"window.scrollTo(0, ▁ document.body.scrollHeight)\" ) ; element = driver . findElement ( By . className ( \"site-footer\" ) ) ; assertTrue ( ( Boolean ) js . executeScript ( \"var ▁ elem ▁ = ▁ arguments[0], ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ box ▁ = ▁ elem.getBoundingClientRect(), ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cx ▁ = ▁ box.left ▁ + ▁ box.width ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ cy ▁ = ▁ box.top ▁ + ▁ box.height ▁ / ▁ 2, ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ e ▁ = ▁ document.elementFromPoint(cx, ▁ cy); ▁ \" + \"for ▁ (; ▁ e; ▁ e ▁ = ▁ e.parentElement) ▁ { ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ if ▁ (e ▁ === ▁ elem) ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \" ▁ ▁ ▁ ▁ return ▁ true; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"} ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" + \"return ▁ false; ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ ▁ \" , element ) ) ; driver . findElement ( By . xpath ( \" // footer // *[@aria-label='\" + socialNetwork + \"']\" ) ) . click ( ) ; wait . until ( ExpectedConditions . urlToBe ( urlToCheck ) ) ; } ", "Test Name": "Footer", "Test Description": "FXN51_Verify user is able to connect to foxnews twitter page through the link provided in footer", "Steps": "1. Launch the application using url https://www.foxnews.com/, User should land on home page containing 'Hot Topics' on top left end and 'Markets' on top right end of the page just below the navigation menu, 2. Scroll down to the bottom of the page, User should be able to view the footer of the page, 3. Click on 'twitter' icon, The page should load and display the page connecting to URL https://twitter.com/foxnews"}
