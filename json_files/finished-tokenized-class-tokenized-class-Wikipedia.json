{"id": 459, "website": "Wikipedia", "code": " void function ( ) { String path = \"https: // www.wikipedia.org/\" ; driver . get ( path ) ; String logoText = driver . findElement ( By . className ( \"central-textlogo-wrapper\" ) ) . getText ( ) ; assertTrue ( logoText . contains ( \"Wikipedia\" ) ) ; assertTrue ( logoText . contains ( \"The ▁ Free ▁ Encyclopedia\" ) ) ; } ", "Test Name": "Home Page - presence of title and subtitle", "Test Description": "The goal is to verify presence of title and subtitle on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of title and subtitle, On the center of the page WIKIPEDIA, title is displayed, and under it also centered aligned there is a subtitle THE FREE ENCYCLOPEDIA"}
{"id": 460, "website": "Wikipedia", "code": " void function ( ) { String path = \"https: // www.wikipedia.org/\" ; driver . get ( path ) ; String [ ] languagesArray = { \"English\" , \"日本語\" , \"Español\" , \"Deutsch\" , \"Русский\" , \"Français\" , \"中文\" , \"Italiano\" , \"Português\" , \"Polski\" } ; Set < String > languagesList = ImmutableSet . copyOf ( languagesArray ) ; Set < String > languages = driver . findElementsByClassName ( \"central-featured-lang\" ) . stream ( ) . map ( language -> ( ( RemoteWebElement ) language ) . findElementsByXPath ( \". // *\" ) . stream ( ) . filter ( b -> b . getTagName ( ) . equals ( \"strong\" ) ) . findFirst ( ) . get ( ) . getText ( ) ) . collect ( Collectors . toSet ( ) ) ; assertEquals ( languagesList , languages ) ; } ", "Test Name": "Home Page - presence of languages around globe image", "Test Description": "The goal is to verify presence of globe image and languages around it on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of globe image and languages around it, There is a globe image and around it there are 10 languages displayed, 5 on right, and 5 on left of the globe.\nLanguages displayed on the right are:\n- 日本語\n- Deutsch\n- Français\n- Italiano\n- Polski\nLanguages displayed on the left are:\n- English\n- Espanol\n- Русский\n- 中文\n- Português\n\nUnder each language is displayed the number of articles"}
{"id": 461, "website": "Wikipedia", "code": " void function ( ) { String path = \"https: // www.wikipedia.org/\" ; driver . get ( path ) ; WebElement searchInput = driver . findElement ( By . id ( \"search-input\" ) ) ; assertEquals ( searchInput . findElement ( By . id ( \"searchLanguage\" ) ) . getTagName ( ) , \"select\" ) ; List < String > searchLanguage = ( ( RemoteWebElement ) searchInput . findElement ( By . id ( \"searchLanguage\" ) ) ) . findElementsByXPath ( \". // *\" ) . stream ( ) . map ( WebElement :: getText ) . collect ( Collectors . toList ( ) ) ; assertTrue ( searchLanguage . contains ( \"Polski\" ) ) ; } ", "Test Name": "Home Page - presence of search bar", "Test Description": "The goal is to verify presence of search bar and check the language dropdown on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of search bar, The search bar contains a text box, that have inside a dropdown for language selection and a search button(magnifier) under a blue background, Press on the language dropwdown, A list of languages is displayed"}
{"id": 462, "website": "Wikipedia", "code": " void function ( ) throws InterruptedException { String path = \"https: // www.wikipedia.org/\" ; driver . get ( path ) ; driver . findElement ( By . xpath ( \" // span[text()='Read ▁ Wikipedia ▁ in ▁ your ▁ language ▁ ']\" ) ) . click ( ) ; WebDriverWait wait = new WebDriverWait ( driver , 10 ) ; Thread . sleep ( 3000 ) ; WebElement el = wait . until ( presenceOfElementLocated ( By . className ( \"lang-list-content\" ) ) ) ; List < String > headlines = ( ( RemoteWebElement ) el ) . findElementsByClassName ( \"bookshelf\" ) . stream ( ) . map ( headline -> headline . findElement ( By . tagName ( \"bdi\" ) ) . getText ( ) ) . collect ( Collectors . toList ( ) ) ; assertTrue ( headlines . stream ( ) . allMatch ( numberOfArticles -> numberOfArticles . contains ( \"00\" ) ) ) ; } ", "Test Name": "Home Page - presence of  Read Wikipedia in your language button", "Test Description": "The goal is to verify presence of the Read Wikipedia in your language button and the list of languages the gets opened on click on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of READ WIKIPEDIA IN YOUR LANGUAGE button, Button is present and it has an arrow on it, Press on the button, A list of languages is displayed, they are sorted by the number of articles for each language. There are 5 categories:\n- 1 000 000+ articles\n- 100 000+ articles\n- 10 000+ articles\n- 1 000+ articles\n- 100+ articles"}
{"id": 463, "website": "Wikipedia", "code": " void function ( ) { String path = \"https: // www.wikipedia.org/\" ; driver . get ( path ) ; driver . findElement ( By . xpath ( \" // span[text()='Apple ▁ App ▁ Store']\" ) ) ; driver . findElement ( By . xpath ( \" // span[text()='Google ▁ Play ▁ Store']\" ) ) ; } ", "Test Name": "Home Page - presence of Wikipedia app download options", "Test Description": "The goal is to verify presence of a descreption of the Wikipedia app and buttons for download on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of options to download the Wikipedia app, There is a small description of the app with 2 buttons, one for the android app and one for the iOS app"}
{"id": 464, "website": "Wikipedia", "code": " void function ( ) { String [ ] projectNames = { \"- ▁ Commons ▁ - ▁ Freely ▁ usable ▁ photos ▁ & ▁ more\" , \"- ▁ Wikibooks ▁ - ▁ Free ▁ textbooks\" , \"- ▁ Wikiversity ▁ - ▁ Free ▁ course ▁ materials\" , \"- ▁ Wikisource ▁ - ▁ Free ▁ library\" , \"- ▁ Wikivoyage ▁ - ▁ Free ▁ travel ▁ guide\" , \"- ▁ Wikinews ▁ - ▁ Free ▁ news ▁ source\" , \"- ▁ Wikiquote ▁ - ▁ Free ▁ quote ▁ compendium\" , \"- ▁ Wikispecies ▁ - ▁ Free ▁ species ▁ directory\" , \"- ▁ Wiktionary ▁ - ▁ Free ▁ dictionary\" , \"- ▁ Wikidata ▁ - ▁ Free ▁ knowledge ▁ base\" , \"- ▁ MediaWiki ▁ - ▁ Free ▁ & ▁ open ▁ wiki ▁ application\" , \"- ▁ Meta-Wiki ▁ - ▁ Community ▁ coordination ▁ & ▁ documentation\" } ; Set < String > projectNamesList = ImmutableSet . copyOf ( projectNames ) ; WebElement otherProjects = driver . findElementByClassName ( \"other-projects\" ) ; List < String > otherProjectDescriptions = otherProjects . findElements ( By . className ( \"other-project-text\" ) ) . stream ( ) . map ( project -> ( ( RemoteWebElement ) project ) . findElementsByXPath ( \". // *\" ) . stream ( ) . map ( WebElement :: getText ) . collect ( Collectors . joining ( \" ▁ - ▁ \" ) ) ) . map ( projectDescription -> \"- ▁ \" + projectDescription ) . collect ( Collectors . toList ( ) ) ; assertTrue ( otherProjectDescriptions . containsAll ( projectNamesList ) ) ; } ", "Test Name": "Home Page - presence of other Wikipedia projects", "Test Description": "The goal is to verify presence of the links to other wikipedia projects on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of the links to other Wikipedia projects, There are 12 options available, each of them having a small description:\n- Commons - Freely usable photos & more\n- Wikibooks - Free textbooks\n- Wikiversity - Free course materials\n- Wikisource - Free library\n- Wikivoyage - Free travel guide\n- Wikinews - Free news source\n- Wikiquote - Free quote compendium\n- Wikispecies - Free species directory\n- Wiktionary - Free dictionary\n- Wikidata - Free knowledge base\n- MediaWiki - Free & open wiki application\n- Meta-Wiki - Community coordination & documentation"}
{"id": 465, "website": "Wikipedia", "code": " void function ( ) throws InterruptedException { String path = \"https: // www.wikipedia.org/\" ; driver . get ( path ) ; List < WebElement > languages = driver . findElements ( By . className ( \"central-featured-lang\" ) ) ; Optional < WebElement > english = languages . stream ( ) . filter ( language -> language . getAttribute ( \"lang\" ) . equals ( \"en\" ) ) . findFirst ( ) ; assert english . isPresent ( ) ; assertEquals ( english . get ( ) . getAttribute ( \"title\" ) , \"English ▁ — ▁ Wikipedia ▁ — ▁ The ▁ Free ▁ Encyclopedia\" ) ; english . get ( ) . findElement ( By . tagName ( \"a\" ) ) . click ( ) ; Thread . sleep ( 3000 ) ; assertEquals ( driver . getCurrentUrl ( ) , \"https: // en.wikipedia.org/wiki/Main_Page\" ) ; driver . findElement ( By . xpath ( \" // a[text()='Main ▁ page']\" ) ) ; Map < String , List < String > > languagesWithExpectedResults = ImmutableMap . < String , List < String > > builder ( ) . put ( \"es\" , ImmutableList . of ( \"Español ▁ — ▁ Wikipedia ▁ — ▁ La ▁ enciclopedia ▁ libre\" , \"Portada\" ) ) . put ( \"ru\" , ImmutableList . of ( \"Russkiy ▁ — ▁ Википедия ▁ — ▁ Свободная ▁ энциклопедия\" , \"Заглавная\" ) ) . put ( \"zh\" , ImmutableList . of ( \"Zhōngwén ▁ — ▁ 維基百科 ▁ — ▁ 自由的百科全書\" , \"首页\" ) ) . put ( \"pt\" , ImmutableList . of ( \"Português ▁ — ▁ Wikipédia ▁ — ▁ A ▁ enciclopédia ▁ livre\" , \"Página ▁ principal\" ) ) . put ( \"ja\" , ImmutableList . of ( null , \" ▁ メインページ\" ) ) . put ( \"de\" , ImmutableList . of ( \"Deutsch ▁ — ▁ Wikipedia ▁ — ▁ Die ▁ freie ▁ Enzyklopädie\" , \"Hauptseite\" ) ) . build ( ) ; WebElement lang ; for ( Map . Entry < String , List < String > > langEntry : languagesWithExpectedResults . entrySet ( ) ) { driver . get ( path ) ; lang = languages . stream ( ) . filter ( language -> language . getAttribute ( \"lang\" ) . equals ( langEntry . getKey ( ) ) ) . findFirst ( ) . get ( ) ; assertEquals ( lang . getAttribute ( \"title\" ) , langEntry . getValue ( ) . get ( 0 ) ) ; driver . findElement ( By . xpath ( \" // a[text()='\" + langEntry . getValue ( ) . get ( 1 ) + \"']\" ) ) ; } } ", "Test Name": "HomePage - Change Language from around the globe", "Test Description": "The goal is to verify that language can be changed from the options around the globe on the home page", "Preconditions": "Navigate to wikipedia.org, Check that the page was loaded", "Steps": "Hover over English, A small pop-up appears which contains the following text: \"English — Wikipedia — The Free Encyclopedia\", Press on English, User is redirected to the main page and the website in displayed in English. , From the HomePage hover over Español, A small pop-up appears which contains the following text: \"Español — Wikipedia — La enciclopedia libre\", From the HomePage press on Español, User is redirected to the main page and the website in displayed in Spanish.\nCheck the that main page  is now  Portada, From the HomePage hover over Русский, A small pop-up appears which contains the following text: \"Russkiy — Википедия — Свободная энциклопедия\", From the HomePage press on Русский, User is redirected to the main page and the website in displayed in Russian.\nCheck the that main page  is now  Заглавная, From the HomePage hover over 中文, A small pop-up appears which contains the following text: \"Zhōngwén — 維基百科 — 自由的百科全書\", From the HomePage press on 中文, User is redirected to the main page and the website in displayed in Chinese.\nCheck the that main page  is now  首页, From the HomePage hover over Português, A small pop-up appears which contains the following text: \"Português — Wikipédia — A enciclopédia livre\", From the HomePage press on Português, User is redirected to the main page and the website in displayed in Portuguese.\nCheck the that main page  is now  Página principal, From the HomePage press on 日本語, User is redirected to the main page and the website in displayed in Japonese.\nCheck the that main page  is now  メインページ, From the HomePage hover over Deutsch, A small pop-up appears which contains the following text: \"Deutsch — Wikipedia — Die freie Enzyklopädie\", From the HomePage press on Deutsch, User is redirected to the main page and the website in displayed in German.\nCheck the that main page  is now  Hauptseite"}
{"id": 466, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // www.wikipedia.org/\" ) ; element = driver . findElement ( By . className ( \"central-textlogo__image\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; assertEquals ( \"Wikipedia\" , element . getText ( ) ) ; assertEquals ( \"center\" , element . getCssValue ( \"text-align\" ) ) ; element = driver . findElement ( By . xpath ( \" // following-sibling::strong\" ) ) ; assertTrue ( element . isDisplayed ( ) ) ; assertEquals ( \"The ▁ Free ▁ Encyclopedia\" , element . getText ( ) ) ; assertEquals ( \"center\" , element . getCssValue ( \"text-align\" ) ) ; } ", "Test Name": "Home Page - presence of title and subtitle", "Test Description": "The goal is to verify presence of title and subtitle on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of title and subtitle, On the center of the page WIKIPEDIA, title is displayed, and under it also centered aligned there is a subtitle THE FREE ENCYCLOPEDIA"}
{"id": 467, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // www.wikipedia.org/\" ) ; assertTrue ( driver . findElement ( By . className ( \"central-featured-logo\" ) ) . isDisplayed ( ) ) ; element = driver . findElement ( By . className ( \"central-featured-logo\" ) ) ; List < WebElement > languagesElements = driver . findElements ( By . cssSelector ( \".central-featured ▁ > ▁ *\" ) ) ; assertEquals ( 10 , driver . findElements ( By . cssSelector ( \".central-featured ▁ > ▁ *\" ) ) . size ( ) ) ; List < String > languagesNames = new LinkedList < > ( Arrays . asList ( \"日本語\" , \"Deutsch\" , \"Français\" , \"Italiano\" , \"Polski\" , \"English\" , \"Español\" , \"Русский\" , \"中文\" , \"Português\" ) ) ; int countRight = 0 , countLeft = 0 ; for ( WebElement langElement : languagesElements ) { if ( langElement . getLocation ( ) . getX ( ) > element . getLocation ( ) . getX ( ) ) countRight ++ ; else countLeft ++ ; String currentLanguage = langElement . findElement ( By . xpath ( \". // strong\" ) ) . getText ( ) ; languagesNames . remove ( currentLanguage ) ; assertTrue ( langElement . findElement ( By . xpath ( \". // small\" ) ) . isDisplayed ( ) ) ; } assertEquals ( 5 , countRight ) ; assertEquals ( 5 , countLeft ) ; assertEquals ( 0 , languagesNames . size ( ) ) ; } ", "Test Name": "Home Page - presence of languages around globe image", "Test Description": "The goal is to verify presence of globe image and languages around it on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of globe image and languages around it, There is a globe image and around it there are 10 languages displayed, 5 on right, and 5 on left of the globe.\nLanguages displayed on the right are:\n- 日本語\n- Deutsch\n- Français\n- Italiano\n- Polski\nLanguages displayed on the left are:\n- English\n- Espanol\n- Русский\n- 中文\n- Português\n\nUnder each language is displayed the number of articles"}
{"id": 468, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // www.wikipedia.org/\" ) ; assertTrue ( driver . findElement ( By . id ( \"searchInput\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[for='searchLanguage']\" ) ) . isDisplayed ( ) ) ; By buttonLocator = By . cssSelector ( \"[data-jsl10n='search-input-button']\" ) ; assertTrue ( driver . findElement ( buttonLocator ) . isDisplayed ( ) ) ; assertEquals ( \"rgba(51, ▁ 102, ▁ 204, ▁ 1)\" , driver . findElement ( buttonLocator ) . findElement ( By . xpath ( \"..\" ) ) . getCssValue ( \"background-color\" ) ) ; driver . findElement ( By . id ( \"searchLanguage\" ) ) . click ( ) ; assertTrue ( driver . findElement ( By . xpath ( \" // option[text()='Polski']\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Home Page - presence of search bar", "Test Description": "The goal is to verify presence of search bar and check the language dropdown on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of search bar, The search bar contains a text box, that have inside a dropdown for language selection and a search button(magnifier) under a blue background, Press on the language dropwdown, A list of languages is displayed"}
{"id": 469, "website": "Wikipedia", "code": " void function ( ) { WebDriverWait wait = new WebDriverWait ( driver , 2000 ) ; driver . get ( \"https: // www.wikipedia.org/\" ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . xpath ( \" // *[text()='Read ▁ Wikipedia ▁ in ▁ your ▁ language']\" ) ) ) ; assertTrue ( driver . findElement ( By . className ( \"svg-arrow-down-blue\" ) ) . isDisplayed ( ) ) ; element . click ( ) ; element = wait . until ( ExpectedConditions . presenceOfElementLocated ( By . className ( \"lang-list-content\" ) ) ) ; List < WebElement > headers = driver . findElements ( By . cssSelector ( \".lang-list-content ▁ > ▁ h2\" ) ) ; assertEquals ( 5 , headers . size ( ) ) ; } ", "Test Name": "Home Page - presence of  Read Wikipedia in your language button", "Test Description": "The goal is to verify presence of the Read Wikipedia in your language button and the list of languages the gets opened on click on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of READ WIKIPEDIA IN YOUR LANGUAGE button, Button is present and it has an arrow on it, Press on the button, A list of languages is displayed, they are sorted by the number of articles for each language. There are 5 categories:\n- 1 000 000+ articles\n- 100 000+ articles\n- 10 000+ articles\n- 1 000+ articles\n- 100+ articles"}
{"id": 470, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // www.wikipedia.org/\" ) ; By locator = By . className ( \"footer-sidebar-content\" ) ; assertTrue ( driver . findElement ( locator ) . isDisplayed ( ) ) ; String expectedDescriptionText = \"Wikipedia ▁ is ▁ hosted ▁ by ▁ the ▁ Wikimedia ▁ Foundation, ▁ a ▁ non-profit ▁ organization ▁ that ▁ also ▁ hosts ▁ a ▁ range ▁ of ▁ other ▁ projects. \\n \" + \"You ▁ can ▁ support ▁ our ▁ work ▁ with ▁ a ▁ donation.\" ; assertEquals ( expectedDescriptionText , driver . findElement ( locator ) . getText ( ) ) ; } ", "Test Name": "Home Page - presence of Wikipedia description", "Test Description": "The goal is to verify presence of search bar and check the language dropdown on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of Wikipedia description, A small description is displayed: Wikipedia is hosted by the Wikimedia Foundation, a non-profit organization that also hosts a range of other projects.\nYou can support our work with a donation."}
{"id": 471, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // www.wikipedia.org/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 2000 ) ; element = wait . until ( ExpectedConditions . visibilityOfElementLocated ( By . cssSelector ( \"[data-jsl10n='portal.app-links.description']\" ) ) ) ; assertTrue ( element . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[data-jsl10n='portal.app-links.google-store']\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . cssSelector ( \"[data-jsl10n='portal.app-links.apple-store']\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Home Page - presence of Wikipedia app download options", "Test Description": "The goal is to verify presence of a descreption of the Wikipedia app and buttons for download on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of options to download the Wikipedia app, There is a small description of the app with 2 buttons, one for the android app and one for the iOS app"}
{"id": 472, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // www.wikipedia.org/\" ) ; WebDriverWait wait = new WebDriverWait ( driver , 2000 ) ; wait . until ( ExpectedConditions . visibilityOfElementLocated ( By . className ( \"other-project\" ) ) ) ; List < WebElement > projects = driver . findElements ( By . className ( \"other-project\" ) ) ; assertEquals ( 12 , projects . size ( ) ) ; List < String > expectedProjectsDescription = new LinkedList < > ( Arrays . asList ( \"Commons ▁ - ▁ Freely ▁ usable ▁ photos ▁ & ▁ more\" , \"Wikibooks ▁ - ▁ Free ▁ textbooks\" , \"Wikiversity ▁ - ▁ Free ▁ course ▁ materials\" , \"Wikisource ▁ - ▁ Free ▁ library\" , \"Wikivoyage ▁ - ▁ Free ▁ travel ▁ guide\" , \"Wikinews ▁ - ▁ Free ▁ news ▁ source\" , \"Wikiquote ▁ - ▁ Free ▁ quote ▁ compendium\" , \"Wikispecies ▁ - ▁ Free ▁ species ▁ directory\" , \"Wiktionary ▁ - ▁ Free ▁ dictionary\" , \"Wikidata ▁ - ▁ Free ▁ knowledge ▁ base\" , \"MediaWiki ▁ - ▁ Free ▁ & ▁ open ▁ wiki ▁ application\" , \"Meta-Wiki ▁ - ▁ Community ▁ coordination ▁ & ▁ documentation\" ) ) ; List < String > actualProjectsDescription = new LinkedList < > ( ) ; for ( WebElement p : projects ) { String text = p . getText ( ) . replace ( \" \\n \" , \" ▁ - ▁ \" ) ; actualProjectsDescription . add ( text ) ; } assertEquals ( expectedProjectsDescription , actualProjectsDescription ) ; } ", "Test Name": "Home Page - presence of other Wikipedia projects", "Test Description": "The goal is to verify presence of the links to other wikipedia projects on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of the links to other Wikipedia projects, There are 12 options available, each of them having a small description:\n- Commons - Freely usable photos & more\n- Wikibooks - Free textbooks\n- Wikiversity - Free course materials\n- Wikisource - Free library\n- Wikivoyage - Free travel guide\n- Wikinews - Free news source\n- Wikiquote - Free quote compendium\n- Wikispecies - Free species directory\n- Wiktionary - Free dictionary\n- Wikidata - Free knowledge base\n- MediaWiki - Free & open wiki application\n- Meta-Wiki - Community coordination & documentation"}
{"id": 473, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // www.wikipedia.org/\" ) ; element = driver . findElement ( By . cssSelector ( \"[data-jsl10n='license']\" ) ) ; assertTrue ( element . findElement ( By . xpath ( \" // ./a\" ) ) . isDisplayed ( ) ) ; assertEquals ( \"This ▁ page ▁ is ▁ available ▁ under ▁ the ▁ Creative ▁ Commons ▁ Attribution-ShareAlike ▁ License\" , element . getText ( ) ) ; element = driver . findElement ( By . cssSelector ( \"[data-jsl10n='terms']\" ) ) ; assertTrue ( element . findElement ( By . xpath ( \" // ./a\" ) ) . isDisplayed ( ) ) ; assertEquals ( \"Terms ▁ of ▁ Use\" , element . getText ( ) ) ; element = driver . findElement ( By . cssSelector ( \"[data-jsl10n='privacy-policy']\" ) ) ; assertTrue ( element . findElement ( By . xpath ( \" // ./a\" ) ) . isDisplayed ( ) ) ; assertEquals ( \"Privacy ▁ Policy\" , element . getText ( ) ) ; } ", "Test Name": "Home Page - presence of footer", "Test Description": "The goal is to verify presence of footer that contains links on the home page", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check the presence of footer with three links, Footer has 3 URLs:\n- This page is available under the Creative Commons Attribution-ShareAlike License\n- Terms of Use\n- Privacy Policy"}
{"id": 474, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // www.wikipedia.org/\" ) ; assertTrue ( driver . findElement ( By . className ( \"central-textlogo__image\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"central-featured-logo\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"footer\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "HomePage - Page is loaded", "Test Description": "The goal is to verify that the home page is loaded", "Preconditions": "Navigate to wikipedia.org", "Steps": "Check that page is loading, Page is loaded and it contains:\nA title with a description\nA globe that have around some different languages\nA footer with different options"}
{"id": 475, "website": "Wikipedia", "code": " void function ( ) { Map < String , List < String > > languagesInfo = new HashMap < String , List < String > > ( ) { { put ( \"English\" , new ArrayList < > ( Arrays . asList ( \"English ▁ — ▁ Wikipedia ▁ — ▁ The ▁ Free ▁ Encyclopedia\" , \"Main ▁ page\" ) ) ) ; put ( \"Español\" , new ArrayList < > ( Arrays . asList ( \"Español ▁ — ▁ Wikipedia ▁ — ▁ La ▁ enciclopedia ▁ libre\" , \"Portada\" ) ) ) ; put ( \"Русский\" , new ArrayList < > ( Arrays . asList ( \"Russkiy ▁ — ▁ Википедия ▁ — ▁ Свободная ▁ энциклопедия\" , \"Заглавная ▁ страница\" ) ) ) ; put ( \"中文\" , new ArrayList < > ( Arrays . asList ( \"Zhōngwén ▁ — ▁ 維基百科 ▁ — ▁ 自由的百科全書\" , \"首页\" ) ) ) ; put ( \"Português\" , new ArrayList < > ( Arrays . asList ( \"Português ▁ — ▁ Wikipédia ▁ — ▁ A ▁ enciclopédia ▁ livre\" , \"Página ▁ principal\" ) ) ) ; put ( \"日本語\" , new ArrayList < > ( Arrays . asList ( \"Nihongo ▁ — ▁ ウィキペディア ▁ — ▁ フリー百科事典\" , \"メインページ\" ) ) ) ; put ( \"Deutsch\" , new ArrayList < > ( Arrays . asList ( \"Deutsch ▁ — ▁ Wikipedia ▁ — ▁ Die ▁ freie ▁ Enzyklopädie\" , \"Hauptseite\" ) ) ) ; } } ; languagesInfo . forEach ( ( lang , expectedStrings ) -> { driver . get ( \"https: // www.wikipedia.org/\" ) ; element = driver . findElement ( By . xpath ( \" // strong[text()='\" + lang + \"']/..\" ) ) ; Actions actions = new Actions ( driver ) ; actions . moveByOffset ( 0 , 0 ) . moveToElement ( element ) . perform ( ) ; assertEquals ( expectedStrings . get ( 0 ) , element . getAttribute ( \"title\" ) ) ; element . click ( ) ; assertEquals ( expectedStrings . get ( 1 ) , driver . findElement ( By . id ( \"n-mainpage-description\" ) ) . getText ( ) ) ; } ) ; } ", "Test Name": "HomePage - Change Language from around the globe", "Test Description": "The goal is to verify that language can be changed from the options around the globe on the home page", "Preconditions": "Navigate to wikipedia.org, Check that the page was loaded", "Steps": "Hover over English, A small pop-up appears which contains the following text: \"English — Wikipedia — The Free Encyclopedia\", Press on English, User is redirected to the main page and the website in displayed in English. , From the HomePage hover over Español, A small pop-up appears which contains the following text: \"Español — Wikipedia — La enciclopedia libre\", From the HomePage press on Español, User is redirected to the main page and the website in displayed in Spanish.\nCheck the that main page  is now  Portada, From the HomePage hover over Русский, A small pop-up appears which contains the following text: \"Russkiy — Википедия — Свободная энциклопедия\", From the HomePage press on Русский, User is redirected to the main page and the website in displayed in Russian.\nCheck the that main page  is now  Заглавная, From the HomePage hover over 中文, A small pop-up appears which contains the following text: \"Zhōngwén — 維基百科 — 自由的百科全書\", From the HomePage press on 中文, User is redirected to the main page and the website in displayed in Chinese.\nCheck the that main page  is now  首页, From the HomePage hover over Português, A small pop-up appears which contains the following text: \"Português — Wikipédia — A enciclopédia livre\", From the HomePage press on Português, User is redirected to the main page and the website in displayed in Portuguese.\nCheck the that main page  is now  Página principal, From the HomePage press on 日本語, User is redirected to the main page and the website in displayed in Japonese.\nCheck the that main page  is now  メインページ, From the HomePage hover over Deutsch, A small pop-up appears which contains the following text: \"Deutsch — Wikipedia — Die freie Enzyklopädie\", From the HomePage press on Deutsch, User is redirected to the main page and the website in displayed in German.\nCheck the that main page  is now  Hauptseite"}
{"id": 476, "website": "Wikipedia", "code": " void function ( ) { Map < String , String > languagesInfo = new HashMap < String , String > ( ) { { put ( \"Polski\" , \"Strona ▁ główna\" ) ; put ( \"Dansk\" , \"Forside\" ) ; put ( \"Scots\" , \"Main ▁ page\" ) ; put ( \"Akan\" , \"Main ▁ page\" ) ; put ( \"Romani\" , \"Sherutni ▁ patrin\" ) ; } } ; By buttonLocator = By . xpath ( \" // *[text()='Read ▁ Wikipedia ▁ in ▁ your ▁ language']\" ) ; Actions actions = new Actions ( driver ) ; languagesInfo . forEach ( ( language , expectedMainPageText ) -> { driver . get ( \"https: // www.wikipedia.org/\" ) ; assertTrue ( driver . findElement ( By . className ( \"central-textlogo__image\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"central-featured-logo\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . className ( \"footer\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( buttonLocator ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( buttonLocator ) . isEnabled ( ) ) ; actions . moveByOffset ( 0 , 0 ) . moveToElement ( driver . findElement ( buttonLocator ) ) . click ( ) . perform ( ) ; WebDriverWait wait1 = new WebDriverWait ( driver , 2000 ) ; wait1 . until ( ExpectedConditions . visibilityOfElementLocated ( By . id ( \"js-lang-lists\" ) ) ) ; By locator = By . xpath ( \" // a[text()='\" + language + \"']\" ) ; wait1 . until ( ExpectedConditions . visibilityOfElementLocated ( locator ) ) ; element = wait1 . until ( ExpectedConditions . elementToBeClickable ( locator ) ) ; element . click ( ) ; By mainPageLocator = By . id ( \"n-mainpage-description\" ) ; if ( language . equals ( \"Dansk\" ) ) mainPageLocator = By . id ( \"n-mainpage\" ) ; element = wait1 . until ( ExpectedConditions . presenceOfElementLocated ( mainPageLocator ) ) ; assertEquals ( expectedMainPageText , element . getText ( ) ) ; } ) ; } ", "Test Name": "HomePage - Change Language from \"Read Wikipedia in your language\"", "Test Description": "The goal is to verify that language can be changed from the \"Read Wikipedia in your language\" button", "Preconditions": "Navigate to wikipedia.org, Check that the page was loaded", "Steps": "Press on the button, A list of languages is displayed, they are sorted by the number of articles for each language. There are 5 categories:\n- 1 000 000+ articles\n- 100 000+ articles\n- 10 000+ articles\n- 1 000+ articles\n- 100+ articles, From the 1 000 000+ articles category press on Polski, User is redirected to the main page and the website in displayed in Polish.\nCheck the that main page  is now  Strona główna, From the HomePage, from  100 000+ articles category press on Dansk, User is redirected to the main page and the website in displayed in Danish.\nCheck the that main page  is now Forside, From the HomePage, from  10 000+ articles category press on Scots, User is redirected to the main page and the website in displayed in Scottish.\nCheck the that main page  is now Main Page, From the HomePage, from  1 000+ articles articles category press on Akan, User is redirected to the main page and the website in displayed in Akan language.\nCheck the that main page  is now Main Page, From the HomePage, from  100+ articles articles category press on Romani, User is redirected to the main page and the website in displayed in Romani language.\nCheck the that main page  is now Sherutni patrin"}
{"id": 477, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // en.wikipedia.org/wiki/Main_Page\" ) ; assertTrue ( driver . findElement ( By . id ( \"mw-head\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . id ( \"mw-panel\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . id ( \"bodyContent\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Main Page in English - split to main areas", "Test Description": "The goal is to verify the presence of elements in the Main Page displayed in English", "Preconditions": "Navigate to en.wikipedia.org/wiki/Main_Page", "Steps": "Check that the page is split to 3 main areas, There is a top header menu, a left side menu, and a body"}
{"id": 478, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // en.wikipedia.org/wiki/Main_Page\" ) ; assertTrue ( driver . findElement ( By . className ( \"mw-wiki-logo\" ) ) . isDisplayed ( ) ) ; List < WebElement > categoriesElements = driver . findElements ( By . xpath ( \" // *[@id='mw-panel']/nav/h3\" ) ) ; List < String > expectedCategoriesNames = new LinkedList < > ( Arrays . asList ( \"Contribute\" , \"Tools\" , \"Print/export\" , \"In ▁ other ▁ projects\" , \"Languages\" ) ) ; List < String > actualCategoriesNames = new LinkedList < > ( ) ; for ( WebElement element : categoriesElements ) { String categoryName = element . getText ( ) ; if ( ! categoryName . equals ( \"\" ) ) actualCategoriesNames . add ( categoryName ) ; } assertEquals ( expectedCategoriesNames , actualCategoriesNames ) ; } ", "Test Name": "Main Page in English - presence of elements in left side menu", "Test Description": "The goal is to verify the presence of the Wikipedia logo and URL's categories in the left side menu in the Main Page displayed in English", "Preconditions": "Navigate to en.wikipedia.org/wiki/Main_Page", "Steps": "Check the left side menu Wikipedia logo and categories, On the left side menu there is the Wikipedia logo and several links that point to other URLs organized in categories. The categories are:\n- contribute\n- Tools\n- Print/export\n- In other projects\n- Languages"}
{"id": 479, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // en.wikipedia.org/wiki/Main_Page\" ) ; assertTrue ( driver . findElement ( By . id ( \"pt-anonuserpage\" ) ) . isDisplayed ( ) ) ; List < WebElement > linkElements = driver . findElements ( By . xpath ( \" // *[@id='p-personal'] // *[@class='vector-menu-content-list']/li/a\" ) ) ; List < String > expectedLinkNames = new LinkedList < > ( Arrays . asList ( \"Talk\" , \"Contributions\" , \"Create ▁ account\" , \"Log ▁ in\" ) ) ; List < String > actualLinkNames = new LinkedList < > ( ) ; for ( WebElement element : linkElements ) { actualLinkNames . add ( element . getText ( ) ) ; } assertEquals ( expectedLinkNames , actualLinkNames ) ; List < WebElement > tabsElements = driver . findElements ( By . xpath ( \" // *[@id='p-namespaces'] // *[@class='vector-menu-content-list']/li/a\" ) ) ; tabsElements . addAll ( driver . findElements ( By . xpath ( \" // *[@id='p-views'] // *[@class='vector-menu-content-list']/li/a\" ) ) ) ; List < String > expectedTabsNames = new LinkedList < > ( Arrays . asList ( \"Main ▁ Page\" , \"Talk\" , \"Read\" , \"View ▁ source\" , \"View ▁ history\" ) ) ; List < String > actualTabsNames = new LinkedList < > ( ) ; for ( WebElement element : tabsElements ) { actualTabsNames . add ( element . getText ( ) ) ; } assertEquals ( expectedTabsNames , actualTabsNames ) ; assertTrue ( driver . findElement ( By . id ( \"searchInput\" ) ) . isDisplayed ( ) ) ; } ", "Test Name": "Main Page in English - presence of elements in header menu", "Test Description": "The goal is to verify the presence of links in the header menu in the Main Page displayed in English", "Preconditions": "Navigate to en.wikipedia.org/wiki/Main_Page", "Steps": "Check the header menu's links, The header menu contains in the top right corner:\n- info if the user is logged in or not\n- Talk button\n- Contributions button\n- Create Account button\n- Log In button\n And aftet that there are several tabs:\n- Main Page\n- Talk\n- Read\n- View Source\n- View History\n- A search bar"}
{"id": 480, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // en.wikipedia.org/wiki/Main_Page\" ) ; assertTrue ( driver . findElement ( By . id ( \"mp-welcomecount\" ) ) . isDisplayed ( ) ) ; assertTrue ( driver . findElement ( By . id ( \"mp-free\" ) ) . isDisplayed ( ) ) ; By portalsLocator = By . id ( \"mp-portals\" ) ; assertTrue ( driver . findElement ( portalsLocator ) . isDisplayed ( ) ) ; element = driver . findElement ( portalsLocator ) ; List < WebElement > linkElements = element . findElements ( By . xpath ( \". // li/a\" ) ) ; List < String > expectedLinkNames = new LinkedList < > ( Arrays . asList ( \"The ▁ arts\" , \"Biography\" , \"Geography\" , \"History\" , \"Mathematics\" , \"Science\" , \"Society\" , \"Technology\" , \"All ▁ portals\" ) ) ; List < String > actualLinkNames = new LinkedList < > ( ) ; for ( WebElement element : linkElements ) { actualLinkNames . add ( element . getText ( ) ) ; } assertEquals ( expectedLinkNames , actualLinkNames ) ; } ", "Test Name": "Main Page in English - presence of welcome message area", "Test Description": "The goal is to verify the presence of the welcom message area components in the Main Page displayed in English", "Preconditions": "Navigate to en.wikipedia.org/wiki/Main_Page", "Steps": "Check the body's welcome message area components, In the top of the body there is a welcome message area which contains a description and some redirects to:\n- The Arts\n- Biography\n- Geography\n- History\n- Mathematics\n- Science\n- Society\n- Technology\n- All portals"}
{"id": 481, "website": "Wikipedia", "code": " void function ( ) { driver . get ( \"https: // en.wikipedia.org/wiki/Main_Page\" ) ; List < WebElement > headerElements = driver . findElements ( By . className ( \"mw-headline\" ) ) ; List < String > expectedHeaders = new LinkedList < > ( Arrays . asList ( \"From ▁ today's ▁ featured ▁ article\" , \"In ▁ the ▁ news\" , \"Did ▁ you ▁ know ▁ ...\" , \"On ▁ this ▁ day\" , \"From ▁ today's ▁ featured ▁ list\" , \"Today's ▁ featured ▁ picture\" , \"Other ▁ areas ▁ of ▁ Wikipedia\" , \"Wikipedia's ▁ sister ▁ projects\" , \"Wikipedia ▁ languages\" ) ) ; List < String > actualHeaders = new LinkedList < > ( ) ; for ( WebElement element : headerElements ) { actualHeaders . add ( element . getText ( ) ) ; } assertTrue ( actualHeaders . containsAll ( expectedHeaders ) ) ; } ", "Test Name": "Main Page in English - presence of articles' categories", "Test Description": "The goal is to verify the presence of the articles' categories in the Main Page displayed in English", "Preconditions": "Navigate to en.wikipedia.org/wiki/Main_Page", "Steps": "Check the body's articles' categories, The the body has some articles displayed based on some categories:\n- From today's featured article\n- In the news\n- Did you know...\n- On this day\n- From todays featured list\n- Today's featured picture\n- Other areas of wikipedia\n- Wikipedia's sister projects\n- Wikipedia languages"}
