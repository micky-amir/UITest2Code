{"repo_name": "RT_1_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = driver.findElement(By.className(\"trending-bar__link\"));\n         String title = element.getText();\n         element.click();\n \n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), title.toUpperCase(Locale.ROOT)));\n         assertTrue(driver.findElement(By.cssSelector(\".trendingBar\")).isDisplayed());\n         List<WebElement> links = driver.findElements(By.cssSelector(\".trendingEl .trendingLink\"));\n         assertEquals(4, links.size());\n \n         element = links.get(1);\n         title = element.getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), title.toUpperCase(Locale.ROOT)));\n     }\n"}
{"repo_name": "RT_2_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         assertTrue(driver.findElement(By.xpath(\"//h2[text()='New & Upcoming Movies']\")).isDisplayed());\n         element = driver.findElement(By.cssSelector(\"#dynamic-poster-list [data-qa='tile']\"));\n         assertTrue(element.isDisplayed());\n         String title = element.findElement(By.className(\"p--small\")).getText();\n         String score = element.findElement(By.tagName(\"score-pairs\")).getAttribute(\"criticsscore\");\n         element.findElement(By.cssSelector(\"[slot='caption']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), title.toUpperCase(Locale.ROOT)));\n         assertEquals(score, driver.findElement(By.tagName(\"score-board\")).getAttribute(\"tomatometerscore\"));\n     }\n"}
{"repo_name": "RT_3_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         assertTrue(driver.findElement(By.xpath(\"//h2[text()='New & Upcoming Movies']\")).isDisplayed());\n         element = driver.findElement(By.cssSelector(\"#dynamic-poster-list [data-qa='tile']\"));\n         assertTrue(element.isDisplayed());\n         element = element.findElement(By.cssSelector(\"[slot='imageAction']\"));\n         String title = element.getAttribute(\"data-title\");\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".player\")));\n         driver.switchTo().frame(element);\n \n         Thread.sleep(2000);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"tpBottomFloatRegion\")));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         By locator = By.cssSelector(\".tpTimeInfo span\");\n         wait.until(ExpectedConditions.presenceOfElementLocated(locator));\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(locator, \"--:--\")));\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(locator, \"0:00\")));\n \n         driver.switchTo().defaultContent();\n         driver.findElement(By.xpath(\"//a[contains(text(), 'See movie details')]\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), title.toUpperCase(Locale.ROOT)));\n     }\n"}
{"repo_name": "RT_4_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.className(\"search-text\")).sendKeys(\"Encanto\");\n         driver.findElement(By.className(\"search-submit\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Search Results for : \\\"Encanto\\\"\"));\n     }\n"}
{"repo_name": "RT_5_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.className(\"search-text\")).sendKeys(\"Encanto\");\n         element = driver.findElement(By.cssSelector(\"[data-qa='search-results-overlay']\"));\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.attributeToBe(element, \"searchterm\", \"Encanto\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element = driver.findElement(By.cssSelector(\"[data-qa='search-results-link']\"));\n         assertTrue(element.getAttribute(\"href\").contains(\"encanto_2021\"));\n         element.click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-qa='movie-main-column']\")));\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"ENCANTO\"));\n     }\n"}
{"repo_name": "RT_6_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         By activeTitleLocator = By.cssSelector(\"#headliners .headlineItem.active h2\");\n         element = driver.findElement(By.cssSelector(\"button[data-slide='next']\"));\n \n         String text1 = driver.findElement(activeTitleLocator).getText();\n         Thread.sleep(1000);\n         element.click();\n         Thread.sleep(1000);\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.cssSelector(\"#headliners .headlineItem.active h2\"), text1)));\n         String text2 = driver.findElement(activeTitleLocator).getText();\n \n         element.click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(activeTitleLocator, text2)));\n         String text3 = driver.findElement(activeTitleLocator).getText();\n         assertNotEquals(text1, text3);\n \n         driver.findElement(By.cssSelector(\"button[data-slide='prev']\"));\n         wait.until(ExpectedConditions.textToBe(activeTitleLocator, text3));\n     }\n"}
{"repo_name": "RT_7_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         By activeTitleLocator = By.cssSelector(\"#headliners .headlineItem.active h2\");\n \n         String text1 = driver.findElement(activeTitleLocator).getText();\n \n         Thread.sleep(6000);\n         String text2 = driver.findElement(activeTitleLocator).getText();\n         assertNotEquals(text1, text2);\n \n         Thread.sleep(6000);\n         String text3 = driver.findElement(activeTitleLocator).getText();\n         assertNotEquals(text2, text3);\n         assertNotEquals(text1, text3);\n     }\n"}
{"repo_name": "RT_8_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#headliners .headlineItem.active h2\")));\n         String url = element.findElement(By.xpath(\".//ancestor::a\")).getAttribute(\"href\");\n         element.click();\n \n         wait.until(ExpectedConditions.urlToBe(url));\n     }\n"}
{"repo_name": "RT_9_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         List<WebElement> spotlights = driver.findElements(By.cssSelector(\".homepage-spotlight\"));\n         assertEquals(2, spotlights.size());\n \n         element = spotlights.get(1);\n         String title = element.findElement(By.tagName(\"h2\")).getText();\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), title));\n         assertTrue(driver.findElement(By.className(\"articleContentBody\")).isDisplayed());\n     }\n"}
{"repo_name": "RT_10_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='New & Upcoming Movies']/following-sibling::a\"));\n         assertEquals(\"VIEW ALL\", element.getText());\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), \"COMING SOON\"));\n         String stringExpectedNumber = driver.findElement(By.id(\"count-link\")).getText().split(\" \")[1];\n         int expectedNumber = Integer.parseInt(stringExpectedNumber);\n         assertEquals(expectedNumber, driver.findElements(By.className(\"poster_container\")).size());\n         List<WebElement> dates = driver.findElements(By.className(\"release-date\"));\n         assertEquals(expectedNumber, dates.size());\n         for (WebElement date : dates) {\n             assertTrue(date.getText().startsWith(\"Available\"));\n         }\n     }\n"}
{"repo_name": "RT_11_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='New & Upcoming Movies']/following-sibling::a\"));\n         assertEquals(\"VIEW ALL\", element.getText());\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), \"COMING SOON\"));\n         By locator = By.cssSelector(\"btn.view-icon:nth-of-type(2)\");\n         driver.findElement(locator).click();\n         wait.until(ExpectedConditions.attributeContains(locator, \"class\", \"active\"));\n         assertTrue(driver.findElement(By.cssSelector(\".mb-movies\")).getAttribute(\"class\").contains(\"list-view\"));\n     }\n"}
{"repo_name": "RT_12_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='New & Upcoming Movies']/following-sibling::a\"));\n         assertEquals(\"VIEW ALL\", element.getText());\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), \"COMING SOON\"));\n \n         Actions actions = new Actions(driver);\n         element = driver.findElement(By.id(\"tomatometerFilter\"));\n         actions.moveToElement(element).perform();\n         assertNotEquals(\"none\", element.findElement(By.className(\"dropdown-menu\")).getCssValue(\"display\"));\n         assertTrue(element.findElement(By.cssSelector(\".slider\")).isDisplayed());\n         element = element.findElement(By.cssSelector(\".certified-fresh-checkbox input\"));\n         assertTrue(element.isDisplayed());\n         element.click();\n \n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".tomatometerScore\"), \"70% \u2014 100%\"));\n         List<WebElement> scores = driver.findElements(By.cssSelector(\".movie_info .tMeterScore\"));\n         for (WebElement score : scores) {\n             int scoreNumber = Integer.parseInt(score.getText().replace(\"%\", \"\"));\n             assertTrue(scoreNumber >= 70 && scoreNumber <= 100);\n         }\n     }\n"}
{"repo_name": "RT_13_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='New & Upcoming Movies']/following-sibling::a\"));\n         assertEquals(\"VIEW ALL\", element.getText());\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), \"COMING SOON\"));\n \n         Actions actions = new Actions(driver);\n         element = driver.findElement(By.id(\"tomatometerFilter\"));\n         actions.moveToElement(element).perform();\n         assertNotEquals(\"none\", element.findElement(By.className(\"dropdown-menu\")).getCssValue(\"display\"));\n         assertTrue(element.findElement(By.cssSelector(\".slider\")).isDisplayed());\n         assertTrue(element.findElement(By.cssSelector(\".certified-fresh-checkbox\")).isDisplayed());\n \n         element = element.findElement(By.className(\"noUi-origin\"));\n         actions.dragAndDrop(element, driver.findElement(By.cssSelector(\".slider\"))).perform();\n \n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".tomatometerScore\"), \"50% \u2014 100%\"));\n         Thread.sleep(500);\n         List<WebElement> scores = driver.findElements(By.cssSelector(\".movie_info .tMeterScore\"));\n         for (WebElement score : scores) {\n             int scoreNumber = Integer.parseInt(score.getText().replace(\"%\", \"\"));\n             assertTrue(scoreNumber >= 50 && scoreNumber <= 100);\n         }\n     }\n"}
{"repo_name": "RT_14_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='Popular Streaming Movies']//ancestor::section\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.cssSelector(\"[slot='list-items'] li\"));\n         String title = element.findElement(By.cssSelector(\".dynamic-text-list__item-title\")).getText();\n         String score = element.findElement(By.cssSelector(\"[slot='tomatometer-value']\")).getText();\n         element.findElement(By.tagName(\"a\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-qa='movie-main-column']\")));\n         assertEquals(title.toUpperCase(Locale.ROOT), driver.findElement(By.tagName(\"h1\")).getText());\n         assertEquals(score.replace(\"%\", \"\"), driver.findElement(By.tagName(\"score-board\")).getAttribute(\"tomatometerscore\"));\n     }\n"}
{"repo_name": "RT_15_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='Popular Streaming Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element.findElement(By.xpath(\"./..\"))).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n \n         List<WebElement> movies = element.findElements(By.cssSelector(\"[slot='list-items'] li\"));\n         for (WebElement movie : movies) {\n             assertTrue(movie.findElement(By.cssSelector(\".dynamic-text-list__item-title\")).isDisplayed());\n             assertTrue(movie.findElement(By.cssSelector(\"[slot='tomatometer-value']\")).isDisplayed());\n             assertTrue(movie.findElement(By.cssSelector(\"[slot='tomatometer-icon']\")).isDisplayed());\n         }\n     }\n"}
{"repo_name": "RT_16_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='Best Series on Netflix']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element.findElement(By.xpath(\"./..\"))).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n \n         element.findElement(By.xpath(\"./following-sibling::a[@data-track='showmore']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(\n                 By.tagName(\"h1\"), \"BEST NETFLIX SERIES TO WATCH RIGHT NOW\"));\n         String expectedNumberOfSeries = driver.findElement(By.tagName(\"h1\")).getText().split(\" \")[1];\n         List<WebElement> seriesRatingNumber = driver.findElements(By.className(\"countdown-index\"));\n         assertEquals(Integer.parseInt(expectedNumberOfSeries), seriesRatingNumber.size());\n         for (int i = 0; i < seriesRatingNumber.size(); i++) {\n             assertEquals(String.valueOf(seriesRatingNumber.size() - i),\n                     seriesRatingNumber.get(i).getText().replace(\"#\", \"\"));\n         }\n     }\n"}
{"repo_name": "RT_17_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='Best Series on Netflix']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element.findElement(By.xpath(\"./..\"))).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n \n         element = element.findElement(By.xpath(\".//ancestor::section[@id='dynamic-poster-list']//tile-dynamic\"));\n         String title = element.findElement(By.className(\"p--small\")).getText();\n         String score = element.findElement(By.tagName(\"score-pairs\")).getAttribute(\"criticsscore\");\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\"[data-qa='score-panel-series-title']\"), title.toUpperCase(Locale.ROOT)));\n         assertEquals(score, driver.findElement(By.cssSelector(\"[data-qa='tomatometer']\")).getText().replace(\"%\", \"\"));\n         assertEquals(\"Netflix\", driver.findElement(By.cssSelector(\"[data-qa='series-details-network']\")).getText());\n     }\n"}
{"repo_name": "RT_18_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.cssSelector(\"[data-qa='header:link-whats-tmeter']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".about-main\")));\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.id(\"whatisthetomatometer\"))));\n     }\n"}
{"repo_name": "RT_19_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.cssSelector(\"[data-qa='header:link-critics-home']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Who are the Tomatometer-approved critics?\"));\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"critics-home-spotlight\")));\n         assertEquals(4, element.findElements(By.className(\"critics-home-spotlight__li\")).size());\n         element = element.findElement(By.cssSelector(\"[data-qa='critic-social-link']\"));\n         String handle = element.getText();\n         element.click();\n \n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[contains(text(), 'Twitter, Inc.')]\")));\n         assertEquals(handle, driver.findElement(By.cssSelector(\"[data-testid='UserName'] [dir='ltr']\")).getText());\n     }\n"}
{"repo_name": "RT_20_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='Top Headlines']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element.findElement(By.xpath(\"./..\"))).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n         assertEquals(8, driver.findElements(By.className(\"top-headlines-item\")).size());\n         element.findElement(By.xpath(\"./following-sibling::a[text()='View All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), \"TOP HEADLINES\"));\n         assertTrue(driver.findElement(By.className(\"publication-row\")).isDisplayed());\n     }\n"}
{"repo_name": "RT_21_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         List<WebElement> titleElements = element.findElements(By.tagName(\"h3\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"MOVIES IN THEATERS\", \"ON DVD & STREAMING\", \"MORE\", \"CERTIFIED FRESH PICKS\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "RT_22_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         List<WebElement> movieElements = element.findElements(By.xpath(\"//h3[text()='Certified Fresh Picks']/following-sibling::*//a\"));\n         assertEquals(3, movieElements.size());\n         element = movieElements.get(0);\n         String title = element.findElement(By.cssSelector(\".masthead__certified-fresh-pick-text.clamp\")).getText();\n         String score = element.findElement(By.tagName(\"score-icon-critic\")).getAttribute(\"percentage\");\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), title.toUpperCase(Locale.ROOT)));\n         assertEquals(score, driver.findElement(By.tagName(\"score-board\")).getAttribute(\"tomatometerscore\"));\n     }\n"}
{"repo_name": "RT_23_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//a[text()='Top Movies']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP MOVIES\"));\n         List<WebElement> titles = driver.findElements(By.cssSelector(\"h2.panel-heading\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"BEST MOVIES OF 2021\", \"TOP 100 MOVIES BY GENRE\",\n                 \"BEST MOVIES OF ALL TIME\", \"BEST MOVIES OF 2020\", \"MOVIE AWARD WINNERS\", \"BEST MOVIES BY YEAR\",\n                 \"BEST MOVIES OF 2019\", \"TODAY'S TOP RATED MOVIES\", \"MOVIE GUIDES\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titles) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "RT_24_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//a[text()='Top Movies']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP MOVIES\"));\n         element = driver.findElement(By.xpath(\"//*[text()='Best Movies of 2021']\"));\n         assertTrue(element.isDisplayed());\n         element.findElement(By.xpath(\".//ancestor::section//*[text()='View All']/..\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.className(\"panel-heading\"), \"TOP 100 MOVIES OF 2021\"));\n \n         List<WebElement> movieTitles = driver.findElements(By.cssSelector(\"tbody .articleLink\"));\n         assertEquals(100, movieTitles.size());\n         for (WebElement element : movieTitles) {\n             assertTrue(element.getText().endsWith(\"(2021)\"));\n         }\n     }\n"}
{"repo_name": "RT_25_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//a[text()='Top Movies']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP MOVIES\"));\n         element = driver.findElement(By.xpath(\"//*[text()='Best Movies of 2021']\"));\n         assertTrue(element.isDisplayed());\n         element.findElement(By.xpath(\".//ancestor::section//*[text()='View All']/..\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.className(\"panel-heading\"), \"TOP 100 MOVIES OF 2021\"));\n         List<WebElement> movieTitles = driver.findElements(By.cssSelector(\"tbody .articleLink\"));\n         assertEquals(100, movieTitles.size());\n         for (WebElement element : movieTitles) {\n             assertTrue(element.getText().endsWith(\"(2021)\"));\n         }\n \n         driver.findElement(By.cssSelector(\"#top_movies_main .dropdown-toggle\")).click();\n         element = driver.findElement(By.cssSelector(\"ul.dropdown-menu\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         List<WebElement> yearOptions = element.findElements(By.tagName(\"a\"));\n         for (int i = 0; i < yearOptions.size(); i++) {\n             assertEquals(String.valueOf(2021 - i), yearOptions.get(i).getText());\n         }\n \n         yearOptions.get(3).click();\n \n         wait.until(ExpectedConditions.textToBe(By.className(\"panel-heading\"), \"TOP 100 MOVIES OF 2018\"));\n         movieTitles.clear();\n         movieTitles = driver.findElements(By.cssSelector(\"tbody .articleLink\"));\n         assertEquals(100, movieTitles.size());\n         for (WebElement element : movieTitles) {\n             assertTrue(element.getText().endsWith(\"(2018)\"));\n         }\n     }\n"}
{"repo_name": "RT_26_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//a[text()='Top Movies']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP MOVIES\"));\n         element = driver.findElement(By.xpath(\"//*[text()='Best Movies of 2021']\"));\n         assertTrue(element.isDisplayed());\n         element.findElement(By.xpath(\".//ancestor::section//*[text()='View All']/..\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.className(\"panel-heading\"), \"TOP 100 MOVIES OF 2021\"));\n \n         actions.moveToElement(driver.findElement(By.cssSelector(\"[rel='tooltip'].glyphicon\"))).perform();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".tooltip\")));\n         assertEquals(\"Each critic from our discrete list gets one vote, weighted equally. \" +\n                 \"A movie must have 40 or more rated reviews to be considered. \" +\n                 \"The 'Adjusted Score' comes from a weighted formula (Bayesian) that we use that accounts \" +\n                 \"for variation in the number of reviews per movie.\", element.getText());\n         actions.moveToElement(driver.findElement(By.tagName(\"section\"))).perform();\n         wait.until(ExpectedConditions.numberOfElementsToBe(By.cssSelector(\".tooltip\"), 0));\n     }\n"}
{"repo_name": "RT_27_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"BROWSE ALL\"));\n         element = driver.findElement(By.id(\"sort-dropdown\"));\n         actions.moveToElement(element).perform();\n         assertNotEquals(\"none\", element.findElement(By.cssSelector(\".options\")).getCssValue(\"display\"));\n         By locator = By.cssSelector(\"[data-sort-option='Tomatometer']\");\n         element.findElement(locator).click();\n \n         wait.until(ExpectedConditions.attributeContains(locator, \"class\", \"selected\"));\n         List<WebElement> scores = driver.findElements(By.cssSelector(\".movie_info .tMeterScore\"));\n         for (int i = 0; i < scores.size() - 1; i++) {\n             int currentScoreNumber = Integer.parseInt(scores.get(i).getText().replace(\"%\", \"\"));\n             int nextScoreNumber = Integer.parseInt(scores.get(i + 1).getText().replace(\"%\", \"\"));\n             assertTrue(currentScoreNumber >= nextScoreNumber);\n         }\n     }\n"}
{"repo_name": "RT_28_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"BROWSE ALL\"));\n         String stringExpectedNumber;\n         int expectedNumber;\n         for (int i = 0; i < 2; i++) {\n             int iExpected = (i + 1) * 32;\n             if (i == 1) {\n                 driver.findElement(By.xpath(\"//button[text()='Show More']\")).click();\n                 wait.until(ExpectedConditions.textToBePresentInElementLocated(By.id(\"count-link\"), String.valueOf(iExpected)));\n             }\n             stringExpectedNumber = driver.findElement(By.id(\"count-link\")).getText().split(\" \")[1];\n             expectedNumber = Integer.parseInt(stringExpectedNumber);\n             assertEquals(iExpected, expectedNumber);\n             assertEquals(expectedNumber, driver.findElements(By.className(\"poster_container\")).size());\n         }\n     }\n"}
{"repo_name": "RT_29_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"BROWSE ALL\"));\n         By countLocator = By.id(\"count-link\");\n         String originalText = driver.findElement(countLocator).getText();\n         String originalNumberOfResultsText = originalText.substring(originalText.lastIndexOf(' ') + 1);\n \n         element = driver.findElement(By.id(\"genre-dropdown\"));\n         actions.moveToElement(element).perform();\n         assertNotEquals(\"none\", element.findElement(By.cssSelector(\".options\")).getCssValue(\"display\"));\n         actions.moveToElement(element.findElement(By.xpath(\"//*[@id='genre-action']/following-sibling::*[@class='only']\"))).click().perform();\n \n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(countLocator, originalText)));\n         String newText = driver.findElement(countLocator).getText();\n         String newNumberOfResultsText = newText.substring(newText.lastIndexOf(' ') + 1);\n         assertTrue(Integer.parseInt(newNumberOfResultsText) < Integer.parseInt(originalNumberOfResultsText));\n     }\n"}
{"repo_name": "RT_30_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[contains(text(), 'Movies & DVDs')]\")));\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//h2[text()='On Dvd & Streaming']/..\")).click();\n         List<WebElement> titles = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"panel-heading\")));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"NEW ON DVD\", \"UPCOMING DVDS\", \"CERTIFIED FRESH PICK\",\n                 \"WHAT'S HOT ON RT\", \"TOP RENTALS\", \"CRITICS' BUZZ\", \"GALLERIES\", \"NEWS & FEATURES\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titles) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "RT_31_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[contains(text(), 'Movies & DVDs')]\")));\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//h2[text()='On Dvd & Streaming']/..\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//h2[text()='Galleries']\")));\n         driver.findElement(By.cssSelector(\"#picture_galleries .media:nth-child(2) a\")).click();\n \n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"gallery\")));\n         assertTrue(element.findElement(By.tagName(\"h2\")).getText().endsWith(\"PHOTOS\"));\n     }\n"}
{"repo_name": "RT_32_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[contains(text(), 'Movies & DVDs')]\")));\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//h2[text()='On Dvd & Streaming']/..\")).click();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"newondvd\")));\n         assertTrue(element.findElement(By.id(\"movies_carousel\")).isDisplayed());\n \n         element = element.findElement(By.cssSelector(\".slick-active > a\"));\n         String title = element.getAttribute(\"title\");\n         actions.moveToElement(element).perform();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".poster_caption:not([style='display: none;'])\")));\n         assertEquals(title, element.findElement(By.tagName(\"a\")).getText());\n     }\n"}
{"repo_name": "RT_33_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[contains(text(), 'Movies & DVDs')]\")));\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//h2[text()='On Dvd & Streaming']/..\")).click();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"newondvd\")));\n         assertTrue(element.findElement(By.id(\"movies_carousel\")).isDisplayed());\n \n         List<WebElement> currentActives = element.findElements(By.cssSelector(\".slick-active > a\"));\n         element.findElement(By.cssSelector(\"button.slick-next\")).click();\n \n         List<WebElement> newActives = element.findElements(By.cssSelector(\".slick-active > a\"));\n         assertEquals(currentActives.size(), newActives.size());\n         for (int i = 0; i < newActives.size(); i++) {\n             assertNotEquals(currentActives.get(i).getAttribute(\"title\"), newActives.get(i).getAttribute(\"title\"));\n         }\n     }\n"}
{"repo_name": "RT_34_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[contains(text(), 'Movies & DVDs')]\")));\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//h2[text()='On Dvd & Streaming']/..\")).click();\n \n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='More News & Interview ']\")));\n         int halfOfHeight = element.getSize().getHeight() / 2;\n         int offset = halfOfHeight - 3;\n         actions.moveToElement(element).moveByOffset(0, offset).click().perform();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"NEWS & INTERVIEWS\"));\n     }\n"}
{"repo_name": "RT_35_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[contains(text(), 'Movies & DVDs')]\")));\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//h2[text()='On Dvd & Streaming']/..\")).click();\n \n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='More News & Interview ']\")));\n         int halfOfHeight = element.getSize().getHeight() / 2;\n         int offset = halfOfHeight - 3;\n         actions.moveToElement(element).moveByOffset(0, offset).click().perform();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"NEWS & INTERVIEWS\"));\n         List<WebElement> currentTitles = driver.findElements(By.cssSelector(\".article_body .title\"));\n         List<String> currentTitlesText = new ArrayList<>();\n         for (WebElement title : currentTitles) {\n             currentTitlesText.add(title.getText());\n         }\n         driver.findElement(By.xpath(\"//a[text()='Next']\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[text()='Previous']\")));\n         List<WebElement> newTitles = driver.findElements(By.cssSelector(\".article_body .title\"));\n         assertEquals(currentTitlesText.size(), newTitles.size());\n         for (int i = 0; i < currentTitlesText.size(); i++) {\n             assertNotEquals(currentTitlesText.get(i), newTitles.get(i).getText());\n         }\n     }\n"}
{"repo_name": "RT_36_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         driver.findElement(By.xpath(\"//a[text()='Browse All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[contains(text(), 'Movies & DVDs')]\")));\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         driver.findElement(By.xpath(\"//h2[text()='On Dvd & Streaming']/..\")).click();\n \n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='More News & Interview ']\")));\n         int halfOfHeight = element.getSize().getHeight() / 2;\n         int offset = halfOfHeight - 3;\n         actions.moveToElement(element).moveByOffset(0, offset).click().perform();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"NEWS & INTERVIEWS\"));\n         List<WebElement> currentTitles = driver.findElements(By.cssSelector(\".article_body .title\"));\n         List<String> currentTitlesText = new ArrayList<>();\n         for (WebElement title : currentTitles) {\n             currentTitlesText.add(title.getText());\n         }\n \n         element = driver.findElement(By.tagName(\"select\"));\n         element.click();\n         String numberOfPages = element.findElement(By.xpath(\"./..\")).getText();\n         numberOfPages = numberOfPages.substring(numberOfPages.indexOf(\"of\") + 3);\n         int intNumberOfPages = Integer.parseInt(numberOfPages);\n         List<WebElement> optionsElements = element.findElements(By.tagName(\"option\"));\n         assertEquals(intNumberOfPages, optionsElements.size());\n         for (int i = 0; i < intNumberOfPages; i++) {\n             assertEquals(String.valueOf(i + 1), optionsElements.get(i).getText());\n         }\n         optionsElements.get(1).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[text()='Previous']\")));\n         List<WebElement> newTitles = driver.findElements(By.cssSelector(\".article_body .title\"));\n         assertEquals(currentTitlesText.size(), newTitles.size());\n         for (int i = 0; i < currentTitlesText.size(); i++) {\n             assertNotEquals(currentTitlesText.get(i), newTitles.get(i).getText());\n         }\n         assertEquals(\"2\", driver.findElement(By.cssSelector(\"option[selected]\")).getText());\n     }\n"}
{"repo_name": "RT_37_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         List<WebElement> titleElements = element.findElements(By.tagName(\"h3\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"NEW TV TONIGHT\", \"MOST POPULAR TV ON RT\", \"MORE\", \"EPISODIC REVIEWS\", \"CERTIFIED FRESH PICK\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "RT_38_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         element = element.findElement(By.xpath(\"//h3[text()='New TV Tonight']\"));\n         assertTrue(element.isDisplayed());\n         List<WebElement> articleElements = element.findElements(By.xpath(\"./../table//td[1]/a\"));\n         int chosenIndex = 0;\n         String title = \"\", score = \"\";\n         for (int i = 0; i < articleElements.size(); i++) {\n             element = articleElements.get(i).findElement(By.cssSelector(\"score-icon-critic[percentage]\"));\n             assertTrue(element.isDisplayed());\n             String percentageAttribute = element.getAttribute(\"percentage\");\n             if (!percentageAttribute.isEmpty() && title.isEmpty()) {\n                 title = element.findElement(By.xpath(\"./ancestor::tr//a[@data-qa='list-item-link']\")).getText();\n                 score = percentageAttribute;\n                 chosenIndex = i;\n             }\n         }\n         articleElements.get(chosenIndex).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"season-body\")));\n         assertTrue(driver.findElement(By.tagName(\"h1\")).getText().startsWith(title.toUpperCase(Locale.ROOT)));\n         assertEquals(score, driver.findElement(By.cssSelector(\"[data-qa='tomatometer']\")).getText().replace(\"%\", \"\"));\n     }\n"}
{"repo_name": "RT_39_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         element = element.findElement(By.xpath(\"//h3[text()='New TV Tonight']\"));\n         assertTrue(element.isDisplayed());\n         List<WebElement> articleElements = element.findElements(By.xpath(\"./../table//td[1]/a\"));\n         int chosenIndex = 0;\n         String title = \"\";\n         for (int i = 0; i < articleElements.size(); i++) {\n             element = articleElements.get(i).findElement(By.cssSelector(\"score-icon-critic[percentage]\"));\n             assertTrue(element.isDisplayed());\n             String percentageAttribute = element.getAttribute(\"percentage\");\n             if (percentageAttribute.isEmpty() && title.isEmpty()) {\n                 title = element.findElement(By.xpath(\"./ancestor::tr//a[@data-qa='list-item-link']\")).getText();\n                 chosenIndex = i;\n             }\n         }\n         articleElements.get(chosenIndex).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"season-body\")));\n         assertTrue(driver.findElement(By.tagName(\"h1\")).getText().startsWith(title.toUpperCase(Locale.ROOT)));\n         assertEquals(\"Not enough ratings to\\ncalculate a score.\",\n                 driver.findElement(By.cssSelector(\"[data-qa='tomatometer-container'] p\")).getText());\n     }\n"}
{"repo_name": "RT_40_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         element = element.findElement(By.xpath(\"//h3[text()='New TV Tonight']\"));\n         assertTrue(element.isDisplayed());\n         element.findElement(By.xpath(\"./following-sibling::a[text()='View All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"NEW TV TONIGHT\"));\n         assertEquals(\"New TV Tonight\", driver.findElement(By.cssSelector(\"#navigation-column .active\")).getText());\n \n         List<WebElement> scores = driver.findElements(By.cssSelector(\".movie_info .tMeterScore\"));\n         for (int i = 0; i < scores.size() - 1; i++) {\n             int currentScoreNumber = Integer.parseInt(scores.get(i).getText().replace(\"%\", \"\"));\n             int nextScoreNumber = Integer.parseInt(scores.get(i + 1).getText().replace(\"%\", \"\"));\n             assertTrue(currentScoreNumber >= nextScoreNumber);\n         }\n     }\n"}
{"repo_name": "RT_41_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         element = element.findElement(By.xpath(\"//h3[text()='New TV Tonight']\"));\n         assertTrue(element.isDisplayed());\n         element.findElement(By.xpath(\"./following-sibling::a[text()='View All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"NEW TV TONIGHT\"));\n         assertEquals(\"New TV Tonight\", driver.findElement(By.cssSelector(\"#navigation-column .active\")).getText());\n         for (int i = 0; i < 3; i++) {\n             if (i != 0) {\n                 By locator = By.cssSelector(\".view-icon:nth-of-type(\" + (3 - i) + \")\");\n                 driver.findElement(locator).click();\n                 assertTrue(driver.findElement(locator).getAttribute(\"class\").contains(\"active\"));\n                 assertEquals(i == 1, driver.findElement(By.cssSelector(\".mb-movies\")).getAttribute(\"class\").contains(\"list-view\"));\n             }\n             List<WebElement> scores = driver.findElements(By.cssSelector(\".movie_info .tMeterScore\"));\n             for (int j = 0; j < scores.size() - 1; j++) {\n                 int currentScoreNumber = Integer.parseInt(scores.get(j).getText().replace(\"%\", \"\"));\n                 int nextScoreNumber = Integer.parseInt(scores.get(j + 1).getText().replace(\"%\", \"\"));\n                 assertTrue(currentScoreNumber >= nextScoreNumber);\n             }\n         }\n     }\n"}
{"repo_name": "RT_42_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element.findElement(By.xpath(\"//a[text()='Top TV Shows']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP TV SHOWS\"));\n         By locator = By.cssSelector(\".carousel-inner .item.active\");\n         String currentActiveText = driver.findElement(locator).getText();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(locator, currentActiveText)));\n     }\n"}
{"repo_name": "RT_43_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element.findElement(By.xpath(\"//a[text()='Top TV Shows']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP TV SHOWS\"));\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(\n                 By.xpath(\"//*[text()='Popular Shows Available on Streaming']/..\")));\n         List<WebElement> mediaElements = element.findElements(By.className(\"media\"));\n         int countDisplayed = 0;\n         for (WebElement media : mediaElements) {\n             if (media.isDisplayed())\n                 countDisplayed++;\n         }\n         assertEquals(7, countDisplayed);\n         element.findElement(By.xpath(\".//a[contains(text(), 'View All')]\")).click();\n         countDisplayed = 0;\n         for (WebElement media : mediaElements) {\n             if (media.isDisplayed())\n                 countDisplayed++;\n         }\n         assertEquals(16, countDisplayed);\n     }\n"}
{"repo_name": "RT_44_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element.findElement(By.xpath(\"//a[text()='Top TV Shows']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP TV SHOWS\"));\n         driver.findElement(By.xpath(\"//h3[@class='panel-heading' and text()='Premiere Dates']\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TV PREMIERE DATES 2021\"));\n         List<WebElement> datesTitles = driver.findElements(\n                 By.xpath(\"//h2/strong[text()='December']/../following-sibling::p//*[contains(text(), 'Dec.')]\"));\n         for (int i = 0; i < datesTitles.size(); i++) {\n             assertTrue(datesTitles.get(i).getText().endsWith(\"Dec. \" + (i + 1)));\n         }\n     }\n"}
{"repo_name": "RT_45_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element.findElement(By.xpath(\"//a[text()='Top TV Shows']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP TV SHOWS\"));\n         driver.findElement(By.xpath(\"//h3[@class='panel-heading' and text()='Premiere Dates']\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TV PREMIERE DATES 2021\"));\n         driver.findElement(By.xpath(\"//a[text()='December']\")).click();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//h2/strong[text()='December']\"))));\n     }\n"}
{"repo_name": "RT_46_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element.findElement(By.xpath(\"//a[text()='Top TV Shows']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 30);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP TV SHOWS\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//h3[@class='panel-heading' and text()='Premiere Dates']\"))).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TV PREMIERE DATES 2021\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[contains(text(), 'Archive')]/following-sibling::a[text()='January']\"))).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TV PREMIERE DATES 2021 ARCHIVE\"));\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//h2/strong[text()='January']\"))));\n     }\n"}
{"repo_name": "RT_47_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element.findElement(By.xpath(\"//a[text()='Top TV Shows']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TOP TV SHOWS\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//h3[@class='panel-heading' and text()='Premiere Dates']\"))).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TV PREMIERE DATES 2021\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[text()='Renewed & Cancelled']\"))).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"RENEWED AND CANCELLED TV SHOWS 2021\"));\n \n         List<WebElement> links = driver.findElements(By.cssSelector(\".alpha-menu > a\"));\n         assertEquals(\"#\", links.get(0).getText());\n         for (int i = 1; i < links.size(); i++) {\n             assertEquals(String.valueOf((char) (i + 64)), links.get(i).getText());\n         }\n         links.get(7).click();\n \n         element = driver.findElement(By.xpath(\"//*[@name='g']/following-sibling::*\"));\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n         assertEquals(\"youtube-container\", element.findElement(By.xpath(\"./../following-sibling::*\")).getAttribute(\"class\"));\n         List<WebElement> shows = element.findElements(By.xpath(\"./../following-sibling::p[1]/span\"));\n         for (WebElement showIndication : shows) {\n             String indication = showIndication.getText();\n             assertTrue(indication.equals(\"Renewed\") || indication.equals(\"Cancelled\"));\n         }\n \n         element.findElement(By.xpath(\"./../following-sibling::a[text()='Back to Top']\")).click();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.className(\"alpha-menu\"))));\n     }\n"}
{"repo_name": "RT_48_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='TV Shows']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         element = element.findElement(By.xpath(\"//h3[contains(text(), 'Episodic Reviews')]\"));\n         assertTrue(element.isDisplayed());\n         element = element.findElement(By.xpath(\"./following-sibling::*//a\"));\n         String title = element.getText();\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"season-body\")));\n         assertTrue(driver.findElement(By.tagName(\"h1\")).getText().startsWith(title.toUpperCase(Locale.ROOT)));\n \n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//*[@id='desktopEpisodeList']/h2[text()='Episodes']\"))));\n     }\n"}
{"repo_name": "RT_49_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.id(\"podcast-link\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"),\n                 \"\\\"ROTTEN TOMATOES IS WRONG\\\" (A PODCAST FROM ROTTEN TOMATOES)\"));\n         assertTrue(driver.findElement(By.className(\"youtube-container\")).isDisplayed());\n         assertTrue(driver.findElement(By.cssSelector(\"[src*='spotify']\")).isDisplayed());\n         assertTrue(driver.findElement(By.cssSelector(\"[src*='apple']\")).isDisplayed());\n     }\n"}
{"repo_name": "RT_50_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.id(\"podcast-link\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"),\n                 \"\\\"ROTTEN TOMATOES IS WRONG\\\" (A PODCAST FROM ROTTEN TOMATOES)\"));\n         element = driver.findElement(By.cssSelector(\".youtube-container iframe\"));\n         driver.switchTo().frame(element);\n         driver.findElement(By.cssSelector(\".ytp-large-play-button\")).click();\n         By locator = By.className(\"ytp-time-current\");\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(locator, \"\")));\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(locator, \"0:00\")));\n     }\n"}
{"repo_name": "RT_51_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.id(\"podcast-link\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"),\n                 \"\\\"ROTTEN TOMATOES IS WRONG\\\" (A PODCAST FROM ROTTEN TOMATOES)\"));\n         element = driver.findElement(By.cssSelector(\"iframe[src*='spotify']\"));\n         driver.switchTo().frame(element);\n         driver.findElement(By.id(\"play-button\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.attributeToBe(\n                 By.id(\"progress-bar-slider\"), \"style\", \"left: 0%;\")));\n     }\n"}
{"repo_name": "RT_52_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.id(\"podcast-link\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"),\n                 \"\\\"ROTTEN TOMATOES IS WRONG\\\" (A PODCAST FROM ROTTEN TOMATOES)\"));\n \n         driver.findElement(By.linkText(\"On an Apple device? Follow Rotten Tomatoes on Apple News\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"This channel is only available in Apple News.\"));\n     }\n"}
{"repo_name": "RT_53_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.id(\"podcast-link\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"),\n                 \"\\\"ROTTEN TOMATOES IS WRONG\\\" (A PODCAST FROM ROTTEN TOMATOES)\"));\n \n         List<WebElement> episodes = driver.findElements(By.cssSelector(\".articleContentBody ul li\"));\n         for (WebElement episodeLine : episodes) {\n             assertTrue(episodeLine.getText().contains(\"\u201cRotten Tomatoes Is Wrong\u201d\"));\n         }\n         element = episodes.get(3).findElement(By.tagName(\"a\"));\n         String linkText = element.getText().replaceAll(\"[\u201c\u201d]\", \"\\\"\").replaceAll(\"\u2026\", \"...\");\n         element.click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), linkText.toUpperCase(Locale.ROOT)));\n     }\n"}
{"repo_name": "RT_54_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.id(\"podcast-link\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"),\n                 \"\\\"ROTTEN TOMATOES IS WRONG\\\" (A PODCAST FROM ROTTEN TOMATOES)\"));\n         element = driver.findElement(By.xpath(\"//h2[text()='Tag Cloud']\"));\n         assertTrue(element.isDisplayed());\n \n         List<WebElement> words = element.findElements(By.xpath(\"./..//a\"));\n         String expectedStyleSize = element.findElement(By.xpath(\"./..//a[contains(@aria-label, '(1 item)')]\")).getAttribute(\"style\");\n         for (WebElement wordLink : words) {\n             if (wordLink.getAttribute(\"aria-label\").endsWith(\"(1 item)\"))\n                 assertEquals(expectedStyleSize, wordLink.getAttribute(\"style\"));\n         }\n \n         String chosenWord = words.get(1).getText();\n         String chosenWordNumberOfItems = words.get(1).getAttribute(\"aria-label\");\n         chosenWordNumberOfItems = chosenWordNumberOfItems.substring(\n                 chosenWordNumberOfItems.indexOf(\"(\") + 1, chosenWordNumberOfItems.indexOf(\"item\") - 1);\n         words.get(1).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"TAG > \" + chosenWord.toUpperCase(Locale.ROOT)));\n         assertEquals(Integer.parseInt(chosenWordNumberOfItems), driver.findElements(By.cssSelector(\".article_body .newsItem\")).size());\n     }\n"}
{"repo_name": "RT_55_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='News']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n \n         List<WebElement> titleElements = element.findElements(By.tagName(\"h3\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"COLUMNS\", \"BEST AND WORST\", \"GUIDES\", \"RT NEWS\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "RT_56_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='News']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element = element.findElement(By.xpath(\"//h3[text()='Columns']\"));\n         assertTrue(element.isDisplayed());\n \n         List<WebElement> links = element.findElements(By.xpath(\"./following-sibling::*//a\"));\n         assertEquals(18, links.size());\n         String linkText = links.get(0).getText();\n         links.get(0).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), linkText.toUpperCase(Locale.ROOT)));\n         assertTrue(driver.findElement(By.cssSelector(\".article_body .newsItem\")).isDisplayed());\n     }\n"}
{"repo_name": "RT_57_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='News']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element = element.findElement(By.xpath(\"//h3[text()='Best and Worst']\"));\n         assertTrue(element.isDisplayed());\n \n         List<WebElement> links = element.findElements(By.xpath(\"./../following-sibling::*\"));\n         assertEquals(2, links.size());\n         String linkText = \"\";\n         for (WebElement link : links) {\n             linkText = link.getText();\n             assertTrue(linkText.toLowerCase(Locale.ROOT).endsWith(\"ranked worst to best by tomatometer\"));\n         }\n \n         links.get(1).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(linkText.substring(0, linkText.indexOf(\"Ranked\") - 1)));\n \n         List<WebElement> seriesRatingNumber = driver.findElements(By.className(\"countdown-index\"));\n         for (int i = 0; i < seriesRatingNumber.size(); i++) {\n             assertEquals(String.valueOf(seriesRatingNumber.size() - i),\n                     seriesRatingNumber.get(i).getText().replace(\"#\", \"\"));\n         }\n     }\n"}
{"repo_name": "RT_58_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='News']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element = element.findElement(By.xpath(\"//h3[text()='Guides']/../following-sibling::a\"));\n         assertTrue(element.isDisplayed());\n         assertEquals(\"Fall TV\", element.getText());\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Fall TV\"));\n         List<WebElement> navigationElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n                 By.cssSelector(\".hub-subnav-bar a\")));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Home\", \"Premiere Dates\", \"News & Guides\", \"Renewed/Cancelled\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navigationElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         assertTrue(driver.findElement(By.cssSelector(\"[data-ride='carousel']\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"homepage-spotlight1\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"homepage-spotlight2\")).isDisplayed());\n         assertTrue(driver.findElement(By.xpath(\"//h2[text()='More Fall TV']\")).isDisplayed());\n         driver.switchTo().frame(driver.findElement(By.id(\"twitter-widget-0\")));\n         assertEquals(\"Tweets by @RottenTomatoes\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "RT_59_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='News']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element = element.findElement(By.xpath(\"//h3[text()='RT News']\"));\n         assertTrue(element.isDisplayed());\n         element = element.findElement(By.xpath(\"./../following-sibling::a\"));\n         String title = element.getText().replace('\u2019', '\\'');\n         element.click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"article_main_body\")));\n         assertEquals(title.toUpperCase(Locale.ROOT), driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "RT_60_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='News']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element = element.findElement(By.xpath(\"//h3[text()='RT News']\"));\n         assertTrue(element.isDisplayed());\n         element.findElement(By.xpath(\"./following-sibling::a[text()='View All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"NEWS & INTERVIEWS\"));\n         element = driver.findElement(By.xpath\n                 (\"//h2[text()='Featured on RT']/following-sibling::*/a[contains(@class, 'articleLink')]\"));\n         String title = element.findElement(By.xpath(\".//*[contains(@class, 'title')]\")).getText().replace('\u2019', '\\'');\n         element.click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"article_main_body\")));\n         assertEquals(title.toUpperCase(Locale.ROOT), driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "RT_61_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         element = driver.findElement(By.xpath(\"//a[text()='News']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element = element.findElement(By.xpath(\".//following-sibling::*[@role='menu']\"));\n         assertNotEquals(\"none\", element.getCssValue(\"display\"));\n         element = element.findElement(By.xpath(\"//h3[text()='RT News']\"));\n         assertTrue(element.isDisplayed());\n         element.findElement(By.xpath(\"./following-sibling::a[text()='View All']\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"NEWS & INTERVIEWS\"));\n         element = driver.findElement(By.xpath(\"(//h2[text()='Top Headlines']/following-sibling::*//a)[2]\"));\n         String title = element.getText();\n         element.click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"article_main_body\")));\n         assertEquals(title.toUpperCase(Locale.ROOT), driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "RT_62_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.xpath(\"//a[text()='Showtimes']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Movie Showtimes\"));\n \n         driver.findElement(By.id(\"location-picker__change-button\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.attributeContains(\n                 By.id(\"location-picker__form\"), \"class\", \"hide\")));\n         driver.findElement(By.id(\"location-picker__search-field\")).sendKeys(\"New York\");\n         driver.findElement(By.className(\"location-picker__submit-button\")).click();\n         wait.until(ExpectedConditions.textToBe(By.className(\"location-picker__text\"), \"TICKETS & SHOWTIMES NEAR NEW YORK\"));\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\".movie\")));\n     }\n"}
{"repo_name": "RT_63_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.xpath(\"//a[text()='Showtimes']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Movie Showtimes\"));\n \n         driver.findElement(By.id(\"location-picker__change-button\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.attributeContains(\n                 By.id(\"location-picker__form\"), \"class\", \"hide\")));\n         driver.findElement(By.id(\"location-picker__search-field\")).sendKeys(\"10001\");\n         driver.findElement(By.className(\"location-picker__submit-button\")).click();\n         wait.until(ExpectedConditions.textToBe(By.className(\"location-picker__text\"), \"TICKETS & SHOWTIMES NEAR 10001\"));\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\".movie\")));\n     }\n"}
{"repo_name": "RT_64_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.xpath(\"//a[text()='Showtimes']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Movie Showtimes\"));\n \n         element = driver.findElement(By.cssSelector(\"#moviesFilters__container li:nth-of-type(2) .showtimes-filters__checkbox\"));\n         String expectedTitle = element.findElement(By.xpath(\"./..\")).getText();\n         element.click();\n \n         element = wait.until(ExpectedConditions.numberOfElementsToBe(By.className(\"movie_title\"), 1)).get(0);\n         String movieTitle = element.getText();\n         assertTrue(expectedTitle.toUpperCase(Locale.ROOT).startsWith(movieTitle));\n         String tomatometerScore = driver.findElement(By.className(\"tmeterpanel\")).getText().replace(\"%\", \"\");\n         String audienceScore = driver.findElement(By.className(\"audiencepanel\")).getText().replace(\"%\", \"\");\n         element.click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-qa='movie-main-column']\")));\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), movieTitle));\n         element = driver.findElement(By.tagName(\"score-board\"));\n         assertEquals(tomatometerScore, element.getAttribute(\"tomatometerscore\"));\n         assertEquals(audienceScore, element.getAttribute(\"audiencescore\"));\n     }\n"}
{"repo_name": "RT_65_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.xpath(\"//a[text()='Showtimes']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Movie Showtimes\"));\n \n         driver.findElement(By.id(\"moviesFilters__dropdown-button\")).click();\n         assertNotEquals(\"none\", driver.findElement(By.id(\"moviesFilters__dropdown\")).getCssValue(\"display\"));\n         element = driver.findElement(By.className(\"showtimes-filters__additional-item\"));\n         String expectedTitle = element.getText();\n         element.click();\n \n         element = wait.until(ExpectedConditions.numberOfElementsToBe(By.className(\"movie_title\"), 1)).get(0);\n         String movieTitle = element.getText();\n         assertTrue(expectedTitle.toUpperCase(Locale.ROOT).startsWith(movieTitle));\n         String tomatometerScore = driver.findElement(By.className(\"tmeterpanel\")).getText().replace(\"%\", \"\");\n         String audienceScore = driver.findElement(By.className(\"audiencepanel\")).getText().replace(\"%\", \"\");\n         element.click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-qa='movie-main-column']\")));\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), movieTitle));\n         element = driver.findElement(By.tagName(\"score-board\"));\n         assertEquals(tomatometerScore, element.getAttribute(\"tomatometerscore\"));\n         assertEquals(audienceScore, element.getAttribute(\"audiencescore\"));\n     }\n"}
{"repo_name": "RT_66_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.xpath(\"//a[text()='Showtimes']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Movie Showtimes\"));\n \n         driver.findElement(By.id(\"location-picker__change-button\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.attributeContains(\n                 By.id(\"location-picker__form\"), \"class\", \"hide\")));\n         element = driver.findElement(By.id(\"location-picker__search-field\"));\n         element.sendKeys(\"New York\");\n         element.submit();\n         wait.until(ExpectedConditions.textToBe(By.className(\"location-picker__text\"), \"TICKETS & SHOWTIMES NEAR NEW YORK\"));\n \n         element = wait.until(ExpectedConditions.presenceOfElementLocated(\n                 By.cssSelector(\"#theatersList__nearby .showtimes-filters__checkbox\")));\n         String expectedTitle = element.findElement(By.xpath(\"./..\")).getText();\n         element.click();\n \n         element = wait.until(ExpectedConditions.numberOfElementsToBe(By.className(\"theater-header__title\"), 1)).get(0);\n         assertEquals(expectedTitle.toUpperCase(Locale.ROOT), element.getText());\n     }\n"}
{"repo_name": "RT_67_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.xpath(\"//a[text()='Showtimes']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Movie Showtimes\"));\n \n         driver.findElement(By.id(\"location-picker__change-button\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.attributeContains(\n                 By.id(\"location-picker__form\"), \"class\", \"hide\")));\n         element = driver.findElement(By.id(\"location-picker__search-field\"));\n         element.sendKeys(\"New York\");\n         element.submit();\n         wait.until(ExpectedConditions.textToBe(By.className(\"location-picker__text\"), \"TICKETS & SHOWTIMES NEAR NEW YORK\"));\n \n         int originalNumberOfResults = driver.findElements(By.cssSelector(\".movie\")).size();\n         driver.findElement(By.id(\"theatersList__loadMoreButton\")).click();\n \n         wait.until(ExpectedConditions.numberOfElementsToBeMoreThan(By.cssSelector(\".movie\"), originalNumberOfResults));\n     }\n"}
{"repo_name": "RT_68_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.xpath(\"//a[text()='Showtimes']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Movie Showtimes\"));\n \n         driver.findElement(By.id(\"location-picker__change-button\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.attributeContains(\n                 By.id(\"location-picker__form\"), \"class\", \"hide\")));\n         element = driver.findElement(By.id(\"location-picker__search-field\"));\n         element.sendKeys(\"New York\");\n         element.submit();\n         wait.until(ExpectedConditions.textToBe(By.className(\"location-picker__text\"), \"TICKETS & SHOWTIMES NEAR NEW YORK\"));\n \n         By locator = By.cssSelector(\".showtimes-calendar__item.active .day-of-month\");\n         String currentActiveDate = driver.findElement(locator).getText();\n         List<WebElement> originalMoviesElements = driver.findElements(By.cssSelector(\".movie__title\"));\n         List<String> originalTitles = new ArrayList<>();\n         for (WebElement title : originalMoviesElements) {\n             originalTitles.add(title.getText());\n         }\n \n         driver.findElement(By.cssSelector(\".showtimes-calendar__item:not(.active)\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"showtimesList--loading\")));\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(locator, currentActiveDate)));\n \n         List<WebElement> newMoviesElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n                 By.cssSelector(\".movie__title\")));\n         List<String> newTitles = new ArrayList<>();\n         for (WebElement title : newMoviesElements) {\n             newTitles.add(title.getText());\n         }\n         assertNotEquals(originalTitles, newTitles);\n     }\n"}
{"repo_name": "RT_69_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.xpath(\"//a[text()='Showtimes']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Movie Showtimes\"));\n \n         By locator = By.cssSelector(\".showtimes-calendar .showtimes-calendar__item.slick-active .day-of-month\");\n         List<WebElement> originalDates = driver.findElements(locator);\n         List<String> originalDatesText = new ArrayList<>();\n         for (WebElement date : originalDates) {\n             originalDatesText.add(date.getText());\n         }\n \n         driver.findElement(By.cssSelector(\"[data-qa='carousel-right-btn']\")).click();\n \n         List<WebElement> newDates = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(locator));\n         List<String> newDatesText = new ArrayList<>();\n         for (WebElement title : newDates) {\n             newDatesText.add(title.getText());\n         }\n \n         for (int i = 0; i < newDatesText.size() - 1; i++) {\n             assertEquals(originalDatesText.get(i + 1), newDatesText.get(i));\n         }\n         String[] originalFinalDateArr = originalDatesText.get(6).split(\" \");\n         String originalFinalDateMonth = originalFinalDateArr[0];\n         int originalFinalDateDay = Integer.parseInt(originalFinalDateArr[1]);\n         assertEquals(originalFinalDateMonth + \" \" + (originalFinalDateDay + 1), newDatesText.get(6));\n     }\n"}
{"repo_name": "RT_70_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.xpath(\"//a[text()='Showtimes']\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.titleContains(\"Movie Showtimes\"));\n \n         driver.findElement(By.id(\"location-picker__change-button\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.attributeContains(\n                 By.id(\"location-picker__form\"), \"class\", \"hide\")));\n         element = driver.findElement(By.id(\"location-picker__search-field\"));\n         element.sendKeys(\"New York\");\n         element.submit();\n         wait.until(ExpectedConditions.textToBe(By.className(\"location-picker__text\"), \"TICKETS & SHOWTIMES NEAR NEW YORK\"));\n \n         String currentActiveDate = driver.findElement(By.cssSelector(\n                 \".showtimes-calendar__item.active .day-of-month\")).getText();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".movie\")));\n         String title = element.findElement(By.className(\"movie__title\")).getText();\n         element = element.findElement(By.cssSelector(\".btn-showtime--active\"));\n         String time = element.getText().toUpperCase(Locale.ROOT);\n         element.click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Buy Tickets\"));\n         String actualTitle = driver.findElement(By.cssSelector(\"[data-test='movie-title']\")).getText();\n         assertEquals(title, actualTitle.substring(0, actualTitle.indexOf(\"(\") - 1));\n         String dayDateTimeLine = driver.findElement(By.cssSelector(\"[data-test='show-date-time']\")).getText();\n         String dateAndTime = dayDateTimeLine.substring(dayDateTimeLine.indexOf(\",\") + 2).toUpperCase(Locale.ROOT);\n         dateAndTime = dateAndTime.substring(0, dateAndTime.length() - 3) + dateAndTime.substring(dateAndTime.length() - 2);\n         assertEquals(currentActiveDate + \" AT \" + time, dateAndTime);\n     }\n"}
{"repo_name": "RT_71_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.id(\"header-facebook-social-link\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n \n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.attributeToBe(By.tagName(\"html\"), \"id\", \"facebook\"));\n         assertEquals(\"Rotten Tomatoes\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "RT_72_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.id(\"header-snapchat-social-link\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n \n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.titleIs(\"Snapchat\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='rottentomatoes']\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[alt='Snapcode']\")));\n     }\n"}
{"repo_name": "RT_73_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/RottenTomatoes.java", "content": "    public void function() {\n         driver.get(\"https://www.rottentomatoes.com/\");\n         driver.findElement(By.id(\"header-youtube-social-link\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n \n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.tagName(\"yt-icon\")));\n         assertEquals(\"Rotten Tomatoes\", driver.findElement(By.cssSelector(\".style-scope.ytd-channel-name\")).getText());\n     }\n"}
