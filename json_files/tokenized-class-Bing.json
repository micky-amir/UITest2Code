{"repo_name": "BING01_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING01_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n \n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\"h1 > *\"), \"aria-label\", \"Bing\"));\n         assertTrue(driver.findElement(By.id(\"images\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"video\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"shopping\")).isDisplayed());\n         element = driver.findElement(By.cssSelector(\".vs img\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n     }\n"}
{"repo_name": "BING02_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING02_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\"h1 > *\"), \"aria-label\", \"Bing\"));\n         assertTrue(driver.findElement(By.id(\"images\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"video\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"shopping\")).isDisplayed());\n         for (int i = 0; i < 2; i++) {\n             driver.findElement(locator).click();\n             wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n             wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Customize your homepage']\")));\n             wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Show menu bar']\")));\n             locator = By.xpath(\"//*[text()='Show menu bar']//following-sibling::*\");\n             assertTrue(driver.findElement(locator).getAttribute(\"class\").contains(\"toggle_ctrl\"));\n             wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n             assertEquals(\"problem in\" + i, i != 0, driver.findElement(By.xpath(\"//*[text()='Show menu bar']//following-sibling::*//*\"))\n                     .getAttribute(\"class\").contains(\"toggle_on\"));\n             locator = By.cssSelector(\"[aria-label='Settings and quick links']\");\n             driver.findElement(locator).click();\n             wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n             assertEquals(i, driver.findElements(By.id(\"images\")).size());\n             assertTrue(driver.findElements(By.id(\"video\")).size() >= i);\n             assertTrue(driver.findElements(By.id(\"shopping\")).size() >= i);\n         }\n     }\n"}
{"repo_name": "BING03_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING03_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\"h1 > *\"), \"aria-label\", \"Bing\"));\n         assertTrue(driver.findElement(By.id(\"images\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"video\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"shopping\")).isDisplayed());\n         for (int i = 0; i < 2; i++) {\n             driver.findElement(locator).click();\n             wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n             wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Customize your homepage']\")));\n             wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Show news and interests']\")));\n             locator = By.xpath(\"//*[text()='Show news and interests']//following-sibling::*\");\n             assertTrue(driver.findElement(locator).getAttribute(\"class\").contains(\"toggle_ctrl\"));\n             wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n             assertEquals(\"problem in\" + i, i != 0, driver.findElement(By.xpath(\"//*[text()='Show news and interests']//following-sibling::*//*\"))\n                     .getAttribute(\"class\").contains(\"toggle_on\"));\n             locator = By.cssSelector(\"[aria-label='Settings and quick links']\");\n             driver.findElement(locator).click();\n             wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n             assertEquals(i != 0, ((JavascriptExecutor) driver).executeScript(\n                     \"var elem = arguments[0],                 \" +\n                             \"  box = elem.getBoundingClientRect(),    \" +\n                             \"  cx = box.left + box.width / 2,         \" +\n                             \"  cy = box.top + box.height / 2,         \" +\n                             \"  e = document.elementFromPoint(cx, cy); \" +\n                             \"for (; e; e = e.parentElement) {         \" +\n                             \"  if (e === elem)                        \" +\n                             \"    return true;                         \" +\n                             \"}                                        \" +\n                             \"return false;                            \"\n                     , driver.findElement(By.cssSelector(\".vs img\"))));\n         }\n     }\n"}
{"repo_name": "BING04_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING04_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\"h1 > *\"), \"aria-label\", \"Bing\"));\n         assertTrue(driver.findElement(By.id(\"images\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"video\")).isDisplayed());\n         assertTrue(driver.findElement(By.id(\"shopping\")).isDisplayed());\n         for (int i = 0; i < 2; i++) {\n             driver.findElement(locator).click();\n             wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n             wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Customize your homepage']\")));\n             wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Show homepage image']\")));\n             locator = By.xpath(\"//*[text()='Show homepage image']//following-sibling::*\");\n             assertTrue(driver.findElement(locator).getAttribute(\"class\").contains(\"toggle_ctrl\"));\n             wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n             assertEquals(\"problem in\" + i, i != 0, driver.findElement(By.xpath(\"//*[text()='Show homepage image']//following-sibling::*//*\"))\n                     .getAttribute(\"class\").contains(\"toggle_on\"));\n             locator = By.cssSelector(\"[aria-label='Settings and quick links']\");\n             driver.findElement(locator).click();\n             wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n             assertEquals(i == 0, driver.findElement(By.cssSelector(\".hp_body\"))\n                     .getAttribute(\"class\").contains(\"no_image\"));\n         }\n     }\n"}
{"repo_name": "BING05_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING05_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         String url = driver.getCurrentUrl();\n         driver.navigate().back();\n         assertTrue(driver.getCurrentUrl().contains(\"https://www.bing.com/\") && !driver.getCurrentUrl().equals(url));\n     }\n"}
{"repo_name": "BING06_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING06_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(1)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//*[contains(text(), 'English')]//preceding-sibling::a\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".musCard .icon_text\")));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.className(\"musCardCont\"))));\n         assertTrue(driver.findElement(By.cssSelector(\"[aria-label='Share to Facebook']\")).isDisplayed());\n         assertTrue(driver.findElement(By.cssSelector(\"[aria-label='Share to Twitter']\")).isDisplayed());\n         element = driver.findElement(By.cssSelector(\".share .downloadLink\"));\n         assertTrue(element.isDisplayed());\n         actions.moveToElement(element).perform();\n         assertEquals(\"Download this image. Use of this image is restricted to wallpaper only.\", element.getAttribute(\"title\"));\n     }\n"}
{"repo_name": "BING07_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING07_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".musCard .icon_text\")));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.className(\"musCardCont\"))));\n         assertTrue(driver.findElement(By.cssSelector(\"[aria-label='Share to Facebook']\")).isDisplayed());\n         assertTrue(driver.findElement(By.cssSelector(\"[aria-label='Share to Twitter']\")).isDisplayed());\n         element = driver.findElement(By.cssSelector(\".musCardCont .title\"));\n         assertTrue(element.isDisplayed());\n         element.click();\n \n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertTrue(actualTitles.containsAll(expectedTitles));\n     }\n"}
{"repo_name": "BING08_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING08_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         element = driver.findElement(By.id(\"hbsettings\"));\n         assertTrue(element.isDisplayed());\n         element.click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         element = driver.findElement(By.cssSelector(\"#hbsettree > a[role='menuitem']\"));\n         assertTrue(element.isDisplayed());\n         element.click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@for='setlang']\")));\n         driver.findElement(By.xpath(\"//*[contains(text(), 'Fran\u00e7ais')]//preceding-sibling::a\")).click();\n         wait.until(ExpectedConditions.textToBe(By.id(\"id_s\"), \"Connexion\"));\n         driver.navigate().back();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@for='setlang']\")));\n         driver.findElement(By.xpath(\"//*[contains(text(), 'English')]//preceding-sibling::a\")).click();\n         wait.until(ExpectedConditions.textToBe(By.id(\"id_s\"), \"Sign in\"));\n     }\n"}
{"repo_name": "BING09_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING09_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         driver.findElement(By.className(\"b_searchboxSubmit\")).click();\n         wait.until(ExpectedConditions.numberOfElementsToBe(By.xpath(\"//h2[text()='Trending on Bing']\"), 0));\n     }\n"}
{"repo_name": "BING10_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING10_Tamar() throws InterruptedException {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n \n         driver.findElement(By.className(\"b_searchboxSubmit\")).click();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"sb_count\")));\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"a[aria-label='Filtered by Any time']\")));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).click().perform();\n         actions.moveToElement(element).click().perform();\n         wait.until(ExpectedConditions.attributeContains(By.cssSelector(\"[aria-label='Filtered by Any time']\"), \"class\", \"b_selected\"));\n \n         expectedTitles.clear();\n         actualTitles.clear();\n         Thread.sleep(3000);\n         List<WebElement> optionElements = wait.until(ExpectedConditions.numberOfElementsToBe(\n                 By.cssSelector(\"#ftrD_Any_time > a\"), 5));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"All\", \"Past 24 hours\", \"Past week\", \"Past month\", \"Past year\"));\n         for (WebElement element : optionElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\"#CustomRangeFilter span\"), \"Custom range\"));\n         String originalText = driver.findElement(By.className(\"sb_count\")).getText();\n         String originalCount = originalText.split(\" \")[0];\n         optionElements.get(2).click();\n \n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.className(\"sb_count\"), originalText)));\n         String newCount = driver.findElement(By.className(\"sb_count\")).getText().split(\" \")[0];\n         assertTrue(Integer.parseInt(originalCount.replace(\",\", \"\")) >\n                 Integer.parseInt(newCount.replace(\",\", \"\")));\n     }\n"}
{"repo_name": "BING11_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING11_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(1).click();\n \n         expectedTitles.clear();\n         actualTitles.clear();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\".image.right\")));\n         List<WebElement> optionElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"a.ntext\")));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"Top stories\", \"Sports\", \"U.S.\", \"Local\", \"World\", \"Science\",\n                 \"Technology\", \"Entertainment\", \"Politics\", \"Business\"));\n         for (WebElement element : optionElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "BING12_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING12_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(1).click();\n \n         expectedTitles.clear();\n         actualTitles.clear();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\".image.right\")));\n         List<WebElement> optionElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"a.ntext\")));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"Top stories\", \"Sports\", \"U.S.\", \"Local\", \"World\", \"Science\",\n                 \"Technology\", \"Entertainment\", \"Politics\", \"Business\"));\n         for (WebElement element : optionElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n \n         optionElements.get(4).click();\n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\".b_searchbox\"), \"value\", \"World\"));\n         assertTrue(driver.getTitle().contains(\"World\"));\n         driver.findElement(By.xpath(\"//a[text()='Africa']\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\".b_searchbox\"), \"value\", \"Africa\"));\n         assertTrue(driver.getTitle().contains(\"Africa\"));\n     }\n"}
{"repo_name": "BING13_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING13_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(2).click();\n \n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"imgpt\"))).get(0).click();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"OverlayIFrame\")));\n         driver.switchTo().frame(element);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".mainImage.current\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Visual Search']\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Share']\")).isDisplayed());\n         driver.findElement(By.cssSelector(\".mainImage .imgContainer img\")).click();\n         while (true) {\n             if (driver.getWindowHandles().size() != 1) break;\n         }\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         assertTrue(driver.findElement(By.tagName(\"img\")).isDisplayed());\n     }\n"}
{"repo_name": "BING14_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING14_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(2).click();\n \n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"imgpt\"))).get(0).click();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"OverlayIFrame\")));\n         driver.switchTo().frame(element);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".mainImage.current\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Visual Search']\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Share']\"))).click();\n         wait.until(ExpectedConditions.attributeContains(By.cssSelector(\"#shdlg[role='dialog']\"), \"style\", \"display: block;\"));\n         assertTrue(driver.findElement(By.cssSelector(\"[title='Share on Facebook']\")).isDisplayed());\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"shdlg-close\"))).click();\n         wait.until(ExpectedConditions.attributeContains(By.cssSelector(\"#shdlg[role='dialog']\"), \"style\", \"display: none;\"));\n     }\n"}
{"repo_name": "BING15_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING15_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(2).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@id='fltIdtCon']//*[contains(text(), 'SafeSearch')]\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@id='fltIdtCon']//*[contains(text(), 'Page titles')]\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@id='fltIdtCon']//*[contains(text(), 'Filter')]\")));\n         element = driver.findElement(By.id(\"ftr_ss_d\"));\n         element.findElement(By.xpath(\".//preceding-sibling::*\")).click();\n         assertTrue(element.getText().contains(\"Strict\"));\n         element = driver.findElement(By.id(\"ftr_ulo_d\"));\n         element.findElement(By.xpath(\".//preceding-sibling::*\")).click();\n         assertTrue(element.getText().contains(\"Show\"));\n \n         locator = By.cssSelector(\"[title='Show or hide filters']\");\n         driver.findElement(locator).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> navFilterElements = driver.findElements(\n                 By.cssSelector(\"[aria-label='Search results filters'] [role='button'] > span\"));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"Image size\", \"Color\", \"Type\", \"Layout\", \"People\", \"Date\", \"License\"));\n         for (WebElement element : navFilterElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         List<String> expectedDropdownOptions = new ArrayList<>(Arrays.asList(\"Small\", \"Color only\", \"Clipart\", \"Square\", \"Just faces\", \"Public domain\"));\n         navFilterElements.remove(5);\n         for (int i = 0; i < navFilterElements.size(); i++) {\n             element = navFilterElements.get(i);\n             element.click();\n             wait.until(ExpectedConditions.presenceOfNestedElementLocatedBy(element, By.xpath(\".//ancestor::li//div//*[contains(text(), '\"\n                     + expectedDropdownOptions.get(i) + \"')]\")));\n         }\n         driver.findElement(locator).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n     }\n"}
{"repo_name": "BING16_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING16_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(3).click();\n \n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[id*='mc_vtvc_video']\"))).get(0).click();\n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\"iframe[title='Video player']\"), \"allow\", \"autoplay\"));\n     }\n"}
{"repo_name": "BING17_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING17_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(4).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"inner-container\")));\n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> optionElements = wait.until(ExpectedConditions.numberOfElementsToBe(\n                 By.cssSelector(\".actions  li:not([style='display: none;']) > a .actionLabel\"), 5));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"Directions\", \"Traffic\", \"Local\", \"My Places\", \"More\"));\n         for (WebElement element : optionElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         optionElements.get(4).findElement(By.xpath(\".//ancestor::a\")).click();\n \n         wait.until(ExpectedConditions.attributeToBe(By.className(\"hidePopupButton\"), \"aria-expanded\", \"true\"));\n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> dropdownElements = driver.findElements(By.cssSelector(\".taskBarPopout li.bm_dropdownEntry\"));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"Share\", \"Print\", \"Feedback\", \"Full Screen\", \"Embed a map\", \"My Contributions\"));\n         for (WebElement element : dropdownElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "BING18_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING18_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(4).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"b_entityTP\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Nearby']\")));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Directions']\"))).click();\n \n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\".directionsPopOut a\"), \"aria-expanded\", \"true\"));\n         element = driver.findElement(By.cssSelector(\".directionsPopOut .bm_dropdownEntry\"));\n         assertEquals(\"Directions to here\", element.getText());\n         assertEquals(\"Directions from here\", driver.findElement(By.cssSelector(\".directionsPopOut .bm_dropdownEntry:nth-child(2)\")).getText());\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".cardTitleText h2\"), \"Directions\"));\n         wait.until(ExpectedConditions.attributeToBeNotEmpty(driver.findElement(By.cssSelector(\"[title='From']\")), \"style\"));\n         wait.until(ExpectedConditions.not(ExpectedConditions.attributeToBeNotEmpty(driver.findElement(By.cssSelector(\"[title='To']\")), \"style\")));\n \n         driver.navigate().back();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Nearby']\")));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Directions']\"))).click();\n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\".directionsPopOut a\"), \"aria-expanded\", \"true\"));\n         driver.findElement(By.cssSelector(\".directionsPopOut .bm_dropdownEntry:nth-child(2)\")).click();\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".cardTitleText h2\"), \"Directions\"));\n         wait.until(ExpectedConditions.attributeToBeNotEmpty(driver.findElement(By.cssSelector(\"[title='To']\")), \"style\"));\n         wait.until(ExpectedConditions.not(ExpectedConditions.attributeToBeNotEmpty(driver.findElement(By.cssSelector(\"[title='From']\")), \"style\")));\n     }\n"}
{"repo_name": "BING19_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING19_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(4).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"b_entityTP\")));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Directions']\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Nearby']\"))).click();\n \n         element = driver.findElement(By.id(\"maps_sb\"));\n         assertEquals(element, driver.switchTo().activeElement());\n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> suggestionElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"suggestLink\")));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"Parking\", \"Hotels\", \"Restaurants\", \"Coffee\", \"Gas stations\"));\n         for (WebElement element : suggestionElements) {\n             actualTitles.add(element.getText());\n         }\n         assertTrue(actualTitles.containsAll(expectedTitles));\n \n         suggestionElements.get(2).click();\n         wait.until(ExpectedConditions.textToBe(By.className(\"cardTitleText\"), \"restaurants\"));\n     }\n"}
{"repo_name": "BING20_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING20_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n //        wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".id_avatar\")));\n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\"))).click();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         List<WebElement> navElements = driver.findElements(By.cssSelector(\"[aria-label='Main menu'] > ul > [data-menuurl] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ALL\", \"NEWS\", \"IMAGES\", \"VIDEOS\", \"MAPS\", \"SHOPPING\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(4).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"inner-container\")));\n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> optionElements = wait.until(ExpectedConditions.numberOfElementsToBe(\n                 By.cssSelector(\".actions  li:not([style='display: none;']) > a .actionLabel\"), 5));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"Directions\", \"Traffic\", \"Local\", \"My Places\", \"More\"));\n         for (WebElement element : optionElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         optionElements.get(1).findElement(By.xpath(\".//ancestor::a\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.className(\"cardTitleText\"), \"Traffic\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"#cameraToggleInput[checked]\")));\n //        assertTrue(driver.findElement(By.cssSelector(\"#cameraToggleInput[checked]\")).isDisplayed());\n     }\n"}
{"repo_name": "BING21_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING21_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\")));\n         element = driver.findElement(By.cssSelector(\"[type='search']\"));\n         element.sendKeys(\"Jacket\");\n         element.submit();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         assertEquals(\"page\", driver.findElement(By.xpath(\"//*[text()='All']\")).getAttribute(\"aria-current\"));\n         driver.findElement(By.xpath(\"//*[text()='Shopping']\")).click();\n         wait.until(ExpectedConditions.textToBe(By.className(\"br-breadcrumbs\"), \"Bing Shopping > jacket\"));\n         assertTrue(driver.findElement(By.xpath(\"//h2[text()='Brand']\")).isDisplayed());\n         assertTrue(driver.findElement(By.xpath(\"//h2[text()='Price']\")).isDisplayed());\n     }\n"}
{"repo_name": "BING22_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING22_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\")));\n         element = driver.findElement(By.cssSelector(\"[type='search']\"));\n         element.sendKeys(\"Jacket\");\n         element.submit();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         assertEquals(\"page\", driver.findElement(By.xpath(\"//*[text()='All']\")).getAttribute(\"aria-current\"));\n         driver.findElement(By.xpath(\"//*[text()='Shopping']\")).click();\n \n         List<WebElement> navElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"np-tabttltxt\")));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"SHOPPING HOME\", \"DEPARTMENTS\", \"STORES\",\n                 \"EDITOR'S PICKS\", \"DEALS\", \"TRENDING PRODUCTS\", \"PRICE DROPS\", \"MY COLLECTIONS\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         Actions actions = new Actions(driver);\n         actions.moveToElement(navElements.get(1)).perform();\n \n         expectedTitles.clear();\n         actualTitles.clear();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.cssSelector(\"#Departments_Key .b_hList strong\"), \"\")));\n         List<WebElement> categoryElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"#Departments_Key .b_hList strong\")));\n         expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Home Furnishings\", \"Clothing & Shoes\", \"Toys\", \"Lawn & Garden\", \"Tools & Hardware\"));\n         for (WebElement element : categoryElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         driver.findElement(By.xpath(\"//*[text()='Games']\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.className(\"hpcb-ttl\"), \"Games\"));\n         assertTrue(driver.findElements(By.cssSelector(\"[alt='Product Image']\")).size() > 1);\n         assertTrue(driver.findElement(By.id(\"sb_form_q\")).getAttribute(\"value\").isEmpty());\n     }\n"}
{"repo_name": "BING23_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING23_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\")));\n         element = driver.findElement(By.cssSelector(\"[type='search']\"));\n         element.sendKeys(\"Jacket\");\n         element.submit();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         assertEquals(\"page\", driver.findElement(By.xpath(\"//*[text()='All']\")).getAttribute(\"aria-current\"));\n         driver.findElement(By.xpath(\"//*[text()='Shopping']\")).click();\n \n         List<WebElement> navElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"np-tabttltxt\")));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"SHOPPING HOME\", \"DEPARTMENTS\", \"STORES\",\n                 \"EDITOR'S PICKS\", \"DEALS\", \"TRENDING PRODUCTS\", \"PRICE DROPS\", \"MY COLLECTIONS\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(2).click();\n \n         List<WebElement> letterElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\".sf-filter_N\")));\n         for (int i = 0; i < letterElements.size(); i++) {\n             char letter = letterElements.get(i).getText().charAt(0);\n             assertEquals(i + 65, (int) letter); // ASCII\n         }\n         letterElements.get(0).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h2\"), \"POPULAR STORES IN 'A'\"));\n         List<WebElement> shopsElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"ps-cardttl\")));\n         for (WebElement shop : shopsElements) {\n             assertTrue(shop.getText().startsWith(\"A\"));\n         }\n         String shopName = shopsElements.get(0).getText();\n         shopsElements.get(0).click();\n         while (true) {\n             if (driver.getWindowHandles().size() != 1) break;\n         }\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         wait.until(ExpectedConditions.textToBe(By.className(\"csf-ttl\"), shopName));\n     }\n"}
{"repo_name": "BING24_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING24_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\")));\n         element = driver.findElement(By.cssSelector(\"[type='search']\"));\n         element.sendKeys(\"Jacket\");\n         element.submit();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         assertEquals(\"page\", driver.findElement(By.xpath(\"//*[text()='All']\")).getAttribute(\"aria-current\"));\n         driver.findElement(By.xpath(\"//*[text()='Shopping']\")).click();\n \n         List<WebElement> navElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"np-tabttltxt\")));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"SHOPPING HOME\", \"DEPARTMENTS\", \"STORES\",\n                 \"EDITOR'S PICKS\", \"DEALS\", \"TRENDING PRODUCTS\", \"PRICE DROPS\", \"MY COLLECTIONS\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         Actions actions = new Actions(driver);\n         actions.moveToElement(navElements.get(3)).perform();\n \n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\"#editors_picks_key .np-catttl\"), \"Curated Collections\"));\n         driver.findElement(By.xpath(\"//*[text()='Beauty']\")).click();\n         wait.until(ExpectedConditions.textToBe(By.className(\"br-edtrlttl\"), \"Beauty & Spa\"));\n     }\n"}
{"repo_name": "BING25_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING25_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\")));\n         element = driver.findElement(By.cssSelector(\"[type='search']\"));\n         element.sendKeys(\"Jacket\");\n         element.submit();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         assertEquals(\"page\", driver.findElement(By.xpath(\"//*[text()='All']\")).getAttribute(\"aria-current\"));\n         driver.findElement(By.xpath(\"//*[text()='Shopping']\")).click();\n \n         List<WebElement> navElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"np-tabttltxt\")));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"SHOPPING HOME\", \"DEPARTMENTS\", \"STORES\",\n                 \"EDITOR'S PICKS\", \"DEALS\", \"TRENDING PRODUCTS\", \"PRICE DROPS\", \"MY COLLECTIONS\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(4).click();\n \n         wait.until(ExpectedConditions.textToBe(By.className(\"tsl-ttl\"), \"DEALS FROM TOP BRANDS\"));\n         element = driver.findElement(By.className(\"tsl-cardttl\"));\n         String name = element.getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.className(\"csf-ttl\"), name));\n     }\n"}
{"repo_name": "BING26_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Bing.java", "content": "    public void BING26_Tamar() {\n         driver.get(\"https://www.bing.com\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         By locator = By.cssSelector(\"a.idp_ham\");\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.attributeToBe(By.id(\"hbsettree\"), \"aria-hidden\", \"false\"));\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"#hbsettree > a[role='menuitem']:nth-child(2)\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\n                 \"//a[contains(text(), 'United States - English') or contains(text(), '\u05d0\u05e8\u05e6\u05d5\u05ea \u05d4\u05d1\u05e8\u05d9\u05ea - \u05d0\u05e0\u05d2\u05dc\u05d9\u05ea')]\"))).click();\n         wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//*[text()='English']\"))).click();\n \n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"true\"));\n         driver.findElement(By.id(\"hbsettings\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\"), \"\")));\n         assertTrue(driver.findElement(By.xpath(\"//*[text()='Country/Region']/../following-sibling::*\")).getText().contains(\"United States - English\"));\n         assertEquals(\"English\", driver.findElement(By.xpath(\"//*[text()='Language']/../following-sibling::*\")).getText());\n         wait.until(ExpectedConditions.elementToBeClickable(locator)).click();\n         wait.until(ExpectedConditions.attributeToBe(locator, \"aria-expanded\", \"false\"));\n \n \n         wait.until(ExpectedConditions.urlContains(\"https://www.bing.com/\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".vs img\")));\n         element = driver.findElement(By.cssSelector(\"[type='search']\"));\n         element.sendKeys(\"Jacket\");\n         element.submit();\n         wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.cssSelector(\"[aria-label='Search Results']\")));\n         assertEquals(\"page\", driver.findElement(By.xpath(\"//*[text()='All']\")).getAttribute(\"aria-current\"));\n         driver.findElement(By.xpath(\"//*[text()='Shopping']\")).click();\n \n         List<WebElement> navElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.className(\"np-tabttltxt\")));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"SHOPPING HOME\", \"DEPARTMENTS\", \"STORES\",\n                 \"EDITOR'S PICKS\", \"DEALS\", \"TRENDING PRODUCTS\", \"PRICE DROPS\", \"MY COLLECTIONS\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         navElements.get(5).click();\n \n         wait.until(ExpectedConditions.textToBe(By.className(\"hpcb-ttl\"), \"Trending Products\"));\n         List<String> subsections = new ArrayList<>(Arrays.asList(\"Across Web\", \"TRENDING CATEGORIES\", \"Trending Products For You\"));\n         Actions actions = new Actions(driver);\n         for (int i = 0; i < subsections.size(); i++) {\n             element = driver.findElement(By.xpath(\"//h2[text()='\" + subsections.get(i) + \"']\"));\n             if (i != 0)\n                 actions.moveToElement(element).perform();\n             assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                     \"var elem = arguments[0],                 \" +\n                             \"  box = elem.getBoundingClientRect(),    \" +\n                             \"  cx = box.left + box.width / 2,         \" +\n                             \"  cy = box.top + box.height / 2,         \" +\n                             \"  e = document.elementFromPoint(cx, cy); \" +\n                             \"for (; e; e = e.parentElement) {         \" +\n                             \"  if (e === elem)                        \" +\n                             \"    return true;                         \" +\n                             \"}                                        \" +\n                             \"return false;                            \"\n                     , element));\n         }\n     }\n"}
