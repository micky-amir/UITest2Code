{"repo_name": "SK_1_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         By createAccountLocator = By.xpath(\"//a[text()='Create a New Account']\");\n         assertTrue(driver.findElement(createAccountLocator).isDisplayed());\n         driver.findElement(createAccountLocator).click();\n         driver.findElement(By.id(\"ap_customer_name\")).sendKeys(\"Tamar\");\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"ap_password_check\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"continue\")).click();\n         Thread.sleep(20000); // manually solve captcha\n         driver.findElement(By.className(\"a-button-input\")).click();\n         Thread.sleep(20000); // manually enter otp\n         driver.findElement(By.className(\"a-button-input\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 1000);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Toggle Acount Menu'] .ipc-button__text\")));\n         assertEquals(\"Tamar\", element.getText());\n     }\n"}
{"repo_name": "SK_2_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 1000);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Toggle Acount Menu'] .ipc-button__text\")));\n         assertEquals(\"Tamar\", element.getText());\n     }\n"}
{"repo_name": "SK_3_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 1000);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"(//*[@id='featured-today']/../*)[3]\")));\n         element = driver.findElement(By.xpath(\"(//*[@id='featured-today']/../*)[3]\")); // section under featured today\n         assertTrue(element.findElement(By.xpath(\"./descendant::img\")).isDisplayed()); // image\n         assertTrue(element.findElement(By.xpath(\".//a[href=contains(text(), 'movies')]\")).isDisplayed());\n         assertTrue(element.findElement(By.xpath(\".//a[href=contains(text(), 'movies')]\")).isDisplayed());\n         List<WebElement> items = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath(\"//*[contains(@class, 'WhatToWatch__WhatToWatchDiv-e8z2cy-1')]/../descendant::div[contains(@class, 'ipc-poster-card--baseAlt')]\")));\n         assertTrue(items.size() > 1);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\".fan-picks .ipc-icon.ipc-icon--chevron-right-inline.ipc-icon--inline.ipc-pager-icon\"))).click();\n         By wishListLocator = By.xpath(\"//*[text()='Cruella']/../following-sibling::*/button\");\n         wait.until(ExpectedConditions.presenceOfElementLocated(wishListLocator));\n         assertTrue(driver.findElement(wishListLocator).isDisplayed());\n         wait.until(ExpectedConditions.elementToBeClickable(wishListLocator)).click();\n         assertEquals(\"remove from watchlist\", driver.findElement(By.xpath(\"//img[@alt='Cruella']/../preceding-sibling::*\")).getAttribute(\"aria-label\"));\n     }\n"}
{"repo_name": "SK_4_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.imdb.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 1000);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\".fan-picks .ipc-icon.ipc-icon--chevron-right-inline.ipc-icon--inline.ipc-pager-icon\"))).click();\n         Thread.sleep(1000);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\"//a[@aria-label='View title page for Cruella']\")));\n         element = wait.until(ExpectedConditions.elementToBeClickable(By.xpath(\"//a[@aria-label='View title page for Cruella']\")));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n \n         element = driver.findElement(By.cssSelector(\"[data-testid='hero-rating-bar__aggregate-rating'] > *\"));\n         assertEquals(\"IMDb RATING\", element.getText());\n         element = driver.findElement(By.cssSelector(\"[data-testid='hero-rating-bar__user-rating'] > *\"));\n         assertEquals(\"YOUR RATING\", element.getText());\n         element = driver.findElement(By.cssSelector(\"[data-testid='hero-rating-bar__popularity'] > *\"));\n         assertEquals(\"POPULARITY\", element.getText());\n \n         assertEquals(\"a\", element.findElement(By.xpath(\"//*[text()='User reviews']\")).getTagName());\n         assertEquals(\"a\", element.findElement(By.xpath(\"//*[text()='Critic reviews']/../..\")).getTagName());\n         assertEquals(\"a\", element.findElement(By.xpath(\"//*[text()='Metascore']/../..\")).getTagName());\n     }\n"}
{"repo_name": "SK_5_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 1000);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".fan-picks .ipc-poster-card--baseAlt\")));\n         element.findElement(By.xpath(\".//*[contains(@aria-label, 'Watch trailer')]\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@aria-label='Pause']\")));\n     }\n"}
{"repo_name": "SK_6_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 1000);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[@aria-label='View title page for Loki']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//button[@title='Share on social media']\"))).click();\n         List<WebElement> menuItems = driver.findElements(By.cssSelector(\"[data-testid='share-container'] [role='menuitem']\"));\n         List<String> expectedItemsText = new LinkedList<>(Arrays.asList(\"Facebook\", \"Twitter\", \"Email Link\", \"Copy Link\", \"Share IMDb rating\"));\n         List<String> actualItemsText = new LinkedList<>();\n         for (WebElement item : menuItems) {\n             actualItemsText.add(item.getText());\n         }\n         assertEquals(expectedItemsText, actualItemsText);\n     }\n"}
{"repo_name": "SK_7_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='All']\")).click();\n         driver.findElement(By.xpath(\"//*[@role='menuitem'][@aria-label='Celebs']\")).click();\n \n         element = driver.findElement(By.cssSelector(\".imdb-header-search__input\"));\n         element.sendKeys(\"Virgin River\");\n         element.submit();\n \n         assertEquals(\"Names\", driver.findElement(By.className(\"findSectionHeader\")).getText());\n         List<WebElement> resultsElements = driver.findElements(By.className(\"result_text\"));\n         for (WebElement element : resultsElements) {\n             String elementText = element.getText().toLowerCase(Locale.ROOT);\n             assertTrue(elementText.contains(\"virgin\") || elementText.contains(\"river\"));\n         }\n     }\n"}
{"repo_name": "SK_8_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         element = driver.findElement(By.className(\"from-your-watchlist\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10000);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath(\".//descendant::button[@aria-label='Rate Cruella']\"))).click();\n         element = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"button[aria-label='Rate 6']\")));\n         actions.moveByOffset(0, 0).click(element).perform();\n         element.findElement(By.xpath(\"//*[text()='Rate']\")).click();\n         element = wait.until(ExpectedConditions.visibilityOf(driver.findElement(By.xpath(\"//*[@class='from-your-watchlist']/descendant::a[@aria-label='View title page for Cruella']/preceding-sibling::*/descendant::*[@data-testid='rate-button']/*\"))));\n         assertEquals(\"6\", element.getText());\n     }\n"}
{"repo_name": "SK_9_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='All']\")).click();\n         List<WebElement> itemsElements = driver.findElements(By.xpath(\"//*[@id='navbar-search-category-select-contents']/*/*[@role='menuitem']\"));\n         List<String> expectedItemsText = new LinkedList<>(Arrays.asList(\"All\", \"Titles\", \"TV Episodes\", \"Celebs\", \"Companies\", \"Keywords\", \"Advanced Search\"));\n         List<String> actualItemsText = new LinkedList<>();\n         for (WebElement element : itemsElements) {\n             actualItemsText.add(element.getText());\n         }\n         assertEquals(expectedItemsText, actualItemsText);\n     }\n"}
{"repo_name": "SK_10_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         element = driver.findElement(By.xpath(\"//*[text()='Top Rated Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n         assertTrue(driver.findElement(By.xpath(\"//table/descendant::th[text()='IMDb Rating']\")).isDisplayed()); // different locator\n         assertTrue(driver.findElement(By.xpath(\"//table/descendant::th[text()='Your Rating']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_11_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         element = driver.findElement(By.xpath(\"//*[text()='Top Rated Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n \n         element = driver.findElement(By.id(\"lister-sort-by-options\"));\n         element.click();\n         element.findElement(By.xpath(\".//*[@value='rk:ascending']\")).click();\n \n         List<WebElement> itemsElements = driver.findElements(By.cssSelector(\".lister-list .titleColumn\"));\n         for (int i = 1; i < itemsElements.size(); i++) {\n             String currentText = itemsElements.get(i).getText();\n             currentText = currentText.substring(0, currentText.indexOf(\" \") - 1);\n             String previousText = itemsElements.get(i - 1).getText();\n             previousText = previousText.substring(0, previousText.indexOf(\" \") - 1);\n             assertTrue(\"problem in i: \" + i, Integer.parseInt(currentText) > (Integer.parseInt((previousText))));\n         }\n     }\n"}
{"repo_name": "SK_12_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         element = driver.findElement(By.xpath(\"//*[text()='Top Rated Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n \n         element = driver.findElement(By.id(\"lister-sort-by-options\"));\n         element.click();\n         element.findElement(By.xpath(\".//*[@value='ir:descending']\")).click();\n \n         List<WebElement> itemsElements = driver.findElements(By.cssSelector(\".lister-list .ratingColumn.imdbRating\"));\n         for (int i = 1; i < itemsElements.size(); i++) {\n             assertTrue((Double.parseDouble(itemsElements.get(i).getText()) <= (Double.parseDouble(itemsElements.get(i - 1).getText()))));\n         }\n     }\n"}
{"repo_name": "SK_13_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         element = driver.findElement(By.xpath(\"//*[text()='Top Rated Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n \n         element = driver.findElement(By.id(\"lister-sort-by-options\"));\n         element.click();\n         element.findElement(By.xpath(\".//*[@value='us:descending']\")).click();\n \n         List<WebElement> itemsElements = driver.findElements(By.cssSelector(\".lister-list .secondaryInfo\"));\n         for (int i = 1; i < itemsElements.size(); i++) {\n             String currentText = itemsElements.get(i).getText();\n             String previousText = itemsElements.get(i).getText();\n             assertTrue((Integer.parseInt(currentText.substring(1, currentText.length() - 2)) <= (Integer.parseInt(previousText.substring(1, previousText.length() - 2)))));\n         }\n     }\n"}
{"repo_name": "SK_14_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         element = driver.findElement(By.xpath(\"//*[text()='Top Rated Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n \n         element = driver.findElement(By.id(\"lister-sort-by-options\"));\n         element.click();\n         element.findElement(By.xpath(\".//*[@value='nv:descending']\")).click();\n \n         List<WebElement> itemsElements = driver.findElements(By.cssSelector(\".lister-list .ratingColumn.imdbRating > strong\"));\n         for (int i = 1; i < itemsElements.size(); i++) {\n             String currentText = itemsElements.get(i).getAttribute(\"title\");\n             currentText = currentText.substring(currentText.indexOf(\"on \") + 3, currentText.indexOf(\" user\"));\n             String previousText = itemsElements.get(i).getAttribute(\"title\");\n             previousText = previousText.substring(previousText.indexOf(\"on \") + 3, previousText.indexOf(\" user\"));\n             assertTrue((Integer.parseInt(currentText.replaceAll(\",\", \"\")) <= (Integer.parseInt(previousText.replaceAll(\",\", \"\")))));\n         }\n     }\n"}
{"repo_name": "SK_15_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         element = driver.findElement(By.xpath(\"//*[text()='Top Rated Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n \n         element = driver.findElement(By.xpath(\"//a[text()='The Godfather']/../following-sibling::*[@class='ratingColumn']/*\"));\n         element.click();\n         element.findElement(By.xpath(\"//a[text()='The Godfather']/../following-sibling::*[@class='ratingColumn']/descendant::li[4]\")).click();\n \n         element = driver.findElement(By.id(\"lister-sort-by-options\"));\n         element.click();\n         element.findElement(By.xpath(\".//*[@value='ur:descending']\")).click();\n \n         List<WebElement> itemsElements = driver.findElements(By.cssSelector(\".lister-list .ratingColumn .rating\"));\n         for (int i = 1; i < itemsElements.size(); i++) {\n             String currentText = itemsElements.get(i).getText();\n             if (currentText.equals(\"\")) {\n                 currentText = \"0\";\n             }\n             String previousText = itemsElements.get(i).getText();\n             if (previousText.equals(\"\")) {\n                 previousText = \"0\";\n             }\n             assertTrue((Integer.parseInt(currentText) <= (Integer.parseInt(previousText))));\n         }\n     }\n"}
{"repo_name": "SK_16_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         element = driver.findElement(By.xpath(\"//*[text()='Top Rated Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n \n         driver.findElement(By.cssSelector(\".dropdown.share-widget\")).click();\n         element = driver.findElement(By.xpath(\"//*[@class='share-widget-copy-icon']/..\"));\n         actions.moveToElement(element).perform();\n         assertEquals(\"Click to copy\", element.getAttribute(\"title\"));\n         element.click();\n         try {\n             Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n             Object copiedData = clipboard.getData(DataFlavor.stringFlavor);\n             assertEquals(\"https://www.imdb.com/chart/top/\", copiedData.toString());\n         } catch (IOException | UnsupportedFlavorException e) {\n             e.printStackTrace();\n         }\n     }\n"}
{"repo_name": "SK_17_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         element = driver.findElement(By.xpath(\"//*[text()='Top Rated Movies']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n         List<WebElement> elements = driver.findElements(By.cssSelector(\".lister-list > tr\"));\n         assertEquals(250, elements.size());\n         for (WebElement element : elements) {\n             assertTrue(element.isDisplayed());\n         }\n     }\n"}
{"repo_name": "SK_18_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         element = driver.findElement(By.cssSelector(\".imdb-header-search__input\"));\n         element.sendKeys(\"Virgin River\");\n         element.submit();\n \n         assertEquals(\"Titles\", driver.findElement(By.className(\"findSectionHeader\")).getText());\n         List<WebElement> resultsElements = driver.findElements(By.className(\"result_text\"));\n         for (WebElement element : resultsElements) {\n             String elementText = element.getText().toLowerCase(Locale.ROOT);\n             assertTrue(elementText.contains(\"virgin\") || elementText.contains(\"river\"));\n         }\n     }\n"}
{"repo_name": "SK_19_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='All']\")).click();\n         driver.findElement(By.xpath(\"//*[@role='menuitem']//*[text()='Advanced Search']/..\")).click();\n \n         assertEquals(\"Advanced Search\", driver.findElement(By.cssSelector(\"#header > h1\")).getText());\n         List<WebElement> optionsElements = driver.findElements(By.className(\"article\"));\n         assertEquals(4, optionsElements.size());\n         List<String> expectedText = new LinkedList<>(Arrays.asList(\"Advanced Title Search\", \"Advanced Name Search\", \"Search Collaborations\", \"Search Within a Topic\"));\n         for (int i = 0; i < optionsElements.size() - 1; i++) {\n             assertEquals(expectedText.get(i), optionsElements.get(i).findElement(By.xpath(\".//a\")).getText());\n         }\n         assertEquals(expectedText.get(3), optionsElements.get(3).findElement(By.tagName(\"h4\")).getText());\n     }\n"}
{"repo_name": "SK_20_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector(\"[title='Close Navigation Drawer']\")));\n         driver.findElement(By.cssSelector(\"[data-testid='panel-header'] > a\")).click();\n         assertTrue(driver.findElement(By.cssSelector(\"[aria-label='Home']\")).isDisplayed());\n         assertFalse(driver.findElement(By.cssSelector(\"[title='Close Navigation Drawer']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_21_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.imdb.com/\");\n         for (int i = 0; i < 13; i++) {\n             element = driver.findElement(By.cssSelector(\".swiper-slide.swiper-slide-active img\"));\n             assertNotEquals(\"\", element.getAttribute(\"alt\"));\n             assertNotEquals(\"\", element.getAttribute(\"src\"));\n             element.findElement(By.xpath(\"//*[@aria-label='Next slide']\")).click();\n             Thread.sleep(200);\n         }\n         for (int i = 0; i < 13; i++) {\n             element = driver.findElement(By.cssSelector(\".swiper-slide.swiper-slide-active img\"));\n             assertNotEquals(\"\", element.getAttribute(\"alt\"));\n             assertNotEquals(\"\", element.getAttribute(\"src\"));\n             element.findElement(By.xpath(\"//*[@aria-label='Previous slide']\")).click();\n             Thread.sleep(200);\n         }\n     }\n"}
{"repo_name": "SK_22_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.xpath(\"//*[@title='Toggle Acount Menu']/..\")).click();\n         element = driver.findElement(By.id(\"navUserMenu-contents\"));\n         assertEquals(\"visible\", element.getCssValue(\"visibility\"));\n         List<WebElement> menuItems = element.findElements(By.tagName(\"a\"));\n         List<String> expectedItemsText = new LinkedList<>(Arrays.asList(\"Your activity\", \"Your watchlist\", \"Your ratings\", \"Your lists\", \"Account settings\", \"Sign out\"));\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         for (int i = 1; i < menuItems.size(); i++) { // i=0 is the username\n             wait.until(ExpectedConditions.elementToBeClickable(menuItems.get(i)));\n             assertEquals(expectedItemsText.get(i - 1), menuItems.get(i).getText());\n         }\n     }\n"}
{"repo_name": "SK_23_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         element = driver.findElement(By.cssSelector(\".swiper-slide.swiper-slide-active\"));\n         assertTrue(element.isDisplayed());\n         assertFalse(element.findElement(By.cssSelector(\"[class^='SlideCaption__WithPeekCaptionHeadingText']\")).getText().isEmpty());\n         element = element.findElement(By.cssSelector(\"[class^='SlideCaption__WithPeekRuntimeText']\"));\n         String time = element.getText();\n         int timeStringLength = time.length();\n         assertTrue(timeStringLength > 3 && timeStringLength < 6); // 4 or 5\n         assertEquals(timeStringLength - 3, time.indexOf(\":\")); // 4 or 5\n     }\n"}
{"repo_name": "SK_24_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.imdb.com/\");\n         element = driver.findElement(By.xpath(\"//*[text()='Featured today']/../..\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element = element.findElement(By.cssSelector(\".ipc-lockup-overlay__content\"));\n         assertTrue(element.isDisplayed());\n         assertEquals(\"List\", element.getText());\n         element.click();\n         Thread.sleep(200);\n         assertTrue(driver.findElement(By.cssSelector(\"[data-testid='media-viewer']\")).isDisplayed());\n         element = driver.findElement(By.cssSelector(\"[aria-label='gallery']\"));\n         assertTrue(element.isDisplayed());\n         element.click();\n         assertTrue(driver.findElement(By.className(\"media_index_thumb_list\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_25_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         assertTrue(driver.findElements(By.cssSelector(\"[data-testid='nav-link-category']\")).size() > 1);\n         element = driver.findElement(By.xpath(\"//*[text()='Release Calendar']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n         assertEquals(\"Upcoming Releases for United States\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_26_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.id(\"imdbHeader-navDrawerOpen--desktop\")).click();\n         assertTrue(driver.findElements(By.cssSelector(\"[data-testid='nav-link-category']\")).size() > 1);\n         element = driver.findElement(By.xpath(\"//*[text()='DVD & Blu-ray Releases']\"));\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n         assertEquals(\"New and Upcoming VOD, DVD, and Blu-ray Releases\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_27_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.xpath(\"//*[@title='Toggle Acount Menu']/..\")).click();\n         assertEquals(\"visible\", driver.findElement(By.cssSelector(\"[data-menu-id='navUserMenu']\")).getCssValue(\"visibility\"));\n         driver.findElement(By.xpath(\"//span[text()='Your activity']/..\")).click();\n         assertTrue(driver.findElement(By.id(\"avatar-frame\")).isDisplayed());\n         assertEquals(\"Profile Checklist\", driver.findElement(By.cssSelector(\"#profile-checklist > h3\")).getText());\n     }\n"}
{"repo_name": "SK_28_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         element = driver.findElement(By.cssSelector(\"[title='Facebook']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).click(element).perform();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.attributeToBe(By.tagName(\"html\"), \"id\", \"facebook\"));\n         assertEquals(\"IMDb\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_29_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         element = driver.findElement(By.cssSelector(\"[title='Twitter']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).click(element).perform();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[contains(text(), 'Twitter, Inc.')]\")));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[@href='/IMDb/header_photo']\")));\n     }\n"}
{"repo_name": "SK_30_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         element = driver.findElement(By.cssSelector(\"[title='Twitch']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).click(element).perform();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@aria-label='Twitch Home']\")));\n         assertEquals(\"IMDb\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_31_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         element = driver.findElement(By.cssSelector(\"[title='Instagram']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).click(element).perform();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//img[@alt='Instagram']\")));\n         assertEquals(\"imdb\", driver.findElement(By.tagName(\"h2\")).getText());\n     }\n"}
{"repo_name": "SK_32_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         element = driver.findElement(By.cssSelector(\"[title='YouTube']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).click(element).perform();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.tagName(\"yt-icon\")));\n         assertEquals(\"IMDb\", driver.findElement(By.cssSelector(\".style-scope.ytd-channel-name\")).getText());\n     }\n"}
{"repo_name": "SK_33_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.cssSelector(\"[aria-label='Go To IMDbPro'] > div\")).click();\n         assertEquals(\"Log in With Amazon\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_34_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Watch trailer for The Suicide Squad']\")));\n         String elementLabel = element.getAttribute(\"aria-label\");\n         String movieName = elementLabel.substring(elementLabel.indexOf(\"for\") + 4);\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@aria-label='Pause']\")));\n         String title = driver.findElement(By.tagName(\"h5\")).getText();\n         assertTrue(movieName.contains(title) || title.contains(movieName));\n         driver.findElement(By.cssSelector(\".ipc-icon-link--onBase\")).click();\n         String pageTitle = driver.findElement(By.xpath(\"//*[@data-testid='hero-title-block__title']\")).getText();\n         assertTrue(pageTitle.contains(title) || title.contains(pageTitle));\n         driver.findElement(By.xpath(\"//*[contains(text(), 'User reviews')]\")).click();\n         driver.findElement(By.cssSelector(\".user-reviews\")).click();\n \n         Thread.sleep(3000);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"cboxIframe\")));\n         driver.switchTo().frame(element);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"icicle-page\")));\n         driver.findElement(By.cssSelector(\".klondike-userreview-summary\")).sendKeys(\"good\");\n         driver.findElement(By.tagName(\"textarea\")).sendKeys(\"Saw it yesterday. I enjoyed it. It was good. I Liked it.\");\n         driver.findElement(By.xpath(\"//*[contains(@class,'ice-radio-button')]/*[text()='No']\")).click();\n         driver.findElement(By.className(\"a-button-input\")).click();\n     }\n"}
{"repo_name": "SK_35_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.xpath(\"//*[text()='All']\")).click();\n         driver.findElement(By.xpath(\"//*[@role='menuitem'][@aria-label='Titles']\")).click();\n \n         element = driver.findElement(By.cssSelector(\".imdb-header-search__input\"));\n         element.sendKeys(\"Virgin River\");\n         element.submit();\n \n         assertEquals(\"Titles\", driver.findElement(By.className(\"findSectionHeader\")).getText());\n         List<WebElement> resultsElements = driver.findElements(By.className(\"result_text\"));\n         for (WebElement element : resultsElements) {\n             String elementText = element.getText().toLowerCase(Locale.ROOT);\n             assertTrue(elementText.contains(\"virgin\") || elementText.contains(\"river\"));\n         }\n     }\n"}
{"repo_name": "SK_36_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         Actions actions = new Actions(driver);\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         actions.moveToElement(driver.findElement(By.className(\"top-picks\"))).perform();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".top-picks [data-testid='title']\")));\n         String movieName = element.getText();\n         element = driver.findElement(By.cssSelector(\".top-picks [title='info']\"));\n         actions.moveToElement(element).click(element).perform();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"ipc-promptable-base__panel\")));\n         wait.until(ExpectedConditions.textToBePresentInElement(driver.findElement(By.className(\"ipc-title-prompt__title\")), movieName));\n     }\n"}
{"repo_name": "SK_37_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.imdb.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@data-testid='title'][text()='Forrest Gump']/..\")));\n         WebElement rightButton = element.findElement(By.xpath(\".//../../../following-sibling::*[contains(@class, 'ipc-pager--right')]\"));\n         for (int i = 0; i < 4; i++) {\n             wait.until(ExpectedConditions.elementToBeClickable(rightButton)).click();\n             Thread.sleep(200);\n         }\n         Thread.sleep(1000);\n         element.click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[text()='Cast & crew']\")));\n         driver.findElement(By.xpath(\"//a[text()='Cast & crew']\")).click();\n         assertEquals(\"Forrest Gump\", driver.findElement(By.cssSelector(\"h3 > a\")).getText());\n         assertEquals(\"Full Cast & Crew\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_38_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Watch trailer for The Suicide Squad']\")));\n         String elementLabel = element.getAttribute(\"aria-label\");\n         String movieName = elementLabel.substring(elementLabel.indexOf(\"for\") + 4);\n         Actions actions = new Actions(driver);\n         actions.moveByOffset(0, 0).click(element).perform();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[@aria-label='Pause']\")));\n         String title = driver.findElement(By.tagName(\"h5\")).getText();\n         assertTrue(movieName.contains(title) || title.contains(movieName));\n         driver.findElement(By.cssSelector(\".ipc-icon-link--onBase\")).click();\n         String pageTitle = driver.findElement(By.xpath(\"//*[@data-testid='hero-title-block__title']\")).getText();\n         assertTrue(pageTitle.contains(title) || title.contains(pageTitle));\n         driver.findElement(By.cssSelector(\"[data-testid='tm-box-addtolist-button']\")).click();\n         assertTrue(driver.findElement(By.cssSelector(\".attlp-watchlist\")).isDisplayed());\n         By createListLocator = By.cssSelector(\".attlp-creat-list\");\n         assertTrue(driver.findElement(createListLocator).isDisplayed());\n         driver.findElement(createListLocator).click();\n         assertEquals(\"Create a new list\", driver.findElement(By.tagName(\"h1\")).getText());\n         driver.findElement(By.id(\"list-create-name\")).sendKeys(\"test list\");\n         driver.findElement(By.cssSelector(\".list-create-button\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"lister-edit-form\")));\n     }\n"}
{"repo_name": "SK_39_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.xpath(\"//*[@title='Toggle Acount Menu']/..\")).click();\n         driver.findElement(By.xpath(\"//*[@id='navUserMenu-contents']//a/*[text()='Account settings']/..\")).click();\n         assertEquals(\"Account Settings\", driver.findElement(By.tagName(\"h1\")).getText());\n         List<WebElement> titlesElements = driver.findElements(By.tagName(\"h2\"));\n         List<String> expectedTitles = new LinkedList<>(Arrays.asList(\"Personal Information\", \"Preferences\", \"Other\"));\n         List<String> actualTitles = new LinkedList<>();\n         for (WebElement element : titlesElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "SK_40_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".imdb-header__watchlist-button-count\")));\n         driver.findElement(By.cssSelector(\".imdb-header__watchlist-button > a\")).click();\n         assertEquals(\"Your Watchlist\", driver.findElement(By.tagName(\"h1\")).getText());\n         String details = driver.findElement(By.className(\"lister-details\")).getText();\n         assertNotEquals(\"0\", details.substring(0, details.indexOf(\" \")));\n         driver.findElement(By.cssSelector(\"[title='Edit']\")).click();\n         driver.findElement(By.id(\"list-settings\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"privacy-toggle-switch\")));\n         if (!driver.findElement(By.cssSelector(\".privacy-overview.text-muted\")).getText().equals(\"private\")) {\n             driver.findElement(By.className(\"label\")).click();\n         }\n         driver.findElement(By.cssSelector(\"#list-settings-content [value='SAVE']\")).click();\n         driver.findElement(By.xpath(\"//button[text()='Done']\")).click();\n         assertEquals(\"PRIVATE\", driver.findElement(By.cssSelector(\".lister-privacy\")).getText());\n     }\n"}
{"repo_name": "SK_41_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".imdb-header__watchlist-button-count\")));\n         driver.findElement(By.cssSelector(\".imdb-header__watchlist-button > a\")).click();\n         assertEquals(\"Your Watchlist\", driver.findElement(By.tagName(\"h1\")).getText());\n         assertFalse(driver.findElement(By.cssSelector(\"#social-sharing-widget button\")).isEnabled());\n     }\n"}
{"repo_name": "SK_42_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.xpath(\"//*[@title='Toggle Acount Menu']/..\")).click();\n         driver.findElement(By.xpath(\"//*[@id='navUserMenu-contents']//a/*[text()='Your activity']/..\")).click();\n         assertTrue(driver.findElement(By.cssSelector(\".user-profile.own-profile\")).isDisplayed());\n         driver.findElement(By.cssSelector(\"a[aria-label='Home']\")).click();\n         assertTrue(driver.findElement(By.className(\"swiper-wrapper\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_43_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() throws InterruptedException {\n         WebDriverManager.edgedriver().setup();\n         EdgeDriver driver2 = new EdgeDriver();\n         driver2.manage().window().maximize();\n         driver2.get(\"https://www.imdb.com/\");\n \n         String currentName = driver2.findElement(By.cssSelector(\".swiper-slide-active [class*=SlideCaption__WithPeekCaptionHeadingText]\")).getText();\n         driver2.findElement(By.xpath(\"//*[@aria-label='Next slide']\")).click();\n         Thread.sleep(500);\n         String nextName = driver2.findElement(By.cssSelector(\".swiper-slide-active [class*=SlideCaption__WithPeekCaptionHeadingText]\")).getText();\n         assertNotEquals(currentName, nextName);\n         driver2.quit();\n     }\n"}
{"repo_name": "SK_44_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.xpath(\"//*[@title='Toggle Acount Menu']/..\")).click();\n         driver.findElement(By.xpath(\"//*[@id='navUserMenu-contents']//a/*[text()='Sign out']/..\")).click();\n         assertEquals(\"Sign In\", driver.findElement(By.cssSelector(\".imdb-header__signin-text\")).getText());\n     }\n"}
{"repo_name": "SK_45_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.imdb.com/\");\n         for (int i = 0; i < 13; i++) {\n             String nextUpName = driver.findElement(By.xpath(\"//*[@class='editorial-slots']/descendant::span[contains(@class, 'AutorotatePeekstyle__EditorialSlotTitle')][3]\")).getText();\n             driver.findElement(By.xpath(\"//*[@aria-label='Next slide']\")).click();\n             Thread.sleep(500);\n             element = driver.findElement(By.cssSelector(\".swiper-slide-active [class*=SlideCaption__WithPeekCaptionHeadingText]\"));\n             String currentName = element.getText();\n             assertEquals(currentName, nextUpName);\n         }\n     }\n"}
{"repo_name": "SK_46_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".imdb-header__watchlist-button-count\")));\n         driver.findElement(By.cssSelector(\".imdb-header__watchlist-button > a\")).click();\n         assertEquals(\"Your Watchlist\", driver.findElement(By.tagName(\"h1\")).getText());\n         driver.findElement(By.id(\"lister-sort-by-options\")).click();\n         driver.findElement(By.xpath(\"//option[text()='IMDb Rating']\")).click();\n         driver.findElement(By.id(\"lister-sort-by-options\")).click();\n \n         List<WebElement> metascoresElements = driver.findElements(By.className(\"ratings-imdb-rating\"));\n         for (int i = 1; i < metascoresElements.size(); i++) {\n             String previousScore = metascoresElements.get(i - 1).getText();\n             String currentScore = metascoresElements.get(i).getText();\n             assertTrue(Double.parseDouble(previousScore) >= Double.parseDouble(currentScore));\n         }\n     }\n"}
{"repo_name": "SK_47_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Cruella']/../preceding-sibling::*/*[contains(@class, 'ipc-watchlist-ribbon')]\"))).click();\n         assertEquals(\"Sign in\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_48_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Cruella']/../preceding-sibling::*[contains(@class, 'ipc-poster-card__rating-star-group')]/button\"))).click();\n         assertEquals(\"Sign in\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_49_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         By createAccountLocator = By.xpath(\"//a[text()='Create a New Account']\");\n         assertTrue(driver.findElement(createAccountLocator).isDisplayed());\n         driver.findElement(createAccountLocator).click();\n         driver.findElement(By.id(\"ap_customer_name\")).sendKeys(\"username\");\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"weenakhalid@gmail.com\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"password\");\n         driver.findElement(By.id(\"ap_password_check\")).sendKeys(\"password\");\n         driver.findElement(By.id(\"continue\")).click();\n         WebElement alertElement = driver.findElement(By.id(\"auth-warning-message-box\"));\n         assertEquals(\"Important Message!\\n\" +\n                         \"You indicated you're a new customer, but an account already exists with the email address weenakhalid@gmail.com.\",\n                 alertElement.getText());\n     }\n"}
{"repo_name": "SK_50_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         ((JavascriptExecutor) driver).executeScript(\"window.open()\");\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n \n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[@title='Toggle Acount Menu']/..\")).click();\n         driver.findElement(By.xpath(\"//*[@id='navUserMenu-contents']//a/*[text()='Sign out']/..\")).click();\n         assertEquals(\"Sign In\", driver.findElement(By.cssSelector(\".imdb-header__signin-text\")).getText());\n \n         driver.switchTo().window(tabs.get(0));\n         driver.navigate().refresh();\n         assertEquals(\"Sign In\", driver.findElement(By.cssSelector(\".imdb-header__signin-text\")).getText());\n     }\n"}
{"repo_name": "SK_51_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".imdb-header__watchlist-button-count\")));\n         driver.findElement(By.cssSelector(\".imdb-header__watchlist-button > a\")).click();\n         assertEquals(\"Your Watchlist\", driver.findElement(By.tagName(\"h1\")).getText());\n         assertTrue(driver.findElements(By.className(\"lister-item\")).size() > 0);\n         driver.findElement(By.cssSelector(\"a[aria-label='Home']\")).click();\n         assertTrue(driver.findElement(By.className(\"swiper-wrapper\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_52_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.xpath(\"//*[@title='Toggle Acount Menu']/..\")).click();\n         driver.findElement(By.xpath(\"//*[@id='navUserMenu-contents']//a/*[text()='Your ratings']/..\")).click();\n         assertEquals(\"Your Ratings\", driver.findElement(By.tagName(\"h1\")).getText());\n         driver.findElement(By.cssSelector(\"a[aria-label='Home']\")).click();\n         assertTrue(driver.findElement(By.className(\"swiper-wrapper\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_53_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         driver.get(\"https://www.imdb.com/\");\n         driver.findElement(By.xpath(\"//*[text()='Sign In']\")).click();\n         assertTrue(driver.findElements(By.className(\"list-group\")).size() > 1);\n         driver.findElement(By.xpath(\"//*[text()='Sign in with IMDb']\")).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"imdbtest\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n \n         driver.findElement(By.xpath(\"//*[@title='Toggle Acount Menu']/..\")).click();\n         driver.findElement(By.xpath(\"//*[@id='navUserMenu-contents']//a/*[text()='Your ratings']/..\")).click();\n         assertEquals(\"Your Ratings\", driver.findElement(By.tagName(\"h1\")).getText());\n         driver.findElement(By.className(\"share_url_link\")).click();\n         assertEquals(\"inline-block\", driver.findElement(By.cssSelector(\"[name='share-link']\")).getCssValue(\"display\"));\n         Actions actions = new Actions(driver);\n         actions.keyDown(Keys.CONTROL).sendKeys(\"c\").keyUp(Keys.CONTROL).perform();\n         try {\n             Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n             Object copiedData = clipboard.getData(DataFlavor.stringFlavor);\n             assertTrue(copiedData.toString().startsWith(\"https://www.imdb.com/user/\") && copiedData.toString().endsWith(\"/ratings\"));\n         } catch (IOException | UnsupportedFlavorException e) {\n             e.printStackTrace();\n         }\n     }\n"}
{"repo_name": "SK_1_Amir", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         String path = \"https://www.imdb.com/\";\n         WebDriverWait wait = new WebDriverWait(driver, 1000);\n \n         driver.get(path);\n         driver.findElement(By.className(\"imdb-header__signin-text\")).click();\n         WebElement signInDiv = driver.findElement(By.id(\"signin-options\"));\n         List<WebElement> signInOptions = signInDiv.findElements(By.className(\"list-group-item\"));\n         Assert.assertTrue(signInOptions.size() > 1);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[text()='Create a New Account']\"))).click();\n \n         String userName = \"some name\";\n         driver.findElement(By.id(\"ap_customer_name\")).sendKeys(userName);\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"some@email.com\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"Password1\");\n         driver.findElement(By.id(\"ap_password_check\")).sendKeys(\"Password1\");\n         driver.findElement(By.xpath(\"//input[@type='submit']\")).click();\n \n         String userNameFromPage = wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"navbar__user-name\"))).getText();\n         Assert.assertEquals(userNameFromPage, userName);\n     }\n"}
{"repo_name": "SK_2_Amir", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         String path = \"https://www.imdb.com/\";\n         WebDriverWait wait = new WebDriverWait(driver, 1000);\n \n         driver.get(path);\n         driver.findElement(By.className(\"imdb-header__signin-text\")).click();\n         WebElement signInDiv = driver.findElement(By.id(\"signin-options\"));\n         List<WebElement> signInOptions = signInDiv.findElements(By.className(\"list-group-item\"));\n         Assert.assertTrue(signInOptions.size() > 1);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//span[text()='Sign in with IMDb']\"))).click();\n         String userName = \"some name\";\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"some@email.com\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"Password1\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n         String userNameFromPage = wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"navbar__user-name\"))).getText();\n         Assert.assertEquals(userNameFromPage, userName);\n     }\n"}
{"repo_name": "SK_3_Amir", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/IMDB.java", "content": "    public void function() {\n         String path = \"https://www.imdb.com/\";\n         WebDriverWait wait = new WebDriverWait(driver, 1000);\n         driver.get(path);\n         driver.findElement(By.className(\"imdb-header__signin-text\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//span[text()='Sign in with IMDb']\"))).click();\n         driver.findElement(By.id(\"ap_email\")).sendKeys(\"amirbenami21@gmail.com\");\n         driver.findElement(By.id(\"ap_password\")).sendKeys(\"nba12345\");\n         driver.findElement(By.id(\"signInSubmit\")).click();\n         WebElement featureTodaySection = driver.findElement(By.xpath(\"//*[text()='Featured today']/../..\"));\n         driver.switchTo().frame(featureTodaySection);\n         featureTodaySection.findElement(By.xpath(\"//span[text()='Photos']\"));\n         featureTodaySection.findElement(By.className(\"ipc-media__img\"));\n         driver.switchTo().defaultContent();\n         WebElement whatToSee = driver.findElement(By.xpath(\"//*[text()='What to watch']/../../..\"));\n         Assert.assertTrue(whatToSee.findElements(By.className(\"ipc-media__img\")).size() > 1);\n \n         driver.switchTo().frame(whatToSee.findElement(By.xpath(\"//span[text()='Cruella']/../..\")));\n         WebElement watchlistButton = driver.findElement(By.xpath(\"//*[text()='Watchlist']/..\"));\n         driver.switchTo().frame(watchlistButton);\n         Assert.assertTrue(driver.findElement(By.className(\"ipc-icon--add\")).isDisplayed());\n         watchlistButton.click();\n         Assert.assertTrue(driver.findElement(By.className(\"ipc-icon--done\")).isDisplayed());\n         driver.switchTo().defaultContent();\n     }\n"}
