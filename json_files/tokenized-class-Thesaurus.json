{"repo_name": "SK_1_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Sign up for an account']\"))).click();\n         assertTrue(driver.findElement(By.cssSelector(\"[aria-label='sign up']\")).isDisplayed());\n         List<String> inputNames = new ArrayList<>(Arrays.asList(\"firstName\", \"lastName\", \"email\", \"password\"));\n         for (String name : inputNames) {\n             assertTrue(driver.findElement(By.cssSelector(\"[name='\" + name + \"']\")).isDisplayed());\n         }\n     }\n"}
{"repo_name": "SK_2_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//*[@data-testid='wotd']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         assertTrue(element.findElement(By.tagName(\"a\")).isDisplayed());\n         String date = element.findElement(By.cssSelector(\".colored-card div:nth-child(3) div:nth-child(2)\")).getText();\n         LocalDate currentDate = LocalDate.now();\n         String expectedDate = currentDate.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\", Locale.ENGLISH)).toUpperCase();\n         assertEquals(expectedDate, date);\n     }\n"}
{"repo_name": "SK_3_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='BROWSE THESAURUS.COM']\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         List<WebElement> elementsList = element.findElements(By.xpath(\".//ancestor::section/descendant::ul[@data-linkid]/li/a\"));\n         for (int i = 0; i < elementsList.size(); i++) {\n             String expected = (char) (i + 64) + String.valueOf((char) (i + 96));\n             if (i == 0)\n                 expected = \"#\";\n             assertEquals(expected, elementsList.get(i).getText());\n         }\n     }\n"}
{"repo_name": "SK_4_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='BROWSE THESAURUS.COM']/ancestor::section\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element.findElement(By.xpath(\".//descendant::a[text()='#']\")).click();\n         assertTrue(driver.findElement(By.tagName(\"h1\")).getText().contains(\"NUMERALS & DIACRITICS\"));\n         driver.findElement(By.xpath(\"//a[text()='0']\")).click();\n         assertEquals(\"0\", driver.findElement(By.tagName(\"h1\")).getText());\n         assertEquals(\"0\", driver.findElement(By.cssSelector(\"[type='search']\")).getAttribute(\"value\"));\n     }\n"}
{"repo_name": "SK_5_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         assertEquals(\"DICTIONARY.COM\", driver.findElement(By.id(\"dictionary-nav-tab\")).getText());\n         assertEquals(\"THESAURUS.COM\", driver.findElement(By.id(\"thesaurus-nav-tab\")).getText());\n         List<WebElement> navTitleElements = driver.findElements(\n                 By.cssSelector(\"[aria-label='Site Navigation'] ul > li[data-current-active] > button\"));\n         List<String> expectedTitles = new ArrayList<>(\n                 Arrays.asList(\"MEANINGS\", \"GAMES\", \"LEARN\", \"WRITING\", \"WORD OF THE DAY\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navTitleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "SK_6_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='MEANINGS']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//../descendant::ul/../..\")).getCssValue(\"display\"));\n         List<WebElement> navTitleElements = element.findElements(By.xpath(\".//../descendant::ul/li/a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Emoji\", \"Slang\", \"Acronyms\", \"Pop Culture\", \"Memes\", \"Gender And Sexuality\", \"Mixed-Up Meanings\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navTitleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "SK_7_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='GAMES']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//../descendant::ul/../..\")).getCssValue(\"display\"));\n         List<WebElement> navTitleElements = element.findElements(By.xpath(\".//../descendant::ul/li/a\"));\n         List<String> expectedTitles = new ArrayList<>(\n                 Arrays.asList(\"Word Puzzle\", \"Quizzes\", \"Crossword Solver\", \"Scrabble Word Finder\",\n                         \"Words With Friends Cheat\", \"Daily Crossword Puzzle\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navTitleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "SK_8_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='LEARN']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//../descendant::ul/../..\")).getCssValue(\"display\"));\n         List<WebElement> navTitleElements = element.findElements(By.xpath(\".//../descendant::ul/li/a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Lists\", \"Online Tutors\", \"New Words\",\n                 \"Trending Words\", \"All About English\", \"Science And Technology\", \"Literature And Arts\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navTitleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "SK_9_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='WRITING']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//../descendant::ul/../..\")).getCssValue(\"display\"));\n         List<WebElement> navTitleElements = element.findElements(By.xpath(\".//../descendant::ul/li/a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Grammar Coach\", \"Writing Prompts\", \"Grammar 101\", \"Writing Tips\", \"Ways To Say It Better\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navTitleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "SK_10_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='WORD OF THE DAY']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//../descendant::ul/../..\")).getCssValue(\"display\"));\n         List<WebElement> navTitleElements = element.findElements(By.xpath(\".//../descendant::ul/li/a\"));\n         List<String> expectedTitles = new ArrayList<>(\n                 Arrays.asList(\"Word Of The Day\", \"Synonym Of The Day\", \"Word Of The Year\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navTitleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "SK_11_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"active-synonyms\"));\n         element.click();\n         assertNotEquals(\"max-height: 0px;\",\n                 element.findElement(By.xpath(\"//*[@id='definitions-filter']/..\")).getAttribute(\"style\"));\n         assertTrue(element.findElement(By.xpath(\"//*[text()='DEFINITIONS']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_12_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='MOST SEARCHED WORDS']/ancestor::section/following-sibling::*\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         WebElement inputElement = element.findElement(By.tagName(\"input\"));\n         assertEquals(\"Enter your email\", inputElement.getAttribute(\"aria-label\"));\n         inputElement.sendKeys(\"testmanqa1@gmail.com\");\n         actions.moveToElement(element.findElement(By.xpath(\"./following-sibling::*\"))).perform();\n         actions.moveToElement(element.findElement(By.tagName(\"button\"))).click().perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertEquals(\"You've been subscribed. New words are on the way!\",\n                 wait.until(ExpectedConditions.presenceOfNestedElementLocatedBy(element,\n                         By.xpath(\"//*[contains(text(), 'subscribed')]\"))).getText());\n     }\n"}
{"repo_name": "SK_13_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//h2[text()='MOST SEARCHED WORDS']/ancestor::section/following-sibling::*[2]\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//h2[text()='GRAMMAR & WRITING TIPS']\"))));\n         List<WebElement> linkElements = driver.findElements(By.cssSelector(\"[data-testid='thumbnail-card'] > a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"ways-to-say\", \"plagiarism\", \"gerund\"));\n         for (int i = 0; i < linkElements.size(); i++) {\n             assertTrue(linkElements.get(i).getAttribute(\"href\").contains(expectedTitles.get(i)));\n         }\n     }\n"}
{"repo_name": "SK_14_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.id(\"searchbar_input\")).sendKeys(\"acrobat\");\n         driver.findElement(By.id(\"search-submit\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertEquals(\"SYNONYMS FOR acrobat\",\n                 wait.until(ExpectedConditions.presenceOfElementLocated(\n                         By.cssSelector(\"[data-testid='word-grid-section-heading']\"))).getText());\n         assertTrue(driver.findElement(By.cssSelector(\"#meanings [data-testid='word-grid-container'] li\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_16_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.id(\"searchbar_input\")).sendKeys(\"acrobat\");\n         driver.findElement(By.id(\"search-submit\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertEquals(\"SYNONYMS FOR acrobat\",\n                 wait.until(ExpectedConditions.presenceOfElementLocated(\n                         By.cssSelector(\"[data-testid='word-grid-section-heading']\"))).getText());\n         assertTrue(driver.findElement(By.cssSelector(\"#meanings [data-testid='word-grid-container'] li\")).isDisplayed());\n         driver.findElement(By.cssSelector(\"[aria-label='save word']\")).click();\n         assertTrue(driver.findElement(By.cssSelector(\"[aria-label='sign up']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_17_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"active-synonyms\"));\n         element.click();\n         element.findElement(By.xpath(\"//*[text()='DEFINITIONS']\")).click();\n         assertTrue(driver.findElement(By.id(\"active-definitions\")).isDisplayed());\n         driver.findElement(By.id(\"searchbar_input\")).sendKeys(\"acrobat\");\n         driver.findElement(By.id(\"search-submit\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.attributeContains(By.id(\"dictionary-nav-tab\"), \"class\", \"header-tab-active\"));\n         assertEquals(\"a skilled performer of gymnastic feats, as walking on a tightrope or swinging on a trapeze.\",\n                 driver.findElement(By.cssSelector(\"[value='1']\")).getText());\n     }\n"}
{"repo_name": "SK_18_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"active-synonyms\"));\n         element.click();\n         element.findElement(By.xpath(\"//*[text()='DEFINITIONS']\")).click();\n         assertTrue(driver.findElement(By.id(\"active-definitions\")).isDisplayed());\n         driver.findElement(By.id(\"searchbar_input\")).sendKeys(\"acrobat\");\n         driver.findElement(By.id(\"search-submit\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.attributeContains(By.id(\"dictionary-nav-tab\"), \"class\", \"header-tab-active\"));\n         assertEquals(\"a skilled performer of gymnastic feats, as walking on a tightrope or swinging on a trapeze.\",\n                 driver.findElement(By.cssSelector(\"[value='1']\")).getText());\n \n         driver.findElement(By.xpath(\"//*[contains(text(), 'See')]\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         wait.until(ExpectedConditions.attributeContains(By.id(\"thesaurus-nav-tab\"), \"class\", \"header-tab-active\"));\n         List<WebElement> synonymsElements = driver.findElements(By.cssSelector(\"#meanings [data-testid='word-grid-container'] a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"clown\", \"dancer\", \"gymnast\", \"performer\", \"tumbler\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : synonymsElements) {\n             if (element.getCssValue(\"background-color\").equals(\"rgba(244, 71, 37, 1)\"))\n                 actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n     }\n"}
{"repo_name": "SK_19_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.tagName(\"footer\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         element.findElement(By.id(\"facebook\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n \n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.attributeToBe(By.tagName(\"html\"), \"id\", \"facebook\"));\n         assertEquals(\"Thesaurus.com\", driver.findElement(By.tagName(\"h1\")).getText());\n         assertEquals(\"@thesauruscom\", driver.findElement(By.cssSelector(\"a[data-hover]\")).getText());\n     }\n"}
{"repo_name": "SK_20_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.tagName(\"footer\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         element.findElement(By.id(\"twitter\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n \n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[contains(text(), 'Twitter, Inc.')]\")));\n         assertEquals(\"Thesaurus.com\\n@thesauruscom\",\n                 driver.findElement(By.cssSelector(\"[data-testid='UserName']\")).getText());\n     }\n"}
{"repo_name": "SK_21_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.tagName(\"footer\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         element.findElement(By.id(\"instagram\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n \n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//img[@alt='Instagram']\")));\n         assertEquals(\"Thesaurus.com\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_22_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.tagName(\"footer\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         element.findElement(By.id(\"pinterest\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n \n         WebDriverWait wait = new WebDriverWait(driver, 100);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h2\"), \"Pinterest\"));\n         assertEquals(\"Thesaurus.com\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_23_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.tagName(\"footer\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         WebElement inputElement = element.findElement(By.tagName(\"input\"));\n         assertEquals(\"Enter your email\", inputElement.getAttribute(\"aria-label\"));\n         inputElement.sendKeys(\"testmanqa1@gmail.com\");\n         assertEquals(\"Valid email address\", driver.findElement(By.cssSelector(\"[opacity='1']\")).getText());\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         actions.moveToElement(element.findElement(By.tagName(\"button\"))).click().perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertEquals(\"You've been subscribed. New words are on the way!\",\n                 wait.until(ExpectedConditions.presenceOfNestedElementLocatedBy(element,\n                         By.xpath(\"//*[contains(text(), 'subscribed')]\"))).getText());\n     }\n"}
{"repo_name": "SK_24_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.tagName(\"footer\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         WebElement inputElement = element.findElement(By.tagName(\"input\"));\n         assertEquals(\"Enter your email\", inputElement.getAttribute(\"aria-label\"));\n         inputElement.sendKeys(\"abcd123\");\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         actions.moveToElement(element.findElement(By.tagName(\"button\"))).click().perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertEquals(\"Uh oh! We spotted an email error. Please re-enter!\",\n                 wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[opacity='1']\"))).getText());\n     }\n"}
{"repo_name": "SK_25_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         WebDriverManager.edgedriver().setup();\n         EdgeDriver driver2 = new EdgeDriver();\n         driver2.manage().window().maximize();\n         driver2.get(\"https://www.thesaurus.com/\");\n         WebDriverWait wait = new WebDriverWait(driver2, 10);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Sign up for an account']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='sign up']\")));\n         assertEquals(\"https://www.dictionary.com/sign-up?redirect=https://www.thesaurus.com/\", driver2.getCurrentUrl());\n         driver2.findElement(By.cssSelector(\"[name='firstName']\")).sendKeys(\"test\");\n         driver2.findElement(By.cssSelector(\"[name='lastName']\")).sendKeys(\"1\");\n         driver2.findElement(By.cssSelector(\"[name='email']\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver2.findElement(By.cssSelector(\"[name='password']\")).sendKeys(\"Test123!\");\n         driver2.findElement(By.cssSelector(\"[aria-label='sign up']\")).click();\n         wait.until(ExpectedConditions.attributeContains(By.id(\"thesaurus-nav-tab\"), \"class\", \"header-tab-active\"));\n         driver2.findElement(By.xpath(\"//*[@data-account-icon-signedin]/..\")).click();\n         assertNotEquals(\"none\", driver2.findElement(By.cssSelector(\"[data-access-menu]\")).getCssValue(\"display\"));\n         assertEquals(\"tamar.gur@outlook.co.il\", driver2.findElement(By.cssSelector(\"[data-email-display]\")).getText());\n         driver2.quit();\n     }\n"}
{"repo_name": "SK_26_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Sign up for an account']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//button[text()='Log In']\"))).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h3\"), \"Welcome Back\"));\n         driver.findElement(By.cssSelector(\"[name='email']\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.cssSelector(\"[name='password']\")).sendKeys(\"Test123!\");\n         driver.findElement(By.xpath(\"//button[text()='Log In']\")).click();\n         wait.until(ExpectedConditions.attributeContains(By.id(\"thesaurus-nav-tab\"), \"class\", \"header-tab-active\"));\n \n         driver.findElement(By.id(\"searchbar_input\")).sendKeys(\"people\");\n         driver.findElement(By.id(\"search-submit\")).click();\n         assertEquals(\"SYNONYMS FOR people\",\n                 wait.until(ExpectedConditions.presenceOfElementLocated(\n                         By.cssSelector(\"[data-testid='word-grid-section-heading']\"))).getText());\n         assertTrue(driver.findElement(By.cssSelector(\"#meanings [data-testid='word-grid-container'] li\")).isDisplayed());\n \n         element = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.cssSelector(\"[aria-label='save word']\"))));\n         element.click();\n         wait.until(ExpectedConditions.attributeToBe(element, \"aria-label\", \"delete word\"));\n         assertEquals(\"rgba(255, 182, 0, 1)\", element.findElement(By.xpath(\"./*\")).getCssValue(\"color\"));\n         driver.findElement(By.xpath(\"//*[@data-account-icon-signedin]/..\")).click();\n         driver.findElement(By.xpath(\"//*[@data-access-menu]//a[text()='Word Lists']\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Favorites']\"))).click();\n         assertTrue(driver.findElement(By.xpath(\"//*[@data-testid='word-wrapper']/*[text()='people']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_27_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Sign up for an account']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//button[text()='Log In']\"))).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h3\"), \"Welcome Back\"));\n         driver.findElement(By.cssSelector(\"[name='email']\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.cssSelector(\"[name='password']\")).sendKeys(\"Test123!\");\n         driver.findElement(By.xpath(\"//button[text()='Log In']\")).click();\n         wait.until(ExpectedConditions.attributeContains(By.id(\"thesaurus-nav-tab\"), \"class\", \"header-tab-active\"));\n \n         driver.findElement(By.id(\"searchbar_input\")).sendKeys(\"acrobat\");\n         driver.findElement(By.id(\"search-submit\")).click();\n         assertEquals(\"SYNONYMS FOR acrobat\",\n                 wait.until(ExpectedConditions.presenceOfElementLocated(\n                         By.cssSelector(\"[data-testid='word-grid-section-heading']\"))).getText());\n         assertTrue(driver.findElement(By.cssSelector(\"#meanings [data-testid='word-grid-container'] li\")).isDisplayed());\n \n         element = wait.until(ExpectedConditions.elementToBeClickable(driver.findElement(By.cssSelector(\"[aria-label='save word']\"))));\n         element.click();\n         wait.until(ExpectedConditions.attributeToBe(element, \"aria-label\", \"delete word\"));\n         assertEquals(\"rgba(255, 182, 0, 1)\", element.findElement(By.xpath(\"./*\")).getCssValue(\"color\"));\n         driver.findElement(By.xpath(\"//*[@data-account-icon-signedin]/..\")).click();\n         driver.findElement(By.xpath(\"//*[@data-access-menu]//a[text()='Word Lists']\")).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"My Lists\"));\n         driver.findElement(By.xpath(\"//button[text()='New List']\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//h3[text()='Create a new list']\")));\n         driver.findElement(By.cssSelector(\"[name='listName']\")).sendKeys(\"test\");\n         driver.findElement(By.xpath(\"//*[text()='Select a Category']\")).click();\n         driver.findElement(By.xpath(\"//*[text()='General']\")).click();\n         driver.findElement(By.cssSelector(\"[name='listDescription']\")).sendKeys(\"...\");\n         Actions actions = new Actions(driver);\n         element = driver.findElements(By.cssSelector(\"input[type='checkbox']\")).get(1);\n         actions.moveToElement(element).click(element).perform();\n         driver.findElement(By.cssSelector(\"[data-testid='CreateListCTA']\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='test']\")));\n     }\n"}
{"repo_name": "SK_28_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Sign up for an account']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//button[text()='Log In']\"))).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h3\"), \"Welcome Back\"));\n         driver.findElement(By.cssSelector(\"[name='email']\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.cssSelector(\"[name='password']\")).sendKeys(\"Test123!\");\n         driver.findElement(By.xpath(\"//button[text()='Log In']\")).click();\n         wait.until(ExpectedConditions.attributeContains(By.id(\"thesaurus-nav-tab\"), \"class\", \"header-tab-active\"));\n \n         driver.findElement(By.xpath(\"//*[@data-account-icon-signedin]/..\")).click();\n         driver.findElement(By.xpath(\"//*[@data-access-menu]//a[text()='Word Lists']\")).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"My Lists\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='kebab menu']\"))).click();\n         List<WebElement> menuButtonElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n                 By.cssSelector(\".floating-nav-enter-done > button\")));\n         List<String> expectedTitles = new ArrayList<>(\n                 Arrays.asList(\"Launch Flashcards\", \"Take a Multiple Choice Quiz\", \"Take a Spelling Quiz\",\n                         \"Edit List Details\", \"Copy Link\", \"Delete List\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : menuButtonElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         menuButtonElements.get(3).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//h3[text()='Edit list details']\")));\n         driver.findElement(By.xpath(\"//*[@for='listCategory']/../*[@tabindex]\")).click();\n         driver.findElement(By.xpath(\"//*[text()='Fun']\")).click();\n         driver.findElement(By.xpath(\"//button[text()='Save Changes']\")).click();\n     }\n"}
{"repo_name": "SK_29_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Sign up for an account']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//button[text()='Log In']\"))).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h3\"), \"Welcome Back\"));\n         driver.findElement(By.cssSelector(\"[name='email']\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.cssSelector(\"[name='password']\")).sendKeys(\"Test123!\");\n         driver.findElement(By.xpath(\"//button[text()='Log In']\")).click();\n         wait.until(ExpectedConditions.attributeContains(By.id(\"thesaurus-nav-tab\"), \"class\", \"header-tab-active\"));\n \n         driver.findElement(By.xpath(\"//*[@data-account-icon-signedin]/..\")).click();\n         driver.findElement(By.xpath(\"//*[@data-access-menu]//a[text()='Word Lists']\")).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"My Lists\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='kebab menu']\"))).click();\n         List<WebElement> menuButtonElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n                 By.cssSelector(\".floating-nav-enter-done > button\")));\n         List<String> expectedTitles = new ArrayList<>(\n                 Arrays.asList(\"Launch Flashcards\", \"Take a Multiple Choice Quiz\", \"Take a Spelling Quiz\",\n                         \"Edit List Details\", \"Copy Link\", \"Delete List\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : menuButtonElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         menuButtonElements.get(4).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text()='Link Copied!']\")));\n         try {\n             Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();\n             Object copiedData = clipboard.getData(DataFlavor.stringFlavor);\n             driver.get(copiedData.toString());\n             assertEquals(\"https://www.dictionary.com/learn/word-lists/general/JyYBLjenBKE\", driver.getCurrentUrl());\n         } catch (IOException | UnsupportedFlavorException e) {\n             e.printStackTrace();\n         }\n     }\n"}
{"repo_name": "SK_30_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.thesaurus.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Sign up for an account']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//button[text()='Log In']\"))).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h3\"), \"Welcome Back\"));\n         driver.findElement(By.cssSelector(\"[name='email']\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.cssSelector(\"[name='password']\")).sendKeys(\"Test123!\");\n         driver.findElement(By.xpath(\"//button[text()='Log In']\")).click();\n         wait.until(ExpectedConditions.attributeContains(By.id(\"thesaurus-nav-tab\"), \"class\", \"header-tab-active\"));\n \n         driver.findElement(By.xpath(\"//*[@data-account-icon-signedin]/..\")).click();\n         driver.findElement(By.xpath(\"//*[@data-access-menu]//a[text()='Word Lists']\")).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"My Lists\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='kebab menu']\"))).click();\n         List<WebElement> menuButtonElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n                 By.cssSelector(\".floating-nav-enter-done > button\")));\n         List<String> expectedTitles = new ArrayList<>(\n                 Arrays.asList(\"Launch Flashcards\", \"Take a Multiple Choice Quiz\", \"Take a Spelling Quiz\",\n                         \"Edit List Details\", \"Copy Link\", \"Delete List\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : menuButtonElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         menuButtonElements.get(5).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//h3[text()='Delete List']\")));\n         assertTrue(driver.findElement(By.xpath(\"//button[@type='submit' and text()='Keep List']\")).isDisplayed());\n         element = driver.findElement(By.xpath(\"//button[@type='submit' and text()='Delete List']\"));\n         assertTrue(element.isDisplayed());\n         element.click();\n         Thread.sleep(2000);\n         assertEquals(0, driver.findElements(By.xpath(\"//*[text()='test']\")).size());\n     }\n"}
{"repo_name": "SK_31_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Sign up for an account']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//button[text()='Log In']\"))).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h3\"), \"Welcome Back\"));\n         driver.findElement(By.cssSelector(\"[name='email']\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.cssSelector(\"[name='password']\")).sendKeys(\"Test123!\");\n         driver.findElement(By.xpath(\"//button[text()='Log In']\")).click();\n         wait.until(ExpectedConditions.attributeContains(By.id(\"thesaurus-nav-tab\"), \"class\", \"header-tab-active\"));\n \n         driver.findElement(By.xpath(\"//*[@data-account-icon-signedin]/..\")).click();\n         assertNotEquals(\"none\", driver.findElement(By.cssSelector(\"[data-access-menu]\")).getCssValue(\"display\"));\n         List<WebElement> optionElements = driver.findElements(By.cssSelector(\"[data-access-menu] ul a\"));\n         List<String> expectedTitles = new ArrayList<>(\n                 Arrays.asList(\"Word Lists\", \"Account Settings\", \"Subscriptions\", \"Help Center\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : optionElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         assertEquals(\"Sign Out\", driver.findElement(By.cssSelector(\"[data-access-menu] ul button\")).getText());\n \n         optionElements.get(1).click();\n         driver.findElement(By.xpath(\"//*[@name='firstName']//following-sibling::button\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//h3[text()='Update Your Name']\")));\n         element = driver.findElement(By.cssSelector(\"[name='newFirstName']\"));\n         assertTrue(element.isDisplayed());\n         element.sendKeys(\"Alwana\");\n         element = driver.findElement(By.cssSelector(\"[name='newLastName']\"));\n         assertTrue(element.isDisplayed());\n         element.sendKeys(\"1\");\n         driver.findElement(By.xpath(\"//*[text()='Update your name']\")).click();\n         assertEquals(\"Alwana\", driver.findElement(By.cssSelector(\"[name='firstName']\")).getAttribute(\"value\"));\n     }\n"}
{"repo_name": "SK_32_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         assertTrue(driver.findElement(By.id(\"active-synonyms\")).isDisplayed());\n         driver.findElement(By.id(\"search-submit\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertEquals(\"SYNONYMS FOR search\",\n                 wait.until(ExpectedConditions.presenceOfElementLocated(\n                         By.cssSelector(\"[data-testid='word-grid-section-heading']\"))).getText());\n     }\n"}
{"repo_name": "SK_33_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         assertTrue(driver.findElement(By.id(\"active-synonyms\")).isDisplayed());\n         driver.findElement(By.id(\"searchbar_input\")).sendKeys(\"golf\");\n         driver.findElement(By.id(\"search-submit\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertEquals(\"SYNONYMS FOR golf\",\n                 wait.until(ExpectedConditions.presenceOfElementLocated(\n                         By.cssSelector(\"[data-testid='word-grid-section-heading']\"))).getText());\n         assertEquals(\"Thesaurus / golf\", driver.findElement(By.cssSelector(\"[data-testid='breadcrumbs']\")).getText());\n     }\n"}
{"repo_name": "SK_34_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(\"[aria-label='Sign up for an account']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//button[text()='Log In']\"))).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h3\"), \"Welcome Back\"));\n         driver.findElement(By.cssSelector(\"[name='email']\")).sendKeys(\"tamar.gur@outlook.co.il\");\n         driver.findElement(By.cssSelector(\"[name='password']\")).sendKeys(\"Test123!\");\n         driver.findElement(By.xpath(\"//button[text()='Log In']\")).click();\n         wait.until(ExpectedConditions.attributeContains(By.id(\"thesaurus-nav-tab\"), \"class\", \"header-tab-active\"));\n \n         driver.findElement(By.xpath(\"//*[@data-account-icon-signedin]/..\")).click();\n         assertNotEquals(\"none\", driver.findElement(By.cssSelector(\"[data-access-menu]\")).getCssValue(\"display\"));\n         List<WebElement> optionElements = driver.findElements(By.cssSelector(\"[data-access-menu] ul a\"));\n         List<String> expectedTitles = new ArrayList<>(\n                 Arrays.asList(\"Word Lists\", \"Account Settings\", \"Subscriptions\", \"Help Center\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : optionElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         assertEquals(\"Sign Out\", driver.findElement(By.cssSelector(\"[data-access-menu] ul button\")).getText());\n \n         optionElements.get(1).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[text()='DELETE ACCOUNT']\"))).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//h3[text()='DELETE ACCOUNT']\")));\n         assertTrue(driver.findElement(By.xpath(\"//button[text()='KEEP ACCOUNT']\")).isDisplayed());\n         element = driver.findElement(By.xpath(\"//button[text()='DELETE ACCOUNT']\"));\n         assertTrue(element.isDisplayed());\n         element.click();\n     }\n"}
{"repo_name": "SK_35_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         assertTrue(driver.findElement(By.id(\"active-synonyms\")).isDisplayed());\n         driver.findElement(By.id(\"searchbar_input\")).sendKeys(\"gather\");\n         driver.findElement(By.id(\"search-submit\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertEquals(\"SYNONYMS FOR gather\",\n                 wait.until(ExpectedConditions.presenceOfElementLocated(\n                         By.cssSelector(\"[data-testid='word-grid-section-heading']\"))).getText());\n         assertTrue(driver.findElement(By.tagName(\"nav\")).isDisplayed());\n         assertEquals(\"DICTIONARY.COM\", driver.findElement(By.id(\"dictionary-nav-tab\")).getText());\n         assertEquals(\"THESAURUS.COM\", driver.findElement(By.id(\"thesaurus-nav-tab\")).getText());\n         List<WebElement> navTitleElements = driver.findElements(\n                 By.cssSelector(\"[aria-label='Site Navigation'] ul > li[data-current-active] > button\"));\n         List<String> expectedTitles = new ArrayList<>(\n                 Arrays.asList(\"MEANINGS\", \"GAMES\", \"LEARN\", \"WRITING\", \"WORD OF THE DAY\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : navTitleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         driver.findElement(By.id(\"thesaurus-nav-tab\")).click();\n         assertTrue(driver.findElement(By.cssSelector(\"[data-testid='synonym-of-the-day']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_36_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//*[text()='WORD OF THE DAY']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList\n                 (\"Word Of The Day\", \"Synonym Of The Day\", \"Word Of The Year\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(1).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-wrapper__label\"), \"SYNONYM OF THE DAY\"));\n         element = driver.findElement(By.cssSelector(\".otd-item-headword__date > *\"));\n         LocalDate currentDate = LocalDate.now();\n         String current = currentDate.format(DateTimeFormatter.ofPattern(\"EEEE, MMMM dd, yyyy\", Locale.ENGLISH)).toUpperCase();\n         assertEquals(current, element.getText());\n     }\n"}
{"repo_name": "SK_37_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"happy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_38_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.xpath\n                 (\"//h2[text()='MOST SEARCHED WORDS']/ancestor::section/following-sibling::*\"))).click().perform();\n         element = driver.findElement(By.xpath(\"//h2[text()='MOST SEARCHED WORDS']/../following-sibling::*//a\"));\n         String mostSearchedWordText = element.getText();\n         element.click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), mostSearchedWordText));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_39_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         List<WebElement> answersElements = driver.findElements(By.xpath(\"//h2[text()='SYNONYM OF THE DAY']/following-sibling::*//a/../following-sibling::*[2]//a\"));\n         List<String> answers = new ArrayList<>();\n         for (WebElement answer : answersElements) {\n             answers.add(answer.getText());\n         }\n         answersElements.get(0).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-wrapper__label\"), \"SYNONYM OF THE DAY\"));\n         assertTrue(answers.contains(driver.findElement(By.cssSelector(\".otd-item-headword__word h2\")).getText()));\n     }\n"}
{"repo_name": "SK_40_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"active-synonyms\"));\n         element.click();\n \n         element.findElement(By.xpath(\"//*[text()='DEFINITIONS']\")).click();\n         assertTrue(driver.findElement(By.id(\"active-definitions\")).isDisplayed());\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"happy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"top-definitions-section\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_41_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.xpath(\"//*[@data-testid='wotd']//following-sibling::section\"))).perform();\n         element = driver.findElement(By.cssSelector(\"[data-testid='wotd'] a\"));\n         String word = element.getText();\n         element.click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-wrapper__label\"), \"WORD OF THE DAY\"));\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-headword__word\"), word));\n     }\n"}
{"repo_name": "SK_42_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='GAMES']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Puzzle\", \"Quizzes\", \"Crossword Solver\",\n                 \"Scrabble Word Finder\", \"Words With Friends Cheat\", \"Daily Crossword Puzzle\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(3).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Scrabble Word Finder\"));\n         assertEquals(\"Words That Start With:\", driver.findElement(By.className(\"links__title\")).getText());\n \n         List<WebElement> letters = driver.findElements(By.cssSelector(\"[title^='Words that start with']\"));\n         for (int i = 0; i < letters.size(); i++) {\n             assertEquals((char) (i + 65) + \"\" + (char) (i + 97), letters.get(i).getText());\n         }\n     }\n"}
{"repo_name": "SK_43_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='GAMES']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Puzzle\", \"Quizzes\", \"Crossword Solver\",\n                 \"Scrabble Word Finder\", \"Words With Friends Cheat\", \"Daily Crossword Puzzle\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(3).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Scrabble Word Finder\"));\n         assertEquals(\"Words That Start With:\", driver.findElement(By.className(\"links__title\")).getText());\n \n         driver.findElement(By.cssSelector(\"[title='Words that start with d']\")).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"WORDS THAT START WITH \u201cD\u201d\"));\n \n         List<WebElement> sections = driver.findElements(By.cssSelector(\".word-finder-widgets .section__body\"));\n         for (WebElement sectionElement : sections) {\n             List<WebElement> words = sectionElement.findElements(By.cssSelector(\".list--words li > a\"));\n             for (WebElement wordElement : words) {\n                 String word = wordElement.getText();\n                 if (!word.isEmpty())\n                     assertTrue(word.startsWith(\"d\"));\n             }\n         }\n \n         element = sections.get(0).findElement(By.cssSelector(\".list--words li > a\"));\n         String firstWord = element.getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), firstWord));\n         assertTrue(driver.findElement(By.id(\"top-definitions-section\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_44_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='GAMES']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Puzzle\", \"Quizzes\", \"Crossword Solver\",\n                 \"Scrabble Word Finder\", \"Words With Friends Cheat\", \"Daily Crossword Puzzle\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(3).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Scrabble Word Finder\"));\n         assertTrue(driver.findElement(By.xpath(\"//h4[contains(text(), 'Word length:')]\")).isDisplayed());\n \n         List<WebElement> buttons = driver.findElements(By.cssSelector(\"[title$='-letter']\"));\n         assertEquals(14, buttons.size());\n         for (int i = 0; i < buttons.size(); i++) {\n             assertEquals(i + 2, Integer.parseInt(buttons.get(i).getText().split(\"-\")[0]));\n         }\n     }\n"}
{"repo_name": "SK_45_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='GAMES']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Puzzle\", \"Quizzes\", \"Crossword Solver\",\n                 \"Scrabble Word Finder\", \"Words With Friends Cheat\", \"Daily Crossword Puzzle\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(3).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Scrabble Word Finder\"));\n         assertTrue(driver.findElement(By.xpath(\"//h4[contains(text(), 'Word length:')]\")).isDisplayed());\n \n         driver.findElement(By.cssSelector(\"[title='4-letter']\")).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"WORDS WITH LENGTH \u201c4\u201d\"));\n         List<WebElement> sectionTitlesElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n                 By.cssSelector(\".word-finder-widgets .section__title\")));\n         for (int i = 0; i < sectionTitlesElements.size(); i++) {\n             String text = sectionTitlesElements.get(i).getText();\n             assertEquals((char) (i + 65), text.charAt(text.length() - 1));\n             List<WebElement> words = sectionTitlesElements.get(i).findElements(\n                     By.xpath(\".//ancestor::*[@class='section__group-inner']//li/a\"));\n             String startsWithLetter = String.valueOf((char) (i + 97));\n             for (WebElement wordElement : words) {\n                 String word = wordElement.getText();\n                 if (!word.isEmpty()) {\n                     assertTrue(\"problem in word \" + word + \" letter \" + startsWithLetter, word.startsWith(startsWithLetter));\n                     assertEquals(4, word.length());\n                 }\n             }\n         }\n     }\n"}
{"repo_name": "SK_46_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='GAMES']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Puzzle\", \"Quizzes\", \"Crossword Solver\",\n                 \"Scrabble Word Finder\", \"Words With Friends Cheat\", \"Daily Crossword Puzzle\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(3).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Scrabble Word Finder\"));\n         assertTrue(driver.findElement(By.className(\"scrabble-form\")).isDisplayed());\n         driver.findElement(By.cssSelector(\".form__controls input\")).sendKeys(\"abl\");\n         driver.findElement(By.cssSelector(\"[value='find']\")).click();\n \n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\".word-finder-widgets .section__head h3\"), \"results for ABL\"));\n         List<WebElement> wordElements = driver.findElements(By.cssSelector(\".list--words a\"));\n         for (WebElement element : wordElements) {\n             String word = element.getText();\n             assertTrue(word.matches(\"^(?!.*?(.).*?\\\\1)[abl?]*$\"));\n         }\n     }\n"}
{"repo_name": "SK_47_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='GAMES']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Puzzle\", \"Quizzes\", \"Crossword Solver\",\n                 \"Scrabble Word Finder\", \"Words With Friends Cheat\", \"Daily Crossword Puzzle\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(3).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Scrabble Word Finder\"));\n         assertTrue(driver.findElement(By.className(\"scrabble-form\")).isDisplayed());\n         driver.findElement(By.cssSelector(\".form__controls input\")).sendKeys(\"blagin\");\n \n         driver.findElement(By.cssSelector(\"a.advanced-toggle\")).click();\n         assertNotEquals(\"none\", driver.findElement(By.cssSelector(\".form__row--advanced\")).getCssValue(\"display\"));\n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> inputElements = driver.findElements(By.cssSelector(\n                 \".scrabble-form:first-of-type .form__controls--advanced input\"));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"Starts with\", \"Includes\", \"Ends with\", \"Apply\"));\n         for (WebElement element : inputElements) {\n             String placeHolder = element.getAttribute(\"placeholder\");\n             if (placeHolder.isEmpty())\n                 actualTitles.add(element.getAttribute(\"value\"));\n             else\n                 actualTitles.add(placeHolder);\n         }\n         assertEquals(expectedTitles, actualTitles);\n         inputElements.get(0).sendKeys(\"b\");\n         inputElements.get(1).sendKeys(\"i\");\n         inputElements.get(2).sendKeys(\"g\");\n         inputElements.get(3).click();\n \n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.cssSelector(\".word-finder-widgets .section__head h3\"), \"results for BLAGIN\"));\n         List<WebElement> wordElements = driver.findElements(By.cssSelector(\".list--words a\"));\n         for (WebElement element : wordElements) {\n             String word = element.getText();\n             assertTrue(word.matches(\"^(?!.*?(.).*?\\\\1)[blagin?]*$\"));\n             assertTrue(word.matches(\"^[b].*[i].*[g]$\"));\n         }\n     }\n"}
{"repo_name": "SK_48_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='LEARN']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Lists\", \"Online Tutors\", \"New Words\",\n                 \"Trending Words\", \"All About English\", \"Science And Technology\", \"Literature And Arts\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(0).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Word Lists & Flashcards\"));\n         assertTrue(driver.findElement(By.xpath(\"//h3[text()='Featured Lists']\")).isDisplayed());\n         List<WebElement> featuredLists = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n                 By.cssSelector(\"[data-testid='word-list-hub-card-featured']\")));\n         assertEquals(3, featuredLists.size());\n         String listName = featuredLists.get(0).findElement(By.tagName(\"div\")).getText();\n         featuredLists.get(0).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), listName));\n         assertTrue(driver.findElement(By.cssSelector(\"[data-testid='word-wrapper']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_49_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='LEARN']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Lists\", \"Online Tutors\", \"New Words\",\n                 \"Trending Words\", \"All About English\", \"Science And Technology\", \"Literature And Arts\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(0).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Word Lists & Flashcards\"));\n         assertTrue(driver.findElement(By.xpath(\"//h3[text()='All Lists']\")).isDisplayed());\n         driver.findElement(By.tagName(\"select\")).click();\n         driver.findElement(By.xpath(\"//*[text()='A - Z']\")).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-testid='word-list-hub-show-more-button']\"))).click();\n         Thread.sleep(2000);\n         List<WebElement> listElements = wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(\n                 By.cssSelector(\"[data-testid='word-list-hub-card']\")));\n         for (int i = 0; i < listElements.size() - 1; i++) {\n             String currentText = listElements.get(i).findElement(By.tagName(\"div\")).getText().replaceAll(\" \", \"\");\n             String nextText = listElements.get(i + 1).findElement(By.tagName(\"div\")).getText().replaceAll(\" \", \"\");\n             assertTrue(currentText + \", \" + nextText, currentText.compareTo(nextText) < 0);\n         }\n     }\n"}
{"repo_name": "SK_50_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='LEARN']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Lists\", \"Online Tutors\", \"New Words\",\n                 \"Trending Words\", \"All About English\", \"Science And Technology\", \"Literature And Arts\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(0).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Word Lists & Flashcards\"));\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(\n                 By.xpath(\"//*[text()='Would you like to contribute to the community?']\")));\n         element = element.findElement(By.xpath(\".//following-sibling::*/button\"));\n         assertEquals(\"Create A List\", element.getText());\n         element.click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h3\"), \"Build Your Own Word Lists!\"));\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"button[aria-label='sign up']\")));\n         assertEquals(\"rgba(0, 36, 139, 1)\", element.getCssValue(\"background-color\"));\n     }\n"}
{"repo_name": "SK_51_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='GAMES']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Puzzle\", \"Quizzes\", \"Crossword Solver\",\n                 \"Scrabble Word Finder\", \"Words With Friends Cheat\", \"Daily Crossword Puzzle\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(1).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Quizzes\"));\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-testid='quiz-hub-card-featured']\")));\n         String quizName = element.getText().toUpperCase(Locale.ROOT);\n         if (!quizName.matches(\"^[a-zA-Z0-9]\"))\n             quizName = quizName.substring(2).trim();\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), quizName));\n         By statusLocator = By.xpath(\"//*[contains(text(), 'Question')]\");\n         String status = driver.findElement(statusLocator).getText();\n         int numberOfQuestions = Integer.parseInt(status.substring(status.lastIndexOf(' ') + 1));\n         for (int i = 0; i < numberOfQuestions; i++) {\n             wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-quiz-answer]\"))).click();\n             if (i == numberOfQuestions - 1)\n                 wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[text() = 'SEE RESULTS']\"))).click();\n             else {\n                 wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-next-question-button]\"))).click();\n                 wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(statusLocator, status)));\n                 status = driver.findElement(statusLocator).getText();\n             }\n         }\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//*[contains(text(), ' / \" + numberOfQuestions + \"')]\")));\n         assertTrue(element.getText(), element.getText().trim().matches(\"^\\\\d.*\"));\n     }\n"}
{"repo_name": "SK_52_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='GAMES']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Puzzle\", \"Quizzes\", \"Crossword Solver\",\n                 \"Scrabble Word Finder\", \"Words With Friends Cheat\", \"Daily Crossword Puzzle\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(1).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Quizzes\"));\n         element = driver.findElement(By.cssSelector(\"[data-testid='Word Lists-test']\"));\n         assertTrue(element.isDisplayed());\n         assertTrue(driver.findElement(By.cssSelector(\"[data-testid='Quizzes-test']\")).isDisplayed());\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Word Lists & Flashcards\"));\n     }\n"}
{"repo_name": "SK_53_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='MEANINGS']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Emoji\", \"Slang\", \"Acronyms\", \"Pop Culture\", \"Memes\", \"Gender And Sexuality\", \"Mixed-Up Meanings\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(0).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"EMOJI DICTIONARY\"));\n         assertEquals(\"FEATURED TERMS\", driver.findElement(By.tagName(\"h2\")).getText());\n         element = driver.findElement(By.cssSelector(\".slick-track .word-item h2 a\"));\n         String title = element.getText();\n         element.click();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"article-word__title\")));\n         assertEquals(title, element.getText().toUpperCase(Locale.ROOT));\n     }\n"}
{"repo_name": "SK_54_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='MEANINGS']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Emoji\", \"Slang\", \"Acronyms\", \"Pop Culture\", \"Memes\", \"Gender And Sexuality\", \"Mixed-Up Meanings\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(0).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"EMOJI DICTIONARY\"));\n         assertEquals(\"MORE FROM EMOJI\", driver.findElement(By.cssSelector(\"#just-added h2\")).getText());\n         List<WebElement> links = driver.findElements(By.cssSelector(\"#just-added .list a\"));\n         assertEquals(60, links.size());\n         String title = links.get(0).getText();\n         links.get(0).click();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"article-word__title\")));\n         assertEquals(title, element.getText());\n     }\n"}
{"repo_name": "SK_55_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='WRITING']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Grammar Coach\", \"Writing Prompts\", \"Grammar 101\", \"Writing Tips\", \"Ways To Say It Better\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(4).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Ways To Say\"));\n         List<WebElement> cardsCategories = driver.findElements(By.className(\"section__post-categories\"));\n         for (WebElement category : cardsCategories) {\n             assertEquals(\"Ways To Say\", category.getText());\n         }\n         element = cardsCategories.get(0).findElement(By.xpath(\".//preceding-sibling::*\"));\n         String title = element.getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.className(\"article__title\"), title.substring(0, title.length() - 3)));\n         assertTrue(driver.findElement(By.cssSelector(\".slides > [aria-label='Previous']\")).isDisplayed());\n         element = driver.findElement(By.cssSelector(\".slides > [aria-label='Next']\"));\n         assertTrue(element.isDisplayed());\n         By locator = By.cssSelector(\".slick-current h2\");\n         String current = driver.findElement(locator).getText();\n         element.click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(locator, current)));\n     }\n"}
{"repo_name": "SK_56_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"people\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"people\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n         element = driver.findElement(By.xpath(\"//*[contains(text(), 'See also synonyms for:')]//a\"));\n         String expectedTitle = element.getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), expectedTitle));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_57_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         driver.findElement(By.cssSelector(\"#about-click a\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"section-about-intro\")));\n \n         element = driver.findElement(By.className(\"section-about-chart\"));\n         actions.moveToElement(element).perform();\n         assertEquals(5, element.findElements(By.cssSelector(\".lines > li\")).size());\n     }\n"}
{"repo_name": "SK_58_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"people\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"people\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n \n         element = driver.findElement(By.id(\"example-creator\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         assertEquals(\"TRY USING people\", element.findElement(By.tagName(\"h2\")).getText());\n         element = element.findElement(By.tagName(\"input\"));\n         assertTrue(element.isDisplayed());\n         element.sendKeys(\"The people are here\");\n         driver.findElement(By.xpath(\"//button[text()='TRY NOW']\")).click();\n \n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[data-test-example-sentences]\")));\n         assertEquals(\"Showing examples for the selected word:\", element.findElement(By.tagName(\"span\")).getText());\n         List<WebElement> sentences = driver.findElements(By.cssSelector(\"[data-test-swapped-sentence]\"));\n         for (WebElement sentence : sentences) {\n             assertTrue(sentence.getText().matches(\"The .+ are here\"));\n         }\n         assertTrue(driver.findElement(By.xpath(\"//a[text()='GIVE FEEDBACK']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_59_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         element = driver.findElement(By.xpath(\"//*[text()='DOWNLOAD OUR APPS']\"));\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n         assertEquals(\"Our apps also have more than 1.5 million definitions and synonyms plus access to our \" +\n                         \"trusted reference articles. Look up the words anywhere anytime-we work offline too!\",\n                 element.findElement(By.xpath(\".//../following-sibling::p\")).getText());\n \n         driver.findElement(By.id(\"android-appstore\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Google Play Logo']\")));\n         assertEquals(\"Dictionary.com English Word Meanings & Definitions\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_60_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         element = driver.findElement(By.xpath(\"//*[text()='DOWNLOAD OUR APPS']\"));\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n         assertEquals(\"Our apps also have more than 1.5 million definitions and synonyms plus access to our \" +\n                         \"trusted reference articles. Look up the words anywhere anytime-we work offline too!\",\n                 element.findElement(By.xpath(\".//../following-sibling::p\")).getText());\n \n         driver.findElement(By.id(\"apple-appstore\")).click();\n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\"[data-test-we-localnav-store-title]\"), \"App Store\"));\n         assertTrue(driver.findElement(By.tagName(\"h1\")).getText().contains(\"Dictionary.com: English Words\"));\n     }\n"}
{"repo_name": "SK_61_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.id(\"dictionary-nav-tab\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".header-tab-active\"), \"DICTIONARY.COM\"));\n         assertTrue(driver.findElement(By.cssSelector(\"[data-testid='wotd']\")).isDisplayed());\n \n         driver.findElement(By.id(\"thesaurus-nav-tab\")).click();\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".header-tab-active\"), \"THESAURUS.COM\"));\n         assertTrue(driver.findElement(By.cssSelector(\"[data-testid='synonym-of-the-day']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_62_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         element = driver.findElement(By.xpath(\"//*[text()='SYNONYMS FOR OVERUSED WORDS']/ancestor::section\"));\n         actions.moveToElement(element).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n         assertEquals(\"We've found the most overused words and the synonyms you should be using instead.\",\n                 element.findElement(By.cssSelector(\".heading-description\")).getText());\n \n         List<WebElement> wordBlocks = driver.findElements(By.cssSelector(\"[data-testid='synonyms-block-word']\"));\n         assertEquals(3, wordBlocks.size());\n         List<String> wordsInFirstBlock = new ArrayList<>();\n         for (int i = 0; i < wordBlocks.size(); i++) {\n             List<WebElement> words = wordBlocks.get(i).findElements(By.tagName(\"a\"));\n             assertEquals(4, words.size());\n             if (i == 0) {\n                 for (WebElement wordElement : words) {\n                     wordsInFirstBlock.add(wordElement.getText());\n                 }\n             }\n         }\n         wordBlocks.get(0).findElement(By.tagName(\"a\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), wordsInFirstBlock.get(0)));\n         element = driver.findElement(By.id(\"meanings\"));\n         assertTrue(element.isDisplayed());\n         for (int i = 1; i < wordsInFirstBlock.size(); i++) {\n             assertTrue(element.findElement(By.xpath(\".//*[text()='\" + wordsInFirstBlock.get(i) + \"']\")).isDisplayed());\n         }\n     }\n"}
{"repo_name": "SK_63_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         element = driver.findElement(By.cssSelector(\"[data-browse-az]\"));\n         actions.moveToElement(element).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element.findElement(By.xpath(\"//*[text()='BROWSE THESAURUS.COM']\"))));\n         List<WebElement> buttons = driver.findElements(By.cssSelector(\"[data-browse-az] div:nth-of-type(2) a\"));\n \n         for (int i = 1; i < buttons.size(); i++) {\n             assertEquals((char) (i + 64) + \"\" + (char) (i + 96), buttons.get(i).getText());\n         }\n         buttons.get(3).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"BROWSE THESAURUS: LETTER \\\"C\\\"\"));\n         List<WebElement> words = driver.findElements(By.cssSelector(\"[data-testid='list-az-results'] a\"));\n         for (WebElement word : words) {\n             assertTrue(word.getText().toLowerCase(Locale.ROOT).startsWith(\"c\"));\n         }\n     }\n"}
{"repo_name": "SK_64_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         driver.findElement(By.cssSelector(\"#careers-click a\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"section-careers-intro\")));\n \n         element = driver.findElement(By.id(\"twitter-widget-0\"));\n         actions.moveToElement(element).perform();\n         driver.switchTo().frame(element);\n         assertEquals(\"Tweets by @Dictionarycom\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_65_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         driver.findElement(By.cssSelector(\"#contactUs-click a\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".main-contact\")));\n         assertEquals(\"How can we help you?\", driver.findElement(By.tagName(\"h1\")).getText());\n \n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"contact-search-bar__input\")));\n         element.sendKeys(\"date\");\n         element.submit();\n \n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), \"results for \\\"date\\\"\"));\n     }\n"}
{"repo_name": "SK_66_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         driver.findElement(By.cssSelector(\"#contactUs-click a\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".main-contact\")));\n         assertEquals(\"Quick Links:\", driver.findElement(By.xpath(\"//strong[text()]\")).getText());\n \n         List<WebElement> titleElements = driver.findElements(By.className(\"contact-quick-link\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"iPhone Apps\", \"Android Apps\", \"Accounts\",\n                 \"Word of the Day\", \"Grammar Coach Subscription\", \"Dictionary Academy Tutors\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (int i = 0; i < titleElements.size() - 1; i++) {\n             actualTitles.add(titleElements.get(i).getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(0).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), \"iPhone Mobile Apps\"));\n         assertTrue(driver.findElement(By.className(\"article-list-link\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_67_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         driver.findElement(By.cssSelector(\"#contactUs-click a\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".main-contact\")));\n         assertEquals(\"Want to suggest a word or have a comment about one of our definitions or synonyms?\",\n                 driver.findElement(By.xpath(\"(//strong[text()])[2]\")).getText());\n \n         driver.findElement(By.xpath(\"//a[text()='Fill out this form']\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(\n                 By.className(\"freebirdFormviewerViewNavigationPasswordWarning\"), \"Google Forms\"));\n         assertEquals(\"Dictionary.com & Thesaurus.com Lexicography Feedback\",\n                 driver.findElement(By.cssSelector(\".freebirdFormviewerViewHeaderTitle\")).getText());\n     }\n"}
{"repo_name": "SK_68_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         driver.findElement(By.cssSelector(\"#contactUs-click a\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".main-contact\")));\n         assertEquals(\"Can\u2019t find the answer in our Help Center?\",\n                 driver.findElement(By.xpath(\"(//strong[text()])[3]\")).getText());\n \n         element = driver.findElement(By.cssSelector(\"form[id*='gform']\"));\n         actions.moveToElement(element).perform();\n         Hashtable<String, String> elementsTextAndKind = new Hashtable<String, String>() {{\n             put(\"Department\", \"select\");\n             put(\"Subject\", \"select\");\n             put(\"Name\", \"input\");\n             put(\"Email Address\", \"input\");\n             put(\"Message\", \"textarea\");\n         }};\n         elementsTextAndKind.forEach((name, kind) -> assertTrue(element.findElement(By.xpath\n                 (\"//*[text()='\" + name + \"']/following-sibling::*/\" + kind)).isDisplayed()));\n         assertTrue(element.findElement(By.xpath(\"//*[text()='CAPTCHA']\")).isDisplayed());\n         assertTrue(element.findElement(By.cssSelector(\"[type='submit']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_69_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.thesaurus.com/\");\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         driver.findElement(By.cssSelector(\"#termAndPrivacy-click a\")).click();\n         wait.until(ExpectedConditions.textToBePresentInElementLocated(By.tagName(\"h1\"), \"Terms of Service & Privacy Policy\"));\n \n         List<WebElement> titleElements = driver.findElements(By.cssSelector(\".article__entry > ul a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Privacy & Cookie Policy\", \"Children\u2019s Privacy\",\n                 \"Contact Information\", \"Terms of Service\", \"Thesaurus Gift Card Terms and Conditions\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement title : titleElements) {\n             actualTitles.add(title.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n \n         titleElements.get(1).click();\n         Thread.sleep(2000);\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//b[text()='Children\u2019s Privacy.']\"))));\n     }\n"}
{"repo_name": "SK_70_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.id(\"dictionary-nav-tab\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".header-tab-active\"), \"DICTIONARY.COM\"));\n         assertTrue(driver.findElement(By.cssSelector(\"[data-testid='wotd']\")).isDisplayed());\n \n         element = driver.findElement(By.cssSelector(\".trending-words-word-block\"));\n         String word = element.findElement(By.tagName(\"span\")).getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), word));\n         assertTrue(driver.findElement(By.id(\"top-definitions-section\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_71_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.cssSelector(\"[data-grammar-coach-promo] button\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Grammar Coach\u2122\"));\n         assertEquals(\"Your Key to Brilliant Writing\", driver.findElement(By.tagName(\"h2\")).getText());\n         assertEquals(\"Our AI-backed writing tool helps writers of all kinds produce high-quality, \" +\n                         \"error-free work. From grammar corrections to Thesaurus.com-powered synonym suggestions, \" +\n                         \"Grammar Coach\u2122 ensures every essay, email, and application letter is perfectly written.\",\n                 driver.findElement(By.cssSelector(\"[data-hero-paragraph]\")).getText());\n         element = driver.findElement(By.cssSelector(\"[data-signed-out-grammar-coach]\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         element.findElement(By.cssSelector(\"[role='textbox']\")).sendKeys(\"He went home.\");\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\"[data-check-grammar-message]\"), \"No grammar mistakes!\"));\n         assertEquals(\"0\", element.findElement(By.cssSelector(\"[data-notification-count]\")).getText());\n     }\n"}
{"repo_name": "SK_72_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.cssSelector(\"[data-grammar-coach-promo] button\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Grammar Coach\u2122\"));\n         assertEquals(\"Your Key to Brilliant Writing\", driver.findElement(By.tagName(\"h2\")).getText());\n         assertEquals(\"Our AI-backed writing tool helps writers of all kinds produce high-quality, \" +\n                         \"error-free work. From grammar corrections to Thesaurus.com-powered synonym suggestions, \" +\n                         \"Grammar Coach\u2122 ensures every essay, email, and application letter is perfectly written.\",\n                 driver.findElement(By.cssSelector(\"[data-hero-paragraph]\")).getText());\n         element = driver.findElement(By.cssSelector(\"[data-signed-out-grammar-coach]\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         By countLocator = By.cssSelector(\"[data-notification-count]\");\n         By textLocator = By.cssSelector(\"[data-gramm]\");\n         By buttonLocator = By.cssSelector(\"[data-edit-button]\");\n \n         element.findElement(By.cssSelector(\"[role='textbox']\")).sendKeys(\"he go home\");\n         wait.until(ExpectedConditions.textToBe(\n                 By.cssSelector(\"[data-check-grammar-message] span:not([data-grammar-corrections-count])\"),\n                 \"Please check the highlighted grammar fixes.\"));\n         assertEquals(\"2\", element.findElement(countLocator).getText());\n         element.findElement(buttonLocator).click();\n         wait.until(ExpectedConditions.textToBe(textLocator, \"He go home\"));\n         element.findElement(buttonLocator).click();\n         wait.until(ExpectedConditions.textToBe(textLocator, \"He went home\"));\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\"[data-check-grammar-message]\"), \"No grammar mistakes!\"));\n         assertEquals(\"0\", element.findElement(countLocator).getText());\n     }\n"}
{"repo_name": "SK_73_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.cssSelector(\"[data-grammar-coach-promo] button\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Grammar Coach\u2122\"));\n         assertEquals(\"Your Key to Brilliant Writing\", driver.findElement(By.tagName(\"h2\")).getText());\n         assertEquals(\"Our AI-backed writing tool helps writers of all kinds produce high-quality, \" +\n                         \"error-free work. From grammar corrections to Thesaurus.com-powered synonym suggestions, \" +\n                         \"Grammar Coach\u2122 ensures every essay, email, and application letter is perfectly written.\",\n                 driver.findElement(By.cssSelector(\"[data-hero-paragraph]\")).getText());\n         element = driver.findElement(By.cssSelector(\"[data-faq-section]\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n \n         element.findElements(By.cssSelector(\"button[data-faq-dropdown]\")).get(1).click();\n         assertNotEquals(\"none\", element.findElements(By.cssSelector(\"[data-faq-answer]\")).get(1).getCssValue(\"display\"));\n     }\n"}
{"repo_name": "SK_74_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.cssSelector(\"[data-grammar-coach-promo] button\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Grammar Coach\u2122\"));\n         assertEquals(\"Your Key to Brilliant Writing\", driver.findElement(By.tagName(\"h2\")).getText());\n         assertEquals(\"Our AI-backed writing tool helps writers of all kinds produce high-quality, \" +\n                         \"error-free work. From grammar corrections to Thesaurus.com-powered synonym suggestions, \" +\n                         \"Grammar Coach\u2122 ensures every essay, email, and application letter is perfectly written.\",\n                 driver.findElement(By.cssSelector(\"[data-hero-paragraph]\")).getText());\n         driver.findElement(By.cssSelector(\"[data-upgrade-button]\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".section-grammar-coach-content-block h1\"),\n                 \"Grammar Coach\u2122 Premium. Elevate Your Writing.\"));\n         List<WebElement> options = driver.findElements(By.cssSelector(\".section__pricing-item  h2\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Monthly\", \"Yearly\", \"Quarterly\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : options) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         driver.findElement(By.cssSelector(\".section__pricing-item-button\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.tagName(\"form\")));\n         assertTrue(driver.findElement(By.cssSelector(\"[aria-label='sign up']\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_75_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='WRITING']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Grammar Coach\", \"Writing Prompts\", \"Grammar 101\", \"Writing Tips\", \"Ways To Say It Better\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(1).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\"section h2\"),\n                 \"How To Use Writing Prompts To Kickstart And Improve Writing\"));\n         assertTrue(driver.findElement(By.xpath(\"//a[contains(text(), 'PROMPT')]\")).isDisplayed());\n         driver.findElement(By.xpath(\"//a[text()='LOOK FOR A WRITING PROMPT FOR YOUR KID HERE']\")).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Writing Prompts For Young Kids\"));\n     }\n"}
{"repo_name": "SK_76_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='WRITING']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Grammar Coach\", \"Writing Prompts\", \"Grammar 101\", \"Writing Tips\", \"Ways To Say It Better\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(1).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\"section h2\"),\n                 \"How To Use Writing Prompts To Kickstart And Improve Writing\"));\n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> categoryElements = driver.findElements(By.xpath(\"//*[text()='Categories']/following-sibling::*/a\"));\n         expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"LOVE\", \"KIDS\", \"HOLIDAY\", \"FUNNY\", \"JOURNAL\", \"MYSTERY\", \"NOVELS\", \"DIALOGUES\"));\n         for (WebElement element : categoryElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         categoryElements.get(1).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Writing Prompts For Young Kids\"));\n     }\n"}
{"repo_name": "SK_77_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='LEARN']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Word Lists\", \"Online Tutors\", \"New Words\",\n                 \"Trending Words\", \"All About English\", \"Science And Technology\", \"Literature And Arts\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(4).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.attributeToBe(By.cssSelector(\".header__logo img\"), \"alt\", \"Dictionary.com\"));\n         assertTrue(driver.findElement(By.className(\"articles\")).isDisplayed());\n         element = driver.findElement(By.cssSelector(\".articles .article__title a\"));\n         String name = element.getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), name));\n         assertTrue(driver.findElement(By.tagName(\"article\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_78_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//*[text()='WORD OF THE DAY']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList\n                 (\"Word Of The Day\", \"Synonym Of The Day\", \"Word Of The Year\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(2).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"The Dictionary.com Word Of The Year For 2020 Is \u2026\"));\n         assertEquals(\"pandemic:\", driver.findElement(By.cssSelector(\"h3 strong\")).getText().split(\" \")[0]);\n     }\n"}
{"repo_name": "SK_79_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//h4[text()='CHECK OUT OUR OTHER PRODUCTS']\"))));\n \n         driver.findElement(By.id(\"alexaskill\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Amazon']\")));\n         assertEquals(\"Dictionary.com Word of the Day\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_80_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//h4[text()='CHECK OUT OUR OTHER PRODUCTS']\"))));\n \n         driver.findElement(By.id(\"lexico-es\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[alt='Lexico logo']\")));\n         assertEquals(\"SPANISH\", driver.findElement(By.className(\"sbSelector\")).getText());\n     }\n"}
{"repo_name": "SK_81_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//h4[text()='CHECK OUT OUR OTHER PRODUCTS']\"))));\n \n         driver.findElement(By.id(\"lexico-en\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[alt='Lexico logo']\")));\n         assertEquals(\"UK DICTIONARY\", driver.findElement(By.className(\"sbSelector\")).getText());\n     }\n"}
{"repo_name": "SK_82_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//h4[text()='CHECK OUT OUR OTHER PRODUCTS']\"))));\n \n         driver.findElement(By.id(\"dcom\")).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".header-tab-active\"), \"DICTIONARY.COM\"));\n         assertTrue(driver.findElement(By.cssSelector(\".trending-words-word-block\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_83_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.id(\"dictionary-nav-tab\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".header-tab-active\"), \"DICTIONARY.COM\"));\n         assertTrue(driver.findElement(By.cssSelector(\".trending-words-word-block\")).isDisplayed());\n \n         element = driver.findElement(By.xpath(\"//*[text()='ONLINE TUTORING HELP! ']/ancestor::section\"));\n         Actions actions = new Actions(driver);\n         actions.moveToElement(element).perform();\n         List<WebElement> stepElements = element.findElements(By.tagName(\"h3\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"English Tutors\", \"Math Tutors\", \"Test Prep\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : stepElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         stepElements.get(0).click();\n \n         wait.until(ExpectedConditions.titleIs(\"Appointy\"));\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".info p\"),\n                 \"Welcome to Dictionary Academy Tutors, where our teacher-trained certified tutors are \" +\n                         \"waiting to engage your learner! Click the subject and grade level of your learner. Next, you\u2019ll \" +\n                         \"select the time that works for you and choose from our list of expert tutors. It's that easy!\"));\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\".page-services\")));\n     }\n"}
{"repo_name": "SK_84_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.id(\"dictionary-nav-tab\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".header-tab-active\"), \"DICTIONARY.COM\"));\n         assertTrue(driver.findElement(By.cssSelector(\".trending-words-word-block\")).isDisplayed());\n \n         Actions actions = new Actions(driver);\n         element = driver.findElement(By.cssSelector(\"[data-browse-az]\"));\n         actions.moveToElement(element).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element.findElement(By.xpath(\"//*[text()='BROWSE DICTIONARY.COM']\"))));\n         List<WebElement> buttons = driver.findElements(By.cssSelector(\"[data-browse-az] div:nth-of-type(2) a\"));\n         assertEquals(\"#\", buttons.get(0).getText());\n         for (int i = 1; i < buttons.size(); i++) {\n             assertEquals((char) (i + 64) + \"\" + (char) (i + 96), buttons.get(i).getText());\n         }\n         buttons.get(3).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"BROWSE DICTIONARY: LETTER \\\"C\\\"\"));\n         List<WebElement> words = driver.findElements(By.cssSelector(\"[data-testid='list-az-results'] li > a:first-child\"));\n         for (WebElement word : words) {\n             assertTrue(word.getText().toLowerCase(Locale.ROOT).startsWith(\"c\"));\n         }\n     }\n"}
{"repo_name": "SK_85_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.thesaurus.com/\");\n         driver.findElement(By.id(\"dictionary-nav-tab\")).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.cssSelector(\".header-tab-active\"), \"DICTIONARY.COM\"));\n         assertTrue(driver.findElement(By.cssSelector(\".trending-words\")).isDisplayed());\n         By locator = By.cssSelector(\"[alt*='ticker']\");\n         driver.findElement(locator).click();\n         assertEquals(\"play ticker\", driver.findElement(locator).getAttribute(\"alt\"));\n \n         List<WebElement> originalBlocks = driver.findElements(By.cssSelector(\".trending-words-word-block\"));\n         List<Integer> originalPositions = new ArrayList<>();\n         for (WebElement element : originalBlocks) {\n             originalPositions.add(element.getLocation().x);\n         }\n         Thread.sleep(3000);\n         List<WebElement> newBlocks = driver.findElements(By.cssSelector(\".trending-words-word-block\"));\n         List<Integer> newPositions = new ArrayList<>();\n         for (WebElement element : newBlocks) {\n             newPositions.add(element.getLocation().x);\n         }\n         assertEquals(originalPositions, newPositions);\n     }\n"}
{"repo_name": "SK_86_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='MEANINGS']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Emoji\", \"Slang\", \"Acronyms\", \"Pop Culture\", \"Memes\", \"Gender And Sexuality\", \"Mixed-Up Meanings\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(2).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"ACRONYMS DICTIONARY\"));\n         assertEquals(\"FEATURED TERMS\", driver.findElement(By.tagName(\"h2\")).getText());\n         element = driver.findElement(By.cssSelector(\".slick-track .word-item h2 a\"));\n         String title = element.getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), title));\n     }\n"}
{"repo_name": "SK_87_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='MEANINGS']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Emoji\", \"Slang\", \"Acronyms\", \"Pop Culture\", \"Memes\", \"Gender And Sexuality\", \"Mixed-Up Meanings\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(2).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"ACRONYMS DICTIONARY\"));\n         assertEquals(\"Home / Acronyms\", driver.findElement(By.className(\"breadcrumbs\")).getText());\n         element = driver.findElement(By.cssSelector(\".slick-track .word-item h2 a\"));\n         String title = element.getText();\n         element.click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"article-word\")));\n         assertTrue(driver.findElement(By.className(\"breadcrumbs\")).getText().endsWith(title));\n     }\n"}
{"repo_name": "SK_88_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='MEANINGS']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Emoji\", \"Slang\", \"Acronyms\", \"Pop Culture\", \"Memes\", \"Gender And Sexuality\", \"Mixed-Up Meanings\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(2).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"ACRONYMS DICTIONARY\"));\n         assertEquals(\"MORE FROM ACRONYMS\", driver.findElement(By.cssSelector(\"#just-added h2\")).getText());\n         assertEquals(60, driver.findElements(By.cssSelector(\"#just-added .list a\")).size());\n         assertEquals(\"1\", driver.findElement(By.cssSelector(\"#just-added ol\")).getAttribute(\"start\"));\n \n         driver.findElement(By.className(\"paging-next\")).click();\n         assertEquals(60, driver.findElements(By.cssSelector(\"#just-added .list a\")).size());\n         assertEquals(\"61\", driver.findElement(By.cssSelector(\"#just-added ol\")).getAttribute(\"start\"));\n     }\n"}
{"repo_name": "SK_89_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='MEANINGS']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Emoji\", \"Slang\", \"Acronyms\", \"Pop Culture\", \"Memes\", \"Gender And Sexuality\", \"Mixed-Up Meanings\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(2).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"ACRONYMS DICTIONARY\"));\n         assertEquals(\"MORE FROM ACRONYMS\", driver.findElement(By.cssSelector(\"#just-added h2\")).getText());\n         List<WebElement> links = driver.findElements(By.cssSelector(\"#just-added .list a\"));\n         assertEquals(60, links.size());\n         String title = links.get(0).getText();\n         links.get(0).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), title));\n     }\n"}
{"repo_name": "SK_90_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//button[text()='MEANINGS']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Emoji\", \"Slang\", \"Acronyms\", \"Pop Culture\", \"Memes\", \"Gender And Sexuality\", \"Mixed-Up Meanings\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(2).click();\n \n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"ACRONYMS DICTIONARY\"));\n \n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> categories = driver.findElements(By.cssSelector(\".section-atw-categories a\"));\n         expectedTitles = new ArrayList<>(Arrays.asList(\"ACRONYMS\", \"EMOJI\", \"FAMOUS PEOPLE\", \"FASHION\",\n                 \"FICTIONAL CHARACTERS\", \"GENDER & SEXUALITY\", \"HISTORICAL & CURRENT EVENTS\", \"MEMES\", \"POLITICS\",\n                 \"POP CULTURE\", \"RELIGION\", \"SLANG\", \"TECH & SCIENCE\", \"TRANSLATIONS\"));\n         for (WebElement element : categories) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         categories.get(1).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"EMOJI DICTIONARY\"));\n     }\n"}
{"repo_name": "SK_91_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"happy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n \n         driver.findElement(By.xpath(\"//*[text()='Compare Synonyms']/..\")).click();\n         element = wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(\"[aria-label='Compare similar synonym words']\")));\n         assertTrue(element.findElement(By.xpath(\"//h3[text()='Select up to 3 synonyms to compare']\")).isDisplayed());\n         List<String> chosenSynonyms = new ArrayList<>(Arrays.asList(\"lively\", \"blessed\", \"exultant\"));\n         for (String synonym : chosenSynonyms) {\n             wait.until(ExpectedConditions.elementToBeClickable(element.findElement(By.xpath(\".//button[text()='\" + synonym + \"']\")))).click();\n         }\n         element.findElement(By.xpath(\".//a[text()='Compare Synonyms']\")).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"Compare Synonyms of happy\"));\n         List<WebElement> cards = driver.findElements(By.xpath(\"//h2/../..\"));\n         for (int i = 0; i < cards.size(); i++) {\n             String synonym = chosenSynonyms.get(i);\n             assertEquals(synonym, cards.get(i).findElement(By.tagName(\"h2\")).getText());\n             List<WebElement> subtitles = cards.get(i).findElements(By.tagName(\"h3\"));\n             List<String> expectedTitles = new ArrayList<>(\n                     Arrays.asList(\"Definitions(s)\", \"Shared synonyms between \" + synonym + \" and happy\",\n                             \"Shared antonyms between \" + synonym + \" and happy\"));\n             List<String> actualTitles = new ArrayList<>();\n             for (WebElement element : subtitles) {\n                 actualTitles.add(element.getText());\n             }\n             assertEquals(expectedTitles, actualTitles);\n         }\n     }\n"}
{"repo_name": "SK_92_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"happy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n \n         ((JavascriptExecutor) driver).executeScript(\"window.scrollTo(0, document.body.scrollHeight)\");\n         element = driver.findElement(By.cssSelector(\"[data-testid='wotd']\"));\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , element));\n         String name = element.findElement(By.cssSelector(\".wotd-word\")).getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-wrapper__label\"), \"WORD OF THE DAY\"));\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-headword__word\"), name));\n     }\n"}
{"repo_name": "SK_93_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//*[text()='WORD OF THE DAY']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList\n                 (\"Word Of The Day\", \"Synonym Of The Day\", \"Word Of The Year\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(0).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-wrapper__label\"), \"WORD OF THE DAY\"));\n \n \n         element = driver.findElement(By.cssSelector(\"[title='Search for:']\"));\n         element.sendKeys(\"micro\");\n         element.submit();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h2\"), \"Search Results for: micro\"));\n         List<WebElement> articles = driver.findElements(By.className(\"article__content\"));\n         for (int i = 0; i < 6; i++) {\n             assertTrue(articles.get(i).getText().toLowerCase(Locale.ROOT).contains(\"micro\"));\n         }\n     }\n"}
{"repo_name": "SK_94_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//*[text()='WORD OF THE DAY']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList\n                 (\"Word Of The Day\", \"Synonym Of The Day\", \"Word Of The Year\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(0).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-wrapper__label\"), \"WORD OF THE DAY\"));\n \n         String word = driver.findElement(By.className(\"otd-item-headword__word\")).getText();\n         driver.findElement(By.xpath(\"//a[contains(text(), 'Look it up')]\")).click();\n         wait.until(ExpectedConditions.presenceOfElementLocated(By.id(\"top-definitions-section\")));\n         assertEquals(word, driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_95_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//*[text()='WORD OF THE DAY']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList\n                 (\"Word Of The Day\", \"Synonym Of The Day\", \"Word Of The Year\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(0).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-wrapper__label\"), \"WORD OF THE DAY\"));\n \n         driver.findElement(By.cssSelector(\"[data-cy='otd-podcast-play']\")).click();\n         wait.until(ExpectedConditions.not(ExpectedConditions.textToBe(By.className(\"current-time\"), \"00:00\")));\n     }\n"}
{"repo_name": "SK_96_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//*[text()='WORD OF THE DAY']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList\n                 (\"Word Of The Day\", \"Synonym Of The Day\", \"Word Of The Year\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(1).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-wrapper__label\"), \"SYNONYM OF THE DAY\"));\n \n         String word = driver.findElement(By.tagName(\"h2\")).getText();\n         word = word.substring(word.lastIndexOf(' ') + 1);\n         driver.findElement(By.xpath(\"//a[contains(text(), 'See all synonyms for')]\")).click();\n \n         ArrayList<String> tabs = new ArrayList<>(driver.getWindowHandles());\n         driver.switchTo().window(tabs.get(1));\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), word));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_97_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.xpath(\"//*[text()='WORD OF THE DAY']\"));\n         element.click();\n         assertNotEquals(\"none\", element.findElement(By.xpath(\".//following-sibling::*[2]\")).getCssValue(\"display\"));\n         List<WebElement> titleElements = element.findElements(By.xpath(\".//following-sibling::*//ul//a\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList\n                 (\"Word Of The Day\", \"Synonym Of The Day\", \"Word Of The Year\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : titleElements) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         titleElements.get(1).click();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.className(\"otd-item-wrapper__label\"), \"SYNONYM OF THE DAY\"));\n \n         element = driver.findElement(By.cssSelector(\".otd-widget__nav--sotd a\"));\n         String dateNumber = element.findElement(By.tagName(\"span\")).getText().split(\" \")[1];\n         element.click();\n         Thread.sleep(1000);\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//*[@class='otd-item-headword__date']/*[contains(text(), '\" + dateNumber + \"')]\"))));\n     }\n"}
{"repo_name": "SK_98_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"100\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"0 results for 100\"));\n     }\n"}
{"repo_name": "SK_99_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"happy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n \n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//*[contains(text(), 'Browse the')]\"))));\n         List<WebElement> letters = driver.findElements(By.cssSelector(\"[id^='azFooter']\"));\n         assertEquals(\"#\", letters.get(0).getText());\n         for (int i = 1; i < letters.size(); i++) {\n             assertEquals(String.valueOf((char) (i + 64)), letters.get(i).getText());\n         }\n \n         letters.get(3).click();\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"BROWSE THESAURUS: LETTER \\\"C\\\"\"));\n     }\n"}
{"repo_name": "SK_100_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"happy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n \n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//*[contains(text(), 'Browse by')]\"))));\n         List<WebElement> categories = driver.findElements(By.cssSelector(\"[id^='atwFooter']\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Slang\", \"Emoji\", \"Acronyms\", \"Pop Culture\", \"More\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : categories) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         categories.get(1).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"sitemap\")));\n         assertEquals(\"EMOJI\", driver.findElement(By.tagName(\"h1\")).getText());\n     }\n"}
{"repo_name": "SK_101_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"happy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n \n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//*[contains(text(), 'Browse by')]\"))));\n         List<WebElement> categories = driver.findElements(By.cssSelector(\"[id^='atwFooter']\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Slang\", \"Emoji\", \"Acronyms\", \"Pop Culture\", \"More\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : categories) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         categories.get(4).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"sitemap\")));\n         assertEquals(\"WORD FACTS\", driver.findElement(By.tagName(\"h1\")).getText());\n \n         element = driver.findElement(By.cssSelector(\".sitemap-listing a\"));\n         String title = element.getText();\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.className(\"article__title\"), title));\n     }\n"}
{"repo_name": "SK_102_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"happy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n \n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//*[contains(text(), 'Browse by')]\"))));\n         List<WebElement> categories = driver.findElements(By.cssSelector(\"[id^='atwFooter']\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Slang\", \"Emoji\", \"Acronyms\", \"Pop Culture\", \"More\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : categories) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         categories.get(4).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"sitemap\")));\n         assertEquals(\"WORD FACTS\", driver.findElement(By.tagName(\"h1\")).getText());\n \n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> subcategories = driver.findElements(By.cssSelector(\".sitemap-header__listing a\"));\n         expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"EDUCATION\", \"FUN\", \"POP CULTURE\", \"TRENDING WORDS\", \"UNCATEGORIZED\", \"WORD FACTS\"));\n         for (WebElement element : subcategories) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         subcategories.get(1).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), expectedTitles.get(1)));\n         element = driver.findElement(By.cssSelector(\".sitemap-listing a\"));\n         String title = element.getText();\n         assertEquals(\"Dictionary.com\u2019s Ideas For Olympic Events\", title);\n         element.click();\n         wait.until(ExpectedConditions.textToBe(By.className(\"article__title\"), title));\n     }\n"}
{"repo_name": "SK_103_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"happy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n \n         Actions actions = new Actions(driver);\n         actions.moveToElement(driver.findElement(By.tagName(\"footer\"))).perform();\n         assertTrue((Boolean) ((JavascriptExecutor) driver).executeScript(\n                 \"var elem = arguments[0],                 \" +\n                         \"  box = elem.getBoundingClientRect(),    \" +\n                         \"  cx = box.left + box.width / 2,         \" +\n                         \"  cy = box.top + box.height / 2,         \" +\n                         \"  e = document.elementFromPoint(cx, cy); \" +\n                         \"for (; e; e = e.parentElement) {         \" +\n                         \"  if (e === elem)                        \" +\n                         \"    return true;                         \" +\n                         \"}                                        \" +\n                         \"return false;                            \"\n                 , driver.findElement(By.xpath(\"//*[contains(text(), 'Browse by')]\"))));\n         List<WebElement> categories = driver.findElements(By.cssSelector(\"[id^='atwFooter']\"));\n         List<String> expectedTitles = new ArrayList<>(Arrays.asList(\"Slang\", \"Emoji\", \"Acronyms\", \"Pop Culture\", \"More\"));\n         List<String> actualTitles = new ArrayList<>();\n         for (WebElement element : categories) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         categories.get(4).click();\n \n         wait.until(ExpectedConditions.presenceOfElementLocated(By.className(\"sitemap\")));\n         assertEquals(\"WORD FACTS\", driver.findElement(By.tagName(\"h1\")).getText());\n \n         expectedTitles.clear();\n         actualTitles.clear();\n         List<WebElement> subcategories = driver.findElements(By.cssSelector(\".sitemap-header__dropdown option\"));\n         expectedTitles = new ArrayList<>(Arrays.asList(\n                 \"Official Dictionary Site Map\", \"Everything After Z Site Map\", \"About This Word Sitemap\"));\n         for (WebElement element : subcategories) {\n             actualTitles.add(element.getText());\n         }\n         assertEquals(expectedTitles, actualTitles);\n         driver.findElement(By.className(\"sitemap-header__dropdown\")).click();\n         subcategories.get(2).click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"SLANG\"));\n         assertEquals(expectedTitles.get(2), driver.findElement(By.cssSelector(\"option[selected]\")).getText());\n     }\n"}
{"repo_name": "SK_104_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"heppy\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"0 results for heppy\"));\n         element = driver.findElement(By.xpath(\"//a[text()='happy']\"));\n         assertTrue(element.isDisplayed());\n         element.click();\n \n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"happy\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_105_Tamar", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() {\n         driver.get(\"https://www.thesaurus.com/\");\n         element = driver.findElement(By.id(\"searchbar_input\"));\n         element.sendKeys(\"10\");\n         element.submit();\n         WebDriverWait wait = new WebDriverWait(driver, 10);\n         wait.until(ExpectedConditions.textToBe(By.tagName(\"h1\"), \"10\"));\n         assertTrue(driver.findElement(By.id(\"meanings\")).isDisplayed());\n     }\n"}
{"repo_name": "SK_1_Abhijit", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.thesaurus.com/\");\n         Thread.sleep(10000);\n         driver.findElement(By.xpath(\"//span[@aria-label='Sign up for an account']\")).click();\n         Thread.sleep(10000);\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollBy(05,700)\");\n         Thread.sleep(10000);\n \n     }\n"}
{"repo_name": "SK_2_Abhijit", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.thesaurus.com/\");\n         Thread.sleep(10000);\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollBy(05,1400)\");\n         Thread.sleep(10000);\n \n     }\n"}
{"repo_name": "SK_3_Abhijit", "ref": "refs/heads/master", "path": "UITest2Code/src/test/java/websites/Thesaurus.java", "content": "    public void function() throws InterruptedException {\n         driver.get(\"https://www.thesaurus.com/\");\n         Thread.sleep(10000);\n         ((JavascriptExecutor) driver).executeScript(\"window.scrollBy(05,2300)\");\n         Thread.sleep(10000);\n \n     }\n"}
